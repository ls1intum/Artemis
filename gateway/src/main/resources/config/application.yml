# ===================================================================
# Spring Boot configuration.
#
# This configuration will be overridden by the Spring profile you use,
# for example application-dev.yml if you use the "dev" profile.
#
# More information on profiles: https://www.jhipster.tech/profiles/
# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

artemis:
    encryption-password: <encrypt-password>

eureka:
    client:
        enabled: true
        healthcheck:
            enabled: true
        fetch-registry: true
        register-with-eureka: true
        instance-info-replication-interval-seconds: 10
        registry-fetch-interval-seconds: 10
    instance:
        appname: gateway
        instanceId: gateway:${spring.application.instance-id:${random.value}}
        lease-renewal-interval-in-seconds: 5
        lease-expiration-duration-in-seconds: 10
        status-page-url-path: ${management.endpoints.web.base-path}/info
        health-check-url-path: ${management.endpoints.web.base-path}/health
#        preferIpAddress: true
        metadata-map:
            zone: primary # This is needed for the load balancer
            profile: ${spring.profiles.active}
            version: #project.version#
            git-version: ${git.commit.id.describe:}
            git-commit: ${git.commit.id.abbrev:}
            git-branch: ${git.branch:}
            context-path: ${server.servlet.context-path:}

# See https://github.com/Netflix/Hystrix/wiki/Configuration
hystrix:
    command:
        default:
            execution:
                isolation:
                    thread:
                        timeoutInMilliseconds: 10000

management:
    endpoints:
        web:
            base-path: /gateway-management
            exposure:
                include:
                  [ 'configprops', 'env', 'gateway', 'health', 'info', 'jhimetrics', 'logfile', 'loggers', 'prometheus', 'threaddump', 'hystrix.stream' ]
    endpoint:
        health:
            show-details: when_authorized
            roles: 'ROLE_ADMIN'
            probes:
                enabled: true
        jhimetrics:
            enabled: true
    info:
        git:
            mode: full
        java:
            enabled: true
        env:
            enabled: true
    health:
        group:
            liveness:
                include: livenessState
            readiness:
                include: readinessState
        mail:
            enabled: false # When using the MailService, configure an SMTP server and set this to true
    metrics:
        export:
            # Prometheus is the default metrics backend
            prometheus:
                enabled: true
                step: 60
        enable:
            http: true
            jvm: true
            logback: true
            process: true
            system: true
        distribution:
            percentiles-histogram:
                all: true
            percentiles:
                all: 0, 0.5, 0.75, 0.95, 0.99, 1.0
        tags:
            application: ${spring.application.name}
        web:
            server:
                request:
                    autotime:
                        enabled: true

spring:
    autoconfigure:
        exclude: org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration
    application:
        name: gateway
    cloud:
        gateway:
            default-filters:
                - JWTRelay
            discovery:
                locator:
                    enabled: true
                    lower-case-service-id: true
                    predicates:
                        -   name: Path
                            args:
                                pattern: "'/services/'+serviceId.toLowerCase()+'/**'"
                    filters:
                        -   name: RewritePath
                            args:
                                regexp: "'/services/' + serviceId.toLowerCase() + '/(?<remaining>.*)'"
                                replacement: "'/${remaining}'"
            routes:
                -   id: gateway
                    uri: lb://GATEWAY
                    predicates:
                        - Path=/api/gateway/**
                -   id: lecture
                    uri: lb://LECTURE
                    predicates:
                        - Path=/api/lectures/{segment}/attachment-units/**,/api/lectures/{segment}/text-units/**,/api/lectures/{segment}/video-units/**,/api/lectures/{segment}/exercise-units/**,/api/lectures/{segment}/lecture-units/**
                -   id: usermanagement
                    uri: lb://usermanagement
                    predicates:
                        - Path=/api/users, /api/users/**, /api/users/authorities, /api/guided-tour-settings/**
                -   id: usermanagement
                    uri: lb://usermanagement
                    predicates:
                        - Path=/api/authenticate
                        - Method=GET
                -   id: artemis
                    uri: lb://ARTEMIS
                    predicates:
                        - Path=/api/**,/time,/websocket/tracker/info,/websocket/tracker/info/**,/management/**,/public/**,/logo/**
                # Normal Websocket route
                -   id: artemis
                    uri: lb:ws://ARTEMIS
                    predicates:
                        - Path=/websocket/**
            httpclient:
                pool:
                    max-connections: 1000
    profiles:
        # The commented value for `active` can be replaced with valid Spring profiles to load.
        # Otherwise, it will be filled in by gradle when building the JAR file
        # Either way, it can be overridden by `--spring.profiles.active` value passed in the commandline or `-Dspring.profiles.active` set in `JAVA_OPTS`
        active: #spring.profiles.active#
        group:
            dev:
                - dev
                - api-docs
                # Uncomment to activate TLS for the dev profile
                #- tls
    jmx:
        enabled: false
    messages:
        basename: i18n/messages
    main:
        allow-bean-definition-overriding: true
    task:
        execution:
            thread-name-prefix: gateway-task-
            pool:
                core-size: 2
                max-size: 50
                queue-capacity: 10000
        scheduling:
            thread-name-prefix: gateway-scheduling-
            pool:
                size: 2
    thymeleaf:
        mode: HTML
    output:
        ansi:
            console-available: true

server:
    servlet:
        session:
            cookie:
                http-only: true

# Properties to be exposed on the /info management endpoint
info:
    # Comma separated list of profiles that will trigger the ribbon to show
    display-ribbon-on-profiles: 'dev'

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================

jhipster:
    clientApp:
        name: 'gatewayApp'
    # By default CORS is disabled. Uncomment to enable.
    # cors:
    #   allowed-origins: "http://localhost:8100,http://localhost:9000"
    #   allowed-methods: "*"
    #   allowed-headers: "*"
    #   exposed-headers: "Authorization,Link,X-Total-Count,X-${jhipster.clientApp.name}-alert,X-${jhipster.clientApp.name}-error,X-${jhipster.clientApp.name}-params"
    #   allow-credentials: true
    #   max-age: 1800
    mail:
        from: gateway@localhost
    api-docs:
        default-include-pattern: ${server.servlet.context-path:}/api/.*
        management-include-pattern: ${server.servlet.context-path:}/gateway-management/.*
        title: gateway API
        description: gateway API documentation
        version: 0.0.1
        terms-of-service-url:
        contact-name:
        contact-url:
        contact-email:
        license: unlicensed
        license-url:

# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://www.jhipster.tech/common-application-properties/
# ===================================================================

# application:
