version: '3.8'

services:
  jenkins-connector:
    build: .
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/jenkins_connector
      - SPRING_DATASOURCE_USERNAME=artemis
      - SPRING_DATASOURCE_PASSWORD=artemis
      - JENKINS_URL=http://jenkins:8080
      - JENKINS_USERNAME=admin
      - JENKINS_PASSWORD=admin
    depends_on:
      postgres:
        condition: service_healthy
      jenkins:
        condition: service_healthy
    networks:
      - jenkins-connector-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=jenkins_connector
      - POSTGRES_USER=artemis
      - POSTGRES_PASSWORD=artemis
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - jenkins-connector-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U artemis -d jenkins_connector"]
      interval: 10s
      timeout: 5s
      retries: 5

  jenkins:
    image: jenkins/jenkins:2.426.3-lts
    ports:
      - "8080:8080"
      - "50000:50000"
    environment:
      - JENKINS_OPTS=--httpPort=8080
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false
    volumes:
      - jenkins_home:/var/jenkins_home
      - ./jenkins/casc.yaml:/var/jenkins_home/casc_configs/casc.yaml:ro
      - ./jenkins/plugins.txt:/usr/share/jenkins/ref/plugins.txt:ro
    networks:
      - jenkins-connector-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/login"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s

volumes:
  postgres_data:
  jenkins_home:

networks:
  jenkins-connector-network:
    driver: bridge