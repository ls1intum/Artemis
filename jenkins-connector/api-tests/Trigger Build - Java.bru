meta {
  name: Trigger Build - Java
  type: http
  seq: 2
}

post {
  url: {{baseUrl}}/api/builds/trigger
  body: json
  auth: none
}

body:json {
  {
    "exerciseId": 1,
    "participationId": 101,
    "exerciseRepository": {
      "url": "https://github.com/example/java-exercise.git",
      "commitHash": "abc123",
      "cloneLocation": null,
      "accessToken": "github_token_123",
      "branch": "main"
    },
    "testRepository": {
      "url": "https://github.com/example/java-tests.git",
      "commitHash": "def456",
      "cloneLocation": null,
      "accessToken": "github_token_123",
      "branch": "main"
    },
    "solutionRepository": {
      "url": "https://github.com/example/java-solution.git",
      "commitHash": "ghi789",
      "cloneLocation": null,
      "accessToken": "github_token_123",
      "branch": "main"
    },
    "auxiliaryRepositories": [],
    "buildScript": "pipeline {\n  agent any\n  stages {\n    stage('Checkout') {\n      steps {\n        echo 'Repositories checked out by connector'\n      }\n    }\n    stage('Test') {\n      steps {\n        docker.image('openjdk:21').inside {\n          sh 'mvn clean test -B'\n        }\n      }\n    }\n    stage('Results') {\n      steps {\n        echo 'Processing test results'\n        publishTestResults testResultsPattern: 'target/surefire-reports/*.xml'\n      }\n    }\n  }\n}",
    "triggeredByPushTo": "ASSIGNMENT",
    "programmingLanguage": "java",
    "additionalProperties": {
      "dockerImage": "openjdk:21",
      "buildTool": "maven"
    }
  }
}

vars:post-response {
  buildId: res.body
}

tests {
  test("should return 200 OK", function() {
    expect(res.status).to.equal(200);
  });
  
  test("should return a valid UUID", function() {
    const uuidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;
    expect(res.body).to.match(uuidRegex);
  });
}