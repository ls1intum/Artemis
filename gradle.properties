rootProject.name=Artemis
profile=dev

# Build properties
node_version=20.14.0
npm_version=10.7.0

# Dependency versions
jhipster_dependencies_version=8.7.0
spring_boot_version=3.3.3
spring_security_version=6.3.3
# TODO: before we upgrade to 6.5.x, we need to make sure that there are no performance issues with empty sets or lists
hibernate_version=6.4.9.Final
# TODO: can we update to 5.x?
opensaml_version=4.3.2
jwt_version=0.12.6
jaxb_runtime_version=4.0.5
# TODO: we cannot update to 5.5.0 because we currently use the CP Subsystem for fenced locks, however CP Subsystem is only available to Enterprise customers
hazelcast_version=5.4.0
junit_version=5.10.2
mockito_version=5.13.0
fasterxml_version=2.17.2
jgit_version=6.10.0.202406032230-r
sshd_version=2.13.2
checkstyle_version=10.18.0
jplag_version=5.1.0
slf4j_version=2.0.16
sentry_version=7.14.0
liquibase_version=4.29.1
docker_java_version=3.4.0
logback_version=1.5.7
java_parser_version=3.26.1

# gradle plugin version
gradle_node_plugin_version=7.0.2
apt_plugin_version=0.21
liquibase_plugin_version=2.1.1
modernizer_plugin_version=1.9.3

org.gradle.jvmargs=-Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8 -Duser.country=US -Duser.language=en \
  --add-exports jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED \
  --add-exports jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED \
  --add-exports jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED \
  --add-exports jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED \
  --add-exports jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED \
  --add-modules java.se \
  --add-exports java.base/jdk.internal.ref=ALL-UNNAMED \
  --add-opens java.base/java.lang=ALL-UNNAMED \
  --add-opens java.base/sun.nio.ch=ALL-UNNAMED \
  --add-opens java.management/sun.management=ALL-UNNAMED \
  --add-opens jdk.management/com.sun.management.internal=ALL-UNNAMED
