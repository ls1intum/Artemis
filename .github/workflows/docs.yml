name: Documentation

on:
  push:
    branches:
    - develop
    - main
    - bugfix/docs-deployment
    tags: '[0-9]+.[0-9]+.[0-9]+'
    paths:
    - 'docs/**'
    - '.github/workflows/docs.yml'
  release:
    types:
    - created

jobs:
  check-python-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install yq
        run: |
            apt-get update
            apt-get install -y yq

      - name: Extract Python version from docs/.readthedocs.yaml
        id: extract_read_the_docs_version
        run: |
          read_the_docs_version=$(cat docs/.readthedocs.yaml | yq '.build.tools.python' | tr -d '"')
          echo "read_the_docs_version=$read_the_docs_version" >> $GITHUB_OUTPUT
      - name: Extract Python version from this workflow file
        id: extract_workflow_version
        run: |
          workflow_version=$(cat .github/workflows/docs.yml | yq '.jobs.docs.steps[] | select(.uses == "actions/setup-python@v5") | .with."python-version"' | tr -d '"')
          echo "workflow_version=$workflow_version" >> $GITHUB_OUTPUT
      - name: Validate Python versions match
        run: |
          if [ "${{ steps.extract_read_the_docs_version.outputs.read_the_docs_version }}" != "${{ steps.extract_workflow_version.outputs.workflow_version }}" ]; then
            echo "Error: Python version mismatch: docs/.readthedocs.yaml (${{ steps.extract_read_the_docs_version.outputs.read_the_docs_version }}) vs workflow (${{ steps.extract_workflow_version.outputs.workflow_version }})"
            exit 1
          fi


  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        # keep in sync with Python version in docs/.readthedocs.yaml
        python-version: "3.13"
    - name: Build documentation
      run: |
        cd docs
        pip install -r requirements.txt
        make html dirhtml
    - uses: actions/upload-artifact@v4
      with:
        name: documentation
        path: docs/_build/html/

  # Deployment job
  deploy:
    if: github.ref == 'refs/heads/develop'
    environment:
      name: documentation
      url: "https://docs.artemis.cit.tum.de"
    runs-on: ubuntu-latest
    needs: docs
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: documentation
          path: public
      - name: Copy site to server
        uses: appleboy/scp-action@master
        with:
          host: docs.artemis.cit.tum.de
          username: ${{ vars.DOCS_SSH_USER }}
          key: ${{ secrets.DEPLOYMENT_SSH_KEY }}
          proxy_host: ${{ vars.DEPLOYMENT_GATEWAY_HOST }}
          proxy_username: ${{ vars.DEPLOYMENT_GATEWAY_USER }}
          proxy_key: ${{ secrets.DEPLOYMENT_GATEWAY_SSH_KEY }}
          proxy_port: ${{ vars.DEPLOYMENT_GATEWAY_PORT }}
          source: "public"
          target: ${{ vars.DOCS_HOME }}
      - name: Move site to www
        uses: appleboy/ssh-action@master
        with:
          host: docs.artemis.cit.tum.de
          username: ${{ vars.DOCS_SSH_USER }}
          key: ${{ secrets.DEPLOYMENT_SSH_KEY }}
          proxy_host: ${{ vars.DEPLOYMENT_GATEWAY_HOST }}
          proxy_username: ${{ vars.DEPLOYMENT_GATEWAY_USER }}
          proxy_key: ${{ secrets.DEPLOYMENT_GATEWAY_SSH_KEY }}
          proxy_port: ${{ vars.DEPLOYMENT_GATEWAY_PORT }}
          script: |
              rm -rf ${{ vars.DOCS_WWW }}/*
              mv -f public/* ${{ vars.DOCS_WWW }}/
