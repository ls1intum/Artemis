name: Test

on:
  pull_request:
    paths-ignore:
    - 'README.md'
    - 'CODE_OF_CONDUCT.md'
    - 'CONTRIBUTING.md'
    - 'LICENSE'
    - 'SECURITY.md'
    - 'docs/**'
    - '.github/**'
    - '!.github/workflows/test.yml'
  push:
    branches:
    - develop
    - main
    - release/*
    tags: '[0-9]+.[0-9]+.[0-9]+'
    paths-ignore:
    - 'README.md'
    - 'CODE_OF_CONDUCT.md'
    - 'CONTRIBUTING.md'
    - 'LICENSE'
    - 'SECURITY.md'
    - 'docs/**'
    - '.github/**'
    - '!.github/workflows/test.yml'
  release:
    types:
    - created

# Keep in sync with codeql-analysis.yml and build-deploy.yml
env:
  CI: true
  node: 14.x
  java: 16

jobs:

  server-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
    - name: Setup Java
      uses: actions/setup-java@v2.1.0
      with:
        distribution: 'zulu'
        java-version: '${{ env.java }}'
    - uses: actions/checkout@v2
    - name: Cache Gradle dependencies
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: Java Tests
      run: ./gradlew --console=plain executeTests jacocoTestReport -x yarn -x webpack jacocoTestCoverageVerification
    - name: "Codacy: Report coverage"
      uses: codacy/codacy-coverage-reporter-action@master
      with:
        project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
        coverage-reports: build/reports/jacoco/test/jacocoTestReport.xml
      if: (github.event.pull_request.head.repo.full_name == github.event.pull_request.base.repo.full_name) && (success() || failure()) && github.event.pull_request.user.login != 'dependabot[bot]'
    - name: Annotate Server Test Results
      uses: ashley-taylor/junit-report-annotations-action@9ac2f823854c677f30e062dfe779445e33e5d380
      if: always() && github.event.pull_request.user.login != 'dependabot[bot]'
      with:
        access-token: ${{ secrets.GITHUB_TOKEN }}
        path: build/test-results/test/*.xml
        numFailures: 99

  server-style:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
    - name: Setup Java
      uses: actions/setup-java@v2.1.0
      with:
        distribution: 'zulu'
        java-version: '${{ env.java }}'
    - uses: actions/checkout@v2
    - name: Cache Gradle dependencies
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: Java Code Style
      run: ./gradlew spotlessCheck
    - name: Java Documentation
      run: ./gradlew checkstyleMain -x yarn -x webpack
      if: success() || failure()

  client-tests-fast:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
        - name: Setup Node.js
          uses: actions/setup-node@v2.2.0
          with:
              node-version: '${{ env.node }}'
        - uses: actions/checkout@v2
        - name: Cache node modules
          uses: actions/cache@v2
          with:
              path: node_modules
              key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}
              restore-keys: |
                  ${{ runner.os }}-node_modules-
        - name: Install Dependencies
          run: yarn install
        - name: Fast TypeScript Test without Typechecking
          run: yarn test:ci --ci
        - name: "Codacy: Report coverage"
          uses: codacy/codacy-coverage-reporter-action@master
          with:
              project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
              coverage-reports: coverage/lcov.info
          if: (github.event.pull_request.head.repo.full_name == github.event.pull_request.base.repo.full_name) && (success() || failure()) && github.event.pull_request.user.login != 'dependabot[bot]'
        - name: Annotate Client Test Results
          uses: ashley-taylor/junit-report-annotations-action@9ac2f823854c677f30e062dfe779445e33e5d380
          if: always() && github.event.pull_request.user.login != 'dependabot[bot]'
          with:
              access-token: ${{ secrets.GITHUB_TOKEN }}
              path: junit.xml
              numFailures: 99

  client-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
        - name: Setup Node.js
          uses: actions/setup-node@v2.2.0
          with:
              node-version: '${{ env.node }}'
        - uses: actions/checkout@v2
        - name: Cache node modules
          uses: actions/cache@v2
          with:
              path: node_modules
              key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}
              restore-keys: |
                  ${{ runner.os }}-node_modules-
        - name: Install Dependencies
          run: yarn install
        - name: TypeScript Test With Typechecking
          run: yarn test --ci
        - name: Annotate Client Test Results
          uses: ashley-taylor/junit-report-annotations-action@9ac2f823854c677f30e062dfe779445e33e5d380
          if: always() && github.event.pull_request.user.login != 'dependabot[bot]'
          with:
              access-token: ${{ secrets.GITHUB_TOKEN }}
              path: junit.xml
              numFailures: 99

  client-style:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
    - name: Setup Node.js
      uses: actions/setup-node@v2.2.0
      with:
        node-version: '${{ env.node }}'
    - uses: actions/checkout@v2
    - name: Cache node modules
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-node_modules-
    - name: Install Dependencies
      run: yarn install
    - name: TypeScript Formatting
      run: yarn prettier:check
    - name: TypeScript Code Style
      run: yarn lint
      if: success() || failure()
