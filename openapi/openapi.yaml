openapi: 3.1.0
info:
  title: Artemis Application Server API
  contact:
    name: Stephan Krusche
    email: krusche@tum.de
  version: 8.0.0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /api/tutorialgroup/courses/{courseId}/tutorial-groups/{tutorialGroupId}:
    get:
      tags:
      - tutorial-group
      operationId: TutorialGroupResource-getOneOfCourse
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: tutorialGroupId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TutorialGroup"
    put:
      tags:
      - tutorial-group
      operationId: TutorialGroupResource-update
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: tutorialGroupId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TutorialGroupUpdateDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TutorialGroup"
    delete:
      tags:
      - tutorial-group
      operationId: TutorialGroupResource-delete
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: tutorialGroupId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /api/tutorialgroup/courses/{courseId}/tutorial-groups/{tutorialGroupId}/sessions/{sessionId}:
    get:
      tags:
      - tutorial-group-session
      operationId: TutorialGroupSessionResource-getOneOfTutorialGroup
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: tutorialGroupId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: sessionId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TutorialGroupSession"
    put:
      tags:
      - tutorial-group-session
      operationId: TutorialGroupSessionResource-update
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: tutorialGroupId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: sessionId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TutorialGroupSessionDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TutorialGroupSession"
    delete:
      tags:
      - tutorial-group-session
      operationId: TutorialGroupSessionResource-deleteSession
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: tutorialGroupId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: sessionId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /api/tutorialgroup/courses/{courseId}/tutorial-groups-configuration/{tutorialGroupsConfigurationId}:
    put:
      tags:
      - tutorial-groups-configuration
      operationId: TutorialGroupsConfigurationResource-update
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: tutorialGroupsConfigurationId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TutorialGroupsConfiguration"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TutorialGroupsConfiguration"
  ? /api/tutorialgroup/courses/{courseId}/tutorial-groups-configuration/{tutorialGroupsConfigurationId}/tutorial-free-periods/{tutorialGroupFreePeriodId}
  : get:
      tags:
      - tutorial-group-free-period
      operationId: TutorialGroupFreePeriodResource-getOneOfConfiguration
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: tutorialGroupsConfigurationId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: tutorialGroupFreePeriodId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TutorialGroupFreePeriod"
    put:
      tags:
      - tutorial-group-free-period
      operationId: TutorialGroupFreePeriodResource-update
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: tutorialGroupsConfigurationId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: tutorialGroupFreePeriodId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TutorialGroupFreePeriodDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TutorialGroupFreePeriod"
    delete:
      tags:
      - tutorial-group-free-period
      operationId: TutorialGroupFreePeriodResource-delete
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: tutorialGroupsConfigurationId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: tutorialGroupFreePeriodId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /api/tutorialgroup/courses/{courseId}/tutorial-groups:
    get:
      tags:
      - tutorial-group
      operationId: TutorialGroupResource-getAllForCourse
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TutorialGroup"
    post:
      tags:
      - tutorial-group
      operationId: TutorialGroupResource-create
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TutorialGroup"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TutorialGroup"
  /api/tutorialgroup/courses/{courseId}/tutorial-groups/{tutorialGroupId}/sessions:
    post:
      tags:
      - tutorial-group-session
      operationId: TutorialGroupSessionResource-create
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: tutorialGroupId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TutorialGroupSessionDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TutorialGroupSession"
  /api/tutorialgroup/courses/{courseId}/tutorial-groups/{tutorialGroupId}/sessions/{sessionId}/cancel:
    post:
      tags:
      - tutorial-group-session
      operationId: TutorialGroupSessionResource-cancel
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: tutorialGroupId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: sessionId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TutorialGroupStatusDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TutorialGroupSession"
  /api/tutorialgroup/courses/{courseId}/tutorial-groups/{tutorialGroupId}/sessions/{sessionId}/activate:
    post:
      tags:
      - tutorial-group-session
      operationId: TutorialGroupSessionResource-activate
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: tutorialGroupId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: sessionId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TutorialGroupSession"
  /api/tutorialgroup/courses/{courseId}/tutorial-groups/{tutorialGroupId}/register/{studentLogin}:
    post:
      tags:
      - tutorial-group
      operationId: TutorialGroupResource-registerStudent
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: tutorialGroupId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: studentLogin
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/tutorialgroup/courses/{courseId}/tutorial-groups/{tutorialGroupId}/register-multiple:
    post:
      tags:
      - tutorial-group
      operationId: TutorialGroupResource-registerMultipleStudentsToTutorialGroup
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: tutorialGroupId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/StudentDTO"
              uniqueItems: true
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StudentDTO"
                uniqueItems: true
  /api/tutorialgroup/courses/{courseId}/tutorial-groups/import:
    post:
      tags:
      - tutorial-group
      operationId: TutorialGroupResource-importRegistrations
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/TutorialGroupRegistrationImportDTO"
              uniqueItems: true
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TutorialGroupRegistrationImportDTO"
  /api/tutorialgroup/courses/{courseId}/tutorial-groups-configuration:
    get:
      tags:
      - tutorial-groups-configuration
      operationId: TutorialGroupsConfigurationResource-getOneOfCourse
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TutorialGroupsConfiguration"
    post:
      tags:
      - tutorial-groups-configuration
      operationId: TutorialGroupsConfigurationResource-create
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TutorialGroupsConfiguration"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TutorialGroupsConfiguration"
  /api/tutorialgroup/courses/{courseId}/tutorial-groups-configuration/{tutorialGroupsConfigurationId}/tutorial-free-periods:
    post:
      tags:
      - tutorial-group-free-period
      operationId: TutorialGroupFreePeriodResource-create
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: tutorialGroupsConfigurationId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TutorialGroupFreePeriodDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TutorialGroupFreePeriod"
  /api/tutorialgroup/courses/{courseId}/tutorial-groups/{tutorialGroupId}/sessions/{sessionId}/attendance-count:
    patch:
      tags:
      - tutorial-group-session
      operationId: TutorialGroupSessionResource-updateAttendanceCount
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: tutorialGroupId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: sessionId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: attendanceCount
        in: query
        required: false
        schema:
          type: integer
          format: int32
          maximum: 3000
          minimum: 0
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TutorialGroupSession"
  /api/tutorialgroup/tutorial-groups/{tutorialGroupId}/title:
    get:
      tags:
      - tutorial-group
      operationId: TutorialGroupResource-getTitle
      parameters:
      - name: tutorialGroupId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/tutorialgroup/courses/{courseId}/tutorial-groups/language-values:
    get:
      tags:
      - tutorial-group
      operationId: TutorialGroupResource-getUniqueLanguageValues
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
                uniqueItems: true
  /api/tutorialgroup/courses/{courseId}/tutorial-groups/export/json:
    get:
      tags:
      - tutorial-group
      operationId: TutorialGroupResource-exportTutorialGroupsToJSON
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: fields
        in: query
        required: true
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/tutorialgroup/courses/{courseId}/tutorial-groups/export/csv:
    get:
      tags:
      - tutorial-group
      operationId: TutorialGroupResource-exportTutorialGroupsToCSV
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: fields
        in: query
        required: true
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: byte
  /api/tutorialgroup/courses/{courseId}/tutorial-groups/campus-values:
    get:
      tags:
      - tutorial-group
      operationId: TutorialGroupResource-getUniqueCampusValues
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
                uniqueItems: true
  /api/tutorialgroup/courses/{courseId}/tutorial-groups/{tutorialGroupId}/deregister/{studentLogin}:
    delete:
      tags:
      - tutorial-group
      operationId: TutorialGroupResource-deregisterStudent
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: tutorialGroupId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: studentLogin
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
components:
  schemas:
    Action:
      type: object
    AeolusRepository:
      type: object
      properties:
        url:
          type: string
        branch:
          type: string
        path:
          type: string
    AnswerCounter:
      type: object
      properties:
        id:
          type: integer
          format: int64
        ratedCounter:
          type: integer
          format: int32
        unRatedCounter:
          type: integer
          format: int32
        answer:
          $ref: "#/components/schemas/AnswerOption"
    AnswerOption:
      type: object
      properties:
        id:
          type: integer
          format: int64
        text:
          type: string
        hint:
          type: string
        explanation:
          type: string
        isCorrect:
          type: boolean
        invalid:
          type: boolean
    AnswerPost:
      type: object
      properties:
        id:
          type: integer
          format: int64
        author:
          $ref: "#/components/schemas/User"
        creationDate:
          type: string
          format: date-time
        updatedDate:
          type: string
          format: date-time
        content:
          type: string
          maxLength: 5000
          minLength: 0
        resolvesPost:
          type: boolean
        reactions:
          type: array
          items:
            $ref: "#/components/schemas/Reaction"
          uniqueItems: true
        post:
          $ref: "#/components/schemas/Post"
        hasForwardedMessages:
          type: boolean
        coursePostingBelongsTo:
          $ref: "#/components/schemas/Course"
        authorRole:
          type: string
          enum:
          - INSTRUCTOR
          - TUTOR
          - USER
        isSaved:
          type: boolean
    AssessmentNote:
      type: object
      properties:
        id:
          type: integer
          format: int64
        creator:
          $ref: "#/components/schemas/User"
        note:
          type: string
    Attachment:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        link:
          type: string
        version:
          type: integer
          format: int32
        uploadDate:
          type: string
          format: date-time
        releaseDate:
          type: string
          format: date-time
        attachmentType:
          type: string
          enum:
          - FILE
          - URL
        exercise:
          oneOf:
          - $ref: "#/components/schemas/FileUploadExercise"
          - $ref: "#/components/schemas/ModelingExercise"
          - $ref: "#/components/schemas/ProgrammingExercise"
          - $ref: "#/components/schemas/QuizExercise"
          - $ref: "#/components/schemas/TextExercise"
        attachmentUnit:
          $ref: "#/components/schemas/AttachmentUnit"
        studentVersion:
          type: string
        visibleToStudents:
          type: boolean
    AttachmentUnit:
      allOf:
      - $ref: "#/components/schemas/LectureUnit"
      - type: object
        properties:
          lecture:
            $ref: "#/components/schemas/Lecture"
          description:
            type: string
          attachment:
            $ref: "#/components/schemas/Attachment"
          slides:
            type: array
            items:
              $ref: "#/components/schemas/Slide"
    Authority:
      type: object
      properties:
        name:
          type: string
          maxLength: 50
          minLength: 0
      required:
      - name
    AuxiliaryRepository:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          maxLength: 100
          minLength: 0
        repositoryUri:
          type: string
          maxLength: 500
          minLength: 0
        checkoutDirectory:
          type: string
          maxLength: 100
          minLength: 0
        description:
          type: string
          maxLength: 500
          minLength: 0
    BuildLogEntry:
      type: object
      properties:
        id:
          type: integer
          format: int64
        time:
          type: string
          format: date-time
        log:
          type: string
    Channel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        creator:
          $ref: "#/components/schemas/User"
        conversationParticipants:
          type: array
          items:
            $ref: "#/components/schemas/ConversationParticipant"
          uniqueItems: true
        posts:
          type: array
          items:
            $ref: "#/components/schemas/Post"
          uniqueItems: true
        creationDate:
          type: string
          format: date-time
        lastMessageDate:
          type: string
          format: date-time
        name:
          type: string
          maxLength: 30
          minLength: 1
        description:
          type: string
          maxLength: 250
          minLength: 1
        topic:
          type: string
          maxLength: 250
          minLength: 1
        isPublic:
          type: boolean
        isAnnouncementChannel:
          type: boolean
        isArchived:
          type: boolean
        isCourseWide:
          type: boolean
        lecture:
          $ref: "#/components/schemas/Lecture"
        exercise:
          oneOf:
          - $ref: "#/components/schemas/FileUploadExercise"
          - $ref: "#/components/schemas/ModelingExercise"
          - $ref: "#/components/schemas/ProgrammingExercise"
          - $ref: "#/components/schemas/QuizExercise"
          - $ref: "#/components/schemas/TextExercise"
        exam:
          $ref: "#/components/schemas/Exam"
      required:
      - isCourseWide
      - name
    ChannelDTO:
      type: object
      properties:
        type:
          type: string
        id:
          type: integer
          format: int64
        creationDate:
          type: string
          format: date-time
        lastMessageDate:
          type: string
          format: date-time
        creator:
          $ref: "#/components/schemas/ConversationUserDTO"
        lastReadDate:
          type: string
          format: date-time
        unreadMessagesCount:
          type: integer
          format: int64
        isFavorite:
          type: boolean
        isHidden:
          type: boolean
        isMuted:
          type: boolean
        isCreator:
          type: boolean
        isMember:
          type: boolean
        numberOfMembers:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        topic:
          type: string
        isPublic:
          type: boolean
        isAnnouncementChannel:
          type: boolean
        isArchived:
          type: boolean
        isCourseWide:
          type: boolean
        hasChannelModerationRights:
          type: boolean
        isChannelModerator:
          type: boolean
        tutorialGroupId:
          type: integer
          format: int64
        tutorialGroupTitle:
          type: string
        subType:
          type: string
          enum:
          - general
          - exercise
          - lecture
          - exam
          - feedbackDiscussion
        subTypeReferenceId:
          type: integer
          format: int64
        subTypeWithReferenceFromChannel:
          $ref: "#/components/schemas/Channel"
          writeOnly: true
    Competency:
      allOf:
      - $ref: "#/components/schemas/CourseCompetency"
    CompetencyExerciseLink:
      type: object
      properties:
        competency:
          oneOf:
          - $ref: "#/components/schemas/Competency"
          - $ref: "#/components/schemas/Prerequisite"
        weight:
          type: number
          format: double
    CompetencyLectureUnitLink:
      type: object
      properties:
        weight:
          type: number
          format: double
        lectureUnit:
          oneOf:
          - $ref: "#/components/schemas/AttachmentUnit"
          - $ref: "#/components/schemas/ExerciseUnit"
          - $ref: "#/components/schemas/OnlineUnit"
          - $ref: "#/components/schemas/TextUnit"
          - $ref: "#/components/schemas/VideoUnit"
    CompetencyProgress:
      type: object
      properties:
        progress:
          type: number
          format: double
        confidence:
          type: number
          format: double
        confidenceReason:
          type: string
          enum:
          - NO_REASON
          - RECENT_SCORES_LOWER
          - RECENT_SCORES_HIGHER
          - MORE_EASY_POINTS
          - MORE_HARD_POINTS
          - QUICKLY_SOLVED_EXERCISES
          - MORE_LOW_WEIGHTED_EXERCISES
          - MORE_HIGH_WEIGHTED_EXERCISES
    Conversation:
      type: object
      discriminator:
        propertyName: type
      properties:
        id:
          type: integer
          format: int64
        creator:
          $ref: "#/components/schemas/User"
        conversationParticipants:
          type: array
          items:
            $ref: "#/components/schemas/ConversationParticipant"
          uniqueItems: true
        creationDate:
          type: string
          format: date-time
        lastMessageDate:
          type: string
          format: date-time
        type:
          type: string
      required:
      - type
    ConversationParticipant:
      type: object
      properties:
        id:
          type: integer
          format: int64
        user:
          $ref: "#/components/schemas/User"
        isModerator:
          type: boolean
        isFavorite:
          type: boolean
        isHidden:
          type: boolean
        isMuted:
          type: boolean
        lastRead:
          type: string
          format: date-time
        unreadMessagesCount:
          type: integer
          format: int64
      required:
      - user
    ConversationUserDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        login:
          type: string
        name:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        imageUrl:
          type: string
        isInstructor:
          type: boolean
        isEditor:
          type: boolean
        isTeachingAssistant:
          type: boolean
        isStudent:
          type: boolean
        isChannelModerator:
          type: boolean
        isRequestingUser:
          type: boolean
    Course:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
        shortName:
          type: string
        studentGroupName:
          type: string
        teachingAssistantGroupName:
          type: string
        editorGroupName:
          type: string
        instructorGroupName:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        enrollmentStartDate:
          type: string
          format: date-time
        enrollmentEndDate:
          type: string
          format: date-time
        unenrollmentEndDate:
          type: string
          format: date-time
        semester:
          type: string
        testCourse:
          type: boolean
        language:
          type: string
          enum:
          - ENGLISH
          - GERMAN
        defaultProgrammingLanguage:
          type: string
          enum:
          - EMPTY
          - JAVA
          - PYTHON
          - C
          - HASKELL
          - KOTLIN
          - VHDL
          - ASSEMBLER
          - SWIFT
          - OCAML
          - JAVASCRIPT
          - C_SHARP
          - C_PLUS_PLUS
          - SQL
          - R
          - TYPESCRIPT
          - RUST
          - GO
          - MATLAB
          - BASH
          - RUBY
          - POWERSHELL
          - ADA
          - DART
          - PHP
        onlineCourse:
          type: boolean
        onlineCourseConfiguration:
          $ref: "#/components/schemas/OnlineCourseConfiguration"
        courseInformationSharingConfiguration:
          type: string
          enum:
          - DISABLED
          - COMMUNICATION_AND_MESSAGING
          - COMMUNICATION_ONLY
        courseInformationSharingMessagingCodeOfConduct:
          type: string
        maxComplaints:
          type: integer
          format: int32
        maxTeamComplaints:
          type: integer
          format: int32
        maxComplaintTimeDays:
          type: integer
          format: int32
        maxRequestMoreFeedbackTimeDays:
          type: integer
          format: int32
        maxComplaintTextLimit:
          type: integer
          format: int32
        maxComplaintResponseTextLimit:
          type: integer
          format: int32
        color:
          type: string
        courseIcon:
          type: string
        enrollmentEnabled:
          type: boolean
        enrollmentConfirmationMessage:
          type: string
        unenrollmentEnabled:
          type: boolean
        faqEnabled:
          type: boolean
        presentationScore:
          type: integer
          format: int32
        courseArchivePath:
          type: string
        maxPoints:
          type: integer
          format: int32
        accuracyOfScores:
          type: integer
          format: int32
        restrictedAthenaModulesAccess:
          type: boolean
        timeZone:
          type: string
        exercises:
          type: array
          items:
            oneOf:
            - $ref: "#/components/schemas/FileUploadExercise"
            - $ref: "#/components/schemas/ModelingExercise"
            - $ref: "#/components/schemas/ProgrammingExercise"
            - $ref: "#/components/schemas/QuizExercise"
            - $ref: "#/components/schemas/TextExercise"
          uniqueItems: true
        lectures:
          type: array
          items:
            $ref: "#/components/schemas/Lecture"
          uniqueItems: true
        competencies:
          type: array
          items:
            $ref: "#/components/schemas/Competency"
          uniqueItems: true
        learningPathsEnabled:
          type: boolean
        studentCourseAnalyticsDashboardEnabled:
          type: boolean
        learningPaths:
          type: array
          items:
            $ref: "#/components/schemas/LearningPath"
          uniqueItems: true
        tutorialGroups:
          type: array
          items:
            $ref: "#/components/schemas/TutorialGroup"
          uniqueItems: true
        exams:
          type: array
          items:
            $ref: "#/components/schemas/Exam"
          uniqueItems: true
        organizations:
          type: array
          items:
            $ref: "#/components/schemas/Organization"
          uniqueItems: true
        prerequisites:
          type: array
          items:
            $ref: "#/components/schemas/Prerequisite"
          uniqueItems: true
        tutorialGroupsConfiguration:
          $ref: "#/components/schemas/TutorialGroupsConfiguration"
        faqs:
          type: array
          items:
            $ref: "#/components/schemas/Faq"
          uniqueItems: true
        requestMoreFeedbackEnabled:
          type: boolean
        numberOfStudents:
          type: integer
          format: int64
        numberOfTutorialGroups:
          type: integer
          format: int64
        numberOfLectures:
          type: integer
          format: int64
        numberOfExams:
          type: integer
          format: int64
        numberOfPrerequisites:
          type: integer
          format: int64
        numberOfCompetencies:
          type: integer
          format: int64
        numberOfInstructors:
          type: integer
          format: int64
        numberOfTeachingAssistants:
          type: integer
          format: int64
        numberOfEditors:
          type: integer
          format: int64
        complaintsEnabled:
          type: boolean
    CourseCompetency:
      type: object
      discriminator:
        propertyName: type
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
        taxonomy:
          type: string
          enum:
          - REMEMBER
          - UNDERSTAND
          - APPLY
          - ANALYZE
          - EVALUATE
          - CREATE
        softDueDate:
          type: string
          format: date-time
        masteryThreshold:
          type: integer
          format: int32
        optional:
          type: boolean
        linkedStandardizedCompetency:
          $ref: "#/components/schemas/StandardizedCompetency"
        exerciseLinks:
          type: array
          items:
            $ref: "#/components/schemas/CompetencyExerciseLink"
          uniqueItems: true
        lectureUnitLinks:
          type: array
          items:
            $ref: "#/components/schemas/CompetencyLectureUnitLink"
          uniqueItems: true
        userProgress:
          type: array
          items:
            $ref: "#/components/schemas/CompetencyProgress"
          uniqueItems: true
        learningPaths:
          type: array
          items:
            $ref: "#/components/schemas/LearningPath"
          uniqueItems: true
        course:
          $ref: "#/components/schemas/Course"
        linkedCourseCompetency:
          oneOf:
          - $ref: "#/components/schemas/Competency"
          - $ref: "#/components/schemas/Prerequisite"
        type:
          type: string
    CourseLearnerProfile:
      type: object
      properties:
        id:
          type: integer
          format: int64
        course:
          $ref: "#/components/schemas/Course"
        aimForGradeOrBonus:
          type: integer
          format: int32
          maximum: 5
          minimum: 0
        timeInvestment:
          type: integer
          format: int32
          maximum: 5
          minimum: 0
        repetitionIntensity:
          type: integer
          format: int32
          maximum: 5
          minimum: 0
    DockerConfig:
      type: object
      properties:
        image:
          type: string
        tag:
          type: string
        volumes:
          type: array
          items:
            type: string
        parameters:
          type: array
          items:
            type: string
    DragAndDropMapping:
      type: object
      properties:
        id:
          type: integer
          format: int64
        dragItemIndex:
          type: integer
          format: int32
        dropLocationIndex:
          type: integer
          format: int32
        invalid:
          type: boolean
        dragItem:
          $ref: "#/components/schemas/DragItem"
        dropLocation:
          $ref: "#/components/schemas/DropLocation"
    DragAndDropQuestion:
      allOf:
      - $ref: "#/components/schemas/QuizQuestion"
      - type: object
        properties:
          backgroundFilePath:
            type: string
          dropLocations:
            type: array
            items:
              $ref: "#/components/schemas/DropLocation"
          dragItems:
            type: array
            items:
              $ref: "#/components/schemas/DragItem"
          correctMappings:
            type: array
            items:
              $ref: "#/components/schemas/DragAndDropMapping"
    DragAndDropQuestionStatistic:
      allOf:
      - $ref: "#/components/schemas/QuizQuestionStatistic"
      - type: object
        properties:
          dropLocationCounters:
            type: array
            items:
              $ref: "#/components/schemas/DropLocationCounter"
            uniqueItems: true
    DragAndDropSubmittedAnswer:
      allOf:
      - $ref: "#/components/schemas/SubmittedAnswer"
      - type: object
        properties:
          mappings:
            type: array
            items:
              $ref: "#/components/schemas/DragAndDropMapping"
            uniqueItems: true
    DragItem:
      type: object
      properties:
        id:
          type: integer
          format: int64
        pictureFilePath:
          type: string
        text:
          type: string
        invalid:
          type: boolean
        tempID:
          type: integer
          format: int64
    DropLocation:
      type: object
      properties:
        id:
          type: integer
          format: int64
        posX:
          type: number
          format: double
        posY:
          type: number
          format: double
        width:
          type: number
          format: double
        height:
          type: number
          format: double
        invalid:
          type: boolean
        tempID:
          type: integer
          format: int64
    DropLocationCounter:
      type: object
      properties:
        id:
          type: integer
          format: int64
        ratedCounter:
          type: integer
          format: int32
        unRatedCounter:
          type: integer
          format: int32
        dropLocation:
          $ref: "#/components/schemas/DropLocation"
    DueDateStat:
      type: object
      properties:
        inTime:
          type: integer
          format: int64
        late:
          type: integer
          format: int64
    Exam:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        testExam:
          type: boolean
        examWithAttendanceCheck:
          type: boolean
        visibleDate:
          type: string
          format: date-time
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        publishResultsDate:
          type: string
          format: date-time
        examStudentReviewStart:
          type: string
          format: date-time
        examStudentReviewEnd:
          type: string
          format: date-time
        gracePeriod:
          type: integer
          format: int32
        workingTime:
          type: integer
          format: int32
        startText:
          type: string
        endText:
          type: string
        confirmationStartText:
          type: string
        confirmationEndText:
          type: string
        examMaxPoints:
          type: integer
          format: int32
        randomizeExerciseOrder:
          type: boolean
        numberOfExercisesInExam:
          type: integer
          format: int32
        numberOfCorrectionRoundsInExam:
          type: integer
          format: int32
        examiner:
          type: string
        moduleNumber:
          type: string
        courseName:
          type: string
        exampleSolutionPublicationDate:
          type: string
          format: date-time
        course:
          $ref: "#/components/schemas/Course"
        exerciseGroups:
          type: array
          items:
            $ref: "#/components/schemas/ExerciseGroup"
        studentExams:
          type: array
          items:
            $ref: "#/components/schemas/StudentExam"
          uniqueItems: true
        examArchivePath:
          type: string
        examUsers:
          type: array
          items:
            $ref: "#/components/schemas/ExamUser"
          uniqueItems: true
        channelName:
          type: string
        numberOfExamUsers:
          type: integer
          format: int64
        quizExamMaxPoints:
          type: integer
          format: int32
          readOnly: true
      required:
      - endDate
      - startDate
      - visibleDate
    ExamSession:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdDate:
          type: string
          format: date-time
        sessionToken:
          type: string
        userAgent:
          type: string
        browserFingerprintHash:
          type: string
        instanceId:
          type: string
        ipAddress:
          type: string
        ipAddressFromIpAddress:
          $ref: "#/components/schemas/IPAddress"
          writeOnly: true
        suspiciousReasons:
          type: array
          items:
            type: string
            enum:
            - DIFFERENT_STUDENT_EXAMS_SAME_IP_ADDRESS
            - DIFFERENT_STUDENT_EXAMS_SAME_BROWSER_FINGERPRINT
            - SAME_STUDENT_EXAM_DIFFERENT_IP_ADDRESSES
            - SAME_STUDENT_EXAM_DIFFERENT_BROWSER_FINGERPRINTS
            - IP_ADDRESS_OUTSIDE_OF_RANGE
          uniqueItems: true
        initialSession:
          type: boolean
    ExamUser:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdDate:
          type: string
          format: date-time
        actualRoom:
          type: string
        actualSeat:
          type: string
        plannedRoom:
          type: string
        plannedSeat:
          type: string
        didCheckImage:
          type: boolean
        didCheckName:
          type: boolean
        didCheckLogin:
          type: boolean
        didCheckRegistrationNumber:
          type: boolean
        signingImagePath:
          type: string
          maxLength: 100
          minLength: 0
        studentImagePath:
          type: string
          maxLength: 100
          minLength: 0
        user:
          $ref: "#/components/schemas/User"
    ExampleSubmission:
      type: object
      properties:
        id:
          type: integer
          format: int64
        usedForTutorial:
          type: boolean
        submission:
          oneOf:
          - $ref: "#/components/schemas/FileUploadSubmission"
          - $ref: "#/components/schemas/ModelingSubmission"
          - $ref: "#/components/schemas/ProgrammingSubmission"
          - $ref: "#/components/schemas/QuizSubmission"
          - $ref: "#/components/schemas/TextSubmission"
        tutorParticipations:
          type: array
          items:
            $ref: "#/components/schemas/TutorParticipation"
          uniqueItems: true
        assessmentExplanation:
          type: string
    Exercise:
      type: object
      discriminator:
        propertyName: type
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        shortName:
          type: string
        maxPoints:
          type: number
          format: double
        bonusPoints:
          type: number
          format: double
        assessmentType:
          type: string
          enum:
          - AUTOMATIC
          - SEMI_AUTOMATIC
          - MANUAL
          - AUTOMATIC_ATHENA
        releaseDate:
          type: string
          format: date-time
        startDate:
          type: string
          format: date-time
        dueDate:
          type: string
          format: date-time
        assessmentDueDate:
          type: string
          format: date-time
        exampleSolutionPublicationDate:
          type: string
          format: date-time
        difficulty:
          type: string
          enum:
          - EASY
          - MEDIUM
          - HARD
        mode:
          type: string
          enum:
          - INDIVIDUAL
          - TEAM
        allowComplaintsForAutomaticAssessments:
          type: boolean
        allowFeedbackRequests:
          type: boolean
        includedInOverallScore:
          type: string
          enum:
          - INCLUDED_COMPLETELY
          - INCLUDED_AS_BONUS
          - NOT_INCLUDED
        problemStatement:
          type: string
        gradingInstructions:
          type: string
        competencyLinks:
          type: array
          items:
            $ref: "#/components/schemas/CompetencyExerciseLink"
          uniqueItems: true
        categories:
          type: array
          items:
            type: string
          uniqueItems: true
        teamAssignmentConfig:
          $ref: "#/components/schemas/TeamAssignmentConfig"
        teams:
          type: array
          items:
            $ref: "#/components/schemas/Team"
          uniqueItems: true
        presentationScoreEnabled:
          type: boolean
        secondCorrectionEnabled:
          type: boolean
        feedbackSuggestionModule:
          type: string
        exerciseGroup:
          $ref: "#/components/schemas/ExerciseGroup"
        gradingCriteria:
          type: array
          items:
            $ref: "#/components/schemas/GradingCriterion"
          uniqueItems: true
        studentParticipations:
          type: array
          items:
            $ref: "#/components/schemas/StudentParticipation"
          uniqueItems: true
        tutorParticipations:
          type: array
          items:
            $ref: "#/components/schemas/TutorParticipation"
          uniqueItems: true
        exampleSubmissions:
          type: array
          items:
            $ref: "#/components/schemas/ExampleSubmission"
          uniqueItems: true
        attachments:
          type: array
          items:
            $ref: "#/components/schemas/Attachment"
          uniqueItems: true
        posts:
          type: array
          items:
            $ref: "#/components/schemas/Post"
          uniqueItems: true
        plagiarismCases:
          type: array
          items:
            $ref: "#/components/schemas/PlagiarismCase"
          uniqueItems: true
        plagiarismDetectionConfig:
          $ref: "#/components/schemas/PlagiarismDetectionConfig"
        type:
          type: string
        numberOfAssessmentsOfCorrectionRounds:
          type: array
          items:
            $ref: "#/components/schemas/DueDateStat"
        totalNumberOfAssessments:
          $ref: "#/components/schemas/DueDateStat"
        averageRating:
          type: number
          format: double
        numberOfRatings:
          type: integer
          format: int64
        numberOfSubmissions:
          $ref: "#/components/schemas/DueDateStat"
        numberOfOpenComplaints:
          type: integer
          format: int64
        numberOfComplaints:
          type: integer
          format: int64
        numberOfOpenMoreFeedbackRequests:
          type: integer
          format: int64
        numberOfMoreFeedbackRequests:
          type: integer
          format: int64
        exerciseType:
          type: string
          enum:
          - TEXT
          - PROGRAMMING
          - MODELING
          - FILE_UPLOAD
          - QUIZ
        channelName:
          type: string
        studentAssignedTeamId:
          type: integer
          format: int64
        studentAssignedTeamIdComputed:
          type: boolean
        gradingInstructionFeedbackUsed:
          type: boolean
        testRunParticipationsExist:
          type: boolean
        numberOfParticipations:
          type: integer
          format: int64
        visibleToStudents:
          type: boolean
        teamMode:
          type: boolean
    ExerciseGroup:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        isMandatory:
          type: boolean
        exam:
          $ref: "#/components/schemas/Exam"
        exercises:
          type: array
          items:
            oneOf:
            - $ref: "#/components/schemas/FileUploadExercise"
            - $ref: "#/components/schemas/ModelingExercise"
            - $ref: "#/components/schemas/ProgrammingExercise"
            - $ref: "#/components/schemas/QuizExercise"
            - $ref: "#/components/schemas/TextExercise"
          uniqueItems: true
    ExerciseUnit:
      allOf:
      - $ref: "#/components/schemas/LectureUnit"
      - type: object
        properties:
          lecture:
            $ref: "#/components/schemas/Lecture"
          exercise:
            oneOf:
            - $ref: "#/components/schemas/FileUploadExercise"
            - $ref: "#/components/schemas/ModelingExercise"
            - $ref: "#/components/schemas/ProgrammingExercise"
            - $ref: "#/components/schemas/QuizExercise"
            - $ref: "#/components/schemas/TextExercise"
    Faq:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdDate:
          type: string
          format: date-time
        questionTitle:
          type: string
        questionAnswer:
          type: string
        categories:
          type: array
          items:
            type: string
          uniqueItems: true
        faqState:
          type: string
          enum:
          - ACCEPTED
          - REJECTED
          - PROPOSED
    Feedback:
      type: object
      properties:
        id:
          type: integer
          format: int64
        text:
          type: string
          maxLength: 500
          minLength: 0
        detailText:
          type: string
          maxLength: 5000
          minLength: 0
        hasLongFeedbackText:
          type: boolean
        reference:
          type: string
          maxLength: 2000
          minLength: 0
        testCase:
          $ref: "#/components/schemas/ProgrammingExerciseTestCase"
        credits:
          type: number
          format: double
        positive:
          type: boolean
        type:
          type: string
          enum:
          - MANUAL
          - MANUAL_UNREFERENCED
          - AUTOMATIC_ADAPTED
          - AUTOMATIC
        visibility:
          type: string
          enum:
          - ALWAYS
          - AFTER_DUE_DATE
          - NEVER
        result:
          $ref: "#/components/schemas/Result"
        detailTextTruncated:
          type: string
          writeOnly: true
    FileUploadExercise:
      allOf:
      - $ref: "#/components/schemas/Exercise"
      - type: object
        properties:
          exampleSolution:
            type: string
          filePattern:
            type: string
    FileUploadSubmission:
      allOf:
      - $ref: "#/components/schemas/Submission"
      - type: object
        properties:
          filePath:
            type: string
    GradingCriterion:
      type: object
      properties:
        id:
          type: integer
          format: int64
        structuredGradingInstructions:
          type: array
          items:
            $ref: "#/components/schemas/GradingInstruction"
          uniqueItems: true
        title:
          type: string
    GradingInstruction:
      type: object
      properties:
        id:
          type: integer
          format: int64
        credits:
          type: number
          format: double
        gradingScale:
          type: string
        instructionDescription:
          type: string
        feedback:
          type: string
        usageCount:
          type: integer
          format: int32
        feedbacks:
          type: array
          items:
            $ref: "#/components/schemas/Feedback"
          uniqueItems: true
    GroupChat:
      allOf:
      - $ref: "#/components/schemas/Conversation"
      - type: object
        properties:
          name:
            type: string
            maxLength: 20
            minLength: 1
    IPAddress:
      type: object
      properties:
        lower:
          $ref: "#/components/schemas/IPAddress"
        upper:
          $ref: "#/components/schemas/IPAddress"
        networkPrefixLength:
          type: integer
          format: int32
        loopback:
          type: boolean
        local:
          type: boolean
        ipv4:
          type: boolean
        ipv6:
          type: boolean
        byteCount:
          type: integer
          format: int32
        network:
          $ref: "#/components/schemas/IPAddressNetworkObjectObjectObjectObjectObject"
        section:
          $ref: "#/components/schemas/IPAddressSection"
        maxSegmentValue:
          type: integer
          format: int32
        nonZeroHostCount:
          type: integer
        bytesPerSegment:
          type: integer
          format: int32
        bitsPerSegment:
          type: integer
          format: int32
        lowerNonZeroHost:
          $ref: "#/components/schemas/IPAddress"
        sequentialBlockCount:
          type: integer
        iterable:
          type: object
        ipaddress:
          type: boolean
        ipversion:
          type: string
          enum:
          - IPv4
          - IPv6
        ipv4Convertible:
          type: boolean
        ipv6Convertible:
          type: boolean
        linkLocal:
          type: boolean
        unspecified:
          type: boolean
        anyLocal:
          type: boolean
        zeroHost:
          type: boolean
        hostMask:
          $ref: "#/components/schemas/IPAddress"
        networkMask:
          $ref: "#/components/schemas/IPAddress"
        singleNetwork:
          type: boolean
        prefixLength:
          type: integer
          format: int32
        segments:
          type: array
          items:
            $ref: "#/components/schemas/IPAddressSegment"
        hostSection:
          $ref: "#/components/schemas/IPAddressSection"
        networkSection:
          $ref: "#/components/schemas/IPAddressSection"
        count:
          type: integer
        bitCount:
          type: integer
          format: int32
        prefixed:
          type: boolean
        prefixBlock:
          type: boolean
        sequentialBlockIndex:
          type: integer
          format: int32
        singlePrefixBlock:
          type: boolean
        sequential:
          type: boolean
        divisionStrings:
          type: array
          items:
            type: string
        prefixCount:
          type: integer
        multiple:
          type: boolean
        bytes:
          type: string
          format: byte
        value:
          type: integer
        zero:
          type: boolean
        prefixLengthForSingleBlock:
          type: integer
          format: int32
        minPrefixLengthForBlock:
          type: integer
          format: int32
        fullRange:
          type: boolean
        upperBytes:
          type: string
          format: byte
        upperValue:
          type: integer
        max:
          type: boolean
        divisionCount:
          type: integer
          format: int32
        segmentCount:
          type: integer
          format: int32
        segmentStrings:
          type: array
          items:
            type: string
        macaddress:
          type: boolean
        multicast:
          type: boolean
    IPAddressCreatorObjectObjectObjectObjectObject:
      type: object
      properties:
        network:
          $ref: "#/components/schemas/IPAddressNetworkObjectObjectObjectObjectObject"
        segmentCaching:
          type: boolean
          writeOnly: true
    IPAddressNetworkObjectObjectObjectObjectObject:
      type: object
      properties:
        addressCreator:
          $ref: "#/components/schemas/IPAddressCreatorObjectObjectObjectObjectObject"
        loopback:
          type: object
        standardLoopbackStrings:
          type: array
          items:
            type: string
        ipv4:
          type: boolean
        ipv6:
          type: boolean
        ipversion:
          type: string
          enum:
          - IPv4
          - IPv6
        segmentCaching:
          type: boolean
          writeOnly: true
        prefixConfiguration:
          type: string
          enum:
          - ALL_PREFIXED_ADDRESSES_ARE_SUBNETS
          - PREFIXED_ZERO_HOSTS_ARE_SUBNETS
          - EXPLICIT_SUBNETS
    IPAddressSection:
      type: object
      properties:
        network:
          $ref: "#/components/schemas/IPAddressNetworkObjectObjectObjectObjectObject"
        entireAddress:
          type: boolean
        countImpl:
          type: integer
        hostMaskPrefix:
          type: integer
          format: int32
          writeOnly: true
        networkMaskPrefix:
          type: integer
          format: int32
          writeOnly: true
        lower:
          $ref: "#/components/schemas/IPAddressSection"
        upper:
          $ref: "#/components/schemas/IPAddressSection"
        ipv4:
          type: boolean
        ipv6:
          type: boolean
        segmentCount:
          type: integer
          format: int32
        byteCount:
          type: integer
          format: int32
        maxSegmentValue:
          type: integer
          format: int32
        nonZeroHostCount:
          type: integer
        bitCount:
          type: integer
          format: int32
        lowerNonZeroHost:
          $ref: "#/components/schemas/IPAddressSection"
        sequentialBlockCount:
          type: integer
        iterable:
          type: object
        zeroHost:
          type: boolean
        hostMask:
          $ref: "#/components/schemas/IPAddressSection"
        networkMask:
          $ref: "#/components/schemas/IPAddressSection"
        singleNetwork:
          type: boolean
        prefixLength:
          type: integer
          format: int32
        singlePrefixBlock:
          type: boolean
        prefixLengthForSingleBlock:
          type: integer
          format: int32
        minPrefixLengthForBlock:
          type: integer
          format: int32
        fullRange:
          type: boolean
        segmentStrings:
          type: array
          items:
            type: string
        segments:
          type: array
          items:
            $ref: "#/components/schemas/IPAddressSegment"
        section:
          $ref: "#/components/schemas/IPAddressSection"
        ipversion:
          type: string
          enum:
          - IPv4
          - IPv6
        hostSection:
          $ref: "#/components/schemas/IPAddressSection"
        networkSection:
          $ref: "#/components/schemas/IPAddressSection"
        networkPrefixLength:
          type: integer
          format: int32
        count:
          type: integer
        prefixed:
          type: boolean
        prefixBlock:
          type: boolean
        sequentialBlockIndex:
          type: integer
          format: int32
        sequential:
          type: boolean
        divisionStrings:
          type: array
          items:
            type: string
        prefixCount:
          type: integer
        multiple:
          type: boolean
        bytes:
          type: string
          format: byte
        value:
          type: integer
        zero:
          type: boolean
        upperBytes:
          type: string
          format: byte
        upperValue:
          type: integer
        max:
          type: boolean
        divisionCount:
          type: integer
          format: int32
        bytesPerSegment:
          type: integer
          format: int32
        bitsPerSegment:
          type: integer
          format: int32
        zeroSegments:
          $ref: "#/components/schemas/RangeList"
        zeroRangeSegments:
          $ref: "#/components/schemas/RangeList"
        inetAddress:
          type: object
          properties:
            hostAddress:
              type: string
            address:
              type: string
              format: byte
            hostName:
              type: string
            linkLocalAddress:
              type: boolean
            multicastAddress:
              type: boolean
            anyLocalAddress:
              type: boolean
            loopbackAddress:
              type: boolean
            siteLocalAddress:
              type: boolean
            mcglobal:
              type: boolean
            mcnodeLocal:
              type: boolean
            mclinkLocal:
              type: boolean
            mcsiteLocal:
              type: boolean
            mcorgLocal:
              type: boolean
            canonicalHostName:
              type: string
          writeOnly: true
    IPAddressSegment:
      type: object
      properties:
        value:
          type: integer
        upperValue:
          type: integer
        upperSegmentValue:
          type: integer
          format: int32
        upperDivisionValue:
          type: integer
          format: int64
        divisionValue:
          type: integer
          format: int64
        valueCount:
          type: integer
          format: int32
        prefixValueCount:
          type: integer
          format: int32
        multiple:
          type: boolean
        count:
          type: integer
        lower:
          $ref: "#/components/schemas/IPAddressSegment"
        upper:
          $ref: "#/components/schemas/IPAddressSegment"
        ipv4:
          type: boolean
        ipv6:
          type: boolean
        segmentValue:
          type: integer
          format: int32
        maxValue:
          type: integer
          format: int64
        network:
          $ref: "#/components/schemas/IPAddressNetworkObjectObjectObjectObjectObject"
        iterable:
          type: object
        ipversion:
          type: string
          enum:
          - IPv4
          - IPv6
        prefixBlock:
          type: boolean
        segmentPrefixLength:
          type: integer
          format: int32
        minPrefixLengthForBlock:
          type: integer
          format: int32
        maxSegmentValue:
          type: integer
          format: int32
        bytes:
          type: string
          format: byte
        zero:
          type: boolean
        byteCount:
          type: integer
          format: int32
        bitCount:
          type: integer
          format: int32
        prefixLengthForSingleBlock:
          type: integer
          format: int32
        fullRange:
          type: boolean
        upperBytes:
          type: string
          format: byte
        max:
          type: boolean
        wildcardString:
          type: string
        divisionPrefixLength:
          type: integer
          format: int32
        string:
          type: string
        prefixed:
          type: boolean
        singlePrefixBlock:
          type: boolean
    KnowledgeArea:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        shortTitle:
          type: string
        description:
          type: string
        parent:
          $ref: "#/components/schemas/KnowledgeArea"
        children:
          type: array
          items:
            $ref: "#/components/schemas/KnowledgeArea"
          uniqueItems: true
    LearnerProfile:
      type: object
      properties:
        id:
          type: integer
          format: int64
        courseLearnerProfiles:
          type: array
          items:
            $ref: "#/components/schemas/CourseLearnerProfile"
          uniqueItems: true
    LearningPath:
      type: object
      properties:
        id:
          type: integer
          format: int64
        progress:
          type: integer
          format: int32
        startedByStudent:
          type: boolean
        user:
          $ref: "#/components/schemas/User"
        competencies:
          type: array
          items:
            oneOf:
            - $ref: "#/components/schemas/Competency"
            - $ref: "#/components/schemas/Prerequisite"
          uniqueItems: true
    Lecture:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        visibleDate:
          type: string
          format: date-time
        attachments:
          type: array
          items:
            $ref: "#/components/schemas/Attachment"
          uniqueItems: true
        lectureUnits:
          type: array
          items:
            oneOf:
            - $ref: "#/components/schemas/AttachmentUnit"
            - $ref: "#/components/schemas/ExerciseUnit"
            - $ref: "#/components/schemas/OnlineUnit"
            - $ref: "#/components/schemas/TextUnit"
            - $ref: "#/components/schemas/VideoUnit"
        posts:
          type: array
          items:
            $ref: "#/components/schemas/Post"
          uniqueItems: true
        visibleToStudents:
          type: boolean
        channelName:
          type: string
    LectureUnit:
      type: object
      discriminator:
        propertyName: type
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        releaseDate:
          type: string
          format: date-time
        lecture:
          $ref: "#/components/schemas/Lecture"
        competencyLinks:
          type: array
          items:
            $ref: "#/components/schemas/CompetencyLectureUnitLink"
          uniqueItems: true
        type:
          type: string
        completed:
          type: boolean
        visibleToStudents:
          type: boolean
    LockRepositoryPolicy:
      allOf:
      - $ref: "#/components/schemas/SubmissionPolicy"
      - type: object
        properties:
          programmingExercise:
            $ref: "#/components/schemas/ProgrammingExercise"
    LtiPlatformConfiguration:
      type: object
      properties:
        id:
          type: integer
          format: int64
        registrationId:
          type: string
        clientId:
          type: string
        originalUrl:
          type: string
        customName:
          type: string
        authorizationUri:
          type: string
        jwkSetUri:
          type: string
        tokenUri:
          type: string
        onlineCourseConfigurations:
          type: array
          items:
            $ref: "#/components/schemas/OnlineCourseConfiguration"
          uniqueItems: true
      required:
      - authorizationUri
      - clientId
      - jwkSetUri
      - registrationId
      - tokenUri
    ModelingExercise:
      allOf:
      - $ref: "#/components/schemas/Exercise"
      - type: object
        properties:
          diagramType:
            type: string
            enum:
            - ClassDiagram
            - ObjectDiagram
            - ActivityDiagram
            - UseCaseDiagram
            - CommunicationDiagram
            - ComponentDiagram
            - DeploymentDiagram
            - PetriNet
            - SyntaxTree
            - Flowchart
            - BPMN
          exampleSolutionModel:
            type: string
          exampleSolutionExplanation:
            type: string
    ModelingSubmission:
      allOf:
      - $ref: "#/components/schemas/Submission"
      - type: object
        properties:
          model:
            type: string
            maxLength: 100000
            minLength: 0
          explanationText:
            type: string
            maxLength: 30000
            minLength: 0
    MultipleChoiceQuestion:
      allOf:
      - $ref: "#/components/schemas/QuizQuestion"
      - type: object
        properties:
          answerOptions:
            type: array
            items:
              $ref: "#/components/schemas/AnswerOption"
          singleChoice:
            type: boolean
    MultipleChoiceQuestionStatistic:
      allOf:
      - $ref: "#/components/schemas/QuizQuestionStatistic"
      - type: object
        properties:
          answerCounters:
            type: array
            items:
              $ref: "#/components/schemas/AnswerCounter"
            uniqueItems: true
    MultipleChoiceSubmittedAnswer:
      allOf:
      - $ref: "#/components/schemas/SubmittedAnswer"
      - type: object
        properties:
          selectedOptions:
            type: array
            items:
              $ref: "#/components/schemas/AnswerOption"
            uniqueItems: true
    OneToOneChat:
      allOf:
      - $ref: "#/components/schemas/Conversation"
    OnlineCourseConfiguration:
      type: object
      properties:
        id:
          type: integer
          format: int64
        userPrefix:
          type: string
        requireExistingUser:
          type: boolean
        ltiPlatformConfiguration:
          $ref: "#/components/schemas/LtiPlatformConfiguration"
    OnlineUnit:
      allOf:
      - $ref: "#/components/schemas/LectureUnit"
      - type: object
        properties:
          lecture:
            $ref: "#/components/schemas/Lecture"
          description:
            type: string
          source:
            type: string
    Organization:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          maxLength: 100
          minLength: 0
        shortName:
          type: string
          maxLength: 50
          minLength: 0
        url:
          type: string
        description:
          type: string
        logoUrl:
          type: string
        emailPattern:
          type: string
        users:
          type: array
          items:
            $ref: "#/components/schemas/User"
          uniqueItems: true
        courses:
          type: array
          items:
            $ref: "#/components/schemas/Course"
          uniqueItems: true
      required:
      - emailPattern
      - name
      - shortName
    Participation:
      type: object
      discriminator:
        propertyName: type
      properties:
        id:
          type: integer
          format: int64
        initializationState:
          type: string
          enum:
          - UNINITIALIZED
          - REPO_COPIED
          - REPO_CONFIGURED
          - INACTIVE
          - BUILD_PLAN_COPIED
          - BUILD_PLAN_CONFIGURED
          - INITIALIZED
          - FINISHED
        initializationDate:
          type: string
          format: date-time
        individualDueDate:
          type: string
          format: date-time
        testRun:
          type: boolean
        exercise:
          oneOf:
          - $ref: "#/components/schemas/FileUploadExercise"
          - $ref: "#/components/schemas/ModelingExercise"
          - $ref: "#/components/schemas/ProgrammingExercise"
          - $ref: "#/components/schemas/QuizExercise"
          - $ref: "#/components/schemas/TextExercise"
        results:
          type: array
          deprecated: true
          items:
            $ref: "#/components/schemas/Result"
          uniqueItems: true
        submissions:
          type: array
          items:
            oneOf:
            - $ref: "#/components/schemas/FileUploadSubmission"
            - $ref: "#/components/schemas/ModelingSubmission"
            - $ref: "#/components/schemas/ProgrammingSubmission"
            - $ref: "#/components/schemas/QuizSubmission"
            - $ref: "#/components/schemas/TextSubmission"
          uniqueItems: true
        attempt:
          type: integer
          format: int32
        submissionCount:
          type: integer
          format: int32
        type:
          type: string
      required:
      - type
    PlagiarismCase:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdDate:
          type: string
          format: date-time
        exercise:
          oneOf:
          - $ref: "#/components/schemas/FileUploadExercise"
          - $ref: "#/components/schemas/ModelingExercise"
          - $ref: "#/components/schemas/ProgrammingExercise"
          - $ref: "#/components/schemas/QuizExercise"
          - $ref: "#/components/schemas/TextExercise"
        student:
          $ref: "#/components/schemas/User"
        team:
          $ref: "#/components/schemas/Team"
        post:
          $ref: "#/components/schemas/Post"
        plagiarismSubmissions:
          type: array
          items:
            $ref: "#/components/schemas/PlagiarismSubmissionObject"
          uniqueItems: true
        verdict:
          type: string
          enum:
          - PLAGIARISM
          - POINT_DEDUCTION
          - WARNING
          - NO_PLAGIARISM
        verdictMessage:
          type: string
        verdictBy:
          $ref: "#/components/schemas/User"
        verdictDate:
          type: string
          format: date-time
        verdictPointDeduction:
          type: integer
          format: int32
        createdByContinuousPlagiarismControl:
          type: boolean
    PlagiarismComparisonObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        plagiarismResult:
          oneOf:
          - $ref: "#/components/schemas/TextPlagiarismResult"
        matches:
          type: array
          items:
            $ref: "#/components/schemas/PlagiarismMatch"
          uniqueItems: true
        similarity:
          type: number
          format: double
        status:
          type: string
          enum:
          - CONFIRMED
          - DENIED
          - NONE
    PlagiarismComparisonTextSubmissionElement:
      type: object
      properties:
        id:
          type: integer
          format: int64
        plagiarismResult:
          oneOf:
          - $ref: "#/components/schemas/TextPlagiarismResult"
        submissionA:
          $ref: "#/components/schemas/PlagiarismSubmissionTextSubmissionElement"
        submissionB:
          $ref: "#/components/schemas/PlagiarismSubmissionTextSubmissionElement"
        matches:
          type: array
          items:
            $ref: "#/components/schemas/PlagiarismMatch"
          uniqueItems: true
        similarity:
          type: number
          format: double
        status:
          type: string
          enum:
          - CONFIRMED
          - DENIED
          - NONE
    PlagiarismDetectionConfig:
      type: object
      properties:
        id:
          type: integer
          format: int64
        continuousPlagiarismControlEnabled:
          type: boolean
        continuousPlagiarismControlPostDueDateChecksEnabled:
          type: boolean
        continuousPlagiarismControlPlagiarismCaseStudentResponsePeriod:
          type: integer
          format: int32
        similarityThreshold:
          type: integer
          format: int32
        minimumScore:
          type: integer
          format: int32
        minimumSize:
          type: integer
          format: int32
    PlagiarismMatch:
      type: object
      properties:
        startA:
          type: integer
          format: int32
        startB:
          type: integer
          format: int32
        length:
          type: integer
          format: int32
    PlagiarismResultObject:
      type: object
      discriminator:
        propertyName: type
      properties:
        id:
          type: integer
          format: int64
        createdDate:
          type: string
          format: date-time
        comparisons:
          type: array
          items:
            $ref: "#/components/schemas/PlagiarismComparisonObject"
          uniqueItems: true
        duration:
          type: integer
          format: int64
        exercise:
          $ref: "#/components/schemas/Exercise"
        similarityDistribution:
          type: array
          items:
            type: integer
            format: int32
        type:
          type: string
      required:
      - type
    PlagiarismSubmissionObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        submissionId:
          type: integer
          format: int64
        studentLogin:
          type: string
        elements:
          type: array
          items:
            type: object
        plagiarismComparison:
          $ref: "#/components/schemas/PlagiarismComparisonObject"
        size:
          type: integer
          format: int32
        score:
          type: number
          format: double
    PlagiarismSubmissionTextSubmissionElement:
      type: object
      properties:
        id:
          type: integer
          format: int64
        submissionId:
          type: integer
          format: int64
        studentLogin:
          type: string
        elements:
          type: array
          items:
            $ref: "#/components/schemas/TextSubmissionElement"
        plagiarismCase:
          $ref: "#/components/schemas/PlagiarismCase"
        size:
          type: integer
          format: int32
        score:
          type: number
          format: double
    PointCounter:
      type: object
      properties:
        id:
          type: integer
          format: int64
        ratedCounter:
          type: integer
          format: int32
        unRatedCounter:
          type: integer
          format: int32
        points:
          type: number
          format: double
    Post:
      type: object
      properties:
        id:
          type: integer
          format: int64
        author:
          $ref: "#/components/schemas/User"
        creationDate:
          type: string
          format: date-time
        updatedDate:
          type: string
          format: date-time
        content:
          type: string
          maxLength: 5000
          minLength: 0
        title:
          type: string
          maxLength: 200
          minLength: 0
        visibleForStudents:
          type: boolean
        reactions:
          type: array
          items:
            $ref: "#/components/schemas/Reaction"
          uniqueItems: true
        answers:
          type: array
          items:
            $ref: "#/components/schemas/AnswerPost"
          uniqueItems: true
        tags:
          type: array
          items:
            type: string
          uniqueItems: true
        course:
          $ref: "#/components/schemas/Course"
          writeOnly: true
        conversation:
          oneOf:
          - $ref: "#/components/schemas/Channel"
          - $ref: "#/components/schemas/GroupChat"
          - $ref: "#/components/schemas/OneToOneChat"
        displayPriority:
          type: string
          enum:
          - PINNED
          - ARCHIVED
          - NONE
        plagiarismCase:
          $ref: "#/components/schemas/PlagiarismCase"
        resolved:
          type: boolean
        hasForwardedMessages:
          type: boolean
        authorRole:
          type: string
          enum:
          - INSTRUCTOR
          - TUTOR
          - USER
        isSaved:
          type: boolean
    Prerequisite:
      allOf:
      - $ref: "#/components/schemas/CourseCompetency"
    ProgrammingExercise:
      allOf:
      - $ref: "#/components/schemas/Exercise"
      - type: object
        properties:
          testRepositoryUri:
            type: string
          auxiliaryRepositories:
            type: array
            items:
              $ref: "#/components/schemas/AuxiliaryRepository"
          allowOnlineEditor:
            type: boolean
          allowOfflineIde:
            type: boolean
          allowOnlineIde:
            type: boolean
          staticCodeAnalysisEnabled:
            type: boolean
          maxStaticCodeAnalysisPenalty:
            type: integer
            format: int32
          programmingLanguage:
            type: string
            enum:
            - EMPTY
            - JAVA
            - PYTHON
            - C
            - HASKELL
            - KOTLIN
            - VHDL
            - ASSEMBLER
            - SWIFT
            - OCAML
            - JAVASCRIPT
            - C_SHARP
            - C_PLUS_PLUS
            - SQL
            - R
            - TYPESCRIPT
            - RUST
            - GO
            - MATLAB
            - BASH
            - RUBY
            - POWERSHELL
            - ADA
            - DART
            - PHP
          packageName:
            type: string
          showTestNamesToStudents:
            type: boolean
          buildAndTestStudentSubmissionsAfterDueDate:
            type: string
            format: date-time
          testCasesChanged:
            type: boolean
          projectKey:
            type: string
          templateParticipation:
            $ref: "#/components/schemas/TemplateProgrammingExerciseParticipation"
          solutionParticipation:
            $ref: "#/components/schemas/SolutionProgrammingExerciseParticipation"
          testCases:
            type: array
            items:
              $ref: "#/components/schemas/ProgrammingExerciseTestCase"
            uniqueItems: true
          tasks:
            type: array
            items:
              $ref: "#/components/schemas/ProgrammingExerciseTask"
          staticCodeAnalysisCategories:
            type: array
            items:
              $ref: "#/components/schemas/StaticCodeAnalysisCategory"
            uniqueItems: true
          submissionPolicy:
            oneOf:
            - $ref: "#/components/schemas/LockRepositoryPolicy"
            - $ref: "#/components/schemas/SubmissionPenaltyPolicy"
          projectType:
            type: string
            enum:
            - MAVEN_MAVEN
            - PLAIN_MAVEN
            - PLAIN
            - XCODE
            - FACT
            - GCC
            - PLAIN_GRADLE
            - GRADLE_GRADLE
            - MAVEN_BLACKBOX
          releaseTestsWithExampleSolution:
            type: boolean
          buildConfig:
            $ref: "#/components/schemas/ProgrammingExerciseBuildConfig"
          defaultTestCaseVisibility:
            type: string
            enum:
            - ALWAYS
            - AFTER_DUE_DATE
            - NEVER
    ProgrammingExerciseBuildConfig:
      type: object
      properties:
        id:
          type: integer
          format: int64
        sequentialTestRuns:
          type: boolean
        branch:
          type: string
        buildPlanConfiguration:
          type: string
        buildScript:
          type: string
        checkoutSolutionRepository:
          type: boolean
        testCheckoutPath:
          type: string
        assignmentCheckoutPath:
          type: string
        solutionCheckoutPath:
          type: string
        timeoutSeconds:
          type: integer
          format: int32
        dockerFlags:
          type: string
        theiaImage:
          type: string
        allowBranching:
          type: boolean
        branchRegex:
          type: string
        buildPlanAccessSecret:
          type: string
          maxLength: 36
          minLength: 0
        windfile:
          $ref: "#/components/schemas/Windfile"
    ProgrammingExerciseStudentParticipation:
      allOf:
      - $ref: "#/components/schemas/Participation"
      - type: object
        properties:
          presentationScore:
            type: number
            format: double
          student:
            $ref: "#/components/schemas/User"
          team:
            $ref: "#/components/schemas/Team"
          repositoryUri:
            type: string
          buildPlanId:
            type: string
          branch:
            type: string
          userIndependentRepositoryUri:
            type: string
          participantIdentifier:
            type: string
          participantName:
            type: string
    ProgrammingExerciseTask:
      type: object
      properties:
        id:
          type: integer
          format: int64
        taskName:
          type: string
        testCases:
          type: array
          items:
            $ref: "#/components/schemas/ProgrammingExerciseTestCase"
          uniqueItems: true
    ProgrammingExerciseTestCase:
      type: object
      properties:
        id:
          type: integer
          format: int64
        testName:
          type: string
        weight:
          type: number
          format: double
        active:
          type: boolean
        visibility:
          type: string
          enum:
          - ALWAYS
          - AFTER_DUE_DATE
          - NEVER
        bonusMultiplier:
          type: number
          format: double
        bonusPoints:
          type: number
          format: double
        type:
          type: string
          enum:
          - STRUCTURAL
          - BEHAVIORAL
          - DEFAULT
      required:
      - bonusMultiplier
      - bonusPoints
    ProgrammingSubmission:
      allOf:
      - $ref: "#/components/schemas/Submission"
      - type: object
        properties:
          participation:
            oneOf:
            - $ref: "#/components/schemas/ProgrammingExerciseStudentParticipation"
            - $ref: "#/components/schemas/SolutionProgrammingExerciseParticipation"
            - $ref: "#/components/schemas/StudentParticipation"
            - $ref: "#/components/schemas/TemplateProgrammingExerciseParticipation"
          commitHash:
            type: string
          buildFailed:
            type: boolean
          buildLogEntries:
            type: array
            items:
              $ref: "#/components/schemas/BuildLogEntry"
          results:
            type: array
            items:
              $ref: "#/components/schemas/Result"
            readOnly: true
    QuizBatch:
      type: object
      properties:
        id:
          type: integer
          format: int64
        startTime:
          type: string
          format: date-time
        password:
          type: string
        started:
          type: boolean
        ended:
          type: boolean
    QuizExercise:
      allOf:
      - $ref: "#/components/schemas/Exercise"
      - type: object
        properties:
          randomizeQuestionOrder:
            type: boolean
          allowedNumberOfAttempts:
            type: integer
            format: int32
          isOpenForPractice:
            type: boolean
          quizMode:
            type: string
            enum:
            - SYNCHRONIZED
            - BATCHED
            - INDIVIDUAL
          duration:
            type: integer
            format: int32
          quizPointStatistic:
            $ref: "#/components/schemas/QuizPointStatistic"
          quizQuestions:
            type: array
            items:
              oneOf:
              - $ref: "#/components/schemas/DragAndDropQuestion"
              - $ref: "#/components/schemas/MultipleChoiceQuestion"
              - $ref: "#/components/schemas/ShortAnswerQuestion"
          quizBatches:
            type: array
            items:
              $ref: "#/components/schemas/QuizBatch"
            uniqueItems: true
          quizEnded:
            type: boolean
          quizStarted:
            type: boolean
          remainingNumberOfAttempts:
            type: integer
            format: int32
          questionParent:
            oneOf:
            - $ref: "#/components/schemas/DragAndDropQuestion"
            - $ref: "#/components/schemas/MultipleChoiceQuestion"
            - $ref: "#/components/schemas/ShortAnswerQuestion"
            writeOnly: true
    QuizPointStatistic:
      type: object
      properties:
        id:
          type: integer
          format: int64
        participantsRated:
          type: integer
          format: int32
        participantsUnrated:
          type: integer
          format: int32
        pointCounters:
          type: array
          items:
            $ref: "#/components/schemas/PointCounter"
          uniqueItems: true
    QuizQuestion:
      type: object
      discriminator:
        propertyName: type
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        text:
          type: string
        hint:
          type: string
        explanation:
          type: string
        points:
          type: number
          format: double
        scoringType:
          type: string
          enum:
          - ALL_OR_NOTHING
          - PROPORTIONAL_WITH_PENALTY
          - PROPORTIONAL_WITHOUT_PENALTY
        randomizeOrder:
          type: boolean
        invalid:
          type: boolean
        quizQuestionStatistic:
          oneOf:
          - $ref: "#/components/schemas/DragAndDropQuestionStatistic"
          - $ref: "#/components/schemas/MultipleChoiceQuestionStatistic"
          - $ref: "#/components/schemas/ShortAnswerQuestionStatistic"
        type:
          type: string
      required:
      - type
    QuizQuestionStatistic:
      type: object
      discriminator:
        propertyName: type
      properties:
        id:
          type: integer
          format: int64
        participantsRated:
          type: integer
          format: int32
        participantsUnrated:
          type: integer
          format: int32
        ratedCorrectCounter:
          type: integer
          format: int32
        unRatedCorrectCounter:
          type: integer
          format: int32
        type:
          type: string
      required:
      - type
    QuizSubmission:
      allOf:
      - $ref: "#/components/schemas/Submission"
      - type: object
        properties:
          scoreInPoints:
            type: number
            format: double
          submittedAnswers:
            type: array
            items:
              oneOf:
              - $ref: "#/components/schemas/DragAndDropSubmittedAnswer"
              - $ref: "#/components/schemas/MultipleChoiceSubmittedAnswer"
              - $ref: "#/components/schemas/ShortAnswerSubmittedAnswer"
            uniqueItems: true
          quizBatch:
            type: integer
            format: int64
    RangeList:
      type: object
    Reaction:
      type: object
      properties:
        id:
          type: integer
          format: int64
        user:
          $ref: "#/components/schemas/User"
        creationDate:
          type: string
          format: date-time
        emojiId:
          type: string
        post:
          $ref: "#/components/schemas/Post"
        answerPost:
          $ref: "#/components/schemas/AnswerPost"
    Result:
      type: object
      properties:
        id:
          type: integer
          format: int64
        completionDate:
          type: string
          format: date-time
        successful:
          type: boolean
        score:
          type: number
          format: double
        rated:
          type: boolean
        submission:
          oneOf:
          - $ref: "#/components/schemas/FileUploadSubmission"
          - $ref: "#/components/schemas/ModelingSubmission"
          - $ref: "#/components/schemas/ProgrammingSubmission"
          - $ref: "#/components/schemas/QuizSubmission"
          - $ref: "#/components/schemas/TextSubmission"
        participation:
          oneOf:
          - $ref: "#/components/schemas/ProgrammingExerciseStudentParticipation"
          - $ref: "#/components/schemas/SolutionProgrammingExerciseParticipation"
          - $ref: "#/components/schemas/StudentParticipation"
          - $ref: "#/components/schemas/TemplateProgrammingExerciseParticipation"
        assessor:
          $ref: "#/components/schemas/User"
        assessmentType:
          type: string
          enum:
          - AUTOMATIC
          - SEMI_AUTOMATIC
          - MANUAL
          - AUTOMATIC_ATHENA
        hasComplaint:
          type: boolean
        exampleResult:
          type: boolean
        assessmentNote:
          $ref: "#/components/schemas/AssessmentNote"
        testCaseCount:
          type: integer
          format: int32
        passedTestCaseCount:
          type: integer
          format: int32
        codeIssueCount:
          type: integer
          format: int32
        feedbackType:
          $ref: "#/components/schemas/Feedback"
          writeOnly: true
    ShortAnswerMapping:
      type: object
      properties:
        id:
          type: integer
          format: int64
        shortAnswerSpotIndex:
          type: integer
          format: int32
        shortAnswerSolutionIndex:
          type: integer
          format: int32
        invalid:
          type: boolean
        solution:
          $ref: "#/components/schemas/ShortAnswerSolution"
        spot:
          $ref: "#/components/schemas/ShortAnswerSpot"
    ShortAnswerQuestion:
      allOf:
      - $ref: "#/components/schemas/QuizQuestion"
      - type: object
        properties:
          spots:
            type: array
            items:
              $ref: "#/components/schemas/ShortAnswerSpot"
          solutions:
            type: array
            items:
              $ref: "#/components/schemas/ShortAnswerSolution"
          correctMappings:
            type: array
            items:
              $ref: "#/components/schemas/ShortAnswerMapping"
          similarityValue:
            type: integer
            format: int32
          matchLetterCase:
            type: boolean
    ShortAnswerQuestionStatistic:
      allOf:
      - $ref: "#/components/schemas/QuizQuestionStatistic"
      - type: object
        properties:
          shortAnswerSpotCounters:
            type: array
            items:
              $ref: "#/components/schemas/ShortAnswerSpotCounter"
            uniqueItems: true
    ShortAnswerSolution:
      type: object
      properties:
        id:
          type: integer
          format: int64
        text:
          type: string
        invalid:
          type: boolean
        tempID:
          type: integer
          format: int64
    ShortAnswerSpot:
      type: object
      properties:
        id:
          type: integer
          format: int64
        spotNr:
          type: integer
          format: int32
        width:
          type: integer
          format: int32
        invalid:
          type: boolean
        tempID:
          type: integer
          format: int64
    ShortAnswerSpotCounter:
      type: object
      properties:
        id:
          type: integer
          format: int64
        ratedCounter:
          type: integer
          format: int32
        unRatedCounter:
          type: integer
          format: int32
        spot:
          $ref: "#/components/schemas/ShortAnswerSpot"
    ShortAnswerSubmittedAnswer:
      allOf:
      - $ref: "#/components/schemas/SubmittedAnswer"
      - type: object
        properties:
          submittedTexts:
            type: array
            items:
              $ref: "#/components/schemas/ShortAnswerSubmittedText"
            uniqueItems: true
    ShortAnswerSubmittedText:
      type: object
      properties:
        id:
          type: integer
          format: int64
        text:
          type: string
          maxLength: 255
          minLength: 0
        isCorrect:
          type: boolean
        spot:
          $ref: "#/components/schemas/ShortAnswerSpot"
    Slide:
      type: object
      properties:
        id:
          type: integer
          format: int64
        slideImagePath:
          type: string
          maxLength: 150
          minLength: 0
        slideNumber:
          type: integer
          format: int32
        hidden:
          type: string
          format: date-time
        exercise:
          oneOf:
          - $ref: "#/components/schemas/FileUploadExercise"
          - $ref: "#/components/schemas/ModelingExercise"
          - $ref: "#/components/schemas/ProgrammingExercise"
          - $ref: "#/components/schemas/QuizExercise"
          - $ref: "#/components/schemas/TextExercise"
    SolutionProgrammingExerciseParticipation:
      allOf:
      - $ref: "#/components/schemas/Participation"
      - type: object
        properties:
          repositoryUri:
            type: string
          buildPlanId:
            type: string
          programmingExercise:
            $ref: "#/components/schemas/ProgrammingExercise"
          userIndependentRepositoryUri:
            type: string
    Source:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        author:
          type: string
        uri:
          type: string
    StandardizedCompetency:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
        taxonomy:
          type: string
          enum:
          - REMEMBER
          - UNDERSTAND
          - APPLY
          - ANALYZE
          - EVALUATE
          - CREATE
        version:
          type: string
        knowledgeArea:
          $ref: "#/components/schemas/KnowledgeArea"
        source:
          $ref: "#/components/schemas/Source"
        firstVersion:
          $ref: "#/components/schemas/StandardizedCompetency"
        childVersions:
          type: array
          items:
            $ref: "#/components/schemas/StandardizedCompetency"
          uniqueItems: true
        linkedCompetencies:
          type: array
          items:
            oneOf:
            - $ref: "#/components/schemas/Competency"
            - $ref: "#/components/schemas/Prerequisite"
          uniqueItems: true
    StaticCodeAnalysisCategory:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        penalty:
          type: number
          format: double
        maxPenalty:
          type: number
          format: double
        state:
          type: string
          enum:
          - INACTIVE
          - FEEDBACK
          - GRADED
        programmingExercise:
          $ref: "#/components/schemas/ProgrammingExercise"
          writeOnly: true
    StudentExam:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdDate:
          type: string
          format: date-time
        submitted:
          type: boolean
        workingTime:
          type: integer
          format: int32
        started:
          type: boolean
        startedDate:
          type: string
          format: date-time
        submissionDate:
          type: string
          format: date-time
        testRun:
          type: boolean
        user:
          $ref: "#/components/schemas/User"
        exercises:
          type: array
          items:
            oneOf:
            - $ref: "#/components/schemas/FileUploadExercise"
            - $ref: "#/components/schemas/ModelingExercise"
            - $ref: "#/components/schemas/ProgrammingExercise"
            - $ref: "#/components/schemas/QuizExercise"
            - $ref: "#/components/schemas/TextExercise"
        examSessions:
          type: array
          items:
            $ref: "#/components/schemas/ExamSession"
          uniqueItems: true
        studentParticipations:
          type: array
          items:
            $ref: "#/components/schemas/StudentParticipation"
        finished:
          type: boolean
        ended:
          type: boolean
        startedAndStartDate:
          type: string
          format: date-time
          writeOnly: true
    StudentParticipation:
      allOf:
      - $ref: "#/components/schemas/Participation"
      - type: object
        properties:
          presentationScore:
            type: number
            format: double
          student:
            $ref: "#/components/schemas/User"
          team:
            $ref: "#/components/schemas/Team"
          participantIdentifier:
            type: string
          participantName:
            type: string
    Submission:
      type: object
      discriminator:
        propertyName: submissionExerciseType
      properties:
        id:
          type: integer
          format: int64
        submitted:
          type: boolean
        type:
          type: string
          enum:
          - MANUAL
          - TIMEOUT
          - TEST
          - OTHER
          - INSTRUCTOR
          - EXTERNAL
          - ILLEGAL
        exampleSubmission:
          type: boolean
        submissionDate:
          type: string
          format: date-time
        empty:
          type: boolean
        submissionExerciseType:
          type: string
        durationInMinutes:
          type: integer
          format: int64
          readOnly: true
    SubmissionPenaltyPolicy:
      allOf:
      - $ref: "#/components/schemas/SubmissionPolicy"
      - type: object
        properties:
          programmingExercise:
            $ref: "#/components/schemas/ProgrammingExercise"
          exceedingPenalty:
            type: number
            format: double
    SubmissionPolicy:
      type: object
      discriminator:
        propertyName: type
      properties:
        id:
          type: integer
          format: int64
        submissionLimit:
          type: integer
          format: int32
        active:
          type: boolean
        type:
          type: string
      required:
      - type
    SubmittedAnswer:
      type: object
      discriminator:
        propertyName: type
      properties:
        id:
          type: integer
          format: int64
        scoreInPoints:
          type: number
          format: double
        quizQuestion:
          oneOf:
          - $ref: "#/components/schemas/DragAndDropQuestion"
          - $ref: "#/components/schemas/MultipleChoiceQuestion"
          - $ref: "#/components/schemas/ShortAnswerQuestion"
        type:
          type: string
      required:
      - type
    Team:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        name:
          type: string
        shortName:
          type: string
        image:
          type: string
        students:
          type: array
          items:
            $ref: "#/components/schemas/User"
          uniqueItems: true
        owner:
          $ref: "#/components/schemas/User"
        participantIdentifier:
          type: string
    TeamAssignmentConfig:
      type: object
      properties:
        id:
          type: integer
          format: int64
        minTeamSize:
          type: integer
          format: int32
          minimum: 1
        maxTeamSize:
          type: integer
          format: int32
          minimum: 1
      required:
      - minTeamSize
    TemplateProgrammingExerciseParticipation:
      allOf:
      - $ref: "#/components/schemas/Participation"
      - type: object
        properties:
          repositoryUri:
            type: string
          buildPlanId:
            type: string
          programmingExercise:
            $ref: "#/components/schemas/ProgrammingExercise"
          userIndependentRepositoryUri:
            type: string
    TextBlock:
      type: object
      properties:
        id:
          type: string
          maxLength: 40
          minLength: 40
        text:
          type: string
        startIndex:
          type: integer
          format: int32
        endIndex:
          type: integer
          format: int32
        type:
          type: string
          enum:
          - AUTOMATIC
          - MANUAL
    TextExercise:
      allOf:
      - $ref: "#/components/schemas/Exercise"
      - type: object
        properties:
          exampleSolution:
            type: string
    TextPlagiarismResult:
      allOf:
      - $ref: "#/components/schemas/PlagiarismResultObject"
      - type: object
        properties:
          comparisons:
            type: array
            items:
              $ref: "#/components/schemas/PlagiarismComparisonTextSubmissionElement"
            uniqueItems: true
    TextSubmission:
      allOf:
      - $ref: "#/components/schemas/Submission"
      - type: object
        properties:
          text:
            type: string
            maxLength: 30000
            minLength: 0
          language:
            type: string
            enum:
            - ENGLISH
            - GERMAN
          blocks:
            type: array
            items:
              $ref: "#/components/schemas/TextBlock"
            uniqueItems: true
    TextSubmissionElement:
      type: object
      properties:
        id:
          type: integer
          format: int64
        column:
          type: integer
          format: int32
        line:
          type: integer
          format: int32
        file:
          type: string
        type:
          type: integer
          format: int32
        length:
          type: integer
          format: int32
    TextUnit:
      allOf:
      - $ref: "#/components/schemas/LectureUnit"
      - type: object
        properties:
          lecture:
            $ref: "#/components/schemas/Lecture"
          content:
            type: string
    TutorParticipation:
      type: object
      properties:
        id:
          type: integer
          format: int64
        status:
          type: string
          enum:
          - NOT_PARTICIPATED
          - REVIEWED_INSTRUCTIONS
          - TRAINED
          - COMPLETED
        tutor:
          $ref: "#/components/schemas/User"
    TutorialGroup:
      type: object
      properties:
        id:
          type: integer
          format: int64
        course:
          $ref: "#/components/schemas/Course"
        title:
          type: string
          maxLength: 19
          minLength: 1
        additionalInformation:
          type: string
        capacity:
          type: integer
          format: int32
          minimum: 1
        isOnline:
          type: boolean
        campus:
          type: string
          maxLength: 256
          minLength: 1
        language:
          type: string
          maxLength: 256
          minLength: 1
        teachingAssistant:
          $ref: "#/components/schemas/User"
        registrations:
          type: array
          items:
            $ref: "#/components/schemas/TutorialGroupRegistration"
          uniqueItems: true
        isUserRegistered:
          type: boolean
        isUserTutor:
          type: boolean
        numberOfRegisteredUsers:
          type: integer
          format: int32
        teachingAssistantName:
          type: string
        teachingAssistantId:
          type: integer
          format: int64
        teachingAssistantImageUrl:
          type: string
        courseTitle:
          type: string
        nextSession:
          $ref: "#/components/schemas/TutorialGroupSession"
        channel:
          $ref: "#/components/schemas/ChannelDTO"
        averageAttendance:
          type: integer
          format: int32
        tutorialGroupSchedule:
          $ref: "#/components/schemas/TutorialGroupSchedule"
        tutorialGroupSessions:
          type: array
          items:
            $ref: "#/components/schemas/TutorialGroupSession"
          uniqueItems: true
      required:
      - isOnline
      - title
    TutorialGroupFreePeriod:
      type: object
      properties:
        id:
          type: integer
          format: int64
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        reason:
          type: string
          maxLength: 256
          minLength: 1
    TutorialGroupRegistration:
      type: object
      properties:
        id:
          type: integer
          format: int64
        tutorialGroup:
          $ref: "#/components/schemas/TutorialGroup"
        type:
          type: string
          enum:
          - SELF_REGISTRATION
          - INSTRUCTOR_REGISTRATION
      required:
      - tutorialGroup
    TutorialGroupSchedule:
      type: object
      properties:
        id:
          type: integer
          format: int64
        tutorialGroup:
          $ref: "#/components/schemas/TutorialGroup"
        dayOfWeek:
          type: integer
          format: int32
        startTime:
          type: string
        endTime:
          type: string
        repetitionFrequency:
          type: integer
          format: int32
        validFromInclusive:
          type: string
        validToInclusive:
          type: string
        location:
          type: string
          maxLength: 2000
          minLength: 0
        tutorialGroupSessions:
          type: array
          items:
            $ref: "#/components/schemas/TutorialGroupSession"
    TutorialGroupSession:
      type: object
      properties:
        id:
          type: integer
          format: int64
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        status:
          type: string
          enum:
          - ACTIVE
          - CANCELLED
        statusExplanation:
          type: string
          maxLength: 256
          minLength: 1
        location:
          type: string
          maxLength: 2000
          minLength: 0
        attendanceCount:
          type: integer
          format: int32
          maximum: 3000
          minimum: 0
        tutorialGroupSchedule:
          $ref: "#/components/schemas/TutorialGroupSchedule"
        tutorialGroupFreePeriod:
          $ref: "#/components/schemas/TutorialGroupFreePeriod"
        tutorialGroup:
          $ref: "#/components/schemas/TutorialGroup"
    TutorialGroupUpdateDTO:
      type: object
      properties:
        tutorialGroup:
          $ref: "#/components/schemas/TutorialGroup"
        notificationText:
          type: string
          maxLength: 1000
          minLength: 1
        updateTutorialGroupChannelName:
          type: boolean
      required:
      - tutorialGroup
    TutorialGroupsConfiguration:
      type: object
      properties:
        id:
          type: integer
          format: int64
        tutorialPeriodStartInclusive:
          type: string
        tutorialPeriodEndInclusive:
          type: string
        useTutorialGroupChannels:
          type: boolean
        usePublicTutorialGroupChannels:
          type: boolean
        tutorialGroupFreePeriods:
          type: array
          items:
            $ref: "#/components/schemas/TutorialGroupFreePeriod"
          uniqueItems: true
      required:
      - tutorialPeriodEndInclusive
      - tutorialPeriodStartInclusive
      - usePublicTutorialGroupChannels
      - useTutorialGroupChannels
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdDate:
          type: string
          format: date-time
        login:
          type: string
          maxLength: 50
          minLength: 4
          pattern: "^[_'.@A-Za-z0-9-]*$"
        firstName:
          type: string
          maxLength: 50
          minLength: 0
        lastName:
          type: string
          maxLength: 50
          minLength: 0
        email:
          type: string
          maxLength: 100
          minLength: 0
        activated:
          type: boolean
        deleted:
          type: boolean
        langKey:
          type: string
          maxLength: 6
          minLength: 2
        imageUrl:
          type: string
          maxLength: 256
          minLength: 0
        resetDate:
          type: string
          format: date-time
        internal:
          type: boolean
        groups:
          type: array
          items:
            type: string
          uniqueItems: true
        authorities:
          type: array
          items:
            $ref: "#/components/schemas/Authority"
          uniqueItems: true
        organizations:
          type: array
          items:
            $ref: "#/components/schemas/Organization"
          uniqueItems: true
        tutorialGroupRegistrations:
          type: array
          items:
            $ref: "#/components/schemas/TutorialGroupRegistration"
          uniqueItems: true
        learnerProfile:
          $ref: "#/components/schemas/LearnerProfile"
        name:
          type: string
        participantIdentifier:
          type: string
        visibleRegistrationNumber:
          type: string
        externalLLMUsageAcceptedTimestamp:
          type: string
          format: date-time
      required:
      - activated
      - deleted
      - login
    VideoUnit:
      allOf:
      - $ref: "#/components/schemas/LectureUnit"
      - type: object
        properties:
          lecture:
            $ref: "#/components/schemas/Lecture"
          description:
            type: string
          source:
            type: string
    Windfile:
      type: object
      properties:
        api:
          type: string
        metadata:
          $ref: "#/components/schemas/WindfileMetadata"
        actions:
          type: array
          items:
            $ref: "#/components/schemas/Action"
        repositories:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/AeolusRepository"
    WindfileMetadata:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
        description:
          type: string
        author:
          type: string
        gitCredentials:
          type: string
        docker:
          $ref: "#/components/schemas/DockerConfig"
        resultHook:
          type: string
        resultHookCredentials:
          type: string
    LocalTime:
      type: object
      properties:
        hour:
          type: integer
          format: int32
        minute:
          type: integer
          format: int32
        second:
          type: integer
          format: int32
        nano:
          type: integer
          format: int32
    TutorialGroupSessionDTO:
      type: object
      properties:
        date:
          type: string
          format: date
        startTime:
          $ref: "#/components/schemas/LocalTime"
        endTime:
          $ref: "#/components/schemas/LocalTime"
        location:
          type: string
          maxLength: 2000
          minLength: 1
      required:
      - date
      - endTime
      - startTime
    TutorialGroupFreePeriodDTO:
      type: object
      properties:
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        reason:
          type: string
      required:
      - endDate
      - startDate
    TutorialGroupStatusDTO:
      type: object
      properties:
        status_explanation:
          type: string
    StudentDTO:
      type: object
      properties:
        login:
          type: string
          maxLength: 50
          minLength: 0
        firstName:
          type: string
          maxLength: 50
          minLength: 0
        lastName:
          type: string
          maxLength: 50
          minLength: 0
        registrationNumber:
          type: string
          maxLength: 10
          minLength: 0
        email:
          type: string
          maxLength: 100
          minLength: 0
    TutorialGroupRegistrationImportDTO:
      type: object
      properties:
        title:
          type: string
        student:
          $ref: "#/components/schemas/StudentDTO"
        importSuccessful:
          type: boolean
        error:
          type: string
          enum:
          - NO_TITLE
          - NO_USER_FOUND
          - MULTIPLE_REGISTRATIONS
        campus:
          type: string
        capacity:
          type: integer
          format: int32
        language:
          type: string
        additionalInformation:
          type: string
        isOnline:
          type: boolean
