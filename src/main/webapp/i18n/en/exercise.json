{
    "artemisApp": {
        "exercise": {
            "home": {
                "title": "Exercises",
                "createLabel": "Create a new Exercise"
            },
            "details": "Exercise details",
            "addCriterion": "Add a Grading Criterion",
            "resultsPerPage": "{{number}} results per page",
            "showAllResults": "Show all results",
            "searchForStudents": "Search for students by login or name (comma separated)",
            "searchForTeams": "Search for teams by (short) name or for students by login/name (comma separated)",
            "created": "Created new Exercise with identifier {{ param }}",
            "updated": "Updated Exercise with identifier {{ param }}",
            "deleted": "Deleted Exercise with identifier {{ param }}",
            "delete": {
                "question": "Are you sure you want to permanently delete the exercise <strong>{{ title }}</strong>? This action can NOT be undone!",
                "typeNameToConfirm": "Please type in the name of the exercise to confirm."
            },
            "reset": {
                "question": "Are you sure you want to reset the exercise <strong>{{ title }}</strong>? This action can NOT be undone!"
            },
            "detail": {
                "title": "Exercise"
            },
            "import": {
                "attention": "Attention! ",
                "markdownWarning": "You can edit the problem statement after importing the exercise.",
                "embeddedFilesWarning": "All embedded files are available in the problem statement after the import.",
                "search": "Search for exercise",
                "loading": "Loading...",
                "searchInCourses": "Search in courses?",
                "searchInExams": "Search in exams?",
                "table": {
                    "title": "Title",
                    "language": "Language",
                    "course": "Course",
                    "exam": "Exam",
                    "examQuestion": "Exam Question",
                    "doImport": "Import"
                },
                "tabTitle": "From instance"
            },
            "importFromFile": {
                "tabTitle": "From file",
                "notSupportedExerciseType": "The exercise type {{ exerciseType }} is not supported for importing from file."
            },
            "exercise": "Exercise",
            "results": "Results",
            "actions": "Actions",
            "notStarted": "You have not started this exercise yet.",
            "problemStatement": "Problem Statement",
            "emptyProblemStatement": "(No problem statement)",
            "instructions": "Instructions",
            "exampleSolution": "Example Solution",
            "emptyExampleSolution": "(No example solution)",
            "exampleSolutionPublicationDateError": "For graded exercises, Example Solution Publication Date must be after Release, Start and Due Date if set. Please check your selection again",
            "exampleSolutionPublicationDateWarning": "Example Solution Publication Date is before Due Date!",
            "assessmentCriterion": "Assessment Criterion",
            "assessmentInstructions": "Assessment Instructions",
            "assessmentInstruction": "Assessment Instruction: ",
            "structuredAssessmentInstructions": "Structured Assessment Instructions",
            "addAssessmentCriterion": "Add assessment criterion",
            "deleteAssessmentCriterion": "Delete this criterion",
            "resetAssessmentCriterionTitle": "Reset assessment criterion title",
            "resetAssessmentInstruction": "Reset assessment instruction",
            "deleteAssessmentInstruction": "Delete assessment instruction",
            "addAssessmentInstruction": "Add new assessment instruction",
            "limit": "Limit",
            "usageCountHint": "This number specifies how many times the score of this instruction may be included in the final score.",
            "creditsHint": "This number specifies the score for this instruction.",
            "gradingScaleHint": "The scale describes the performance level for the instruction. Some examples are: excellent, good, average, poor.",
            "descriptionHint": "The description of a particular performance level may include additional notes about when to apply this instruction.",
            "feedbackHint": "Feedback is an explanatory text for the students in order to better understand their performance level.",
            "dragDropInstruction": "Drag & Drop the assessment instruction to feedback element",
            "gradingScale": "Scale",
            "instructionDescription": "Description",
            "credits": "Credits",
            "feedback": "Feedback",
            "editText": "Edit as Text",
            "title": "Title",
            "shortName": "Short Name",
            "release": "Release",
            "releaseDate": "Release Date",
            "start": "Start",
            "startDate": "Start Date",
            "due": "Due",
            "dueDate": "Due Date",
            "dueDateError": "Due Date must be after Release Date and Start Date if present. Please check your selection again.",
            "startDateError": "Start Date must be after Release Date. Please check your selection again.",
            "assessmentDue": "Assessment Due",
            "assessmentDueDate": "Assessment Due Date",
            "assessmentDueDateError": "Assessment Due Date must be after Release, Start and Due Date. Please check your selection again.",
            "noReleaseDateWarning": "You have not defined a release date for this exercise, this means that it will be immediately published and made visible to the students. But they can only participate after the currently defined start date.",
            "noReleaseAndStartDateWarning": "You have not defined a release and start date for this exercise, this means that it will be immediately published and students can participate in the exercise.",
            "dateNotSet": "No date set",
            "exampleSolutionPublicationDate": "Example Solution Publication Date",
            "points": "Points",
            "pointsError": "Must be a number between 1 and 9999.",
            "bonusPoints": "Bonus Points",
            "bonusPointsError": "Must be a number between 0 and 9999.",
            "includedInOverallScoreCourseLabel": "Include this exercise in the course score calculation",
            "includedInOverallScoreExamLabel": "Include this exercise in the exam score calculation",
            "includedInOverallScore": "Included in Score",
            "includedCompletely": "Included",
            "categoriesTooltip": "You can define up to two categories per exercise (Enter category and press ENTER). You are free in defining them, though it might be best to use them consistently. They will be visible to students.",
            "includedCompletelyTooltip": "All points and bonus points earned in this exercise count towards your course/exam score!",
            "includedAsBonus": "Bonus",
            "includedAsBonusTooltip": "All points earned in this exercise count towards your course/exam score as bonus points!",
            "notIncluded": "Optional",
            "notIncludedTooltip": "No points earned in this exercise count towards your course/exam score!",
            "yes": "Yes",
            "bonus": "Bonus",
            "no": "No",
            "difficulty": "Difficulty",
            "noLevel": "No Level",
            "easy": "Easy",
            "medium": "Medium",
            "hard": "Hard",
            "mode": "Mode",
            "modeTooltip": "The solving mode of an exercise determines whether students work alone or in teams. NOTE: This cannot be changed later on!",
            "modes": {
                "individual": "Individual",
                "team": "Team"
            },
            "teamAssignmentConfig": {
                "teamSize": "Team Size",
                "teamSizeTooltip": "Recommendation for tutors regarding the minimum and maximum number of students per team.",
                "participants": "Participants"
            },
            "categories": "Categories",
            "noCategory": "No Category",
            "participation": "Participation",
            "participations": "Participations",
            "submissions": "Submissions",
            "teams": "Teams",
            "export": {
                "options": "Export Options:",
                "names": "Export Names",
                "results": {
                    "title": "Export Results",
                    "withoutTestCases": "Without test cases",
                    "withTestCases": "With test cases",
                    "withTestCasesAndFeedback": "With test cases<br />and feedback",
                    "withTestCasesTooltip": "This will include additional information about passed and failed test cases for each result entry.",
                    "withTestCasesAndFeedbackTooltip": "This will include information about test cases and a copy of the provided feedback for failed test cases.",
                    "emptyError": "{{ exercise }}: No results found"
                }
            },
            "refresh": "Refresh",
            "course": "Course",
            "type": "Type",
            "mcqType": "Multiple Choice Question",
            "dndType": "Drag and Drop Question",
            "personalRepositoryClone": "Your personal repository has been set up. Click the button <i>Clone repository</i>!",
            "personalRepositoryOnline": "Your personal repository has been set up. Click the button <i>Open code editor</i>!",
            "resumeProgrammingExercise": "The exercise has been resumed. You can now continue working on the exercise!",
            "feedbackRequestSent": "Your feedback request has been sent.",
            "feedbackRequestAlreadySent": "Your feedback request has already been sent.",
            "lockRepositoryWarning": "Your repository will be locked. You can only continue working after a tutor has answered your feedback request.",
            "startError": "<strong>Uh oh! Something went wrong... Please try again to start the exercise in a few minutes.</strong>",
            "name": "Name",
            "studentId": "Login",
            "teamShortName": "Short Name",
            "completionDate": "Completion Date",
            "lastResult": "Last Result",
            "submissionCount": "Submissions",
            "score": "Points",
            "duration": "Duration",
            "scoresFilter": "Filter: {{ filter }}",
            "showBuildFailed": "Build Failed",
            "showUnsuccessful": "Unsuccessful",
            "showSuccessful": "Successful",
            "showManual": "Manual",
            "showAutomatic": "Automatic",
            "showLocked": "Locked Assessments",
            "showAll": "All",
            "showFailed": "Show Latest Submission without Result",
            "showNoSubmissions": "Show No Submissions",
            "showNoPracticeMode": "Show only graded participations",
            "showingOnlyInRange": "Showing only results in range: {{ range }}",
            "showingOfResults": "Showing {{ filtered }} of {{ total }} ({{ percent }}%) scores",
            "tagPlaceholder": "+ Category",
            "isProgramming": "This is a programming exercise",
            "isModeling": "This is a modeling exercise",
            "isQuiz": "This is a quiz exercise",
            "isText": "This is a text exercise",
            "isFileUpload": "This is a file upload exercise",
            "notificationText": "Optional: Notification about changes",
            "submissionSuccessful": "The submission was successful",
            "submissionUnsuccessful": "The submission was unsuccessful",
            "lateSubmissionResultReceived": "Artemis received an ungraded result for a late submission, please scroll down to see the score in the result history.",
            "resultCreationSuccessful": "The result was created successfully",
            "resultCreationUnsuccessful": "The result could not be created",
            "presentationScoreEnabled": {
                "title": "Presentation",
                "description": "If the presentation score is enabled, tutors can enter points for students on the \"Participation\" page of the exercise."
            },
            "errors": {
                "exerciseNotFound": "This exercise was not found"
            },
            "form": {
                "title": {
                    "undefined": "There has to be a title set!",
                    "pattern": "The title must only consist of alphanumeric characters and '_', '-' or whitespaces!"
                },
                "channelName": {
                    "empty": "There has to be a channel name set!"
                },
                "shortName": {
                    "undefined": "There has to be a short name set!",
                    "pattern": "The short name must begin with a letter and must not contain any special characters!",
                    "minlength": "The short name must be at least 3 characters long!"
                },
                "packageName": {
                    "undefined": "There has to be a package name set!",
                    "pattern": {
                        "JAVA": "The package name must consist of one or more valid Java identifiers separated by '.', e.g. \"net.java\"!",
                        "KOTLIN": "The package name must consist of one or more valid Kotlin identifiers separated by '.', e.g. \"net.kotlin\"!",
                        "SWIFT": "The package name must consist of one or more valid Swift identifiers without any separator, e.g. \"SwiftEx\"!",
                        "JAVA_BLACKBOX": "The package name must be a valid Java identifier. In addition, no dots are allowed in the package name of DejaGnu projects"
                    }
                },
                "points": {
                    "undefined": "There has to be a value for the points set!",
                    "customMin": "The number of points must be at least 1!",
                    "customMax": "The number of points may not exceed 9999!"
                },
                "bonusPoints": {
                    "undefined": "There has to be a value for the bonus points set!",
                    "customMin": "The number of bonus points must be at least 0!",
                    "customMax": "The number of bonus points may not exceed 9999!"
                },
                "maxPenalty": {
                    "pattern": "The maximum penalty must be between 0 and 100 percent!"
                }
            },
            "exam": "Exam",
            "isTeamExercise": "This is a team exercise.",
            "update": {
                "warning": {
                    "warning": "Warning: These changes could cause problems",
                    "saveExerciseWithoutReevaluation": "Save without re-evaluation",
                    "problems": "To avoid inconsistencies between existing feedback and future feedback that is associated to affected grading instruction, the exercise has to be re-evaluated. This includes the recalculation of the results.",
                    "instructionDeleted": "Grading instruction deleted",
                    "creditChanged": "Grading instruction credit changed",
                    "usageCountChanged": "Grading instruction usage count changed",
                    "confirmText": "Do you want to save these changes or change them?",
                    "reevaluateExercise": "Save with Re-evaluation",
                    "deleteFeedback": "Additionally delete all corresponding feedback that is associated with the deleted Grading Instruction.",
                    "information": "If you do not want to trigger a re-evaluation, we can not guarantee the consistency of feedback associated to this grading instruction."
                }
            },
            "isUsedForTutorial": "Tutor needs to review",
            "action": "Action",
            "exerciseAssessmentDashboard": "Assessment Dashboard"
        }
    }
}
