{
    "error": {
        "title": "Error page!",
        "http": {
            "400": "Bad request.",
            "401": "You are not authenticated to access this page.",
            "403": "You are not authorized to access this page.",
            "404": "The page does not exist.",
            "405": "The HTTP verb you used is not supported for this URL.",
            "409": "There was a conflict while processing your request.",
            "500": "Internal server error."
        },
        "cannotDeleteYourself": "You cannot delete your own account!",
        "fileUploadSavingError": "Error! The upload failed. Make sure you are connected to the Internet!",
        "concurrencyFailure": "Another user modified this data at the same time as you. Your changes were rejected.",
        "validation": "Validation error on the server.",
        "resultStringNull": "Error! Result Text is required.",
        "resultStringTooLong": "Error! Result Text is too long (max. 255 characters)",
        "scoreNull": "Error! Score is required.",
        "resultNotRated": "Error! Result must be rated.",
        "submissionMissing": "Error! The submission is not connected with the result anymore. Your changes were rejected.",
        "resultAlreadyExists": "A result already exists for this student in this exercise.",
        "scoreAndSuccessfulNotMatching": "Error! Only a result with a score of 100% can be successful.",
        "feedbackDetailTextNull": "Error! If feedback is present, it must contain feedback detail text.",
        "quizAlreadyVisible": "The quiz is already visible.",
        "quizAlreadyStarted": "The quiz has already been started.",
        "quizNotEndedYet": "The quiz has not ended yet.",
        "quizAlreadyOpenForPractice": "The quiz is already open for practice.",
        "unknownAction": "This action cannot be performed.",
        "groupNotFound": "The group you entered was not found.",
        "studentNotFound": "That student could not be found in this course.",
        "noLegalDocumentFile": "The requested document was not found.",
        "emptyLegalDocument": "The privacy statement or the imprint must not be empty.",
        "cantSaveFile": "The uploaded file {{ fileName }} could not be saved.",
        "emptyFile": "The uploaded file {{ fileName }} is empty. Please check the file and try again.",
        "externalSubmissionBeforeDueDate": "External submissions are not supported before the exercise due date.",
        "externalSubmissionForQuizExercise": "External submissions are not supported for Quiz exercises.",
        "noSubmissions": "No existing user was specified or no submission exists.",
        "feedbackCreditsNull": "Error! If feedback is present, all elements must contain points.",
        "invalidGradeStepFormat": "One or more grade steps are not following the correct format. Click on the \"?\" for more information.",
        "examExerciseNotIncludedInScore": "An exam exercise must be included in the score!",
        "invalidGradeStepAdjacency": "The grade steps don't map to a valid grading key. Click on the \"?\" for more information.",
        "emptyGradeSteps": "Grade steps can't be empty. Click on the \"?\" for more information.",
        "textSubmissionTooLong": "Text submissions can not be longer than 30,000 characters.",
        "programmingExercisePolicyPresent": "The submission policy could not be added to the programming exercise, because it already has a submission policy.",
        "submissionPolicyHasId": "The submission policy could not be added to the programming exercise, because it already has an id.",
        "programmingExercisePolicyNotPresent": "The submission policy could not be removed from the programming exercise, because it does not have a submission policy.",
        "submissionPolicyAlreadyEnabled": "The submission policy could not be enabled, because it is already active.",
        "submissionPolicyAlreadyDisabled": "The submission policy could not be disabled, because it is already inactive.",
        "submissionPolicyToggleFailedPolicyNotExist": "The submission policy could not be toggled, because the programming exercise does not have a submission policy.",
        "submissionPolicyActiveNull": "Submission policies must be activated or deactivated. Activation cannot be null.",
        "submissionPolicyUpdateFailedPolicyNotExist": "The submission policy could not be updated, because the programming exercise does not have a submission policy.",
        "oneActivePlagiarismCheck": "Please wait until the current plagiarism check in this course has finished until you start another one.",
        "internalServerError": "Internal server error",
        "server.not.reachable": "Server not reachable",
        "url.not.found": "Not found",
        "NotNull": "Field {{ fieldName }} cannot be empty!",
        "size": "Field {{ fieldName }} does not meet min/max size requirements!",
        "userExists": "Login name already in use!",
        "emailExists": "Email is already in use!",
        "idExists": "A new {{ entityName }} cannot already have an ID",
        "ambiguousContext": "A new {{entityName}} must have an unambiguous context",
        "invalid": {
            "template": {
                "build.plan.id": "The Template Build Plan ID seems to be invalid. Please make sure it exists and is accessible for Artemis.",
                "repository.url": "The Template Repository URL seems to be invalid. Please make sure it exists and is accessible for Artemis."
            },
            "solution": {
                "build.plan.id": "The Solution Build Plan ID seems to be invalid. Please make sure it exists and is accessible for Artemis.",
                "repository.url": "The Solution Repository URL seems to be invalid. Please make sure it exists and is accessible for Artemis."
            },
            "auxiliary.repository": {
                "id": "The Auxiliary Repository ID seems to be set. Please make sure it does not exist, because it is set by Artemis.",
                "name": "At least one Auxiliary Repository name is invalid or duplicated. Please make sure all names are appropriate and do not contain duplications.",
                "checkout.directory": "At least one Auxiliary Repository checkout directory is invalid or duplicated. Please make sure all checkout directories are appropriate and do not contain duplications.",
                "description": "The description of at least one Auxiliary Repository is longer than {{maxLength}} allowed characters!"
            },
            "testcases.weights": "Before deactivating manual feedback, please give at least one test case a weight greater than zero.",
            "page.request": "The page request seems to be invalid. Please make sure that enough {{entityName}} entities exist, so that the request page can be created.",
            "presentations": {
                "maxNumberOfPresentationsExceeded": "{{name}} already gave the maximum number of {{presentationsNumber}} presentation/s."
            }
        },
        "idNull": "Invalid ID",
        "unexpectedError": "An unexpected error occurred: {{error}}",
        "manualCodeHintOperation": "This endpoint does not allow to change code hints manually.",
        "exerciseNotDefined": "The exercise is not defined.",
        "exerciseIdMismatch": "The exercise ids do not match.",
        "solutionEntryError": "An error occurred while retrieving the extracted tasks from the problem statement.",
        "systemNotificationNeedsBothDates": "Both notification date and expiration date must be set.",
        "systemNotificationNeedsNotificationBeforeExpiration": "The expiration date must be after the notification date.",
        "ltiNotSupported": "LTI is not supported on this Artemis instance",
        "exportFailed": "Exercise export failed"
    }
}
