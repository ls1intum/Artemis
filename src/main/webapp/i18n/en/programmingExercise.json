{
    "artemisApp": {
        "programmingExercise": {
            "home": {
                "title": "Programming Exercises",
                "createLabel": "Create new Programming Exercise",
                "editLabel": "Edit Programming Exercise",
                "importLabel": "Import Programming Exercise",
                "linkLabel": "Link new Programming Exercise",
                "generateLabel": "Generate new Programming Exercise",
                "createOrEditLabel": "Create or edit a Programming Exercise"
            },
            "created": "Created new Programming Exercise with title {{ param }}",
            "updated": "Updated Programming Exercise with title {{ param }}",
            "deleted": "Deleted Programming Exercise with title {{ param }}",
            "delete": {
                "question": "Are you sure you want to delete the Programming Exercise <strong>{{ title }}</strong>?",
                "studentReposBuildPlans": "Additionally delete all student repositories and student build plans (Be careful: this can NOT be undone!). Before you activate this option, we recommend that you archive the exercise first!",
                "studentRepos": "Additionally delete all student repositories (Be careful: this can NOT be undone!). Before you activate this option, we recommend that you archive the exercise first!",
                "baseReposBuildPlans": "Additionally delete template, solution, test, and auxiliary repos and build plans (Be careful: this can NOT be undone!). Before you activate this option, we recommend that you back up these build plans and repos first!"
            },
            "cleanup": {
                "successMessage": "Cleanup was successful. All build plans have been deleted. Students may resume participating.",
                "successMessageWithRepositories": "Cleanup was successful. All build plans and repositories have been deleted. All participation has been marked as Finished."
            },
            "reset": {
                "question": "Are you sure you want to reset the exercise <strong>{{ title }}</strong>? This action can NOT be undone! <br> This means that all participation, existing results, student repositories and student build plans will be deleted."
            },
            "detail": {
                "title": "Programming Exercise",
                "showTemplateSubmissions": "Show Template Submissions",
                "showSolutionSubmissions": "Show Solution Submissions"
            },
            "noReleaseDateWarning": "You have not defined a release date for this exercise, this means that it will be immediately published and made visible to the students.",
            "unsavedChangesLanguageChange": "The problem statement still contains unsaved changes. Do you really want to change the programming language?",
            "unsavedChangesProjectTypeChange": "The problem statement still contains unsaved changes. Do you really want to change the project type?",
            "templateRepositoryUrl": "Template Repository Url",
            "testRepositoryUrl": "Test Repository Url",
            "solutionRepositoryUrl": "Solution Repository Url",
            "auxiliaryRepositories": "Auxiliary Repositories",
            "noCheckoutDirectorySet": "No checkout directory was set.",
            "noCheckoutDirectorySetTooltip": "Since no checkout directory was specified, the repository was not automatically added to a build plan.",
            "templateBuildPlanId": "Template Build Plan Id",
            "solutionBuildPlanId": "Solution Build Plan Id",
            "repositories": "Repositories",
            "buildplans": "Build Plans",
            "publishBuildPlanUrl": "Publish Build Plan",
            "allowOnlineEditor": {
                "title": "Allow Online Editor",
                "alert": "At least one option (Offline IDE or Online Editor) must be selected"
            },
            "onlineEditor": "Online Editor",
            "allowOfflineIde": {
                "title": "Allow Offline IDE",
                "alert": "At least one option (Offline IDE or Online Editor) must be selected"
            },
            "offlineIde": "Offline IDE",
            "showTestNamesToStudents": "Show Test Names to Students",
            "showTestNamesToStudentsTooltip": "Activate this option to show the names of the automated test cases to the students. Leave the option disabled to make no visual distinction between manual and automated feedback for the students.",
            "participationMode": "Participation Mode",
            "noVersionControlAndContinuousIntegrationAvailable": "Setup without connection to the VCS and CI",
            "sequentialTestRuns": {
                "title": "Sequential Test Runs",
                "description": "Activate to run structural tests first, and then behavior tests afterwards. Does not support static code analysis. This feature can help students to better concentrate on the immediate challenge at hand. If activated, you will be provided with more information in a readme file within the test repository. ATTENTION: Can not be changed after creation!"
            },
            "checkoutSolutionRepository": {
                "title": "Check out repository of sample solution",
                "description": "Activate this option to checkout the solution repository into the 'solution' path. This is useful for comparing the student's submission with the sample solution."
            },
            "enableStaticCodeAnalysis": {
                "title": "Enable Static Code Analysis",
                "description": "This option enables the execution of static code analysis. Sequential test runs are not supported. Additional options are available on the grading page. This option can be changed on import if the recreate build plans and update template files option is active."
            },
            "maxStaticCodeAnalysisPenalty": {
                "title": "Max Static Code Analysis Penalty",
                "description": "You can choose a value between 0 and 100 percent or leave the field empty. If the maximum penalty is 20% for a 10 point exercise, a maximum of two points can be deducted because of issues found by static code analysis. If the field is left empty, no penalty limit will be enforced."
            },
            "recreateBuildPlans": {
                "title": "Recreate Build Plans",
                "warning": "Build plans will be recreated. All previous changes will be overwritten!",
                "description": "Activate this option to create new build plans instead of copying them from the imported exercise. Newly created build plans support the latest features of the Artemis exercise templates by default."
            },
            "updateTemplate": {
                "title": "Update Template",
                "description": "Activate this option to update the template files in the repositories. This can be useful if the imported exercise is old and contains outdated dependencies. For Java, Artemis replaces JUnit4 by Ares (which includes JUnit5) and updates the dependencies and plugins with the versions found in the latest template. Afterwards you might need to adapt the test cases."
            },
            "programmingLanguage": "Programming Language",
            "projectType": "Project Type",
            "packageName": "Package Name",
            "appName": "App Name",
            "templateResult": "Template Result",
            "solutionResult": "Solution Result",
            "structureTestOracle": "Update Structure Test Oracle",
            "structureTestOracleWarning": "This action extracts all structural tests from the test repository and saves them in the test.json file. ATTENTION: All uncommitted changes from the online editor will be lost!",
            "combineTemplateCommits": "Combine Template Commits",
            "checkPlagiarism": "Check Plagiarism",
            "checkPlagiarismSuccess": "Plagiarism check finished. Results are included in the zip file.",
            "combineTemplateCommitsWarning": "This action combines all commits in the template repository into one commit. ATTENTION: All uncommitted changes from the online editor will be lost!",
            "combineTemplateCommitsError": "Template repository commits could not be combined.",
            "combineTemplateCommitsSuccess": "Template repository commits have been successfully combined.",
            "editable": {
                "unsaved": "Unsaved.",
                "unsavedTooltip": "There are unsaved changes in the problem statement.",
                "saving": "Saving...",
                "savingTooltip": "Saving your unsaved changes in the problem statement.",
                "saved": "Saved.",
                "savedTooltip": "The problem statement is saved."
            },
            "problemStatement": {
                "title": "Problem Statement",
                "taskCommand": "Task",
                "testCaseCommand": "Insert Test Case",
                "exerciseHintCommand": "Add task specific hint"
            },
            "status": {
                "solutionFailsTest": "The Solution Repository does not fulfill one or more test cases. This could indicate an issue with the Solution Repository or the test cases.",
                "templateFulfillsTest": "The Template Repository already fulfills one or more test cases. This could indicate an issue with the Template Repository or the test cases."
            },
            "testCaseAnalysis": {
                "invalidTestCases": "There are {{number}} test cases that were found in the problem statement markdown, but are not valid test cases in the test repository of this exercise:",
                "missingTestCases": "There are {{number}} valid test cases in your test repository that were not found in the markdown of the problem statement:",
                "issues": "Test case issues.",
                "ok": "Test cases ok.",
                "invalidTestCase": "The test case '{{id}}' could not be found in the test repository."
            },
            "hintsAnalysis": {
                "invalidHints": "There are {{number}} hints that were found in the problem statement markdown but couldn't be found in the database or are not assigned to this programming exercise:",
                "issues": "Hints issues.",
                "ok": "Hints ok.",
                "invalidHint": "The hint with id '{{id}}' could not be found in the database for this programming exercise."
            },
            "configureGrading": {
                "title": "Configure Grading",
                "shortTitle": "Grading",
                "save": "Save",
                "reset": "Reset",
                "status": {
                    "unsavedChanges": "Unsaved changes",
                    "unsavedTestCaseChanges": "Unsaved test cases",
                    "unsavedCategoryChanges": "Unsaved categories",
                    "noUnsavedChanges": "No unsaved changes"
                },
                "testCases": {
                    "title": "Test Cases",
                    "resetSuccessful": "The tests were reset successfully.",
                    "resetFailed": "The tests could not be reset.",
                    "updated": "The test cases were updated successfully.",
                    "couldNotBeUpdated": "The following test cases could not be updated: {{testCases}}.",
                    "weightSumError": "The sum of all test case weights is 0 or below. Please adjust at least one test case weight to be greater than 0",
                    "showInactive": "Show inactive test cases",
                    "settingNull": "Test case {{testCase}} must not have settings that are empty.",
                    "settingNegative": "Test case {{testCase}} must not have settings set to negative values."
                },
                "categories": {
                    "title": "Code Analysis Categories",
                    "notGraded": "Not graded.",
                    "noFeedback": "No visible feedback.",
                    "updated": "The categories were updated successfully.",
                    "couldNotBeUpdated": "The following categories could not be updated: {{categories}}.",
                    "resetSuccessful": "The categories were reset successfully.",
                    "resetFailed": "The categories could not be reset."
                },
                "charts": {
                    "title": "Charts",
                    "preview": "Preview",
                    "testCaseWeights": {
                        "title": "Weight Distribution",
                        "description": "The distribution of test case weights in the exercise. This shows how much impact any test case has on the overall score of a student. The first bar accounts just for the weight, and the second bar also includes the bonus points given for a test case.<br/>Hover over a colored block to see more details.",
                        "weight": "Weight",
                        "weightTooltip": "Weight: {{ percentage }}% of all weights.",
                        "weightAndBonus": "Weight & Bonus",
                        "weightAndBonusTooltip": "Weight & Bonus: {{ percentage }}% of all weights and bonuses."
                    },
                    "testCasePoints": {
                        "title": "Total Points",
                        "description": "The percentage of points given to students according to a specific test case. 100% in the chart represents full scores (100%) of <b>all</b> students. This chart only shows the positive points achieved by passing test cases and hides potential negative points of code quality penalties.<br/>Hover over a colored block to see more details.",
                        "points": "Points",
                        "pointsTooltip": "Points: {{ percentage }}% of all exercise points."
                    },
                    "categoryDistribution": {
                        "title": "Category Distribution",
                        "description": "The distribution of categories across the metrics 'Penalty', 'Issues' and 'Points'. This shows how much each category accounts for in each of the three metrics.<br/>The <b>Penalty</b> bar shows the distribution of penalties across the categories.<br/>The <b>Issues</b> bar shows how many issues were detected in each respective category.<br/>The <b>Points</b> bar indicates how many points were actually deducted in each respective category, based on the information in the first two bars. Hover over a colored block to see the category details."
                    }
                },
                "help": {
                    "state": "Determines whether issues in this category should be shown to the students and used for grading.",
                    "penalty": "Penalty points given on each detected issue of this category.",
                    "maxPenalty": "Maximum applied penalty for one student across all issues of this category.",
                    "detectedIssues": "Shows the number of students grouped by amount of detected issues in a category, starting at 1 issue. The bars turn red when surpassing the threshold defined by the maxPenalty of the respective category.",
                    "weight": "The weighting of a test case determines the points a student receives for passing the test case. The number of points a test case awards is proportional to its weight and calculated as a fraction of the total exercise points.",
                    "bonusMultiplier": "This multiplies the points given for passing a test case without affecting the fractions of other test cases. Multipliers greater than 1 can result in student scores greater than 100%.",
                    "bonusPoints": "Bonus points added on top of the regular points for passing a test case. Setting bonus points can result in student scores greater than 100%.",
                    "visibility": "Feedback and points for test cases marked as ‘After Due Date’ only become visible to students after the due date has passed. Tests with visibility ‘Never’ do not influence the student score."
                },
                "updatedGradingConfigShort": "Updated grading",
                "updatedGradingConfig": "Warning: You have updated the exercise's grading configuration, but you have not triggered all student submissions with the new grading. Newly created results will be graded with the new configuration, existing results will not be changed. If you don't trigger all student submissions, the results across your students might be inconsistent. You can still trigger the student submissions at a later point. Do you really want to leave the area?",
                "updatedGradingConfigTooltip": "You have updated the grading configuration, but this will have no effect on existing results. Newly created results will be graded with the new configuration, existing results will not be changed. If you don't trigger all student submissions after the grading updates, the results across your students might be inconsistent. With the button 'Trigger all' you can trigger the submissions of all students with the updated grading configuration.",
                "noUpdatedGradingConfig": "No updated grading",
                "notReleased": "Not released",
                "notReleasedTooltip": "The programming exercise is not yet released or is released but does not yet have any student results. You may change the grading configuration without having to trigger existing student submissions with the updated settings."
            },
            "export": {
                "downloadRepo": "Download Repo",
                "downloadExercise": "Download Exercise",
                "downloadAllStudents": "Or download the repositories of all students",
                "downloadAllTeams": "Or download the repositories of all teams",
                "filterLateSubmissions": "Filter late submissions",
                "filterLateSubmissionsDate": "Date to filter late submissions (defaults to exercise due date if not set)",
                "addStudentName": "Add student name to project (allows importing multiple projects into Eclipse at the same time)",
                "addTeamName": "Add team name to project (allows importing multiple projects into Eclipse at the same time)",
                "addTeamOrStudentName": "Add team/student name to project (allows importing multiple projects into Eclipse at the same time)",
                "combineStudentCommits": "Combine all student changes into one commit (to simplify the review)",
                "anonymizeStudentCommits": "Anonymize all of the student's commits",
                "normalizeCodeStyle": "Normalize code style (line endings, encoding)",
                "successMessageRepos": "Export of repos was successful. The exported zip file with all repositories is currently being downloaded.",
                "successMessageExercise": "Export of exercise was successful. The exported zip file with all exercise material is currently being downloaded."
            },
            "resubmitOnFailedSubmission": "An automatic assessment for this participant's last submission could not be generated. Click the button to submit again. This will trigger a new build run that tests the last submission.",
            "resubmit": "Resubmit the last submission. This will execute a build run on the participant's repository without making a commit.",
            "resubmitSingle": "Trigger new build for this participant",
            "resubmitConfirmManualResultOverride": "The latest result for this participant is manual, which means the submission was assessed by a tutor. If you trigger the build for this submission again, the newly generated automatic result will be shown to the student instead.",
            "resubmitAllConfirmAfterDeadline": "The deadline has passed, some of the student submissions may already have been assessed by tutors. Newly generated automatic results would replace these manual assessments as the latest results.",
            "resubmitUnsuccessful": "Resubmitting the last submission failed. Please contact your tutor.",
            "resubmitAll": "Trigger all",
            "resubmitAllTooltip": "Trigger all participants' last submission again. The results will be marked as graded.",
            "resubmitAllDialog": "WARNING: Triggering all participants' submissions again is a very expensive operation. This action will start a CI build for every participant in this exercise. This means that all results of the students will be calculated again and overridden with a newly generated result based on their last commit!",
            "resubmitFailed": "Trigger failed",
            "resubmitFailedTooltip": "Trigger failed submissions for all participants again. Failed submissions don't have a result for their latest submission. This can happen due to communication errors between the CI system and Artemis. The created results will be marked as graded.",
            "buildingSubmissions": "Building submissions: {{number}}",
            "failedSubmissions": "Failed submissions: {{number}}",
            "resultETA": "Result ETA: {{eta}}",
            "resultETATooltip": "Shows how long an average submission must wait for its result. Depends on the current utilization of the build system.",
            "titleTooltip": "The title of the exercise can always be changed after creating it. It will be part of the project name of the for the exercise created project on the VCS server",
            "shortNameTooltip": "The short name of the exercise can NOT be edited after creating the exercise! Together with the course short name, it is used as a unique identifier for the exercise in all parts of Artemis (incl. repositories and build plans)",
            "categoriesTooltip": "You can define up to two categories per exercise (Enter category and press ENTER). You are free in defining them, though it might be best to use them consistently. They will be visible to students",
            "timeline": {
                "assessmentType": "Assessment Type",
                "automaticAssessment": "Automatic Assessment",
                "manualAssessment": "Manual Assessment",
                "complaintsAllowed": "Complaints Allowed",
                "automaticTests": "Automatic Tests",
                "afterDueDate": "Run Tests after Due Date",
                "timelineLabel": "Timeline of the entire programming exercise",
                "timelineTooltip": "The entire lifecycle of the programming exercise. You can specify different critical dates and decide when which kind of tests should be run on all submissions",
                "automaticTestsMandatoryTooltip": "Every commit from a participant triggers all tests in the test repository. This does not include tests specified only to be run after the due date.",
                "automaticTestsAfterDueDateTooltip": "As soon as the specified due date passes, all submissions will be tested again using ALL tests in the test repository, including tests specified to be run after the due date.",
                "assessmentTypeTooltipAutomaticAssessment": "The type of assessment after the deadline: No manual assessment",
                "assessmentTypeTooltipManualAssessment": "The type of assessment after the deadline: Manual assessment by a tutors and complaints allowed if possible",
                "releaseDateTooltip": "The release date of the exercise. Students will only be able to participate in the exercise starting on the specified date",
                "dueDateTooltip": "The deadline, upon which submitting and committing new code will be deactivated for all students",
                "afterDueDateTooltip": "Activate this setting to build & test all student submissions on the selected date. This date must be set after the due date. These generated results will be marked as 'graded' even though the due date has passed.",
                "alertNewDueDate": "The due date has been set to the release date!",
                "alertNewAfterDueDate": "The date of the additional test runs has been set to the release date!",
                "assessmentDueDate": "Assessment Due Date",
                "assessmentDueDateTooltip": "The deadline for manual reviews. As soon as the specified date passes, all manual assessments will be released to students!",
                "notSet": "not set",
                "complaintOnAutomaticAssessment": "Complaint on Automatic Assessment",
                "allowComplaintOnAutomaticAssessmentTooltip": "Students can complain after receiving an automatic assessment",
                "disallowComplaintOnAutomaticAssessmentTooltip": "Students cannot complain after receiving an automatic assessment",
                "complaintOnAutomaticAssessmentEnabled": "Complaints are possible",
                "complaintOnAutomaticAssessmentDisabled": "Complaints are not possible"
            },
            "repositoryIsLocked": {
                "title": "Your repository is locked.",
                "tooltip": "The due date has passed, your repository is locked. You may still read the code but you may not make any changes to it."
            },
            "preview": {
                "label": "Preview",
                "tooltip": "For every programming exercise, repositories and build plans will be generated. Here you can find their generated names based on the short name of the exercise (and course)",
                "repositories": "Repositories",
                "buildPlans": "Build Plans",
                "templateRepoTooltip": "The repository which contains the template of the exercise",
                "solutionRepoTooltip": "The repository which contains the solution to the exercise",
                "testRepoTooltip": "The repository which contains all tests",
                "auxiliaryRepoTooltip": "{{description}}",
                "templateBuildPlanTooltip": "The build plan of the template. Runs all tests on the exercise template. Used as a reference in which all tests must fail",
                "solutionBuildPlanTooltip": "The build plan of the solution. Runs all tests on the exercise solution. Used as a reference in which all tests must succeed"
            },
            "intellij": {
                "openEditor": "Open Editor"
            },
            "reEvaluate": "Re-evaluate all",
            "reEvaluateTooltip": "Re-evaluate the automatic results of all participants' latest submissions. Manual results are not affected.",
            "reEvaluateSuccessful": "{{number}} automatic results were successfully updated, including the template and solution.",
            "reEvaluateFailed": "The re-evaluation failed: {{message}}",
            "editSelectedModal": {
                "currentlyEdited": "You are editing the following exercises:",
                "errorReadButton": "Ok",
                "errorOccurred": "The following exercises could not be updated:"
            },
            "unlockAllRepositories": "Unlock all repositories",
            "lockAllRepositories": "Lock all repositories",
            "unlockAllRepositoriesModalText": "All repositories will be unlocked immediately! Students can push changes again, even if the exercise is already over!\n\nThis operation is performed automatically once students start to work on the exercise. Therefore, use this option only if the automatic unlocking was not performed correctly or if the repositories were locked by mistake!",
            "lockAllRepositoriesModalText": "All repositories will be locked immediately! Students will not be able to push even if the assignment is still running!\n\nThe operation will be performed automatically on the exercise due date if 'Run Tests after Due Date' or 'Manual Review' is enabled. Therefore, use this option only if automatic locking was not performed correctly or if the repositories were unlocked by mistake!",
            "unlockAllRepositoriesSuccess": "The repositories are now being unlocked. Please be patient for a while. You will soon be notified whether the operation was successful.",
            "lockAllRepositoriesSuccess": "The repositories are now being locked. Please be patient for a while. You will soon be notified whether the operation was successful.",
            "auxiliaryRepository": {
                "error": "There is a problem with the auxiliary repository.",
                "addAuxiliaryRepository": "Add Auxiliary Repository",
                "repositoryName": "Repository Name",
                "checkoutDirectory": "Checkout Directory",
                "invalidRepositoryName": "A repository with that name already exists in this exercise!",
                "duplicateRepositoryNames": "Multiple auxiliary repositories must not share the same name!",
                "duplicateDirectoryNames": "Multiple auxiliary repositories must not share the same checkout directory!",
                "warning": "Auxiliary repositories can be edited and removed. Changes do not cascade to the VCS and CIS and must be carried out manually.",
                "repositoryNameRequired": {
                    "pattern": "Auxiliary repositories might not be named 'exercise', 'solution', 'tests', or 'auxiliary'. Names might not contain special characters other than '-' and '_'."
                },
                "invalidDirectoryName": {
                    "pattern": "Checkout directory paths must only contain words, '_', '-', and '/' characters, but must not start nor end with a '/' character."
                }
            },
            "submissionPolicy": {
                "title": "Submission Policy",
                "updateButton": {
                    "title": "Update",
                    "tooltip": "Saves the changes to the submission policy of this programming exercise.\nATTENTION:\nFor Lock Repository Policies this is a very heavy operation as it might (un)lock a lot of affected participation repositories!"
                },
                "activateButton": {
                    "title": "Activate",
                    "tooltip": "Activates the configured submission policy of this programming exercise.\nATTENTION:\nFor Lock Repository Policies this is a very heavy operation as it might lock a lot of affected participation repositories!"
                },
                "deactivateButton": {
                    "title": "Deactivate",
                    "tooltip": "Deactivates the configured submission policy of this programming exercise.\nATTENTION:\nFor Lock Repository Policies this is a very heavy operation as it might unlock a lot of affected participation repositories!"
                },
                "created": "The submission policy was created successfully!",
                "updated": "The submission policy was updated successfully!",
                "deleted": "The submission policy was deleted successfully!",
                "submissionsAllowed": "allowed Submissions",
                "none": {
                    "optionLabel": "None"
                },
                "lockRepository": {
                    "optionLabel": "Lock Repository"
                },
                "submissionPenalty": {
                    "optionLabel": "Submission Penalty",
                    "penaltyInputFieldTitle": "Exceeding Submission Limit Penalty",
                    "exceedingLimitDescription": "The amount of points that is deducted from the result score for each submission exceeding the submission limit. Enter any amount of points greater than 0.",
                    "penaltyInputFieldValidationWarning": {
                        "pattern": "The penalty must be a number greater than 0.",
                        "required": "The penalty must be set."
                    },
                    "penaltyInfoLabel": "Exceeding Penalty",
                    "triggerAllInformation": "If the exceeding submission limit penalty or the submission limit is updated, the 'Re-evaluate' functionality must be used to update the participants' results."
                },
                "submissionPolicyType": {
                    "title": "Submission Policy Type",
                    "none": {
                        "title": "None"
                    },
                    "lock_repository": {
                        "title": "Lock Repository",
                        "tooltip": "Your participation repository will be locked as soon as you reach the submission limit. You won't be able to participate further in the exercise after your repository is locked."
                    },
                    "submission_penalty": {
                        "title": "Submission Penalty",
                        "tooltip": "The system deducts points from your score for each submission that exceeds the submission limit. Try to stay within the submission limit to avoid penalties!"
                    }
                },
                "submissionLimitTitle": "Submission Limit",
                "submissionLimitDescription": "The amount of submissions a participant can make before the system enforces the selected policy.",
                "editInGradingInformation": "The submission policy can only be edited and toggled on the grading page of the programming exercise!",
                "submissionLimitWarning": {
                    "pattern": "The submission limit must be and integer between 1 and 500!",
                    "required": "The submission limit must be set!"
                }
            }
        },
        "error": {
            "noparticipations": "No existing user was specified or no submission exists."
        }
    }
}
