apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    field.cattle.io/creatorId: user-hwfmq
  generation: 1
  labels:
    cattle.io/creator: norman
    workload.user.cattle.io/workloadselector: deployment-artemis-artemis-mysql
  name: artemis-mysql
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-artemis-artemis-mysql
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        workload.user.cattle.io/workloadselector: deployment-artemis-artemis-mysql
    spec:
      containers:
      - args:
        - --lower_case_table_names=1
        - --skip-ssl
        - --character_set_server=utf8mb4
        - --explicit_defaults_for_timestamp
        envFrom:
        - configMapRef:
            name: artemis-mysql
            optional: false
        image: mysql:8.0.25
        imagePullPolicy: Always
        name: artemis-mysql
        ports:
        - containerPort: 3306
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities: {}
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
        volumeMounts:
        - mountPath: /var/lib/mysql/
          name: artemis-data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: artemis-data
        persistentVolumeClaim:
          claimName: artemis-data
