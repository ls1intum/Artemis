apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    field.cattle.io/creatorId: user-gpcv5
  labels:
    cattle.io/creator: norman
    workload.user.cattle.io/workloadselector: deployment-artemis-bitbucket
  name: bitbucket
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-artemis-bitbucket
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        field.cattle.io/ports: '[[{"containerPort":7990,"dnsName":"bitbucket-nodeport","hostPort":0,"kind":"NodePort","name":"7990tcp1","protocol":"TCP"}]]'
      labels:
        workload.user.cattle.io/workloadselector: deployment-artemis-bitbucket
    spec:
      containers:
      - env:
        - name: SPRING_APPLICATION_JSON
          value: '{"plugin":{"ssh":{"baseurl":"ssh://bitbucket:7999"}}}'
        image: atlassian/bitbucket-server:7.10.1
        imagePullPolicy: Always
        name: bitbucket
        ports:
        - containerPort: 7990
          name: 7990tcp1
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities: {}
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
        volumeMounts:
        - mountPath: /var/atlassian/application-data/bitbucket
          name: bitbucket
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: bitbucket
        persistentVolumeClaim:
          claimName: bitbucket
