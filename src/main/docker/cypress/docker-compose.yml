version: '2.1'
services:
    artemis-mysql:
        extends:
            file: mysql.yml
            service: artemis-mysql

    artemis-app:
        image: ghcr.io/ls1intum/artemis
        build:
            context: ../../../..
            dockerfile: src/main/docker/Dockerfile
        volumes:
            - ../../resources/config/application-dev.yml:/home/artemis/application-dev.yml:ro
            - ../../resources/config/application-artemis.yml:/home/artemis/application-artemis.yml:ro
        environment:
            _JAVA_OPTIONS: -Xmx5120m -Xms2560m
            SPRING_PROFILES_ACTIVE: dev,bamboo,bitbucket,jira,artemis,scheduling,athene,local
            SPRING_DATASOURCE_URL: jdbc:mysql://artemis-mysql:3306/Artemis?createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC
            SPRING_DATASOURCE_USERNAME: root
            SPRING_DATASOURCE_PASSWORD: 
            JHIPSTER_SLEEP: 30 # gives time for other services to boot before the application
        ports:
            - 8080:8080
        networks:
            - artemis
        depends_on:
            artemis-mysql:
                condition: service_healthy
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:8080"]
            interval: 1s
            timeout: 3s
            retries: 30
    
    e2e:
        image: cypress
        build: src/test/cypress
        container_name: cypress
        depends_on:
            artemis-app:
                condition: service_healthy
        environment:
            - CYPRESS_baseUrl=http://artemis-app
        command: npm run cypress:run
        volumes:
            - src/test/cypress:/app/cypress
            - src/test/cypress/cypress.json:/app/cypress.json

networks:
    artemis:
        driver: "bridge"
