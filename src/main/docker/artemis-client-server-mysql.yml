# NOTE: this docker compose file starts the artemis-server (as jar file) and the artemis-client in separate containers. This setup is aimed for development.
# If you want to start the whole Artemis application (server and client) in the same container, you need to specify a different service and
# you have to execute the command './gradlew -Pprod -Pwar clean bootWar && java -jar build/libs/*.war --spring.profiles.active=dev,artemis,bamboo,bitbucket,jira'

services:
  artemis-server:
    command: >
      sh -c "(apt update && apt install -y fontconfig ttf-dejavu graphviz || true)
      && ./gradlew build -x webapp -x test -x jacocoTestCoverageVerification -x spotlessCheck -x checkstyleMain -x checkstyleTest
      && java -jar --add-exports java.naming/com.sun.jndi.ldap=ALL-UNNAMED build/libs/Artemis-*.jar"
    depends_on:
      - artemis-mysql
    image: openjdk:17-jdk-buster
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://artemis-mysql:3306/Artemis?createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC
      - SPRING_PROFILES_ACTIVE=dev,bamboo,bitbucket,jira,artemis,scheduling
    networks:
      - artemis
    ports:
      - 8080:8080
    volumes:
      - ./../../..:/server/
    working_dir: /server

  artemis-client:
    command: sh -c "npm install && npm run start-docker"
    depends_on:
      - artemis-server
    image: node:14.17.6-alpine
    networks:
      - artemis
    ports:
      - 9000:9000
    volumes:
      - ./../../..:/client/
    working_dir: /client

  artemis-mysql:
    extends:
      file: mysql.yml
      service: artemis-mysql

networks:
  artemis:
    driver: "bridge"
volumes:
  artemis-mysql-data:
