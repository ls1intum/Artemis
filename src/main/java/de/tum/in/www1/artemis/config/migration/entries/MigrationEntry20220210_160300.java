package de.tum.in.www1.artemis.config.migration.entries;

import java.util.Set;

import org.springframework.stereotype.Component;

import de.tum.in.www1.artemis.config.migration.MigrationEntry;
import de.tum.in.www1.artemis.domain.*;
import de.tum.in.www1.artemis.domain.enumeration.ProgrammingLanguage;
import de.tum.in.www1.artemis.repository.ProgrammingExerciseRepository;
import de.tum.in.www1.artemis.repository.ProgrammingExerciseTestCaseRepository;
import de.tum.in.www1.artemis.service.programming.ProgrammingExerciseTestCaseService;

/**
 * This migration sets the enum value testCaseType for every existing test case depending on its name and exercise's programming language.
 */
@Component
public class MigrationEntry20220210_160300 extends MigrationEntry {

    private final ProgrammingExerciseRepository programmingExerciseRepository;

    private final ProgrammingExerciseTestCaseRepository programmingExerciseTestCaseRepository;

    private final ProgrammingExerciseTestCaseService programmingExerciseTestCaseService;

    public MigrationEntry20220210_160300(ProgrammingExerciseRepository programmingExerciseRepository, ProgrammingExerciseTestCaseRepository programmingExerciseTestCaseRepository,
            ProgrammingExerciseTestCaseService programmingExerciseTestCaseService) {
        this.programmingExerciseRepository = programmingExerciseRepository;
        this.programmingExerciseTestCaseRepository = programmingExerciseTestCaseRepository;
        this.programmingExerciseTestCaseService = programmingExerciseTestCaseService;
    }

    /**
     * Invokes saving the type for all test cases for a list of programming exercises to the database.
     * No batch processing is required as all database calls are made sequentially per exercise.
     */
    @Override
    public void execute() {
        programmingExerciseRepository.findAllWithEagerTestCases()
                .forEach(programmingExercise -> processTestCases(programmingExercise.getTestCases(), programmingExercise.getProgrammingLanguage()));
    }

    /**
     * Sets the enum value test case type for every test case and saves to the database. Implicitly, all tests are of the same programming language
     * If the test case belongs to a non-JAVA programming exercise, the type is set to DEFAULT.
     * If the test case belongs to a JAVA programming exercise, the type is set to:
     * STRUCTURAL: test case has been generated by the structure oracle, and it's name therefore follow a certain pattern
     * BEHAVIORAL: all other test cases (which have been created by the instructor)
     *
     * @param testCases the test cases of a programming exercises
     * @param language  the programming language the test cases are written in
     */
    private void processTestCases(Set<ProgrammingExerciseTestCase> testCases, ProgrammingLanguage language) {
        programmingExerciseTestCaseService.setTestCaseType(testCases, language);
        programmingExerciseTestCaseRepository.saveAll(testCases);
    }

    @Override
    public String author() {
        return "ole-ve";
    }

    @Override
    public String date() {
        return "20220210_160300";
    }
}
