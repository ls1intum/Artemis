// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: de/tum/cit/aet/artemis/hyperion/proto/hyperion.proto
// Protobuf Java Version: 4.31.1

package de.tum.cit.aet.artemis.hyperion.generated;

/**
 * Protobuf enum {@code de.tum.cit.aet.artemis.hyperion.ProgrammingLanguage}
 */
@com.google.protobuf.Generated
public enum ProgrammingLanguage implements com.google.protobuf.ProtocolMessageEnum {

    /**
     * <code>EMPTY = 0;</code>
     */
    EMPTY(0),
    /**
     * <code>ASSEMBLER = 1;</code>
     */
    ASSEMBLER(1),
    /**
     * <code>BASH = 2;</code>
     */
    BASH(2),
    /**
     * <code>C = 3;</code>
     */
    C(3),
    /**
     * <code>C_PLUS_PLUS = 4;</code>
     */
    C_PLUS_PLUS(4),
    /**
     * <code>C_SHARP = 5;</code>
     */
    C_SHARP(5),
    /**
     * <code>DART = 6;</code>
     */
    DART(6),
    /**
     * <code>GO = 7;</code>
     */
    GO(7),
    /**
     * <code>HASKELL = 8;</code>
     */
    HASKELL(8),
    /**
     * <code>JAVA = 9;</code>
     */
    JAVA(9),
    /**
     * <code>JAVASCRIPT = 10;</code>
     */
    JAVASCRIPT(10),
    /**
     * <code>KOTLIN = 11;</code>
     */
    KOTLIN(11),
    /**
     * <code>MATLAB = 12;</code>
     */
    MATLAB(12),
    /**
     * <code>OCAML = 13;</code>
     */
    OCAML(13),
    /**
     * <code>PYTHON = 14;</code>
     */
    PYTHON(14),
    /**
     * <code>R = 15;</code>
     */
    R(15),
    /**
     * <code>RUBY = 16;</code>
     */
    RUBY(16),
    /**
     * <code>RUST = 17;</code>
     */
    RUST(17),
    /**
     * <code>SWIFT = 18;</code>
     */
    SWIFT(18),
    /**
     * <code>TYPESCRIPT = 19;</code>
     */
    TYPESCRIPT(19),
    /**
     * <code>VHDL = 20;</code>
     */
    VHDL(20), UNRECOGNIZED(-1),;

    static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC, /* major= */ 4, /* minor= */ 31, /* patch= */ 1,
                /* suffix= */ "", ProgrammingLanguage.class.getName());
    }

    /**
     * <code>EMPTY = 0;</code>
     */
    public static final int EMPTY_VALUE = 0;

    /**
     * <code>ASSEMBLER = 1;</code>
     */
    public static final int ASSEMBLER_VALUE = 1;

    /**
     * <code>BASH = 2;</code>
     */
    public static final int BASH_VALUE = 2;

    /**
     * <code>C = 3;</code>
     */
    public static final int C_VALUE = 3;

    /**
     * <code>C_PLUS_PLUS = 4;</code>
     */
    public static final int C_PLUS_PLUS_VALUE = 4;

    /**
     * <code>C_SHARP = 5;</code>
     */
    public static final int C_SHARP_VALUE = 5;

    /**
     * <code>DART = 6;</code>
     */
    public static final int DART_VALUE = 6;

    /**
     * <code>GO = 7;</code>
     */
    public static final int GO_VALUE = 7;

    /**
     * <code>HASKELL = 8;</code>
     */
    public static final int HASKELL_VALUE = 8;

    /**
     * <code>JAVA = 9;</code>
     */
    public static final int JAVA_VALUE = 9;

    /**
     * <code>JAVASCRIPT = 10;</code>
     */
    public static final int JAVASCRIPT_VALUE = 10;

    /**
     * <code>KOTLIN = 11;</code>
     */
    public static final int KOTLIN_VALUE = 11;

    /**
     * <code>MATLAB = 12;</code>
     */
    public static final int MATLAB_VALUE = 12;

    /**
     * <code>OCAML = 13;</code>
     */
    public static final int OCAML_VALUE = 13;

    /**
     * <code>PYTHON = 14;</code>
     */
    public static final int PYTHON_VALUE = 14;

    /**
     * <code>R = 15;</code>
     */
    public static final int R_VALUE = 15;

    /**
     * <code>RUBY = 16;</code>
     */
    public static final int RUBY_VALUE = 16;

    /**
     * <code>RUST = 17;</code>
     */
    public static final int RUST_VALUE = 17;

    /**
     * <code>SWIFT = 18;</code>
     */
    public static final int SWIFT_VALUE = 18;

    /**
     * <code>TYPESCRIPT = 19;</code>
     */
    public static final int TYPESCRIPT_VALUE = 19;

    /**
     * <code>VHDL = 20;</code>
     */
    public static final int VHDL_VALUE = 20;

    public final int getNumber() {
        if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException("Can't get the number of an unknown enum value.");
        }
        return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ProgrammingLanguage valueOf(int value) {
        return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ProgrammingLanguage forNumber(int value) {
        switch (value) {
            case 0:
                return EMPTY;
            case 1:
                return ASSEMBLER;
            case 2:
                return BASH;
            case 3:
                return C;
            case 4:
                return C_PLUS_PLUS;
            case 5:
                return C_SHARP;
            case 6:
                return DART;
            case 7:
                return GO;
            case 8:
                return HASKELL;
            case 9:
                return JAVA;
            case 10:
                return JAVASCRIPT;
            case 11:
                return KOTLIN;
            case 12:
                return MATLAB;
            case 13:
                return OCAML;
            case 14:
                return PYTHON;
            case 15:
                return R;
            case 16:
                return RUBY;
            case 17:
                return RUST;
            case 18:
                return SWIFT;
            case 19:
                return TYPESCRIPT;
            case 20:
                return VHDL;
            default:
                return null;
        }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ProgrammingLanguage> internalGetValueMap() {
        return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<ProgrammingLanguage> internalValueMap = new com.google.protobuf.Internal.EnumLiteMap<ProgrammingLanguage>() {

        public ProgrammingLanguage findValueByNumber(int number) {
            return ProgrammingLanguage.forNumber(number);
        }
    };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
        if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalStateException("Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
        return getDescriptor();
    }

    public static com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
        return de.tum.cit.aet.artemis.hyperion.generated.HyperionServiceProto.getDescriptor().getEnumTypes().get(0);
    }

    private static final ProgrammingLanguage[] VALUES = values();

    public static ProgrammingLanguage valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
    }

    private final int value;

    private ProgrammingLanguage(int value) {
        this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:de.tum.cit.aet.artemis.hyperion.ProgrammingLanguage)
}
