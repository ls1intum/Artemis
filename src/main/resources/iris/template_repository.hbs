{{#system~}}The following is a work-in-progress programming exercise.{{~/system}}

{{#system~}}The problem statement:{{~/system}}
{{#user~}}{{problemStatement}}{{~/user}}
{{#system~}}End of problem statement.{{~/system}}

{{#system~}}The solution repository:{{~/system}}
{{#each solutionRepository}}
    {{#system~}}"{{@key}}":{{~/system}}
    {{#user~}}{{this}}{{~/user}}
{{/each}}
{{#system~}}End of solution repository.{{~/system}}

{{#system~}}The test repository:{{~/system}}
{{#each testRepository}}
    {{#system~}}"{{@key}}":{{~/system}}
    {{#user~}}{{this}}{{~/user}}
{{/each}}
{{#system~}}End of test repository.{{~/system}}

{{#system~}}
    The template repository serves as a starting point for the students to work on the exercise.
    It is a cut-down version of the solution repository with the steps described in the problem statement removed.
    It may not include all the files of the solution repository, if the exercise requires the students to create new files.
    There are TODO comments in the template repository to guide the students in their implementation of the exercise tasks.
    This template should pass none of the exercise tests, as it represents 0% completion of the exercise.
{{~/system}}

{{#system~}}The template repository:{{~/system}}
{{#each templateRepository}}
    {{#system~}}"{{@key}}":{{~/system}}
    {{#user~}}{{this}}{{~/user}}
{{/each}}
{{#system~}}End of template repository.{{~/system}}

{{#system~}}You have told the instructor that you will do the following:{{~/system}}
{{#assistant~}}{{instructions}}{{/assistant}}

{{set 'changes' []}}
{{#geneach 'changes' num_iterations=20 hidden=True}}
    {{#system~}}
        You are now in the process of editing the template repository.
        {{#each changes}}
            {{#if @first}}So far, you have made the following changes:{{/if}}
            {{#if (equal this.type 'modify')}}
                {{#if (equal this.original '!all!')}}
                    {{this.file}}: {{this.updated}}
                {{else}}
                    {{this.file}}: {{this.original}} -> {{this.updated}}
                {{/if}}
            {{/if}}
            {{#if (equal this.type 'create')}}
                {{this.file}}: {{this.updated}}
            {{/if}}
        {{/each}}
        Would you like to modify an existing file or create a new file?
        To modify, respond with "modify", or to create, respond with "create".
        {{#if (not @first)}}
            Alternatively, if you have no other changes you would like to make, respond with the special response "!done!".
        {{/if}}
    {{~/system}}
    {{#assistant~}}{{gen 'this.type' temperature=0.0 max_tokens=10}}{{~/assistant}}
    {{#if (equal this.type "!done!")}}
        {{break}}
    {{/if}}
    {{#if (equal this.type 'modify')}}
        {{#system~}}
            What file would you like to modify?
            State the full path of the file, without quotation marks, justification, or any other text.
            For example, for the hypothetical file "path/to/file/File.txt", you would respond:
        {{~/system}}
        {{#assistant~}}path/to/file/File.txt{{~/assistant}}
        {{#system~}}Exactly. So, what file would you like to modify?{{~/system}}
        {{#assistant~}}{{gen 'this.file' temperature=0.0 max_tokens=50}}{{~/assistant}}
        {{#if (not (contains templateRepository this.file))}}
            {{#system~}}
                The file you specified does not exist in the template repository.
                As a refresher, here are the paths of all files in the template repository:
            {{/system}}
            {{#user~}}
                {{#each templateRepository}}
                    {{@key}}
                {{/each}}
            {{~/user}}
            {{#system~}}
                Now respond with the actual full path of the file you would like to change.
            {{/system}}
            {{#assistant~}}{{gen 'this.file' temperature=0.0 max_tokens=50}}{{~/assistant}}
        {{/if}}
        {{#system~}}
            You will now identify a part of the file '{{this.file}}' to replace.
            It is very important that you respond with an exact quote from the file, without quotation marks, and say nothing else.
            If you want to replace the entire content, respond with the special response "!all!".
            Do not select the same part of the file twice.
            Here is the current state of the file from which you may select a part to replace:
        {{~/system}}
        {{#user~}}
            {{#each templateRepository}}
                {{#if (equal @key this.file)}}
                    {{this}}
                {{/if}}
            {{/each}}
        {{~/user}}
        {{#assistant~}}{{gen 'this.original' temperature=0.0 max_tokens=1000}}{{~/assistant}}
        {{#system~}}What should this content be replaced with?{{~/system}}
        {{#assistant~}}{{gen 'this.updated' temperature=0.5 max_tokens=1000}}{{~/assistant}}
    {{/if}}
    {{#if (equal this.type 'create')}}
        {{#system~}}
            You are now creating a new file in the template repository.
            What is the full path of the file you would like to create?
            For example, for the hypothetical file "path/to/file/File.txt", you would respond:
        {{~/system}}
        {{#assistant~}}path/to/file/File.txt{{~/assistant}}
        {{#system~}}Exactly. So, what file would you like to create?{{~/system}}
        {{#assistant~}}{{gen 'this.file' temperature=0.0 max_tokens=50}}{{~/assistant}}
        {{set 'this.original' '!all!'}}
        {{#system~}}Now respond with the content of the new file {{this.file}}.{{/system}}
        {{#assistant~}}{{gen 'this.updated' temperature=0.5 max_tokens=1000}}{{~/assistant}}
    {{/if}}
{{/geneach}}
