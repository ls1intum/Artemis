[
  {
    "name": "[B"
  },
  {
    "name": "[C"
  },
  {
    "name": "[D"
  },
  {
    "name": "[F"
  },
  {
    "name": "[I"
  },
  {
    "name": "[J"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.BeanDeserializerModifier;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.Deserializers;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.KeyDeserializers;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.ValueInstantiators;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.ser.BeanSerializerModifier;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.ser.Serializers;"
  },
  {
    "name": "[Lcom.github.dockerjava.api.model.ContainerPort;"
  },
  {
    "name": "[Lcom.github.dockerjava.api.model.Link;"
  },
  {
    "name": "[Lde.tum.cit.aet.artemis.buildagent.dto.BuildJobQueueItem;"
  },
  {
    "name": "[Lde.tum.cit.aet.artemis.core.dto.DueDateStat;"
  },
  {
    "name": "[Lde.tum.cit.aet.artemis.exam.domain.Exam;"
  },
  {
    "name": "[Lde.tum.cit.aet.artemis.lecture.domain.Lecture;"
  },
  {
    "name": "[Lde.tum.cit.aet.artemis.programming.domain.ProjectType;"
  },
  {
    "name": "[Lde.tum.cit.aet.artemis.programming.dto.ResultDTO$FeedbackDTO;"
  },
  {
    "name": "[Lio.micrometer.core.instrument.distribution.FixedBoundaryHistogram;"
  },
  {
    "name": "[Ljava.lang.Class;"
  },
  {
    "name": "[Ljava.lang.Long;"
  },
  {
    "name": "[Ljava.lang.Object;"
  },
  {
    "name": "[Ljava.lang.String;"
  },
  {
    "name": "[Ljava.lang.annotation.Annotation;"
  },
  {
    "name": "[Ljava.sql.Statement;"
  },
  {
    "name": "[Ljava.util.HashMap$Node;"
  },
  {
    "name": "[Ljava.util.List;"
  },
  {
    "name": "[Ljava.util.function.Function;"
  },
  {
    "name": "[Ljava.util.function.Supplier;"
  },
  {
    "name": "[Ljavax.management.openmbean.CompositeData;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.AutoFlushEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.DeleteEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.DirtyCheckEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.EvictEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.FlushEntityEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.FlushEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.InitializeCollectionEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.LoadEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.LockEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.MergeEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.PersistEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.PostDeleteEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.PostInsertEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.PostLoadEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.PostUpdateEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.PreLoadEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.RefreshEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.ReplicateEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.ResolveNaturalIdEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.SaveOrUpdateEventListener;"
  },
  {
    "name": "[Lorg.hibernate.jpa.event.spi.Callback;"
  },
  {
    "name": "[Lorg.hibernate.query.hql.spi.DotIdentifierConsumer;"
  },
  {
    "name": "[Lorg.hibernate.query.hql.spi.SqmCreationProcessingState;"
  },
  {
    "name": "[Lorg.hibernate.query.sqm.spi.ParameterDeclarationContext;"
  },
  {
    "name": "[Lorg.hibernate.query.sqm.sql.FromClauseIndex;"
  },
  {
    "name": "[Lorg.hibernate.sql.ast.Clause;"
  },
  {
    "name": "[Lorg.hibernate.sql.ast.spi.SqlAstProcessingState;"
  },
  {
    "name": "[Lorg.hibernate.sql.ast.tree.Statement;"
  },
  {
    "name": "[Lorg.hibernate.sql.ast.tree.select.QueryPart;"
  },
  {
    "name": "[Lorg.hibernate.sql.results.jdbc.spi.JdbcValuesSourceProcessingState;"
  },
  {
    "name": "[Lorg.springframework.cache.annotation.CacheEvict;"
  },
  {
    "name": "[Lorg.springframework.cache.annotation.CachePut;"
  },
  {
    "name": "[Lorg.springframework.cache.annotation.Cacheable;"
  },
  {
    "name": "[Lorg.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor$MappingsProvider;"
  },
  {
    "name": "[Lorg.springframework.core.io.Resource;",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "[Lorg.springframework.util.ConcurrentReferenceHashMap$Segment;"
  },
  {
    "name": "[Lorg.springframework.web.bind.annotation.RequestMethod;"
  },
  {
    "name": "[S"
  },
  {
    "name": "[Z"
  },
  {
    "name": "boolean",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.BasicConfigurator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.LoggerContext",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "addTurboFilter",
        "parameterTypes": [
          "ch.qos.logback.classic.turbo.TurboFilter"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.encoder.PatternLayoutEncoder",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.filter.ThresholdFilter",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setLevel",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.joran.SerializedModelConfigurator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.jul.LevelChangePropagator",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setResetJUL",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.turbo.TurboFilter",
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.util.DefaultJoranConfigurator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.ConsoleAppender",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.FileAppender",
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.OutputStreamAppender",
    "methods": [
      {
        "name": "setEncoder",
        "parameterTypes": [
          "ch.qos.logback.core.encoder.Encoder"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.UnsynchronizedAppenderBase",
    "methods": [
      {
        "name": "addFilter",
        "parameterTypes": [
          "ch.qos.logback.core.filter.Filter"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.encoder.Encoder",
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.encoder.LayoutWrappingEncoder",
    "methods": [
      {
        "name": "setCharset",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setParent",
        "parameterTypes": [
          "ch.qos.logback.core.spi.ContextAware"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.filter.Filter",
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.pattern.PatternLayoutEncoderBase",
    "methods": [
      {
        "name": "setPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.rolling.RollingFileAppender",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setFile",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRollingPolicy",
        "parameterTypes": [
          "ch.qos.logback.core.rolling.RollingPolicy"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.rolling.RollingPolicy",
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.rolling.RollingPolicyBase",
    "methods": [
      {
        "name": "setFileNamePattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setParent",
        "parameterTypes": [
          "ch.qos.logback.core.FileAppender"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setMaxFileSize",
        "parameterTypes": [
          "ch.qos.logback.core.util.FileSize"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.rolling.TimeBasedRollingPolicy",
    "methods": [
      {
        "name": "setCleanHistoryOnStart",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMaxHistory",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setTotalSizeCap",
        "parameterTypes": [
          "ch.qos.logback.core.util.FileSize"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.spi.ContextAware",
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.status.NopStatusListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.util.FileSize",
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "char",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.Character"
        ]
      }
    ]
  },
  {
    "name": "com.codahale.metrics.MetricRegistry"
  },
  {
    "name": "com.fasterxml.jackson.annotation.JacksonAnnotation",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonAutoDetect$Value"
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility"
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonBackReference",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonIgnore",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonIgnoreProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonInclude",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonInclude$Include"
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonInclude$Value"
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonIncludeProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonManagedReference",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonProperty",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonRawValue",
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonSetter$Value"
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonSubTypes",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonSubTypes$Type",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonTypeInfo",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonTypeInfo$As"
  },
  {
    "name": "com.fasterxml.jackson.annotation.PropertyAccessor"
  },
  {
    "name": "com.fasterxml.jackson.core.Base64Variant"
  },
  {
    "name": "com.fasterxml.jackson.core.FormatSchema"
  },
  {
    "name": "com.fasterxml.jackson.core.JsonEncoding"
  },
  {
    "name": "com.fasterxml.jackson.core.JsonFactory"
  },
  {
    "name": "com.fasterxml.jackson.core.JsonFactory$Feature"
  },
  {
    "name": "com.fasterxml.jackson.core.JsonGenerator"
  },
  {
    "name": "com.fasterxml.jackson.core.JsonGenerator$Feature"
  },
  {
    "name": "com.fasterxml.jackson.core.JsonParser"
  },
  {
    "name": "com.fasterxml.jackson.core.JsonParser$Feature"
  },
  {
    "name": "com.fasterxml.jackson.core.JsonProcessingException"
  },
  {
    "name": "com.fasterxml.jackson.core.JsonToken"
  },
  {
    "name": "com.fasterxml.jackson.core.ObjectCodec",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getJsonFactory",
        "parameterTypes": []
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.ResolvedType"
        ]
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.TypeReference"
        ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.core.PrettyPrinter"
  },
  {
    "name": "com.fasterxml.jackson.core.StreamReadFeature"
  },
  {
    "name": "com.fasterxml.jackson.core.StreamWriteFeature"
  },
  {
    "name": "com.fasterxml.jackson.core.TreeCodec",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.core.TreeNode"
  },
  {
    "name": "com.fasterxml.jackson.core.Version"
  },
  {
    "name": "com.fasterxml.jackson.core.Versioned",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "com.fasterxml.jackson.core.exc.StreamReadException"
  },
  {
    "name": "com.fasterxml.jackson.core.exc.StreamWriteException"
  },
  {
    "name": "com.fasterxml.jackson.core.io.CharacterEscapes"
  },
  {
    "name": "com.fasterxml.jackson.core.type.ResolvedType"
  },
  {
    "name": "com.fasterxml.jackson.core.type.TypeReference"
  },
  {
    "name": "com.fasterxml.jackson.databind.AnnotationIntrospector"
  },
  {
    "name": "com.fasterxml.jackson.databind.DatabindException"
  },
  {
    "name": "com.fasterxml.jackson.databind.DeserializationConfig"
  },
  {
    "name": "com.fasterxml.jackson.databind.DeserializationContext"
  },
  {
    "name": "com.fasterxml.jackson.databind.DeserializationFeature"
  },
  {
    "name": "com.fasterxml.jackson.databind.EnumNamingStrategy"
  },
  {
    "name": "com.fasterxml.jackson.databind.InjectableValues"
  },
  {
    "name": "com.fasterxml.jackson.databind.JavaType"
  },
  {
    "name": "com.fasterxml.jackson.databind.JsonDeserializer"
  },
  {
    "name": "com.fasterxml.jackson.databind.JsonMappingException"
  },
  {
    "name": "com.fasterxml.jackson.databind.JsonNode"
  },
  {
    "name": "com.fasterxml.jackson.databind.JsonSerializer"
  },
  {
    "name": "com.fasterxml.jackson.databind.KeyDeserializer"
  },
  {
    "name": "com.fasterxml.jackson.databind.MapperFeature"
  },
  {
    "name": "com.fasterxml.jackson.databind.MappingIterator"
  },
  {
    "name": "com.fasterxml.jackson.databind.Module",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getDependencies",
        "parameterTypes": []
      },
      {
        "name": "getTypeId",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.Module$SetupContext"
  },
  {
    "name": "com.fasterxml.jackson.databind.ObjectMapper",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "createArrayNode",
        "parameterTypes": []
      },
      {
        "name": "createObjectNode",
        "parameterTypes": []
      },
      {
        "name": "getFactory",
        "parameterTypes": []
      },
      {
        "name": "missingNode",
        "parameterTypes": []
      },
      {
        "name": "nullNode",
        "parameterTypes": []
      },
      {
        "name": "readTree",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser"
        ]
      },
      {
        "name": "readValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.ResolvedType"
        ]
      },
      {
        "name": "readValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.TypeReference"
        ]
      },
      {
        "name": "readValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "java.lang.Class"
        ]
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.ResolvedType"
        ]
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.TypeReference"
        ]
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "java.lang.Class"
        ]
      },
      {
        "name": "treeAsTokens",
        "parameterTypes": [
          "com.fasterxml.jackson.core.TreeNode"
        ]
      },
      {
        "name": "treeToValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.TreeNode",
          "java.lang.Class"
        ]
      },
      {
        "name": "version",
        "parameterTypes": []
      },
      {
        "name": "writeTree",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonGenerator",
          "com.fasterxml.jackson.core.TreeNode"
        ]
      },
      {
        "name": "writeValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonGenerator",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping"
  },
  {
    "name": "com.fasterxml.jackson.databind.ObjectReader"
  },
  {
    "name": "com.fasterxml.jackson.databind.ObjectWriter"
  },
  {
    "name": "com.fasterxml.jackson.databind.PropertyNamingStrategy"
  },
  {
    "name": "com.fasterxml.jackson.databind.SerializationConfig"
  },
  {
    "name": "com.fasterxml.jackson.databind.SerializationFeature"
  },
  {
    "name": "com.fasterxml.jackson.databind.SerializerProvider"
  },
  {
    "name": "com.fasterxml.jackson.databind.annotation.JsonSerialize",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.cfg.CacheProvider"
  },
  {
    "name": "com.fasterxml.jackson.databind.cfg.ConstructorDetector"
  },
  {
    "name": "com.fasterxml.jackson.databind.cfg.ContextAttributes"
  },
  {
    "name": "com.fasterxml.jackson.databind.cfg.DatatypeFeature"
  },
  {
    "name": "com.fasterxml.jackson.databind.cfg.HandlerInstantiator"
  },
  {
    "name": "com.fasterxml.jackson.databind.cfg.MutableCoercionConfig"
  },
  {
    "name": "com.fasterxml.jackson.databind.cfg.MutableConfigOverride"
  },
  {
    "name": "com.fasterxml.jackson.databind.deser.BeanDeserializerModifier"
  },
  {
    "name": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext"
  },
  {
    "name": "com.fasterxml.jackson.databind.deser.DeserializationProblemHandler"
  },
  {
    "name": "com.fasterxml.jackson.databind.deser.ValueInstantiator"
  },
  {
    "name": "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Provider"
  },
  {
    "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass"
  },
  {
    "name": "com.fasterxml.jackson.databind.introspect.AnnotatedMethod"
  },
  {
    "name": "com.fasterxml.jackson.databind.introspect.ClassIntrospector"
  },
  {
    "name": "com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver"
  },
  {
    "name": "com.fasterxml.jackson.databind.introspect.VisibilityChecker"
  },
  {
    "name": "com.fasterxml.jackson.databind.json.JsonMapper$Builder"
  },
  {
    "name": "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper"
  },
  {
    "name": "com.fasterxml.jackson.databind.jsonschema.JsonSchema"
  },
  {
    "name": "com.fasterxml.jackson.databind.jsontype.NamedType"
  },
  {
    "name": "com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator"
  },
  {
    "name": "com.fasterxml.jackson.databind.jsontype.SubtypeResolver"
  },
  {
    "name": "com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder"
  },
  {
    "name": "com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver"
  },
  {
    "name": "com.fasterxml.jackson.databind.module.SimpleDeserializers"
  },
  {
    "name": "com.fasterxml.jackson.databind.module.SimpleKeyDeserializers"
  },
  {
    "name": "com.fasterxml.jackson.databind.module.SimpleModule",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addAbstractTypeMapping",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "addDeserializer",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.JsonDeserializer"
        ]
      },
      {
        "name": "addKeyDeserializer",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.KeyDeserializer"
        ]
      },
      {
        "name": "addKeySerializer",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.JsonSerializer"
        ]
      },
      {
        "name": "addSerializer",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.JsonSerializer"
        ]
      },
      {
        "name": "addSerializer",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.JsonSerializer"
        ]
      },
      {
        "name": "addValueInstantiator",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.deser.ValueInstantiator"
        ]
      },
      {
        "name": "getModuleName",
        "parameterTypes": []
      },
      {
        "name": "getTypeId",
        "parameterTypes": []
      },
      {
        "name": "registerSubtypes",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "registerSubtypes",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.jsontype.NamedType[]"
        ]
      },
      {
        "name": "registerSubtypes",
        "parameterTypes": [
          "java.lang.Class[]"
        ]
      },
      {
        "name": "setAbstractTypes",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver"
        ]
      },
      {
        "name": "setDeserializerModifier",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.deser.BeanDeserializerModifier"
        ]
      },
      {
        "name": "setDeserializers",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleDeserializers"
        ]
      },
      {
        "name": "setKeyDeserializers",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleKeyDeserializers"
        ]
      },
      {
        "name": "setKeySerializers",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleSerializers"
        ]
      },
      {
        "name": "setMixInAnnotation",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "setSerializerModifier",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.ser.BeanSerializerModifier"
        ]
      },
      {
        "name": "setSerializers",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleSerializers"
        ]
      },
      {
        "name": "setValueInstantiators",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleValueInstantiators"
        ]
      },
      {
        "name": "setupModule",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.Module$SetupContext"
        ]
      },
      {
        "name": "version",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.module.SimpleSerializers"
  },
  {
    "name": "com.fasterxml.jackson.databind.module.SimpleValueInstantiators"
  },
  {
    "name": "com.fasterxml.jackson.databind.node.ArrayNode"
  },
  {
    "name": "com.fasterxml.jackson.databind.node.JsonNodeFactory"
  },
  {
    "name": "com.fasterxml.jackson.databind.node.ObjectNode"
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.BeanSerializerModifier"
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider"
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.FilterProvider"
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.SerializerFactory"
  },
  {
    "name": "com.fasterxml.jackson.databind.type.LogicalType"
  },
  {
    "name": "com.fasterxml.jackson.databind.type.TypeFactory"
  },
  {
    "name": "com.fasterxml.jackson.dataformat.cbor.CBORFactory"
  },
  {
    "name": "com.fasterxml.jackson.dataformat.smile.SmileFactory"
  },
  {
    "name": "com.fasterxml.jackson.dataformat.xml.XmlMapper"
  },
  {
    "name": "com.fasterxml.jackson.dataformat.yaml.YAMLFactory"
  },
  {
    "name": "com.fasterxml.jackson.datatype.hibernate6.Hibernate6Module",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getModuleName",
        "parameterTypes": []
      },
      {
        "name": "setupModule",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.Module$SetupContext"
        ]
      },
      {
        "name": "version",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.datatype.hibernate6.Hibernate6Module$Feature"
  },
  {
    "name": "com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getModuleName",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setupModule",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.Module$SetupContext"
        ]
      },
      {
        "name": "version",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.datatype.jsr310.JavaTimeFeature"
  },
  {
    "name": "com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setupModule",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.Module$SetupContext"
        ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.module.paramnames.ParameterNamesModule",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setupModule",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.Module$SetupContext"
        ]
      }
    ]
  },
  {
    "name": "com.github.dockerjava.api.DockerClient"
  },
  {
    "name": "com.github.dockerjava.api.command.AsyncDockerCmd",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.github.dockerjava.api.command.CreateContainerCmd",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.github.dockerjava.api.command.CreateContainerResponse",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWarnings",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "com.github.dockerjava.api.command.DockerCmd",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.github.dockerjava.api.command.ExecCreateCmd",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.github.dockerjava.api.command.ExecCreateCmdResponse",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.github.dockerjava.api.command.ExecStartCmd",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.github.dockerjava.api.command.GraphData",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.github.dockerjava.api.command.GraphDriver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.github.dockerjava.api.command.InspectImageResponse",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.github.dockerjava.api.command.KillContainerCmd"
  },
  {
    "name": "com.github.dockerjava.api.command.RemoveContainerCmd"
  },
  {
    "name": "com.github.dockerjava.api.command.RootFS",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.github.dockerjava.api.command.SyncDockerCmd",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.github.dockerjava.api.exception.NotFoundException"
  },
  {
    "name": "com.github.dockerjava.api.model.Container",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "allPublicFields": true
  },
  {
    "name": "com.github.dockerjava.api.model.ContainerConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true
  },
  {
    "name": "com.github.dockerjava.api.model.ContainerHostConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true
  },
  {
    "name": "com.github.dockerjava.api.model.ContainerMount",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true
  },
  {
    "name": "com.github.dockerjava.api.model.ContainerNetwork",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true
  },
  {
    "name": "com.github.dockerjava.api.model.ContainerNetwork$Ipam",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "com.github.dockerjava.api.model.ContainerNetworkSettings",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true
  },
  {
    "name": "com.github.dockerjava.api.model.ContainerPort",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true
  },
  {
    "name": "com.github.dockerjava.api.model.DockerObject",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getRawValues",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.github.dockerjava.api.model.ExposedPort",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "com.github.dockerjava.api.model.ExposedPorts",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "toPrimitive",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.github.dockerjava.api.model.HealthCheck",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "com.github.dockerjava.api.model.HostConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getAnnotations",
        "parameterTypes": []
      },
      {
        "name": "getAutoRemove",
        "parameterTypes": []
      },
      {
        "name": "getBlkioDeviceReadBps",
        "parameterTypes": []
      },
      {
        "name": "getBlkioDeviceReadIOps",
        "parameterTypes": []
      },
      {
        "name": "getBlkioDeviceWriteBps",
        "parameterTypes": []
      },
      {
        "name": "getBlkioDeviceWriteIOps",
        "parameterTypes": []
      },
      {
        "name": "getBlkioWeight",
        "parameterTypes": []
      },
      {
        "name": "getBlkioWeightDevice",
        "parameterTypes": []
      },
      {
        "name": "getCapAdd",
        "parameterTypes": []
      },
      {
        "name": "getCapDrop",
        "parameterTypes": []
      },
      {
        "name": "getCgroup",
        "parameterTypes": []
      },
      {
        "name": "getCgroupParent",
        "parameterTypes": []
      },
      {
        "name": "getCgroupnsMode",
        "parameterTypes": []
      },
      {
        "name": "getConsoleSize",
        "parameterTypes": []
      },
      {
        "name": "getContainerIDFile",
        "parameterTypes": []
      },
      {
        "name": "getCpuCount",
        "parameterTypes": []
      },
      {
        "name": "getCpuPercent",
        "parameterTypes": []
      },
      {
        "name": "getCpuPeriod",
        "parameterTypes": []
      },
      {
        "name": "getCpuQuota",
        "parameterTypes": []
      },
      {
        "name": "getCpuRealtimePeriod",
        "parameterTypes": []
      },
      {
        "name": "getCpuRealtimeRuntime",
        "parameterTypes": []
      },
      {
        "name": "getCpuShares",
        "parameterTypes": []
      },
      {
        "name": "getCpusetCpus",
        "parameterTypes": []
      },
      {
        "name": "getCpusetMems",
        "parameterTypes": []
      },
      {
        "name": "getDeviceCgroupRules",
        "parameterTypes": []
      },
      {
        "name": "getDeviceRequests",
        "parameterTypes": []
      },
      {
        "name": "getDevices",
        "parameterTypes": []
      },
      {
        "name": "getDiskQuota",
        "parameterTypes": []
      },
      {
        "name": "getDns",
        "parameterTypes": []
      },
      {
        "name": "getDnsOptions",
        "parameterTypes": []
      },
      {
        "name": "getDnsSearch",
        "parameterTypes": []
      },
      {
        "name": "getExtraHosts",
        "parameterTypes": []
      },
      {
        "name": "getGroupAdd",
        "parameterTypes": []
      },
      {
        "name": "getInit",
        "parameterTypes": []
      },
      {
        "name": "getIoMaximumBandwidth",
        "parameterTypes": []
      },
      {
        "name": "getIoMaximumIOps",
        "parameterTypes": []
      },
      {
        "name": "getIpcMode",
        "parameterTypes": []
      },
      {
        "name": "getIsolation",
        "parameterTypes": []
      },
      {
        "name": "getKernelMemory",
        "parameterTypes": []
      },
      {
        "name": "getLxcConf",
        "parameterTypes": []
      },
      {
        "name": "getMemory",
        "parameterTypes": []
      },
      {
        "name": "getMemoryReservation",
        "parameterTypes": []
      },
      {
        "name": "getMemorySwap",
        "parameterTypes": []
      },
      {
        "name": "getMemorySwappiness",
        "parameterTypes": []
      },
      {
        "name": "getMounts",
        "parameterTypes": []
      },
      {
        "name": "getNanoCPUs",
        "parameterTypes": []
      },
      {
        "name": "getNetworkMode",
        "parameterTypes": []
      },
      {
        "name": "getOomKillDisable",
        "parameterTypes": []
      },
      {
        "name": "getOomScoreAdj",
        "parameterTypes": []
      },
      {
        "name": "getPidMode",
        "parameterTypes": []
      },
      {
        "name": "getPidsLimit",
        "parameterTypes": []
      },
      {
        "name": "getPortBindings",
        "parameterTypes": []
      },
      {
        "name": "getPrivileged",
        "parameterTypes": []
      },
      {
        "name": "getPublishAllPorts",
        "parameterTypes": []
      },
      {
        "name": "getReadonlyRootfs",
        "parameterTypes": []
      },
      {
        "name": "getRestartPolicy",
        "parameterTypes": []
      },
      {
        "name": "getRuntime",
        "parameterTypes": []
      },
      {
        "name": "getSecurityOpts",
        "parameterTypes": []
      },
      {
        "name": "getShmSize",
        "parameterTypes": []
      },
      {
        "name": "getStorageOpt",
        "parameterTypes": []
      },
      {
        "name": "getSysctls",
        "parameterTypes": []
      },
      {
        "name": "getTmpFs",
        "parameterTypes": []
      },
      {
        "name": "getUlimits",
        "parameterTypes": []
      },
      {
        "name": "getUsernsMode",
        "parameterTypes": []
      },
      {
        "name": "getUtSMode",
        "parameterTypes": []
      },
      {
        "name": "getVolumeDriver",
        "parameterTypes": []
      },
      {
        "name": "getVolumesFrom",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.github.dockerjava.api.model.Image"
  },
  {
    "name": "com.github.dockerjava.api.model.InternetProtocol",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.github.dockerjava.api.model.Isolation",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.github.dockerjava.api.model.Link",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "com.github.dockerjava.api.model.Links",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "com.github.dockerjava.api.model.PullResponseItem",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.github.dockerjava.api.model.ResponseItem",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.github.dockerjava.api.model.ResponseItem$AuxDetail",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "com.github.dockerjava.api.model.ResponseItem$ErrorDetail",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "com.github.dockerjava.api.model.ResponseItem$ProgressDetail",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.github.dockerjava.api.model.Volumes",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "toPrimitive",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.github.dockerjava.core.command.AbstrAsyncDockerCmd",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.github.dockerjava.core.command.AbstrDockerCmd",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.github.dockerjava.core.command.CreateContainerCmdImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "com.github.dockerjava.core.command.ExecCreateCmdImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getContainerId",
        "parameterTypes": []
      },
      {
        "name": "getEnv",
        "parameterTypes": []
      },
      {
        "name": "getPrivileged",
        "parameterTypes": []
      },
      {
        "name": "getUser",
        "parameterTypes": []
      },
      {
        "name": "getWorkingDir",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.github.dockerjava.core.command.ExecStartCmdImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "com.google.common.base.Optional"
  },
  {
    "name": "com.google.common.util.concurrent.AtomicDouble"
  },
  {
    "name": "com.google.errorprone.annotations.CheckReturnValue",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.google.errorprone.annotations.MustBeClosed"
  },
  {
    "name": "com.google.gson.Gson",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.google.gson.GsonBuilder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.aggregation.impl.AggregatorDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.aws.AwsDiscoveryStrategyFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.azure.AzureDiscoveryStrategyFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.cache.impl.CacheDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.cardinality.CardinalityEstimator"
  },
  {
    "name": "com.hazelcast.cardinality.impl.CardinalityEstimatorDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.client.ClientService"
  },
  {
    "name": "com.hazelcast.client.HazelcastClient"
  },
  {
    "name": "com.hazelcast.client.impl.ClientDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.client.impl.ClientEndpointManager",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.client.impl.ClientEndpointManagerImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.cluster.Cluster",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.cluster.Member"
  },
  {
    "name": "com.hazelcast.collection.IList"
  },
  {
    "name": "com.hazelcast.collection.IQueue"
  },
  {
    "name": "com.hazelcast.collection.ISet"
  },
  {
    "name": "com.hazelcast.collection.LocalQueueStats",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.collection.impl.collection.CollectionDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.collection.impl.queue.QueueDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.config.Config"
  },
  {
    "name": "com.hazelcast.config.ExecutorConfig",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "com.hazelcast.config.ExecutorConfig"
        ]
      }
    ]
  },
  {
    "name": "com.hazelcast.config.MapConfig",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.hazelcast.config.MapConfig"
        ]
      }
    ]
  },
  {
    "name": "com.hazelcast.config.QueueConfig",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "com.hazelcast.config.QueueConfig"
        ]
      }
    ]
  },
  {
    "name": "com.hazelcast.config.SerializerConfig"
  },
  {
    "name": "com.hazelcast.config.SetConfig",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "com.hazelcast.config.SetConfig"
        ]
      }
    ]
  },
  {
    "name": "com.hazelcast.config.TopicConfig",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "com.hazelcast.config.TopicConfig"
        ]
      }
    ]
  },
  {
    "name": "com.hazelcast.core.DistributedObject"
  },
  {
    "name": "com.hazelcast.core.DistributedObjectListener"
  },
  {
    "name": "com.hazelcast.core.HazelcastInstance",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.core.ICacheManager"
  },
  {
    "name": "com.hazelcast.core.IExecutorService"
  },
  {
    "name": "com.hazelcast.core.LifecycleService"
  },
  {
    "name": "com.hazelcast.cp.CPSubsystem"
  },
  {
    "name": "com.hazelcast.crdt.pncounter.PNCounter"
  },
  {
    "name": "com.hazelcast.dataconnection.impl.HazelcastDataConnectionRegistration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.dataconnection.impl.JdbcDataConnectionRegistration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.durableexecutor.DurableExecutorService"
  },
  {
    "name": "com.hazelcast.durableexecutor.impl.DurableExecutorDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.executor.impl.DistributedExecutorService$Processor",
    "fields": [
      {
        "name": "responseFlag"
      }
    ]
  },
  {
    "name": "com.hazelcast.executor.impl.ExecutorDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.flakeidgen.FlakeIdGenerator"
  },
  {
    "name": "com.hazelcast.flakeidgen.impl.FlakeIdGeneratorDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.gcp.GcpDiscoveryStrategyFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.hibernate.HazelcastLocalCacheRegionFactory",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.Properties"
        ]
      }
    ],
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.hazelcast.hibernate.instance.HazelcastInstanceLoader",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.hazelcast.hibernate.serialization.Hibernate5CacheEntrySerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.hibernate.serialization.HibernateDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.hibernate.shaded.caffeine.cache.BLCHeader$DrainStatusRef",
    "fields": [
      {
        "name": "drainStatus"
      }
    ],
    "condition": {
      "typeReachable": "com.hazelcast.hibernate.shaded.caffeine.cache.BLCHeader$DrainStatusRef"
    },
    "allDeclaredFields": true
  },
  {
    "name": "com.hazelcast.hibernate.shaded.caffeine.cache.BaseMpscLinkedArrayQueueColdProducerFields",
    "fields": [
      {
        "name": "producerLimit"
      }
    ]
  },
  {
    "name": "com.hazelcast.hibernate.shaded.caffeine.cache.BaseMpscLinkedArrayQueueConsumerFields",
    "fields": [
      {
        "name": "consumerIndex"
      }
    ]
  },
  {
    "name": "com.hazelcast.hibernate.shaded.caffeine.cache.BaseMpscLinkedArrayQueueProducerFields",
    "fields": [
      {
        "name": "producerIndex"
      }
    ]
  },
  {
    "name": "com.hazelcast.hibernate.shaded.caffeine.cache.PS",
    "fields": [
      {
        "name": "key"
      },
      {
        "name": "value"
      }
    ],
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "com.hazelcast.hibernate.shaded.caffeine.cache.PSW",
    "fields": [
      {
        "name": "writeTime"
      }
    ],
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "com.hazelcast.hibernate.shaded.caffeine.cache.PSWMS",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "com.hazelcast.hibernate.shaded.caffeine.cache.SSMSW",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.hazelcast.hibernate.shaded.caffeine.cache.Caffeine",
          "com.hazelcast.hibernate.shaded.caffeine.cache.CacheLoader",
          "boolean"
        ]
      }
    ],
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "com.hazelcast.hibernate.shaded.caffeine.cache.StripedBuffer",
    "fields": [
      {
        "name": "tableBusy"
      }
    ],
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "com.hazelcast.instance.GeneratedBuildProperties",
    "fields": [
      {
        "name": "BUILD"
      },
      {
        "name": "COMMIT_ID"
      },
      {
        "name": "DISTRIBUTION"
      },
      {
        "name": "LAST_LTS_VERSION"
      },
      {
        "name": "PREVIOUS_MINOR_VERSION"
      },
      {
        "name": "REVISION"
      },
      {
        "name": "SERIALIZATION_VERSION"
      },
      {
        "name": "VERSION"
      },
      {
        "name": "LAST_LTS_VERSION",
        "allowWrite": true,
        "allowUnsafeAccess": true
      }
    ],
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "com.hazelcast.instance.GeneratedEnterpriseBuildProperties"
  },
  {
    "name": "com.hazelcast.instance.LocalInstanceStats",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.instance.impl.BuiltInLicenseHolder"
  },
  {
    "name": "com.hazelcast.instance.impl.DefaultNodeExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.hazelcast.instance.impl.Node"
        ]
      }
    ]
  },
  {
    "name": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
  },
  {
    "name": "com.hazelcast.instance.impl.HazelcastInstanceProxy",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "addDistributedObjectListener",
        "parameterTypes": [
          "com.hazelcast.core.DistributedObjectListener"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "executeTransaction",
        "parameterTypes": [
          "com.hazelcast.transaction.TransactionOptions",
          "com.hazelcast.transaction.TransactionalTask"
        ]
      },
      {
        "name": "executeTransaction",
        "parameterTypes": [
          "com.hazelcast.transaction.TransactionalTask"
        ]
      },
      {
        "name": "getCPSubsystem",
        "parameterTypes": []
      },
      {
        "name": "getCacheManager",
        "parameterTypes": []
      },
      {
        "name": "getCardinalityEstimator",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getClientService",
        "parameterTypes": []
      },
      {
        "name": "getCluster",
        "parameterTypes": []
      },
      {
        "name": "getConfig",
        "parameterTypes": []
      },
      {
        "name": "getDistributedObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getDistributedObjects",
        "parameterTypes": []
      },
      {
        "name": "getDurableExecutorService",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getExecutorService",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFlakeIdGenerator",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getJet",
        "parameterTypes": []
      },
      {
        "name": "getLifecycleService",
        "parameterTypes": []
      },
      {
        "name": "getList",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLocalEndpoint",
        "parameterTypes": []
      },
      {
        "name": "getLoggingService",
        "parameterTypes": []
      },
      {
        "name": "getMap",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMultiMap",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPNCounter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPartitionService",
        "parameterTypes": []
      },
      {
        "name": "getQueue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getReliableTopic",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getReplicatedMap",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRingbuffer",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getScheduledExecutorService",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSerializationService",
        "parameterTypes": []
      },
      {
        "name": "getSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSplitBrainProtectionService",
        "parameterTypes": []
      },
      {
        "name": "getSql",
        "parameterTypes": []
      },
      {
        "name": "getTopic",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUserContext",
        "parameterTypes": []
      },
      {
        "name": "getXAResource",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "newTransactionContext",
        "parameterTypes": []
      },
      {
        "name": "newTransactionContext",
        "parameterTypes": [
          "com.hazelcast.transaction.TransactionOptions"
        ]
      },
      {
        "name": "removeDistributedObjectListener",
        "parameterTypes": [
          "java.util.UUID"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.ascii.TextProtocolsDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.cluster.ClusterClock",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.internal.cluster.ClusterService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.internal.cluster.ClusterStateListener",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.internal.cluster.Versions",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "com.hazelcast.internal.cluster.impl.ClusterClockImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getClusterStartTime",
        "parameterTypes": []
      },
      {
        "name": "getClusterTime",
        "parameterTypes": []
      },
      {
        "name": "getClusterTimeDiff",
        "parameterTypes": []
      },
      {
        "name": "getClusterUpTime",
        "parameterTypes": []
      },
      {
        "name": "getLocalClockTime",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.cluster.impl.ClusterDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.cluster.impl.ClusterHeartbeatManager",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.internal.cluster.impl.ClusterServiceImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getSize",
        "parameterTypes": []
      }
    ],
    "allPublicMethods": true
  },
  {
    "name": "com.hazelcast.internal.config.ConfigDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.crdt.CRDTDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.journal.EventJournalDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.locksupport.LockDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.locksupport.operations.AbstractLockOperation",
    "fields": [
      {
        "name": "referenceCallId"
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.longregister.LongRegisterDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.longregister.LongRegisterServiceDescriptorProvider",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.management.ManagementDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.memory.DefaultMemoryStats",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.internal.memory.MemoryStats",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getCommittedHeap",
        "parameterTypes": []
      },
      {
        "name": "getCommittedNative",
        "parameterTypes": []
      },
      {
        "name": "getFreeHeap",
        "parameterTypes": []
      },
      {
        "name": "getFreeNative",
        "parameterTypes": []
      },
      {
        "name": "getFreePhysical",
        "parameterTypes": []
      },
      {
        "name": "getMaxHeap",
        "parameterTypes": []
      },
      {
        "name": "getMaxMetadata",
        "parameterTypes": []
      },
      {
        "name": "getMaxNative",
        "parameterTypes": []
      },
      {
        "name": "getTotalPhysical",
        "parameterTypes": []
      },
      {
        "name": "getUsedHeap",
        "parameterTypes": []
      },
      {
        "name": "getUsedMetadata",
        "parameterTypes": []
      },
      {
        "name": "getUsedNative",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.metrics.DynamicMetricsProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.internal.metrics.StaticMetricsProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.internal.metrics.managementcenter.MetricsDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.metrics.metricsets.GarbageCollectionMetricSet$GcStats",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.internal.monitor.impl.GlobalIndexesStats",
    "fields": [
      {
        "name": "indexedQueryCount"
      },
      {
        "name": "queryCount"
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.monitor.impl.LocalExecutorStatsImpl",
    "fields": [
      {
        "name": "cancelled"
      },
      {
        "name": "completed"
      },
      {
        "name": "pending"
      },
      {
        "name": "started"
      },
      {
        "name": "totalExecutionTime"
      },
      {
        "name": "totalStartLatency"
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.monitor.impl.LocalMapStatsImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getMaxGetLatency",
        "parameterTypes": []
      },
      {
        "name": "getMaxPutLatency",
        "parameterTypes": []
      },
      {
        "name": "getMaxRemoveLatency",
        "parameterTypes": []
      },
      {
        "name": "getMaxSetLatency",
        "parameterTypes": []
      },
      {
        "name": "getTotalGetLatency",
        "parameterTypes": []
      },
      {
        "name": "getTotalPutLatency",
        "parameterTypes": []
      },
      {
        "name": "getTotalRemoveLatency",
        "parameterTypes": []
      },
      {
        "name": "getTotalSetLatency",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.monitor.impl.LocalQueueStatsImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getEventOperationCount",
        "parameterTypes": []
      },
      {
        "name": "total",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.monitor.impl.LocalRecordStoreStatsImpl",
    "fields": [
      {
        "name": "evictionCount"
      },
      {
        "name": "expirationCount"
      },
      {
        "name": "hits"
      },
      {
        "name": "lastAccessTime"
      },
      {
        "name": "lastUpdateTime"
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.monitor.impl.LocalReplicationStatsImpl",
    "fields": [
      {
        "name": "diffPartitionReplicationCount"
      },
      {
        "name": "diffPartitionReplicationRecordsCount"
      },
      {
        "name": "fullPartitionReplicationCount"
      },
      {
        "name": "fullPartitionReplicationRecordsCount"
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.monitor.impl.LocalTopicStatsImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.internal.networking.Networking",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.internal.networking.nio.NioNetworking",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.hazelcast.internal.networking.nio.NioThread",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "idleTimeMillis",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.networking.nio.iobalancer.IOBalancer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.internal.nio.ClassLoaderUtil$IrresolvableConstructor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.nio.ConnectionListenable",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.internal.nio.ConnectionListener",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.internal.partition.IPartitionService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.internal.partition.InternalPartitionService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.internal.partition.PartitionAwareService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.internal.partition.PartitionReplicaVersionManager",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getMaxAllowedBackupCount",
        "parameterTypes": []
      },
      {
        "name": "getMigrationQueueSize",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.partition.impl.MigrationManager",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.hazelcast.internal.partition.impl.MigrationManagerImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "migrationActiveProbe",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.partition.impl.MigrationStats",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getElapsedDestinationCommitTimeNanoseconds",
        "parameterTypes": []
      },
      {
        "name": "getElapsedMigrationOperationTimeNanoseconds",
        "parameterTypes": []
      },
      {
        "name": "getElapsedMigrationTimeNanoseconds",
        "parameterTypes": []
      },
      {
        "name": "getTotalElapsedDestinationCommitTimeNanoseconds",
        "parameterTypes": []
      },
      {
        "name": "getTotalElapsedMigrationOperationTimeNanoseconds",
        "parameterTypes": []
      },
      {
        "name": "getTotalElapsedMigrationTimeNanoseconds",
        "parameterTypes": []
      },
      {
        "name": "getPlannedMigrations",
        "parameterTypes": []
      },
      {
        "name": "getCompletedMigrations",
        "parameterTypes": []
      },
      {
        "name": "getTotalCompletedMigrations",
        "parameterTypes": []
      },
      {
        "name": "getElapsedMigrationOperationTime",
        "parameterTypes": []
      },
      {
        "name": "getTotalElapsedMigrationOperationTime",
        "parameterTypes": []
      }
    ],
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.internal.partition.impl.PartitionDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.partition.impl.PartitionReplicaManager",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.internal.partition.impl.PartitionStateManager",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.hazelcast.internal.partition.impl.PartitionStateManagerImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "activePartitionCount",
        "parameterTypes": []
      },
      {
        "name": "localPartitionCount",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.serialization.InternalSerializationService"
  },
  {
    "name": "com.hazelcast.internal.serialization.impl.compact.schema.SchemaDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.server.ServerConnectionManager",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.internal.server.tcp.TcpServer$MetricsProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.internal.server.tcp.TcpServerAcceptor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "idleTimeMillis",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.server.tcp.TcpServerConnectionManager",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "connectionCount",
        "parameterTypes": []
      },
      {
        "name": "connectionsInProgress",
        "parameterTypes": []
      }
    ],
    "allPublicMethods": true
  },
  {
    "name": "com.hazelcast.internal.server.tcp.TcpServerConnectionManagerBase",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.internal.services.ClientAwareService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.internal.services.CoreService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.internal.services.GracefulShutdownAwareService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.internal.services.ManagedService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.internal.services.MembershipAwareService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.internal.services.PostJoinAwareService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.internal.services.PreJoinAwareService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.internal.services.TransactionalService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.internal.usercodedeployment.impl.UserCodeDeploymentSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.util.LatencyDistribution",
    "fields": [
      {
        "name": "count"
      },
      {
        "name": "maxMicros"
      },
      {
        "name": "totalMicros"
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.util.collection.UtilCollectionSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.util.counters.MwCounter",
    "fields": [
      {
        "name": "value"
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.util.counters.SwCounter",
    "fields": [
      {
        "name": "value"
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.util.executor.CachedExecutorServiceDelegate",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.internal.util.executor.HazelcastManagedThread",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.internal.util.executor.ManagedExecutorService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getCompletedTaskCount",
        "parameterTypes": []
      },
      {
        "name": "getMaximumPoolSize",
        "parameterTypes": []
      },
      {
        "name": "getPoolSize",
        "parameterTypes": []
      },
      {
        "name": "getQueueSize",
        "parameterTypes": []
      },
      {
        "name": "getRemainingQueueCapacity",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.util.executor.NamedThreadPoolExecutor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.internal.util.phonehome.BuildInfoProvider",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.util.phonehome.CacheMetricsProvider",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.util.phonehome.ClientMetricsProvider",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.util.phonehome.ClientRoutingModeMetricsProvider",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.util.phonehome.CloudInfoProvider",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.util.phonehome.ClusterMetricsProvider",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.util.phonehome.DistributedObjectMetricsProvider",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.util.phonehome.DynamicConfigMetricsProvider",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.util.phonehome.JetMetricsProvider",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.util.phonehome.MapMetricsProvider",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.util.phonehome.OSInfoProvider",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.util.phonehome.RestApiMetricsProvider",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.util.phonehome.SqlMetricsProvider",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.util.phonehome.StorageMetricsProvider",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.util.phonehome.UserCodeNamespacesMetricsProvider",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.internal.util.phonehome.VMMetricsProvider",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.jet.JetService"
  },
  {
    "name": "com.hazelcast.jet.accumulator.AccumulatorSerializerHooks$DoubleAccHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.jet.accumulator.AccumulatorSerializerHooks$LinTrendAccHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.jet.accumulator.AccumulatorSerializerHooks$LongAccHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.jet.accumulator.AccumulatorSerializerHooks$LongDoubleAccHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.jet.accumulator.AccumulatorSerializerHooks$LongLongAccHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.jet.accumulator.AccumulatorSerializerHooks$MutableReferenceHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.jet.accumulator.AccumulatorSerializerHooks$PickAnyAccHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.jet.config.JetConfigDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.jet.core.CoreSerializerHooks$JetEventHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.jet.core.CoreSerializerHooks$WatermarkHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.jet.core.JetDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.jet.core.metrics.MetricsDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.jet.datamodel.DataModelSerializerHooks$ItemsByTagHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.jet.datamodel.DataModelSerializerHooks$KeyedWindowResultHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.jet.datamodel.DataModelSerializerHooks$TagHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.jet.datamodel.DataModelSerializerHooks$TimestampedItemHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.jet.datamodel.DataModelSerializerHooks$Tuple2Hook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.jet.datamodel.DataModelSerializerHooks$Tuple3Hook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.jet.datamodel.DataModelSerializerHooks$Tuple4Hook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.jet.datamodel.DataModelSerializerHooks$Tuple5Hook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.jet.datamodel.DataModelSerializerHooks$WindowResultHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.jet.impl.aggregate.AggregateDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.jet.impl.client.protocol.task.JetMessageTaskFactoryProvider",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.hazelcast.spi.impl.NodeEngine"
        ]
      }
    ]
  },
  {
    "name": "com.hazelcast.jet.impl.execution.ExecutionSerializerHooks$BroadcastEntryHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.jet.impl.execution.ExecutionSerializerHooks$BroadcastKeyHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.jet.impl.execution.ExecutionSerializerHooks$DoneItemHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.jet.impl.execution.ExecutionSerializerHooks$SnapshotBarrierHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.jet.impl.execution.init.CustomClassLoadedObject$Hook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.jet.impl.execution.init.JetInitDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.jet.impl.metrics.JetMetricsDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.jet.impl.observer.JetObserverDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.jet.impl.util.FunctionsSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.jet.json.JsonSerializerHooks$DeferredMapHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.json.internal.JsonDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.kubernetes.HazelcastKubernetesDiscoveryStrategyFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.logging.Logger",
    "methods": [
      {
        "name": "getLogger",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "com.hazelcast.logging.LoggingService"
  },
  {
    "name": "com.hazelcast.map.IMap"
  },
  {
    "name": "com.hazelcast.map.LocalMapStats",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.map.impl.EECompatMapDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.map.impl.MapDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.map.impl.record.CachedSimpleRecord",
    "fields": [
      {
        "name": "cachedValue"
      }
    ]
  },
  {
    "name": "com.hazelcast.multimap.MultiMap"
  },
  {
    "name": "com.hazelcast.multimap.impl.MultiMapDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.partition.PartitionService"
  },
  {
    "name": "com.hazelcast.projection.impl.ProjectionDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.query.impl.predicates.PredicateDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.replicatedmap.ReplicatedMap"
  },
  {
    "name": "com.hazelcast.replicatedmap.impl.operation.ReplicatedMapDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.ringbuffer.Ringbuffer"
  },
  {
    "name": "com.hazelcast.ringbuffer.impl.RingbufferDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.scheduledexecutor.IScheduledExecutorService"
  },
  {
    "name": "com.hazelcast.scheduledexecutor.impl.ScheduledExecutorDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.shaded.org.jctools.queues.MpmcArrayQueueConsumerIndexField",
    "fields": [
      {
        "name": "consumerIndex"
      },
      {
        "name": "consumerIndex",
        "allowUnsafeAccess": true
      }
    ],
    "allDeclaredFields": true
  },
  {
    "name": "com.hazelcast.shaded.org.jctools.queues.MpmcArrayQueueProducerIndexField",
    "fields": [
      {
        "name": "producerIndex"
      },
      {
        "name": "producerIndex",
        "allowUnsafeAccess": true
      }
    ],
    "allDeclaredFields": true
  },
  {
    "name": "com.hazelcast.spi.discovery.multicast.MulticastDiscoveryStrategyFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.spi.impl.AbstractInvocationFuture",
    "fields": [
      {
        "name": "state"
      }
    ]
  },
  {
    "name": "com.hazelcast.spi.impl.SerializationServiceSupport",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "com.hazelcast.spi.impl.SpiDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.spi.impl.eventservice.EventPublishingService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.spi.impl.eventservice.EventService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.spi.impl.eventservice.impl.EventServiceImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "eventsProcessed",
        "parameterTypes": []
      },
      {
        "name": "getEventQueueSize",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.spi.impl.eventservice.impl.EventServiceSegment",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.spi.impl.merge.SplitBrainDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.spi.impl.operationexecutor.OperationExecutor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.spi.impl.operationexecutor.OperationHostileThread",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.spi.impl.operationexecutor.OperationRunner",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.spi.impl.operationexecutor.impl.GenericOperationThread",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getExecutedOperationCount",
        "parameterTypes": []
      },
      {
        "name": "getGenericPriorityQueueSize",
        "parameterTypes": []
      },
      {
        "name": "getGenericQueueSize",
        "parameterTypes": []
      },
      {
        "name": "getGenericThreadCount",
        "parameterTypes": []
      },
      {
        "name": "getPartitionThreadCount",
        "parameterTypes": []
      },
      {
        "name": "getPriorityQueueSize",
        "parameterTypes": []
      },
      {
        "name": "getQueueSize",
        "parameterTypes": []
      },
      {
        "name": "getRunningGenericOperationCount",
        "parameterTypes": []
      },
      {
        "name": "getRunningOperationCount",
        "parameterTypes": []
      },
      {
        "name": "getRunningPartitionOperationCount",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.spi.impl.operationexecutor.impl.OperationThread",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.spi.impl.operationexecutor.impl.PartitionOperationThread",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "normalPendingCount",
        "parameterTypes": []
      },
      {
        "name": "priorityPendingCount",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.spi.impl.operationparker.OperationParker",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.spi.impl.operationparker.impl.OperationParkerImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getParkQueueCount",
        "parameterTypes": []
      },
      {
        "name": "getTotalParkedOperationCount",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.spi.impl.operationservice.LiveOperationsTracker",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.spi.impl.operationservice.Operation",
    "fields": [
      {
        "name": "callId"
      }
    ]
  },
  {
    "name": "com.hazelcast.spi.impl.operationservice.OperationService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.spi.impl.operationservice.impl.BaseInvocation",
    "fields": [
      {
        "name": "backupsAcksReceived"
      }
    ]
  },
  {
    "name": "com.hazelcast.spi.impl.operationservice.impl.InboundResponseHandlerSupplier",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "responseQueueSize",
        "parameterTypes": []
      },
      {
        "name": "responsesBackup",
        "parameterTypes": []
      },
      {
        "name": "responsesError",
        "parameterTypes": []
      },
      {
        "name": "responsesMissing",
        "parameterTypes": []
      },
      {
        "name": "responsesNormal",
        "parameterTypes": []
      },
      {
        "name": "responsesTimeout",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.spi.impl.operationservice.impl.Invocation",
    "fields": [
      {
        "name": "responseReceived"
      }
    ]
  },
  {
    "name": "com.hazelcast.spi.impl.operationservice.impl.InvocationMonitor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.spi.impl.operationservice.impl.InvocationRegistry",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getLastCallId",
        "parameterTypes": []
      },
      {
        "name": "invocationsUsedPercentage",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.hazelcast.spi.impl.proxyservice.InternalProxyService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.spi.impl.proxyservice.ProxyService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.spi.impl.proxyservice.impl.ProxyServiceImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getProxyCount",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.splitbrainprotection.SplitBrainProtectionService"
  },
  {
    "name": "com.hazelcast.spring.cache.HazelcastCacheManager",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getCache",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCacheNames",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.sql.SqlService"
  },
  {
    "name": "com.hazelcast.sql.impl.SqlDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.topic.ITopic"
  },
  {
    "name": "com.hazelcast.topic.LocalTopicStats",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.topic.Message"
  },
  {
    "name": "com.hazelcast.topic.impl.TopicDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.transaction.HazelcastXAResource"
  },
  {
    "name": "com.hazelcast.transaction.TransactionContext"
  },
  {
    "name": "com.hazelcast.transaction.TransactionException"
  },
  {
    "name": "com.hazelcast.transaction.TransactionManagerService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.transaction.TransactionOptions"
  },
  {
    "name": "com.hazelcast.transaction.TransactionalTask"
  },
  {
    "name": "com.hazelcast.transaction.impl.TransactionDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.hazelcast.transaction.impl.TransactionManagerServiceImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.wan.impl.WanDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.ibm.lang.management.OperatingSystemMXBean"
  },
  {
    "name": "com.ibm.websphere.wsoc.WsWsocServerContainer"
  },
  {
    "name": "com.jayway.jsonpath.DocumentContext"
  },
  {
    "name": "com.mysql.cj.jdbc.AbandonedConnectionCleanupThread"
  },
  {
    "name": "com.mysql.cj.jdbc.Driver"
  },
  {
    "name": "com.querydsl.core.types.Predicate"
  },
  {
    "name": "com.rometools.rome.feed.WireFeed"
  },
  {
    "name": "com.sun.crypto.provider.AESCipher$General",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.ARCFOURCipher",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.ChaCha20Cipher$ChaCha20Poly1305",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.DESCipher",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.DESedeCipher",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.GaloisCounterMode$AESGCM",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.HmacCore$HmacSHA512",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.management.GarbageCollectionNotificationInfo"
  },
  {
    "name": "com.sun.management.GarbageCollectorMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.sun.management.GcInfo",
    "queryAllPublicMethods": true,
    "fields": [
      {
        "name": "builder"
      },
      {
        "name": "extAttributes"
      }
    ],
    "methods": [
      {
        "name": "getMemoryUsageBeforeGc",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.management.HotSpotDiagnosticMXBean",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getVMOption",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "com.sun.management.OperatingSystemMXBean",
    "methods": [
      {
        "name": "getCpuLoad",
        "parameterTypes": []
      },
      {
        "name": "getFreePhysicalMemorySize",
        "parameterTypes": []
      },
      {
        "name": "getProcessCpuLoad",
        "parameterTypes": []
      },
      {
        "name": "getProcessCpuTime",
        "parameterTypes": []
      },
      {
        "name": "getSystemCpuLoad",
        "parameterTypes": []
      },
      {
        "name": "getTotalPhysicalMemorySize",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.management.ThreadMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.sun.management.UnixOperatingSystemMXBean",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getMaxFileDescriptorCount",
        "parameterTypes": []
      },
      {
        "name": "getOpenFileDescriptorCount",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.management.VMOption",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOrigin",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "isWriteable",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.management.internal.GarbageCollectorExtImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "com.sun.management.internal.HotSpotDiagnostic",
    "queryAllPublicConstructors": true
  },
  {
    "name": "com.sun.management.internal.HotSpotThreadImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "com.sun.management.internal.OperatingSystemImpl",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "getCommittedVirtualMemorySize",
        "parameterTypes": []
      },
      {
        "name": "getFreeSwapSpaceSize",
        "parameterTypes": []
      },
      {
        "name": "getMaxFileDescriptorCount",
        "parameterTypes": []
      },
      {
        "name": "getOpenFileDescriptorCount",
        "parameterTypes": []
      },
      {
        "name": "getProcessCpuLoad",
        "parameterTypes": []
      },
      {
        "name": "getProcessCpuTime",
        "parameterTypes": []
      },
      {
        "name": "getTotalSwapSpaceSize",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.xml.internal.stream.XMLInputFactoryImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.xml.internal.stream.XMLOutputFactoryImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.xml.internal.stream.events.XMLEventFactoryImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.zaxxer.hikari.HikariConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addDataSourceProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "addHealthCheckProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "copyStateTo",
        "parameterTypes": [
          "com.zaxxer.hikari.HikariConfig"
        ]
      },
      {
        "name": "getCatalog",
        "parameterTypes": []
      },
      {
        "name": "getConnectionInitSql",
        "parameterTypes": []
      },
      {
        "name": "getConnectionTestQuery",
        "parameterTypes": []
      },
      {
        "name": "getConnectionTimeout",
        "parameterTypes": []
      },
      {
        "name": "getCredentials",
        "parameterTypes": []
      },
      {
        "name": "getCredentialsProvider",
        "parameterTypes": []
      },
      {
        "name": "getCredentialsProviderClassName",
        "parameterTypes": []
      },
      {
        "name": "getDataSource",
        "parameterTypes": []
      },
      {
        "name": "getDataSourceClassName",
        "parameterTypes": []
      },
      {
        "name": "getDataSourceJNDI",
        "parameterTypes": []
      },
      {
        "name": "getDataSourceProperties",
        "parameterTypes": []
      },
      {
        "name": "getDriverClassName",
        "parameterTypes": []
      },
      {
        "name": "getExceptionOverride",
        "parameterTypes": []
      },
      {
        "name": "getExceptionOverrideClassName",
        "parameterTypes": []
      },
      {
        "name": "getHealthCheckProperties",
        "parameterTypes": []
      },
      {
        "name": "getHealthCheckRegistry",
        "parameterTypes": []
      },
      {
        "name": "getIdleTimeout",
        "parameterTypes": []
      },
      {
        "name": "getInitializationFailTimeout",
        "parameterTypes": []
      },
      {
        "name": "getJdbcUrl",
        "parameterTypes": []
      },
      {
        "name": "getKeepaliveTime",
        "parameterTypes": []
      },
      {
        "name": "getLeakDetectionThreshold",
        "parameterTypes": []
      },
      {
        "name": "getMaxLifetime",
        "parameterTypes": []
      },
      {
        "name": "getMaximumPoolSize",
        "parameterTypes": []
      },
      {
        "name": "getMetricRegistry",
        "parameterTypes": []
      },
      {
        "name": "getMetricsTrackerFactory",
        "parameterTypes": []
      },
      {
        "name": "getMinimumIdle",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getPoolName",
        "parameterTypes": []
      },
      {
        "name": "getScheduledExecutor",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      },
      {
        "name": "getThreadFactory",
        "parameterTypes": []
      },
      {
        "name": "getTransactionIsolation",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "getValidationTimeout",
        "parameterTypes": []
      },
      {
        "name": "isAllowPoolSuspension",
        "parameterTypes": []
      },
      {
        "name": "isAutoCommit",
        "parameterTypes": []
      },
      {
        "name": "isIsolateInternalQueries",
        "parameterTypes": []
      },
      {
        "name": "isReadOnly",
        "parameterTypes": []
      },
      {
        "name": "isRegisterMbeans",
        "parameterTypes": []
      },
      {
        "name": "setAllowPoolSuspension",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAutoCommit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCatalog",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionInitSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionTestQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setCredentials",
        "parameterTypes": [
          "com.zaxxer.hikari.util.Credentials"
        ]
      },
      {
        "name": "setCredentialsProvider",
        "parameterTypes": [
          "com.zaxxer.hikari.HikariCredentialsProvider"
        ]
      },
      {
        "name": "setCredentialsProviderClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDataSource",
        "parameterTypes": [
          "javax.sql.DataSource"
        ]
      },
      {
        "name": "setDataSourceClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDataSourceJNDI",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDataSourceProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setDriverClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExceptionOverride",
        "parameterTypes": [
          "com.zaxxer.hikari.SQLExceptionOverride"
        ]
      },
      {
        "name": "setExceptionOverrideClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHealthCheckProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setIdleTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setInitializationFailTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setIsolateInternalQueries",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setJdbcUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeepaliveTime",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setLeakDetectionThreshold",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setMaxLifetime",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setMaximumPoolSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMinimumIdle",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPoolName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReadOnly",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRegisterMbeans",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setScheduledExecutor",
        "parameterTypes": [
          "java.util.concurrent.ScheduledExecutorService"
        ]
      },
      {
        "name": "setSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setThreadFactory",
        "parameterTypes": [
          "java.util.concurrent.ThreadFactory"
        ]
      },
      {
        "name": "setTransactionIsolation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValidationTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.zaxxer.hikari.HikariConfigMXBean",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "com.zaxxer.hikari.HikariCredentialsProvider"
  },
  {
    "name": "com.zaxxer.hikari.HikariDataSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getConnection",
        "parameterTypes": []
      },
      {
        "name": "getConnection",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getLogWriter",
        "parameterTypes": []
      },
      {
        "name": "getLoginTimeout",
        "parameterTypes": []
      },
      {
        "name": "getParentLogger",
        "parameterTypes": []
      },
      {
        "name": "isWrapperFor",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setHealthCheckRegistry",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setLogWriter",
        "parameterTypes": [
          "java.io.PrintWriter"
        ]
      },
      {
        "name": "setLoginTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMetricRegistry",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setMetricsTrackerFactory",
        "parameterTypes": [
          "com.zaxxer.hikari.metrics.MetricsTrackerFactory"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "unwrap",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "com.zaxxer.hikari.HikariPoolMXBean"
  },
  {
    "name": "com.zaxxer.hikari.SQLExceptionOverride"
  },
  {
    "name": "com.zaxxer.hikari.metrics.MetricsTrackerFactory"
  },
  {
    "name": "com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTrackerFactory",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ],
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zaxxer.hikari.pool.HikariProxyConnection",
    "methods": [
      {
        "name": "getSchema",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.zaxxer.hikari.pool.PoolBase",
    "fields": [
      {
        "name": "catalog"
      }
    ]
  },
  {
    "name": "com.zaxxer.hikari.pool.PoolEntry",
    "fields": [
      {
        "name": "state"
      }
    ]
  },
  {
    "name": "com.zaxxer.hikari.util.Credentials"
  },
  {
    "name": "de.jplag.JPlagResult"
  },
  {
    "name": "de.jplag.Language"
  },
  {
    "name": "de.jplag.exceptions.ExitException"
  },
  {
    "name": "de.tum.cit.aet.artemis.ArtemisApp",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "main",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.ArtemisApp__ApplicationContextInitializer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.ArtemisApp__EnvironmentPostProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.OpenAPIConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.OpenAPIConfiguration$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.OpenAPIConfiguration$$SpringCGLIB$$FastClass$$0",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.OpenAPIConfiguration$$SpringCGLIB$$FastClass$$1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.ResultListener",
    "queryAllDeclaredMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "createOrUpdateResult",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.Result"
        ]
      },
      {
        "name": "removeResult",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.Result"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.AssessmentNote",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCreatedDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setCreator",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "setLastModifiedDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setNote",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.AssessmentNote_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "createdDate"
      },
      {
        "name": "creator"
      },
      {
        "name": "lastModifiedDate"
      },
      {
        "name": "note"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.AssessmentType",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.AssessmentType.AUTOMATIC"
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.AssessmentType.MANUAL"
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.AssessmentType.SEMI_AUTOMATIC"
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.Bonus",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setBonusToGradingScale",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.GradingScale"
        ]
      },
      {
        "name": "setSourceGradingScale",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.GradingScale"
        ]
      },
      {
        "name": "setWeight",
        "parameterTypes": [
          "double"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.Bonus$HibernateAccessOptimizer$kl02vPc8",
    "fields": [
      {
        "name": "invocationTarget$o8sl9q0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.Bonus$HibernateInstantiator$ROIkKQPl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.BonusStrategy",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.Bonus_",
    "fields": [
      {
        "name": "bonusToGradingScale"
      },
      {
        "name": "class_"
      },
      {
        "name": "sourceGradingScale"
      },
      {
        "name": "weight"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.CategoryState",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.Complaint",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setAccepted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setComplaintResponse",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.ComplaintResponse"
        ]
      },
      {
        "name": "setComplaintText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setComplaintType",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.ComplaintType"
        ]
      },
      {
        "name": "setResult",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.Result"
        ]
      },
      {
        "name": "setStudent",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "setSubmittedTime",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setTeam",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Team"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.Complaint$HibernateAccessOptimizer$WM16EY2G",
    "fields": [
      {
        "name": "invocationTarget$e3aa8g1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.Complaint$HibernateInstantiator$u7hBRB4R",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.ComplaintResponse",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setComplaint",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.Complaint"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastModifiedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastModifiedDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setResponseText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReviewer",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "setSubmittedTime",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.ComplaintResponse$HibernateAccessOptimizer$tHNwYV4G",
    "fields": [
      {
        "name": "invocationTarget$eubh3k0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.ComplaintResponse$HibernateInstantiator$j2f4s5uD",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.ComplaintResponse_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "complaint"
      },
      {
        "name": "responseText"
      },
      {
        "name": "reviewer"
      },
      {
        "name": "submittedTime"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.ComplaintType",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.ComplaintType.COMPLAINT"
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.ComplaintType.MORE_FEEDBACK"
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.Complaint_",
    "fields": [
      {
        "name": "accepted"
      },
      {
        "name": "class_"
      },
      {
        "name": "complaintResponse"
      },
      {
        "name": "complaintText"
      },
      {
        "name": "complaintType"
      },
      {
        "name": "result"
      },
      {
        "name": "student"
      },
      {
        "name": "submittedTime"
      },
      {
        "name": "team"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.ExampleSubmission",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setAssessmentExplanation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise"
        ]
      },
      {
        "name": "setSubmission",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Submission"
        ]
      },
      {
        "name": "setTutorParticipations",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setUsedForTutorial",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getAssessmentExplanation",
        "parameterTypes": []
      },
      {
        "name": "getExercise",
        "parameterTypes": []
      },
      {
        "name": "getSubmission",
        "parameterTypes": []
      },
      {
        "name": "getTutorParticipations",
        "parameterTypes": []
      },
      {
        "name": "isUsedForTutorial",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.ExampleSubmission$HibernateAccessOptimizer$RhQW7DnD",
    "fields": [
      {
        "name": "invocationTarget$3uprmu1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.ExampleSubmission$HibernateInstantiator$Xh2N8SZX",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.ExampleSubmission_",
    "fields": [
      {
        "name": "assessmentExplanation"
      },
      {
        "name": "class_"
      },
      {
        "name": "exercise"
      },
      {
        "name": "submission"
      },
      {
        "name": "tutorParticipations"
      },
      {
        "name": "usedForTutorial"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.Feedback",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getCredits",
        "parameterTypes": []
      },
      {
        "name": "getDetailText",
        "parameterTypes": []
      },
      {
        "name": "getGradingInstruction",
        "parameterTypes": []
      },
      {
        "name": "getHasLongFeedbackText",
        "parameterTypes": []
      },
      {
        "name": "getReference",
        "parameterTypes": []
      },
      {
        "name": "getTestCase",
        "parameterTypes": []
      },
      {
        "name": "getText",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getVisibility",
        "parameterTypes": []
      },
      {
        "name": "isPositive",
        "parameterTypes": []
      },
      {
        "name": "setCredits",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setDetailText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGradingInstruction",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.GradingInstruction"
        ]
      },
      {
        "name": "setHasLongFeedbackText",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLongFeedbackText",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setPositive",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setReference",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResult",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.Result"
        ]
      },
      {
        "name": "setTestCase",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseTestCase"
        ]
      },
      {
        "name": "setText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.FeedbackType"
        ]
      },
      {
        "name": "setVisibility",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.Visibility"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.Feedback$HibernateAccessOptimizer$wbwdEEdf",
    "fields": [
      {
        "name": "invocationTarget$o4qaah1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.Feedback$HibernateInstantiator$DlH9n0Cp",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.FeedbackType",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.Feedback_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "credits"
      },
      {
        "name": "detailText"
      },
      {
        "name": "gradingInstruction"
      },
      {
        "name": "hasLongFeedbackText"
      },
      {
        "name": "longFeedbackText"
      },
      {
        "name": "positive"
      },
      {
        "name": "reference"
      },
      {
        "name": "result"
      },
      {
        "name": "testCase"
      },
      {
        "name": "text"
      },
      {
        "name": "type"
      },
      {
        "name": "visibility"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.GradeStep",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setGradeName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGradingScale",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.GradingScale"
        ]
      },
      {
        "name": "setIsPassingGrade",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLowerBoundInclusive",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLowerBoundPercentage",
        "parameterTypes": [
          "double"
        ]
      },
      {
        "name": "setUpperBoundInclusive",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUpperBoundPercentage",
        "parameterTypes": [
          "double"
        ]
      },
      {
        "name": "getGradeName",
        "parameterTypes": []
      },
      {
        "name": "getIsPassingGrade",
        "parameterTypes": []
      },
      {
        "name": "getLowerBoundPercentage",
        "parameterTypes": []
      },
      {
        "name": "getNumericValue",
        "parameterTypes": []
      },
      {
        "name": "getUpperBoundPercentage",
        "parameterTypes": []
      },
      {
        "name": "isLowerBoundInclusive",
        "parameterTypes": []
      },
      {
        "name": "isUpperBoundInclusive",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.GradeStep$HibernateAccessOptimizer$zOApiPx6",
    "fields": [
      {
        "name": "invocationTarget$rtc5ck0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.GradeStep$HibernateInstantiator$Vu7JjMQc",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.GradeStep_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "gradeName"
      },
      {
        "name": "gradingScale"
      },
      {
        "name": "isPassingGrade"
      },
      {
        "name": "lowerBoundInclusive"
      },
      {
        "name": "lowerBoundPercentage"
      },
      {
        "name": "upperBoundInclusive"
      },
      {
        "name": "upperBoundPercentage"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.GradeType",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.GradeType.BONUS"
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.GradingCriterion",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise"
        ]
      },
      {
        "name": "setStructuredGradingInstructions",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.GradingCriterion$HibernateAccessOptimizer$fPIWSSfn",
    "fields": [
      {
        "name": "invocationTarget$k6d5uu1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.GradingCriterion$HibernateInstantiator$IQOPox92",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.GradingCriterion_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "exercise"
      },
      {
        "name": "structuredGradingInstructions"
      },
      {
        "name": "title"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.GradingInstruction",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCredits",
        "parameterTypes": [
          "double"
        ]
      },
      {
        "name": "setFeedback",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFeedbacks",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setGradingCriterion",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.GradingCriterion"
        ]
      },
      {
        "name": "setGradingScale",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInstructionDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsageCount",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.GradingInstruction$HibernateAccessOptimizer$FWdXaYhX",
    "fields": [
      {
        "name": "invocationTarget$grribl0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.GradingInstruction$HibernateInstantiator$Bohk1Jc2",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.GradingInstruction_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "credits"
      },
      {
        "name": "feedback"
      },
      {
        "name": "feedbacks"
      },
      {
        "name": "gradingCriterion"
      },
      {
        "name": "gradingScale"
      },
      {
        "name": "instructionDescription"
      },
      {
        "name": "usageCount"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.GradingScale",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setBonusFrom",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setBonusStrategy",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.BonusStrategy"
        ]
      },
      {
        "name": "setCourse",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.Course"
        ]
      },
      {
        "name": "setExam",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.domain.Exam"
        ]
      },
      {
        "name": "setGradeSteps",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setGradeType",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.GradeType"
        ]
      },
      {
        "name": "setNoParticipationGrade",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPlagiarismGrade",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPresentationsNumber",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setPresentationsWeight",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "getBonusFrom",
        "parameterTypes": []
      },
      {
        "name": "getBonusStrategy",
        "parameterTypes": []
      },
      {
        "name": "getCourse",
        "parameterTypes": []
      },
      {
        "name": "getExam",
        "parameterTypes": []
      },
      {
        "name": "getGradeSteps",
        "parameterTypes": []
      },
      {
        "name": "getGradeType",
        "parameterTypes": []
      },
      {
        "name": "getNoParticipationGrade",
        "parameterTypes": []
      },
      {
        "name": "getNoParticipationGradeOrDefault",
        "parameterTypes": []
      },
      {
        "name": "getPlagiarismGrade",
        "parameterTypes": []
      },
      {
        "name": "getPlagiarismGradeOrDefault",
        "parameterTypes": []
      },
      {
        "name": "getPresentationsNumber",
        "parameterTypes": []
      },
      {
        "name": "getPresentationsWeight",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.GradingScale$HibernateAccessOptimizer$G6Npe3Nw",
    "fields": [
      {
        "name": "invocationTarget$gk679b0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.GradingScale$HibernateInstantiator$6nsceEXq",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.GradingScale_",
    "fields": [
      {
        "name": "bonusFrom"
      },
      {
        "name": "bonusStrategy"
      },
      {
        "name": "class_"
      },
      {
        "name": "course"
      },
      {
        "name": "exam"
      },
      {
        "name": "gradeSteps"
      },
      {
        "name": "gradeType"
      },
      {
        "name": "noParticipationGrade"
      },
      {
        "name": "plagiarismGrade"
      },
      {
        "name": "presentationsNumber"
      },
      {
        "name": "presentationsWeight"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.IBonusStrategy",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.LongFeedbackText",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setFeedback",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.Feedback"
        ]
      },
      {
        "name": "setText",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.LongFeedbackText$HibernateAccessOptimizer$1qx4Iue4",
    "fields": [
      {
        "name": "invocationTarget$pf3d7t0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.LongFeedbackText$HibernateInstantiator$AijMK3jG",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.LongFeedbackText_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "feedback"
      },
      {
        "name": "text"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.ParticipantScore",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise"
        ]
      },
      {
        "name": "setLastModifiedDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setLastPoints",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setLastRatedPoints",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setLastRatedResult",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.Result"
        ]
      },
      {
        "name": "setLastRatedScore",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setLastResult",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.Result"
        ]
      },
      {
        "name": "setLastScore",
        "parameterTypes": [
          "java.lang.Double"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.ParticipantScore$HibernateAccessOptimizer$3d6rMt25",
    "fields": [
      {
        "name": "invocationTarget$9517cd0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.ParticipantScore_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "exercise"
      },
      {
        "name": "lastModifiedDate"
      },
      {
        "name": "lastPoints"
      },
      {
        "name": "lastRatedPoints"
      },
      {
        "name": "lastRatedResult"
      },
      {
        "name": "lastRatedScore"
      },
      {
        "name": "lastResult"
      },
      {
        "name": "lastScore"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.Rating",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setRating",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setResult",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.Result"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.Rating$HibernateAccessOptimizer$eZyOxGmf",
    "fields": [
      {
        "name": "invocationTarget$p2vmpv0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.Rating$HibernateInstantiator$27kT8boF",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.Rating_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "rating"
      },
      {
        "name": "result"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.Result",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getAssessmentNote",
        "parameterTypes": []
      },
      {
        "name": "getAssessmentType",
        "parameterTypes": []
      },
      {
        "name": "getAssessor",
        "parameterTypes": []
      },
      {
        "name": "getCodeIssueCount",
        "parameterTypes": []
      },
      {
        "name": "getCompletionDate",
        "parameterTypes": []
      },
      {
        "name": "getFeedbacks",
        "parameterTypes": []
      },
      {
        "name": "getHasComplaint",
        "parameterTypes": []
      },
      {
        "name": "getPassedTestCaseCount",
        "parameterTypes": []
      },
      {
        "name": "getScore",
        "parameterTypes": []
      },
      {
        "name": "getSubmission",
        "parameterTypes": []
      },
      {
        "name": "getTestCaseCount",
        "parameterTypes": []
      },
      {
        "name": "isExampleResult",
        "parameterTypes": []
      },
      {
        "name": "isRated",
        "parameterTypes": []
      },
      {
        "name": "isSuccessful",
        "parameterTypes": []
      },
      {
        "name": "setAssessmentNote",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAssessmentType",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.AssessmentType"
        ]
      },
      {
        "name": "setAssessor",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "setCodeIssueCount",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setCompletionDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setExampleResult",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setFeedbacks",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setHasComplaint",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setLastModifiedDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setPassedTestCaseCount",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setRated",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setScore",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setSubmission",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Submission"
        ]
      },
      {
        "name": "setSuccessful",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setTestCaseCount",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setCodeIssueCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPassedTestCaseCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setRated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTestCaseCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "addFeedback",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.Feedback"
        ]
      },
      {
        "name": "addFeedbacks",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "assessmentType",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.AssessmentType"
        ]
      },
      {
        "name": "calculateScoreForProgrammingExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExercise"
        ]
      },
      {
        "name": "calculateTotalPointsForProgrammingExercises",
        "parameterTypes": []
      },
      {
        "name": "compareTo",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.Result"
        ]
      },
      {
        "name": "completionDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "copyProgrammingExerciseCounters",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.Result"
        ]
      },
      {
        "name": "createFilteredFeedbacks",
        "parameterTypes": [
          "boolean",
          "de.tum.cit.aet.artemis.exercise.domain.Exercise"
        ]
      },
      {
        "name": "determineAssessmentType",
        "parameterTypes": []
      },
      {
        "name": "evaluateQuizSubmission",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.QuizExercise"
        ]
      },
      {
        "name": "feedbacks",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "filterSensitiveFeedbacks",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "filterSensitiveFeedbacks",
        "parameterTypes": [
          "boolean",
          "de.tum.cit.aet.artemis.exercise.domain.Exercise"
        ]
      },
      {
        "name": "filterSensitiveInformation",
        "parameterTypes": []
      },
      {
        "name": "getLastModifiedDate",
        "parameterTypes": []
      },
      {
        "name": "hasComplaint",
        "parameterTypes": []
      },
      {
        "name": "hasComplaint",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "isAssessmentComplete",
        "parameterTypes": []
      },
      {
        "name": "isAthenaBased",
        "parameterTypes": []
      },
      {
        "name": "isAutomatic",
        "parameterTypes": []
      },
      {
        "name": "isManual",
        "parameterTypes": []
      },
      {
        "name": "rated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "removeFeedback",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.Feedback"
        ]
      },
      {
        "name": "score",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setAssessmentNote",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.AssessmentNote"
        ]
      },
      {
        "name": "setRatedIfNotAfterDueDate",
        "parameterTypes": []
      },
      {
        "name": "setScore",
        "parameterTypes": [
          "double",
          "double",
          "de.tum.cit.aet.artemis.core.domain.Course"
        ]
      },
      {
        "name": "setScore",
        "parameterTypes": [
          "java.lang.Double",
          "de.tum.cit.aet.artemis.core.domain.Course"
        ]
      },
      {
        "name": "submission",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Submission"
        ]
      },
      {
        "name": "successful",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "updateAllFeedbackItems",
        "parameterTypes": [
          "java.util.List",
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.Result$HibernateAccessOptimizer$NwhsP5Gl",
    "fields": [
      {
        "name": "invocationTarget$momg881"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.Result$HibernateInstantiator$5RPkDFhQ",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.Result_",
    "fields": [
      {
        "name": "assessmentNote"
      },
      {
        "name": "assessmentType"
      },
      {
        "name": "assessor"
      },
      {
        "name": "class_"
      },
      {
        "name": "codeIssueCount"
      },
      {
        "name": "completionDate"
      },
      {
        "name": "exampleResult"
      },
      {
        "name": "feedbacks"
      },
      {
        "name": "hasComplaint"
      },
      {
        "name": "lastModifiedDate"
      },
      {
        "name": "passedTestCaseCount"
      },
      {
        "name": "rated"
      },
      {
        "name": "score"
      },
      {
        "name": "submission"
      },
      {
        "name": "successful"
      },
      {
        "name": "testCaseCount"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.Result_Accessor_7xty04",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.Result"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.StudentScore",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setLastModifiedDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.StudentScore$HibernateAccessOptimizer$TdBuHG2j",
    "fields": [
      {
        "name": "invocationTarget$9hb0cv1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.StudentScore$HibernateInstantiator$VY731rUm",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.StudentScore_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "user"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.TeamScore",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setLastModifiedDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setTeam",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Team"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.TeamScore$HibernateAccessOptimizer$gevVtATm",
    "fields": [
      {
        "name": "invocationTarget$dg5gbt1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.TeamScore$HibernateInstantiator$TleXQbaU",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.TeamScore_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "team"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.TutorParticipation",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setAssessedExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorParticipationStatus"
        ]
      },
      {
        "name": "setTrainedExampleSubmissions",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setTutor",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "getAssessedExercise",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getTrainedExampleSubmissions",
        "parameterTypes": []
      },
      {
        "name": "getTutor",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.TutorParticipation$HibernateAccessOptimizer$HT7L4Av4",
    "fields": [
      {
        "name": "invocationTarget$tee78f1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.TutorParticipation$HibernateInstantiator$GgVlWWeS",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.TutorParticipation_",
    "fields": [
      {
        "name": "assessedExercise"
      },
      {
        "name": "class_"
      },
      {
        "name": "status"
      },
      {
        "name": "trainedExampleSubmissions"
      },
      {
        "name": "tutor"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.Visibility",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.Visibility.AFTER_DUE_DATE"
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.package-info"
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.dto.BonusExampleDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.dto.BonusResultDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.dto.BonusSourceResultDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.dto.ComplaintRequestDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.dto.ExerciseAverageScoreDTO",
    "queryAllDeclaredConstructors": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.dto.FeedbackAffectedStudentDTO",
    "queryAllDeclaredConstructors": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.dto.FeedbackAnalysisResponseDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.dto.FeedbackDetailDTO",
    "allRecordComponents": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.List",
          "long",
          "double",
          "java.util.List",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "boolean"
        ]
      }
    ],
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.dto.FeedbackPageableDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.dto.GradeStepsDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.dto.MaxAndReachablePointsDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.dto.ResultWithPointsPerGradingCriterionDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.dto.ScoreDistributionDTO",
    "allRecordComponents": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "long",
          "double"
        ]
      }
    ],
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.dto.dashboard.ExerciseMapEntryDTO",
    "allRecordComponents": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "long",
          "long"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      }
    ],
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.dto.dashboard.ExerciseRatingCountDTO",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Double",
          "java.lang.Long"
        ]
      }
    ],
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.dto.dashboard.ResultCountDTO",
    "allRecordComponents": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Long"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "boolean",
          "long"
        ]
      }
    ],
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.dto.score.ScoreDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.dto.score.StudentScoreSumDTO",
    "allRecordComponents": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "long",
          "double"
        ]
      }
    ],
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.dto.score.StudentScoresDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "absoluteScore",
        "parameterTypes": []
      },
      {
        "name": "currentRelativeScore",
        "parameterTypes": []
      },
      {
        "name": "presentationScore",
        "parameterTypes": []
      },
      {
        "name": "relativeScore",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.dto.score.TeamScoreSumDTO",
    "queryAllDeclaredConstructors": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.dto.tutor.TutorLeaderboardAnsweredMoreFeedbackRequestsDTO",
    "allRecordComponents": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long",
          "java.lang.Double"
        ]
      }
    ],
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.dto.tutor.TutorLeaderboardAssessmentsDTO",
    "allRecordComponents": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long",
          "java.lang.Double",
          "java.lang.Double",
          "java.lang.Double",
          "java.lang.Long"
        ]
      }
    ],
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.dto.tutor.TutorLeaderboardComplaintResponsesDTO",
    "allRecordComponents": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long",
          "java.lang.Double"
        ]
      }
    ],
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.dto.tutor.TutorLeaderboardComplaintsDTO",
    "allRecordComponents": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long",
          "java.lang.Long",
          "java.lang.Double"
        ]
      }
    ],
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.dto.tutor.TutorLeaderboardMoreFeedbackRequestsDTO",
    "allRecordComponents": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long",
          "java.lang.Long",
          "java.lang.Double"
        ]
      }
    ],
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.repository.BonusRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.repository.ComplaintRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.repository.ComplaintResponseRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.repository.ExampleSubmissionRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "findByIdWithEagerResultAndFeedbackElseThrow",
        "parameterTypes": [
          "long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.repository.FeedbackRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "hasFeedbackByExerciseGradingCriteria",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.repository.GradeStepRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.repository.GradingCriterionRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.repository.GradingInstructionRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.repository.GradingScaleRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.repository.LongFeedbackTextRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.repository.ParticipantScoreRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "setAverageScoreForStatisticsDTO",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.dto.CourseManagementOverviewExerciseStatisticsDTO",
          "java.util.Map",
          "de.tum.cit.aet.artemis.exercise.domain.Exercise"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.repository.RatingRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.repository.ResultRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "countNumberOfAssessments",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "findFirstWithSubmissionAndFeedbacksAndTestCasesByParticipationIdOrderByCompletionDateDesc",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findLatestResultWithFeedbacksForParticipation",
        "parameterTypes": [
          "long",
          "boolean"
        ]
      },
      {
        "name": "calculateTotalPoints",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "constrainToRange",
        "parameterTypes": [
          "double",
          "double"
        ]
      },
      {
        "name": "convertDatabaseResponseToDueDateStats",
        "parameterTypes": [
          "java.util.List",
          "int"
        ]
      },
      {
        "name": "countNumberOfAutomaticAssistedAssessmentsForExercise",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "countNumberOfFinishedAssessmentsForExamExerciseForCorrectionRounds",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise",
          "int"
        ]
      },
      {
        "name": "countNumberOfFinishedAssessmentsForExamForCorrectionRounds",
        "parameterTypes": [
          "long",
          "int"
        ]
      },
      {
        "name": "countNumberOfFinishedAssessmentsForExercise",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "countNumberOfLockedAssessmentsByOtherTutorsForExamExerciseForCorrectionRounds",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise",
          "int",
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "submitResult",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.Result",
          "de.tum.cit.aet.artemis.exercise.domain.Exercise"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.repository.StudentScoreRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.repository.TeamScoreRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.repository.TextAssessmentEventRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.repository.TextAssessmentEventRepository$TutorAssessedSubmissionsCount",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.repository.TextBlockRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.repository.TutorParticipationRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.repository.cleanup.FeedbackCleanupRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.repository.cleanup.LongFeedbackTextCleanupRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.repository.cleanup.ParticipantScoreCleanupRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.repository.cleanup.PlagiarismComparisonCleanupRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.repository.cleanup.RatingCleanupRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.repository.cleanup.ResultCleanupRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.repository.cleanup.StudentScoreCleanupRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.repository.cleanup.SubmissionVersionCleanupRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.repository.cleanup.TeamScoreCleanupRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.repository.cleanup.TextBlockCleanupRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.service.AssessmentDashboardService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.service.ComplaintService",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseRepository",
          "de.tum.cit.aet.artemis.exercise.repository.SubmissionRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ResultRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ExampleSubmissionRepository",
          "de.tum.cit.aet.artemis.assessment.service.RatingService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.service.AssessmentService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "cancelAssessmentOfSubmission",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Submission"
        ]
      },
      {
        "name": "deleteAssessment",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Submission",
          "de.tum.cit.aet.artemis.assessment.domain.Result"
        ]
      },
      {
        "name": "getExampleAssessment",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "isAllowedToCreateOrOverrideResult",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.Result",
          "de.tum.cit.aet.artemis.exercise.domain.Exercise",
          "de.tum.cit.aet.artemis.exercise.domain.participation.StudentParticipation",
          "de.tum.cit.aet.artemis.core.domain.User",
          "boolean"
        ]
      },
      {
        "name": "saveAndSubmitManualAssessment",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise",
          "de.tum.cit.aet.artemis.exercise.domain.Submission",
          "java.util.List",
          "java.lang.Long",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "saveManualAssessment",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Submission",
          "java.util.List",
          "java.lang.Long",
          "java.lang.String"
        ]
      },
      {
        "name": "updateAssessmentAfterComplaint",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.Result",
          "de.tum.cit.aet.artemis.exercise.domain.Exercise",
          "de.tum.cit.aet.artemis.assessment.dto.AssessmentUpdateBaseDTO"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.service.ComplaintResponseService",
          "de.tum.cit.aet.artemis.assessment.repository.ComplaintRepository",
          "de.tum.cit.aet.artemis.assessment.repository.FeedbackRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ResultRepository",
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository",
          "de.tum.cit.aet.artemis.assessment.service.ResultService",
          "de.tum.cit.aet.artemis.exercise.service.SubmissionService",
          "de.tum.cit.aet.artemis.exercise.repository.SubmissionRepository",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.communication.service.notifications.SingleUserNotificationService",
          "de.tum.cit.aet.artemis.assessment.web.ResultWebsocketService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.service.BonusService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.repository.BonusRepository",
          "de.tum.cit.aet.artemis.assessment.repository.GradingScaleRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.service.ComplaintResponseService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.repository.ComplaintRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ComplaintResponseRepository",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.service.ComplaintService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.repository.ComplaintRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ComplaintResponseRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ResultRepository",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.exercise.repository.TeamRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.service.CourseScoreCalculationService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository",
          "de.tum.cit.aet.artemis.exercise.repository.ExerciseRepository",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.assessment.service.PresentationPointsCalculationService",
          "de.tum.cit.aet.artemis.communication.repository.UserCourseNotificationStatusRepository",
          "java.util.Optional"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.service.ExampleSubmissionService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.repository.ExampleSubmissionRepository",
          "de.tum.cit.aet.artemis.exercise.repository.SubmissionRepository",
          "de.tum.cit.aet.artemis.exercise.repository.ExerciseRepository",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.modeling.service.ModelingExerciseImportService",
          "de.tum.cit.aet.artemis.assessment.repository.GradingCriterionRepository",
          "de.tum.cit.aet.artemis.assessment.repository.TutorParticipationRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.service.FeedbackService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.repository.LongFeedbackTextRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.service.GradingScaleService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.repository.GradingScaleRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.service.ParticipantScoreScheduleService",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.scheduling.TaskScheduler",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.assessment.repository.ParticipantScoreRepository",
          "de.tum.cit.aet.artemis.assessment.repository.StudentScoreRepository",
          "de.tum.cit.aet.artemis.assessment.repository.TeamScoreRepository",
          "de.tum.cit.aet.artemis.exercise.repository.ExerciseRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ResultRepository",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.exercise.repository.TeamRepository"
        ]
      },
      {
        "name": "scheduleTasks",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "startup",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.service.ParticipantScoreService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.assessment.repository.StudentScoreRepository",
          "de.tum.cit.aet.artemis.assessment.repository.TeamScoreRepository",
          "de.tum.cit.aet.artemis.assessment.service.GradingScaleService",
          "de.tum.cit.aet.artemis.assessment.service.PresentationPointsCalculationService",
          "de.tum.cit.aet.artemis.exercise.repository.TeamRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ParticipantScoreRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.service.PresentationPointsCalculationService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.service.RatingService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.repository.RatingRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ResultRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.service.ResultService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ResultRepository",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.assessment.web.ResultWebsocketService",
          "de.tum.cit.aet.artemis.assessment.repository.ComplaintResponseRepository",
          "de.tum.cit.aet.artemis.assessment.repository.RatingRepository",
          "de.tum.cit.aet.artemis.assessment.repository.FeedbackRepository",
          "de.tum.cit.aet.artemis.assessment.repository.LongFeedbackTextRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ComplaintRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ParticipantScoreRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.exercise.service.ExerciseDateService",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.programming.repository.BuildJobRepository",
          "de.tum.cit.aet.artemis.programming.service.BuildLogEntryService",
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseTaskService",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseRepository",
          "de.tum.cit.aet.artemis.exercise.service.SubmissionFilterService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.service.TutorEffortService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.service.TutorLeaderboardService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.repository.ResultRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ComplaintRepository",
          "de.tum.cit.aet.artemis.core.repository.UserRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.service.TutorParticipationService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.repository.TutorParticipationRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ExampleSubmissionRepository",
          "de.tum.cit.aet.artemis.assessment.service.ExampleSubmissionService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.service.TutorParticipationService$FeedbackCorrectionErrorType"
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.web.AssessmentResource",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getAssessmentBySubmissionId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "saveAssessment",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Submission",
          "boolean",
          "java.util.List",
          "java.lang.Long",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.web.BonusResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.web.ComplaintResource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.exercise.repository.ExerciseRepository",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ResultRepository",
          "de.tum.cit.aet.artemis.assessment.service.ComplaintService",
          "de.tum.cit.aet.artemis.assessment.repository.ComplaintRepository",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository"
        ]
      },
      {
        "name": "getComplaintBySubmissionId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.web.ComplaintResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.web.ComplaintResponseResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.web.ExampleSubmissionResource",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.service.ExampleSubmissionService",
          "de.tum.cit.aet.artemis.assessment.repository.ExampleSubmissionRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.exercise.repository.ExerciseRepository",
          "java.util.Optional"
        ]
      },
      {
        "name": "createExampleSubmission",
        "parameterTypes": [
          "java.lang.Long",
          "de.tum.cit.aet.artemis.assessment.domain.ExampleSubmission"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.web.GradeStepResource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.repository.GradingScaleRepository",
          "de.tum.cit.aet.artemis.assessment.repository.GradeStepRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository"
        ]
      },
      {
        "name": "getAllGradeStepsForCourse",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.web.GradeStepResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.web.GradingScaleResource",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.service.GradingScaleService",
          "de.tum.cit.aet.artemis.assessment.repository.GradingScaleRepository",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.core.repository.UserRepository"
        ]
      },
      {
        "name": "createGradingScaleForExam",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long",
          "de.tum.cit.aet.artemis.assessment.domain.GradingScale"
        ]
      },
      {
        "name": "getGradingScaleForExam",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.web.LongFeedbackTextResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.web.ParticipantScoreResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.web.RatingResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.web.ResultResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.web.ResultWebsocketService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.service.WebsocketMessagingService",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.exercise.service.ExerciseDateService",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.exercise.repository.TeamRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.web.TutorEffortResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.web.TutorParticipationResource",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.service.TutorParticipationService",
          "de.tum.cit.aet.artemis.assessment.repository.TutorParticipationRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.exercise.repository.ExerciseRepository",
          "de.tum.cit.aet.artemis.core.repository.UserRepository"
        ]
      },
      {
        "name": "initTutorParticipation",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.athena.api.AthenaApi"
  },
  {
    "name": "de.tum.cit.aet.artemis.athena.config.AthenaAuthorizationInterceptor"
  },
  {
    "name": "de.tum.cit.aet.artemis.athena.dto.ModelingFeedbackDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.athena.dto.ProgrammingFeedbackDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.athena.dto.TextFeedbackDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.api.AbstractAtlasApi",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.api.CompetencyApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.service.competency.CompetencyService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.api.CompetencyProgressApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.service.competency.CompetencyProgressService",
          "de.tum.cit.aet.artemis.atlas.repository.CompetencyRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.api.CompetencyRelationApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.repository.CompetencyRelationRepository",
          "de.tum.cit.aet.artemis.atlas.repository.CompetencyExerciseLinkRepository",
          "de.tum.cit.aet.artemis.atlas.repository.CompetencyLectureUnitLinkRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.api.CompetencyRepositoryApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.repository.CompetencyRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.api.CourseCompetencyApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.repository.CourseCompetencyRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.api.LearnerProfileApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.service.profile.LearnerProfileService",
          "de.tum.cit.aet.artemis.atlas.service.profile.CourseLearnerProfileService",
          "de.tum.cit.aet.artemis.atlas.repository.LearnerProfileRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.api.LearningMetricsApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.service.LearningMetricsService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.api.LearningPathApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.service.learningpath.LearningPathService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.api.PrerequisitesApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.repository.PrerequisiteRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.api.ScienceEventApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.repository.ScienceEventRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.config.AtlasNotPresentException"
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.CompetencyProgressConfidenceReason",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.LearningObject",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setProjectKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.BaseCompetency",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setCompetencyJols",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTaxonomy",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyTaxonomy"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.BaseCompetency_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "description"
      },
      {
        "name": "taxonomy"
      },
      {
        "name": "title"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.Competency",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCompetencyJols",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.Competency$HibernateAccessOptimizer$DL4se5py",
    "fields": [
      {
        "name": "invocationTarget$f1d4a50"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.Competency$HibernateInstantiator$UpYI2ASq",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyExerciseLink",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyExerciseLink$CompetencyExerciseId"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyExerciseLink$CompetencyExerciseId",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setCompetencyId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setExerciseId",
        "parameterTypes": [
          "long"
        ]
      }
    ],
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyExerciseLink$CompetencyExerciseId_"
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyExerciseLink$HibernateAccessOptimizer$hIYkSYoz",
    "fields": [
      {
        "name": "invocationTarget$4ro1mm1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyExerciseLink$HibernateInstantiator$QJtadEJP",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyExerciseLink_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "exercise"
      },
      {
        "name": "id"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyJol",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCompetency",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.domain.competency.CourseCompetency"
        ]
      },
      {
        "name": "setCompetencyConfidence",
        "parameterTypes": [
          "double"
        ]
      },
      {
        "name": "setCompetencyProgress",
        "parameterTypes": [
          "double"
        ]
      },
      {
        "name": "setJudgementTime",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "short"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyJol$HibernateAccessOptimizer$ZL34m66w",
    "fields": [
      {
        "name": "invocationTarget$2d9pv31"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyJol$HibernateInstantiator$TkRHjyFa",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyJol_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "competency"
      },
      {
        "name": "competencyConfidence"
      },
      {
        "name": "competencyProgress"
      },
      {
        "name": "judgementTime"
      },
      {
        "name": "user"
      },
      {
        "name": "value"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyLearningObjectLink",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setCompetency",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.domain.competency.CourseCompetency"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyExerciseLink$CompetencyExerciseId"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyLectureUnitLink$CompetencyLectureUnitId"
        ]
      },
      {
        "name": "setWeight",
        "parameterTypes": [
          "double"
        ]
      }
    ],
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyLearningObjectLink_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "competency"
      },
      {
        "name": "weight"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyLectureUnitLink",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyLectureUnitLink$CompetencyLectureUnitId"
        ]
      },
      {
        "name": "setLectureUnit",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.lecture.domain.LectureUnit"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyLectureUnitLink$CompetencyLectureUnitId",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setCompetencyId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setLectureUnitId",
        "parameterTypes": [
          "long"
        ]
      }
    ],
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyLectureUnitLink$CompetencyLectureUnitId_"
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyLectureUnitLink$HibernateAccessOptimizer$7iZqOBSo",
    "fields": [
      {
        "name": "invocationTarget$5dg38m1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyLectureUnitLink$HibernateInstantiator$vxurFymQ",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyLectureUnitLink_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "id"
      },
      {
        "name": "lectureUnit"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyProgress",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCompetency",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.domain.competency.CourseCompetency"
        ]
      },
      {
        "name": "setConfidence",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setConfidenceReason",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.domain.CompetencyProgressConfidenceReason"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyProgress$CompetencyUserId"
        ]
      },
      {
        "name": "setLastModifiedDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setProgress",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyProgress$CompetencyUserId",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setCompetencyId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ],
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyProgress$CompetencyUserId_"
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyProgress$HibernateAccessOptimizer$dU7gRzIF",
    "fields": [
      {
        "name": "invocationTarget$vkvu1a0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyProgress$HibernateInstantiator$TGmZhE5c",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyProgress_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "competency"
      },
      {
        "name": "confidence"
      },
      {
        "name": "confidenceReason"
      },
      {
        "name": "id"
      },
      {
        "name": "lastModifiedDate"
      },
      {
        "name": "progress"
      },
      {
        "name": "user"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyRelation",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setHeadCompetency",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.domain.competency.CourseCompetency"
        ]
      },
      {
        "name": "setTailCompetency",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.domain.competency.CourseCompetency"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.domain.competency.RelationType"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyRelation$HibernateAccessOptimizer$Zt9bUNi8",
    "fields": [
      {
        "name": "invocationTarget$0gg2k61"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyRelation$HibernateInstantiator$yVaCzqgu",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyRelation_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "headCompetency"
      },
      {
        "name": "tailCompetency"
      },
      {
        "name": "type"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyTaxonomy",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyTaxonomy$TaxonomyConverter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "convertToDatabaseColumn",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "convertToEntityAttribute",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.Competency_",
    "fields": [
      {
        "name": "class_"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CourseCompetency",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setCompetencyJols",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setCourse",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.Course"
        ]
      },
      {
        "name": "setExerciseLinks",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setLectureUnitLinks",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setLinkedCourseCompetency",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.domain.competency.CourseCompetency"
        ]
      },
      {
        "name": "setLinkedStandardizedCompetency",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.domain.competency.StandardizedCompetency"
        ]
      },
      {
        "name": "setMasteryThreshold",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setOptional",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSoftDueDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setUserProgress",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CourseCompetency$HibernateAccessOptimizer$DIOmE1EC",
    "fields": [
      {
        "name": "invocationTarget$j2da510"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CourseCompetency_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "competencyJols"
      },
      {
        "name": "course"
      },
      {
        "name": "exerciseLinks"
      },
      {
        "name": "lectureUnitLinks"
      },
      {
        "name": "linkedCourseCompetency"
      },
      {
        "name": "linkedStandardizedCompetency"
      },
      {
        "name": "masteryThreshold"
      },
      {
        "name": "optional"
      },
      {
        "name": "softDueDate"
      },
      {
        "name": "userProgress"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.KnowledgeArea",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setChildren",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setCompetencies",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setParent",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.domain.competency.KnowledgeArea"
        ]
      },
      {
        "name": "setShortTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.KnowledgeArea$HibernateAccessOptimizer$1GgSiRsF",
    "fields": [
      {
        "name": "invocationTarget$i46i4a1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.KnowledgeArea$HibernateInstantiator$YSPzx3b0",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.KnowledgeArea_",
    "fields": [
      {
        "name": "children"
      },
      {
        "name": "class_"
      },
      {
        "name": "competencies"
      },
      {
        "name": "description"
      },
      {
        "name": "parent"
      },
      {
        "name": "shortTitle"
      },
      {
        "name": "title"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.LearningPath",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCourse",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.Course"
        ]
      },
      {
        "name": "setProgress",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setStartedByStudent",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.LearningPath$HibernateAccessOptimizer$Dc2gd8x1",
    "fields": [
      {
        "name": "invocationTarget$0tplnn0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.LearningPath$HibernateInstantiator$afAeE3Ej",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.LearningPath_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "course"
      },
      {
        "name": "progress"
      },
      {
        "name": "startedByStudent"
      },
      {
        "name": "user"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.Prerequisite",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCompetencyJols",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.Prerequisite$HibernateAccessOptimizer$cz0qu2hu",
    "fields": [
      {
        "name": "invocationTarget$jvrhm51"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.Prerequisite$HibernateInstantiator$77lSKeIk",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.Prerequisite_",
    "fields": [
      {
        "name": "class_"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.RelationType"
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.RelationType.MATCHES"
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.Source",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setAuthor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCompetencies",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUri",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.Source$HibernateAccessOptimizer$qw4ciXza",
    "fields": [
      {
        "name": "invocationTarget$6p8ivi0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.Source$HibernateInstantiator$O0hgn7mW",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.Source_",
    "fields": [
      {
        "name": "author"
      },
      {
        "name": "class_"
      },
      {
        "name": "competencies"
      },
      {
        "name": "title"
      },
      {
        "name": "uri"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.StandardizedCompetency",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setChildVersions",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setFirstVersion",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.domain.competency.StandardizedCompetency"
        ]
      },
      {
        "name": "setKnowledgeArea",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.domain.competency.KnowledgeArea"
        ]
      },
      {
        "name": "setLinkedCompetencies",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setSource",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.domain.competency.Source"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.StandardizedCompetency$HibernateAccessOptimizer$ABUNPdcQ",
    "fields": [
      {
        "name": "invocationTarget$b24fbr1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.StandardizedCompetency$HibernateInstantiator$aITlzNcp",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.StandardizedCompetency_",
    "fields": [
      {
        "name": "childVersions"
      },
      {
        "name": "class_"
      },
      {
        "name": "firstVersion"
      },
      {
        "name": "knowledgeArea"
      },
      {
        "name": "linkedCompetencies"
      },
      {
        "name": "source"
      },
      {
        "name": "version"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.package-info"
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.profile.CourseLearnerProfile",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setAimForGradeOrBonus",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setCourse",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.Course"
        ]
      },
      {
        "name": "setLearnerProfile",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.domain.profile.LearnerProfile"
        ]
      },
      {
        "name": "setRepetitionIntensity",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setTimeInvestment",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.profile.CourseLearnerProfile$HibernateAccessOptimizer$tSBM8jBR",
    "fields": [
      {
        "name": "invocationTarget$83g6s11"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.profile.CourseLearnerProfile$HibernateInstantiator$VIICCIKd",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.profile.CourseLearnerProfile_",
    "fields": [
      {
        "name": "aimForGradeOrBonus"
      },
      {
        "name": "class_"
      },
      {
        "name": "course"
      },
      {
        "name": "learnerProfile"
      },
      {
        "name": "repetitionIntensity"
      },
      {
        "name": "timeInvestment"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.profile.LearnerProfile",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCourseLearnerProfiles",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setFeedbackDetail",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setFeedbackFormality",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setHasSetupFeedbackPreferences",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "getCourseLearnerProfiles",
        "parameterTypes": []
      },
      {
        "name": "getFeedbackDetail",
        "parameterTypes": []
      },
      {
        "name": "getFeedbackFormality",
        "parameterTypes": []
      },
      {
        "name": "addAllCourseLearnerProfiles",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "addCourseLearnerProfile",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.domain.profile.CourseLearnerProfile"
        ]
      },
      {
        "name": "getUser",
        "parameterTypes": []
      },
      {
        "name": "hasSetupFeedbackPreferences",
        "parameterTypes": []
      },
      {
        "name": "removeCourseLearnerProfile",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.domain.profile.CourseLearnerProfile"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.profile.LearnerProfile$HibernateAccessOptimizer$8fq3poKA",
    "fields": [
      {
        "name": "invocationTarget$odvm6i0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.profile.LearnerProfile$HibernateInstantiator$kUOhWDKk",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.profile.LearnerProfile_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "courseLearnerProfiles"
      },
      {
        "name": "feedbackDetail"
      },
      {
        "name": "feedbackFormality"
      },
      {
        "name": "hasSetupFeedbackPreferences"
      },
      {
        "name": "user"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.profile.package-info"
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.science.ScienceEvent",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setIdentity",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResourceId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setTimestamp",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.domain.science.ScienceEventType"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.science.ScienceEvent$HibernateAccessOptimizer$l1srmQZt",
    "fields": [
      {
        "name": "invocationTarget$481l280"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.science.ScienceEvent$HibernateInstantiator$uigNbnB1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.science.ScienceEventType"
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.science.ScienceEvent_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "identity"
      },
      {
        "name": "resourceId"
      },
      {
        "name": "timestamp"
      },
      {
        "name": "type"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.science.ScienceSetting",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setActive",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSettingId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.science.ScienceSetting$HibernateAccessOptimizer$mjRDeMaK",
    "fields": [
      {
        "name": "invocationTarget$i3cct50"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.science.ScienceSetting$HibernateInstantiator$r6BJLlR2",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.science.ScienceSetting_",
    "fields": [
      {
        "name": "active"
      },
      {
        "name": "class_"
      },
      {
        "name": "settingId"
      },
      {
        "name": "user"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.science.package-info"
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.dto.CompetencyContributionDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.dto.CompetencyGraphNodeDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.dto.CompetencyImportOptionsDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.dto.CompetencyJolDTO",
    "queryAllDeclaredConstructors": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.dto.CompetencyJolPairDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.dto.CompetencyRelationDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.dto.LearningPathAverageProgressDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.dto.LearningPathCompetencyGraphDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.dto.LearningPathDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.dto.LearningPathHealthDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.dto.LearningPathNavigationDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.dto.LearningPathNavigationObjectDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.dto.LearningPathNavigationObjectDTO$LearningObjectType"
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.dto.LearningPathNavigationOverviewDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.dto.UpdateCourseCompetencyRelationDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.dto.metrics.CompetencyExerciseMasteryCalculationDTO",
    "queryAllDeclaredConstructors": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.dto.metrics.CompetencyInformationDTO",
    "queryAllDeclaredConstructors": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.dto.metrics.CompetencyLectureUnitMasteryCalculationDTO",
    "queryAllDeclaredConstructors": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.dto.metrics.CompetencyProgressDTO",
    "queryAllDeclaredConstructors": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.dto.metrics.CompetencyStudentMetricsDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.dto.metrics.ExerciseStudentMetricsDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.dto.metrics.LectureUnitInformationDTO",
    "queryAllDeclaredConstructors": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.dto.metrics.LectureUnitStudentMetricsDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.dto.metrics.MapEntryLongLong",
    "queryAllDeclaredConstructors": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.dto.metrics.ResourceTimestampDTO",
    "queryAllDeclaredConstructors": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.dto.metrics.ScoreDTO",
    "queryAllDeclaredConstructors": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.dto.metrics.StudentMetricsDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.repository.CompetencyExerciseLinkRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.repository.CompetencyJolRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.repository.CompetencyLectureUnitLinkRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.repository.CompetencyMetricsRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.repository.CompetencyProgressRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.repository.CompetencyRelationRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.repository.CompetencyRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.repository.CourseCompetencyRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "findAllByExerciseIdWithExerciseLinks",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findAllIdsByLearningObject",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.domain.LearningObject"
        ]
      },
      {
        "name": "findByCourseIdOrderById",
        "parameterTypes": [
          "long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.repository.CourseLearnerProfileRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.repository.KnowledgeAreaRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.repository.LearnerProfileRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.repository.LearningPathRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.repository.PrerequisiteRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.repository.ScienceEventRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.repository.ScienceSettingRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.repository.SourceRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.repository.StandardizedCompetencyRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.service.LearningMetricsService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.repository.ExerciseMetricsRepository",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.atlas.repository.CompetencyMetricsRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.service.LearningObjectImportService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.repository.ExerciseRepository",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseRepository",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseImportService",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.modeling.repository.ModelingExerciseRepository",
          "de.tum.cit.aet.artemis.modeling.service.ModelingExerciseImportService",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.quiz.repository.QuizExerciseRepository",
          "de.tum.cit.aet.artemis.quiz.service.QuizExerciseImportService",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.atlas.repository.CourseCompetencyRepository",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseTaskRepository",
          "de.tum.cit.aet.artemis.assessment.repository.GradingCriterionRepository",
          "de.tum.cit.aet.artemis.atlas.repository.CompetencyExerciseLinkRepository",
          "de.tum.cit.aet.artemis.atlas.repository.CompetencyLectureUnitLinkRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.service.LearningObjectService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.service.ParticipantScoreService",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.exercise.repository.SubmissionRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.service.ScienceEventService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.service.competency.CompetencyJolService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.repository.CompetencyJolRepository",
          "de.tum.cit.aet.artemis.atlas.repository.CompetencyRepository",
          "de.tum.cit.aet.artemis.atlas.repository.CompetencyProgressRepository",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "java.util.Optional"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.service.competency.CompetencyProgressService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.repository.CompetencyProgressRepository",
          "de.tum.cit.aet.artemis.atlas.service.learningpath.LearningPathService",
          "de.tum.cit.aet.artemis.assessment.service.ParticipantScoreService",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.atlas.repository.CourseCompetencyRepository"
        ]
      },
      {
        "name": "updateProgressByLearningObjectAsync",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.domain.LearningObject"
        ]
      },
      {
        "name": "updateProgressForUpdatedLearningObjectAsync",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.domain.LearningObject",
          "java.util.Optional"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.service.competency.CompetencyProgressService$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.service.competency.CompetencyRelationService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.repository.CompetencyRelationRepository",
          "de.tum.cit.aet.artemis.atlas.repository.CourseCompetencyRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.service.competency.CompetencyRelationService$1Vertex"
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.service.competency.CompetencyService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.repository.CompetencyRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.atlas.repository.CompetencyRelationRepository",
          "de.tum.cit.aet.artemis.atlas.service.learningpath.LearningPathService",
          "de.tum.cit.aet.artemis.atlas.service.competency.CompetencyProgressService",
          "de.tum.cit.aet.artemis.atlas.repository.CompetencyProgressRepository",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.atlas.repository.StandardizedCompetencyRepository",
          "de.tum.cit.aet.artemis.atlas.repository.CourseCompetencyRepository",
          "de.tum.cit.aet.artemis.exercise.service.ExerciseService",
          "de.tum.cit.aet.artemis.atlas.service.LearningObjectImportService",
          "de.tum.cit.aet.artemis.atlas.repository.CompetencyLectureUnitLinkRepository",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "de.tum.cit.aet.artemis.atlas.repository.CompetencyExerciseLinkRepository"
        ]
      },
      {
        "name": "findCompetencyWithExercisesAndLectureUnitsAndProgressForUser",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.service.competency.CourseCompetencyService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.repository.CompetencyProgressRepository",
          "de.tum.cit.aet.artemis.atlas.repository.CourseCompetencyRepository",
          "de.tum.cit.aet.artemis.atlas.repository.CompetencyRelationRepository",
          "de.tum.cit.aet.artemis.atlas.service.competency.CompetencyProgressService",
          "de.tum.cit.aet.artemis.exercise.service.ExerciseService",
          "de.tum.cit.aet.artemis.atlas.service.learningpath.LearningPathService",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.atlas.repository.StandardizedCompetencyRepository",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.atlas.service.LearningObjectImportService",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "de.tum.cit.aet.artemis.atlas.repository.CompetencyLectureUnitLinkRepository"
        ]
      },
      {
        "name": "checkIfCompetencyBelongsToCourse",
        "parameterTypes": [
          "long",
          "long"
        ]
      },
      {
        "name": "createCourseCompetencies",
        "parameterTypes": [
          "java.util.List",
          "de.tum.cit.aet.artemis.core.domain.Course",
          "java.util.function.Function"
        ]
      },
      {
        "name": "createCourseCompetency",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.domain.competency.CourseCompetency",
          "de.tum.cit.aet.artemis.core.domain.Course"
        ]
      },
      {
        "name": "deleteCourseCompetency",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.domain.competency.CourseCompetency",
          "de.tum.cit.aet.artemis.core.domain.Course"
        ]
      },
      {
        "name": "filterOutLearningObjectsThatUserShouldNotSee",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.domain.competency.CourseCompetency",
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "findCompetencyWithExercisesAndLectureUnitsAndProgressForUser",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "findCourseCompetenciesWithProgressForUserByCourseId",
        "parameterTypes": [
          "long",
          "long",
          "boolean"
        ]
      },
      {
        "name": "findProgressAndLectureUnitCompletionsForUser",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.domain.competency.CourseCompetency",
          "java.lang.Long"
        ]
      },
      {
        "name": "findProgressForCompetenciesAndUser",
        "parameterTypes": [
          "java.util.List",
          "java.lang.Long"
        ]
      },
      {
        "name": "getCompetencyContributionsForExercise",
        "parameterTypes": [
          "long",
          "long"
        ]
      },
      {
        "name": "getCompetencyContributionsForLectureUnit",
        "parameterTypes": [
          "long",
          "long"
        ]
      },
      {
        "name": "getOnPageWithSizeForImport",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.dto.pageablesearch.CompetencyPageableSearchDTO",
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "importCourseCompetencies",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.Course",
          "java.util.Collection",
          "de.tum.cit.aet.artemis.atlas.dto.CompetencyImportOptionsDTO"
        ]
      },
      {
        "name": "importCourseCompetencies",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.Course",
          "java.util.Collection",
          "de.tum.cit.aet.artemis.atlas.dto.CompetencyImportOptionsDTO",
          "java.util.function.Function"
        ]
      },
      {
        "name": "importStandardizedCompetencies",
        "parameterTypes": [
          "java.util.List",
          "de.tum.cit.aet.artemis.core.domain.Course",
          "java.util.function.Supplier"
        ]
      },
      {
        "name": "updateCourseCompetency",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.domain.competency.CourseCompetency",
          "de.tum.cit.aet.artemis.atlas.domain.competency.CourseCompetency"
        ]
      },
      {
        "name": "updateCourseCompetencyRelation",
        "parameterTypes": [
          "long",
          "long",
          "de.tum.cit.aet.artemis.atlas.dto.UpdateCourseCompetencyRelationDTO"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.service.competency.KnowledgeAreaService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.service.competency.PrerequisiteService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.service.competency.StandardizedCompetencyService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.service.learningpath.LearningPathNavigationService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.service.learningpath.LearningPathRecommendationService",
          "de.tum.cit.aet.artemis.atlas.service.LearningObjectService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.service.learningpath.LearningPathRecommendationService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.repository.CompetencyRelationRepository",
          "de.tum.cit.aet.artemis.atlas.service.LearningObjectService",
          "de.tum.cit.aet.artemis.assessment.service.ParticipantScoreService",
          "de.tum.cit.aet.artemis.atlas.repository.CompetencyProgressRepository",
          "de.tum.cit.aet.artemis.atlas.repository.CourseCompetencyRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.service.learningpath.LearningPathRecommendationService$RecommendationState"
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.service.learningpath.LearningPathRepositoryService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.repository.LearningPathRepository",
          "de.tum.cit.aet.artemis.atlas.repository.CompetencyRepository",
          "de.tum.cit.aet.artemis.atlas.repository.PrerequisiteRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.service.learningpath.LearningPathService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.atlas.repository.LearningPathRepository",
          "de.tum.cit.aet.artemis.atlas.service.learningpath.LearningPathRepositoryService",
          "de.tum.cit.aet.artemis.atlas.repository.CompetencyProgressRepository",
          "de.tum.cit.aet.artemis.atlas.service.learningpath.LearningPathNavigationService",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "de.tum.cit.aet.artemis.atlas.repository.CompetencyRepository",
          "de.tum.cit.aet.artemis.atlas.repository.CompetencyRelationRepository",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository",
          "de.tum.cit.aet.artemis.atlas.repository.CourseCompetencyRepository",
          "de.tum.cit.aet.artemis.atlas.service.profile.CourseLearnerProfileService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.service.profile.CourseLearnerProfileService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.repository.CourseLearnerProfileRepository",
          "de.tum.cit.aet.artemis.atlas.repository.LearnerProfileRepository",
          "de.tum.cit.aet.artemis.atlas.service.profile.LearnerProfileService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.service.profile.LearnerProfileService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.atlas.repository.LearnerProfileRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.web.CompetencyResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.web.CourseCompetencyResource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.atlas.service.competency.CourseCompetencyService",
          "de.tum.cit.aet.artemis.atlas.repository.CourseCompetencyRepository",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "de.tum.cit.aet.artemis.atlas.service.competency.CompetencyProgressService",
          "de.tum.cit.aet.artemis.atlas.repository.CompetencyProgressRepository",
          "de.tum.cit.aet.artemis.atlas.repository.CompetencyRelationRepository",
          "de.tum.cit.aet.artemis.atlas.service.competency.CompetencyRelationService",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.atlas.service.competency.CompetencyJolService",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService"
        ]
      },
      {
        "name": "getCompetencyContributionsForExercise",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getCourseCompetenciesWithProgress",
        "parameterTypes": [
          "long",
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.web.CourseCompetencyResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.web.CourseLearnerProfileResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.web.LearnerProfileResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.web.LearningPathResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.web.MetricsResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.web.PrerequisiteResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.web.ScienceResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.web.ScienceSettingsResource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.atlas.repository.ScienceSettingRepository"
        ]
      },
      {
        "name": "getScienceSettingsForCurrentUser",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.web.ScienceSettingsResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.web.StandardizedCompetencyResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.web.admin.AdminMetricsResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.web.admin.AdminStandardizedCompetencyResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.buildagent.BuildAgentConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.config.ProgrammingLanguageConfiguration"
        ]
      },
      {
        "name": "onApplicationReady",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.buildagent.BuildAgentConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.buildagent.dto.BuildAgentDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "displayName",
        "parameterTypes": []
      },
      {
        "name": "memberAddress",
        "parameterTypes": []
      },
      {
        "name": "name",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.buildagent.dto.BuildAgentDetailsDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "averageBuildDuration",
        "parameterTypes": []
      },
      {
        "name": "cancelledBuilds",
        "parameterTypes": []
      },
      {
        "name": "consecutiveBuildFailures",
        "parameterTypes": []
      },
      {
        "name": "failedBuilds",
        "parameterTypes": []
      },
      {
        "name": "gitRevision",
        "parameterTypes": []
      },
      {
        "name": "lastBuildDate",
        "parameterTypes": []
      },
      {
        "name": "startDate",
        "parameterTypes": []
      },
      {
        "name": "successfulBuilds",
        "parameterTypes": []
      },
      {
        "name": "timedOutBuild",
        "parameterTypes": []
      },
      {
        "name": "totalBuilds",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.buildagent.dto.BuildAgentInformation",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "buildAgent",
        "parameterTypes": []
      },
      {
        "name": "buildAgentDetails",
        "parameterTypes": []
      },
      {
        "name": "maxNumberOfConcurrentBuildJobs",
        "parameterTypes": []
      },
      {
        "name": "numberOfCurrentBuildJobs",
        "parameterTypes": []
      },
      {
        "name": "pauseAfterConsecutiveBuildFailures",
        "parameterTypes": []
      },
      {
        "name": "publicSshKey",
        "parameterTypes": []
      },
      {
        "name": "runningBuildJobs",
        "parameterTypes": []
      },
      {
        "name": "status",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.buildagent.dto.BuildAgentInformation$BuildAgentStatus",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.buildagent.dto.BuildConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "assignmentCheckoutPath",
        "parameterTypes": []
      },
      {
        "name": "assignmentCommitHash",
        "parameterTypes": []
      },
      {
        "name": "branch",
        "parameterTypes": []
      },
      {
        "name": "buildScript",
        "parameterTypes": []
      },
      {
        "name": "commitHashToBuild",
        "parameterTypes": []
      },
      {
        "name": "dockerImage",
        "parameterTypes": []
      },
      {
        "name": "dockerRunConfig",
        "parameterTypes": []
      },
      {
        "name": "programmingLanguage",
        "parameterTypes": []
      },
      {
        "name": "projectType",
        "parameterTypes": []
      },
      {
        "name": "resultPaths",
        "parameterTypes": []
      },
      {
        "name": "scaEnabled",
        "parameterTypes": []
      },
      {
        "name": "sequentialTestRunsEnabled",
        "parameterTypes": []
      },
      {
        "name": "solutionCheckoutPath",
        "parameterTypes": []
      },
      {
        "name": "testCheckoutPath",
        "parameterTypes": []
      },
      {
        "name": "testCommitHash",
        "parameterTypes": []
      },
      {
        "name": "timeoutSeconds",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.buildagent.dto.BuildJobQueueItem",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "buildAgent",
        "parameterTypes": []
      },
      {
        "name": "buildConfig",
        "parameterTypes": []
      },
      {
        "name": "courseId",
        "parameterTypes": []
      },
      {
        "name": "exerciseId",
        "parameterTypes": []
      },
      {
        "name": "id",
        "parameterTypes": []
      },
      {
        "name": "jobTimingInfo",
        "parameterTypes": []
      },
      {
        "name": "name",
        "parameterTypes": []
      },
      {
        "name": "participationId",
        "parameterTypes": []
      },
      {
        "name": "priority",
        "parameterTypes": []
      },
      {
        "name": "repositoryInfo",
        "parameterTypes": []
      },
      {
        "name": "retryCount",
        "parameterTypes": []
      },
      {
        "name": "status",
        "parameterTypes": []
      },
      {
        "name": "submissionResult",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.buildagent.dto.BuildJobResultCountDTO",
    "queryAllDeclaredConstructors": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.buildagent.dto.BuildLogDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.buildagent.dto.BuildResult"
  },
  {
    "name": "de.tum.cit.aet.artemis.buildagent.dto.DockerFlagsDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.buildagent.dto.DockerImageBuild",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.time.ZonedDateTime"
        ]
      }
    ],
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.buildagent.dto.DockerRunConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.buildagent.dto.JobTimingInfo",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "buildCompletionDate",
        "parameterTypes": []
      },
      {
        "name": "buildStartDate",
        "parameterTypes": []
      },
      {
        "name": "estimatedCompletionDate",
        "parameterTypes": []
      },
      {
        "name": "estimatedDuration",
        "parameterTypes": []
      },
      {
        "name": "submissionDate",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.buildagent.dto.LocalCIJobDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.buildagent.dto.LocalCITestJobDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.buildagent.dto.RepositoryInfo",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "assignmentRepositoryUri",
        "parameterTypes": []
      },
      {
        "name": "auxiliaryRepositoryCheckoutDirectories",
        "parameterTypes": []
      },
      {
        "name": "auxiliaryRepositoryUris",
        "parameterTypes": []
      },
      {
        "name": "repositoryName",
        "parameterTypes": []
      },
      {
        "name": "repositoryType",
        "parameterTypes": []
      },
      {
        "name": "solutionRepositoryUri",
        "parameterTypes": []
      },
      {
        "name": "testRepositoryUri",
        "parameterTypes": []
      },
      {
        "name": "triggeredByPushTo",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.buildagent.dto.ResultBuildJob",
    "queryAllDeclaredConstructors": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.buildagent.dto.ResultQueueItem"
  },
  {
    "name": "de.tum.cit.aet.artemis.buildagent.service.BuildAgentDockerService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.buildagent.BuildAgentConfiguration",
          "de.tum.cit.aet.artemis.programming.service.localci.DistributedDataAccessService",
          "de.tum.cit.aet.artemis.buildagent.service.BuildJobContainerService",
          "org.springframework.scheduling.TaskScheduler"
        ]
      },
      {
        "name": "applicationReady",
        "parameterTypes": []
      },
      {
        "name": "checkUsableDiskSpaceThenCleanUp",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.buildagent.service.BuildAgentInformationService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.buildagent.BuildAgentConfiguration",
          "de.tum.cit.aet.artemis.buildagent.service.BuildAgentSshKeyService",
          "de.tum.cit.aet.artemis.programming.service.localci.DistributedDataAccessService",
          "org.springframework.boot.info.GitProperties"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.buildagent.service.BuildAgentSshKeyService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "applicationReady",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.buildagent.service.BuildJobContainerService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.buildagent.BuildAgentConfiguration",
          "de.tum.cit.aet.artemis.buildagent.service.BuildLogsMap"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.buildagent.service.BuildJobExecutionService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.buildagent.service.BuildJobContainerService",
          "de.tum.cit.aet.artemis.buildagent.service.BuildJobGitService",
          "de.tum.cit.aet.artemis.buildagent.service.BuildAgentDockerService",
          "de.tum.cit.aet.artemis.buildagent.service.BuildLogsMap"
        ]
      },
      {
        "name": "initAsync",
        "parameterTypes": []
      },
      {
        "name": "runBuildJob",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.buildagent.dto.BuildJobQueueItem",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.buildagent.service.BuildJobExecutionService$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.buildagent.service.BuildJobGitService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "cleanup",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.buildagent.service.BuildJobManagementService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.service.localci.DistributedDataAccessService",
          "de.tum.cit.aet.artemis.buildagent.service.BuildJobExecutionService",
          "de.tum.cit.aet.artemis.buildagent.BuildAgentConfiguration",
          "de.tum.cit.aet.artemis.buildagent.service.BuildJobContainerService",
          "de.tum.cit.aet.artemis.buildagent.service.BuildLogsMap"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.buildagent.service.BuildLogsMap",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.buildagent.service.SharedQueueProcessingService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.buildagent.BuildAgentConfiguration",
          "de.tum.cit.aet.artemis.buildagent.service.BuildJobManagementService",
          "de.tum.cit.aet.artemis.buildagent.service.BuildLogsMap",
          "org.springframework.scheduling.TaskScheduler",
          "de.tum.cit.aet.artemis.buildagent.service.BuildAgentDockerService",
          "de.tum.cit.aet.artemis.buildagent.service.BuildAgentInformationService",
          "de.tum.cit.aet.artemis.programming.service.localci.DistributedDataAccessService"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "removeListenerAndCancelScheduledFuture",
        "parameterTypes": []
      },
      {
        "name": "updateBuildAgentInformation",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.buildagent.service.parser.TestResultXmlParser$Failure",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setDetailedMessage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMessage",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.buildagent.service.parser.TestResultXmlParser$TestCase",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "de.tum.cit.aet.artemis.buildagent.service.parser.TestResultXmlParser$Failure",
          "de.tum.cit.aet.artemis.buildagent.service.parser.TestResultXmlParser$Failure",
          "de.tum.cit.aet.artemis.buildagent.service.parser.TestResultXmlParser$TestCase$Skip"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.buildagent.service.parser.TestResultXmlParser$TestCase$Skip",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.buildagent.service.parser.TestResultXmlParser$TestSuite",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.util.List",
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.config.HermesHealthIndicator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.web.client.RestTemplate"
        ]
      },
      {
        "name": "health",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.AnswerPost",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setHasForwardedMessages",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPost",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.domain.Post"
        ]
      },
      {
        "name": "setReactions",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setResolvesPost",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.AnswerPost$HibernateAccessOptimizer$Z0R0bA7s",
    "fields": [
      {
        "name": "invocationTarget$d1om880"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.AnswerPost$HibernateInstantiator$YD3sIEST",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.AnswerPost_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "hasForwardedMessages"
      },
      {
        "name": "post"
      },
      {
        "name": "reactions"
      },
      {
        "name": "resolvesPost"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.ConductAgreement",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCourse",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.Course"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getCourse",
        "parameterTypes": []
      },
      {
        "name": "getUser",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.ConductAgreement$HibernateAccessOptimizer$hDZYhNsn",
    "fields": [
      {
        "name": "invocationTarget$chdpke1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.ConductAgreement$HibernateInstantiator$eTUVHimP",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.ConductAgreementId",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setCourse",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ],
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.ConductAgreementId_"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.ConductAgreement_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "course"
      },
      {
        "name": "user"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.ConversationNotificationRecipientSummary",
    "allRecordComponents": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "long",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "boolean",
          "boolean",
          "boolean"
        ]
      }
    ],
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.ConversationParticipant",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setConversation",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.domain.conversation.Conversation"
        ]
      },
      {
        "name": "setIsFavorite",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setIsHidden",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setIsModerator",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setIsMuted",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLastRead",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setUnreadMessagesCount",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.ConversationParticipant$HibernateAccessOptimizer$QLziqvRl",
    "fields": [
      {
        "name": "invocationTarget$6op4rm1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.ConversationParticipant$HibernateInstantiator$espeM6qS",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.ConversationParticipantSettingsView"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.ConversationParticipant_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "conversation"
      },
      {
        "name": "isFavorite"
      },
      {
        "name": "isHidden"
      },
      {
        "name": "isModerator"
      },
      {
        "name": "isMuted"
      },
      {
        "name": "lastRead"
      },
      {
        "name": "unreadMessagesCount"
      },
      {
        "name": "user"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.CourseNotification",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCourse",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.Course"
        ]
      },
      {
        "name": "setCreationDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setDeletionDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setParameters",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.Short"
        ]
      },
      {
        "name": "setUserStatuses",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "getCourse",
        "parameterTypes": []
      },
      {
        "name": "getCreationDate",
        "parameterTypes": []
      },
      {
        "name": "getDeletionDate",
        "parameterTypes": []
      },
      {
        "name": "getParameters",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getUserStatuses",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.CourseNotification$HibernateAccessOptimizer$4yWnzUY9",
    "fields": [
      {
        "name": "invocationTarget$k09gam1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.CourseNotification$HibernateInstantiator$MNBurLVo",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.CourseNotificationParameter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getCourseNotification",
        "parameterTypes": []
      },
      {
        "name": "setCourseNotification",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.domain.CourseNotification"
        ]
      },
      {
        "name": "setParamKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setParamValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.CourseNotificationParameter$CourseNotificationParameterId",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setCourseNotification",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setParamKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.CourseNotificationParameter$CourseNotificationParameterId_"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.CourseNotificationParameter$HibernateAccessOptimizer$ralLiJYz",
    "fields": [
      {
        "name": "invocationTarget$lk0p811"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.CourseNotificationParameter$HibernateInstantiator$i9L3l3De",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.CourseNotificationParameter_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "courseNotification"
      },
      {
        "name": "paramKey"
      },
      {
        "name": "paramValue"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.CourseNotification_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "course"
      },
      {
        "name": "creationDate"
      },
      {
        "name": "deletionDate"
      },
      {
        "name": "parameters"
      },
      {
        "name": "type"
      },
      {
        "name": "userStatuses"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.CreatedConversationMessage"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.DisplayPriority",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.Faq",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCategories",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setCourse",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.Course"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFaqState",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.domain.FaqState"
        ]
      },
      {
        "name": "setLastModifiedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastModifiedDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setQuestionAnswer",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQuestionTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.Faq$HibernateAccessOptimizer$gXJJOFuL",
    "fields": [
      {
        "name": "invocationTarget$43icm71"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.Faq$HibernateInstantiator$gXUbIyt2",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.FaqState",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.Faq_",
    "fields": [
      {
        "name": "categories"
      },
      {
        "name": "class_"
      },
      {
        "name": "course"
      },
      {
        "name": "faqState"
      },
      {
        "name": "questionAnswer"
      },
      {
        "name": "questionTitle"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.ForwardedMessage",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setDestinationAnswerPost",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.domain.AnswerPost"
        ]
      },
      {
        "name": "setDestinationPost",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.domain.Post"
        ]
      },
      {
        "name": "setSourceId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setSourceType",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.domain.PostingType"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.ForwardedMessage$HibernateAccessOptimizer$wJZl9vZs",
    "fields": [
      {
        "name": "invocationTarget$l0ggk10"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.ForwardedMessage$HibernateInstantiator$siSNCjMh",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.ForwardedMessage_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "destinationAnswerPost"
      },
      {
        "name": "destinationPost"
      },
      {
        "name": "sourceId"
      },
      {
        "name": "sourceType"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.GlobalNotificationSetting",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNotificationType",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.domain.GlobalNotificationType"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.GlobalNotificationSetting$HibernateAccessOptimizer$2A1cDymp",
    "fields": [
      {
        "name": "invocationTarget$3okb2e0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.GlobalNotificationSetting$HibernateInstantiator$9CYCAN9E",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.GlobalNotificationSetting_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "enabled"
      },
      {
        "name": "notificationType"
      },
      {
        "name": "userId"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.GlobalNotificationType"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.NotificationChannelOption",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.Post",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setAnswers",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setConversation",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.domain.conversation.Conversation"
        ]
      },
      {
        "name": "setDisplayPriority",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.domain.DisplayPriority"
        ]
      },
      {
        "name": "setHasForwardedMessages",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPlagiarismCase",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismCase"
        ]
      },
      {
        "name": "setReactions",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setResolved",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTags",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVisibleForStudents",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getAnswers",
        "parameterTypes": []
      },
      {
        "name": "getConversation",
        "parameterTypes": []
      },
      {
        "name": "getDisplayPriority",
        "parameterTypes": []
      },
      {
        "name": "getHasForwardedMessages",
        "parameterTypes": []
      },
      {
        "name": "getIsSaved",
        "parameterTypes": []
      },
      {
        "name": "getPlagiarismCase",
        "parameterTypes": []
      },
      {
        "name": "getReactions",
        "parameterTypes": []
      },
      {
        "name": "getTags",
        "parameterTypes": []
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "isResolved",
        "parameterTypes": []
      },
      {
        "name": "isVisibleForStudents",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.Post$HibernateAccessOptimizer$eN20vmZz",
    "fields": [
      {
        "name": "invocationTarget$cd1b3t1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.Post$HibernateInstantiator$wPTsCXNj",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.PostConstraints",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.Post_",
    "fields": [
      {
        "name": "answers"
      },
      {
        "name": "class_"
      },
      {
        "name": "conversation"
      },
      {
        "name": "displayPriority"
      },
      {
        "name": "hasForwardedMessages"
      },
      {
        "name": "plagiarismCase"
      },
      {
        "name": "reactions"
      },
      {
        "name": "resolved"
      },
      {
        "name": "tags"
      },
      {
        "name": "title"
      },
      {
        "name": "visibleForStudents"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.Posting",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setAuthor",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "setContent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreationDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setUpdatedDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "getAuthor",
        "parameterTypes": []
      },
      {
        "name": "getAuthorRole",
        "parameterTypes": []
      },
      {
        "name": "getContent",
        "parameterTypes": []
      },
      {
        "name": "getCreationDate",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedDate",
        "parameterTypes": []
      }
    ],
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.PostingType"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.PostingType.ANSWER"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.PostingType.POST"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.Posting_",
    "fields": [
      {
        "name": "author"
      },
      {
        "name": "class_"
      },
      {
        "name": "content"
      },
      {
        "name": "creationDate"
      },
      {
        "name": "updatedDate"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.Reaction",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setAnswerPost",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.domain.AnswerPost"
        ]
      },
      {
        "name": "setCreationDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setEmojiId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPost",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.domain.Post"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.Reaction$HibernateAccessOptimizer$e4wgsTaS",
    "fields": [
      {
        "name": "invocationTarget$dct58h0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.Reaction$HibernateInstantiator$jM6hphT8",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.ReactionConstraints",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.Reaction_",
    "fields": [
      {
        "name": "answerPost"
      },
      {
        "name": "class_"
      },
      {
        "name": "creationDate"
      },
      {
        "name": "emojiId"
      },
      {
        "name": "post"
      },
      {
        "name": "user"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.SavedPost",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCompletedAt",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setPostId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setPostType",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.domain.PostingType"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.domain.SavedPostStatus"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.SavedPost$HibernateAccessOptimizer$pKvD05aF",
    "fields": [
      {
        "name": "invocationTarget$ri0b1h0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.SavedPost$HibernateInstantiator$DcRTow3Q",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.SavedPostStatus"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.SavedPost_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "completedAt"
      },
      {
        "name": "postId"
      },
      {
        "name": "postType"
      },
      {
        "name": "status"
      },
      {
        "name": "user"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.SystemNotificationType"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.UserCourseNotificationSettingPreset",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCourse",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.Course"
        ]
      },
      {
        "name": "setSettingPreset",
        "parameterTypes": [
          "java.lang.Short"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.UserCourseNotificationSettingPreset$HibernateAccessOptimizer$ZC6ndfBD",
    "fields": [
      {
        "name": "invocationTarget$bd99jf1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.UserCourseNotificationSettingPreset$HibernateInstantiator$hAipJDOQ",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.UserCourseNotificationSettingPreset$UserCourseNotificationSettingPresetId",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setCourse",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ],
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.UserCourseNotificationSettingPreset$UserCourseNotificationSettingPresetId_"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.UserCourseNotificationSettingPreset_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "course"
      },
      {
        "name": "settingPreset"
      },
      {
        "name": "user"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.UserCourseNotificationSettingSpecification",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCourse",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.Course"
        ]
      },
      {
        "name": "setCourseNotificationType",
        "parameterTypes": [
          "java.lang.Short"
        ]
      },
      {
        "name": "setEmail",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPush",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSummary",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "setWebapp",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.UserCourseNotificationSettingSpecification$HibernateAccessOptimizer$n6J2Nzq5",
    "fields": [
      {
        "name": "invocationTarget$pc0i6o1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.UserCourseNotificationSettingSpecification$HibernateInstantiator$LKelUl85",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.UserCourseNotificationSettingSpecification$UserCourseNotificationSettingSpecificationId",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setCourse",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setCourseNotificationType",
        "parameterTypes": [
          "java.lang.Short"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ],
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.UserCourseNotificationSettingSpecification$UserCourseNotificationSettingSpecificationId_"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.UserCourseNotificationSettingSpecification_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "course"
      },
      {
        "name": "courseNotificationType"
      },
      {
        "name": "email"
      },
      {
        "name": "push"
      },
      {
        "name": "summary"
      },
      {
        "name": "user"
      },
      {
        "name": "webapp"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.UserCourseNotificationStatus",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCourseNotification",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.domain.CourseNotification"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.domain.UserCourseNotificationStatusType"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getCourseNotification",
        "parameterTypes": []
      },
      {
        "name": "getUser",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.UserCourseNotificationStatus$HibernateAccessOptimizer$WhMhpYBE",
    "fields": [
      {
        "name": "invocationTarget$7mp1e81"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.UserCourseNotificationStatus$HibernateInstantiator$OUYgSk0Q",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.UserCourseNotificationStatus$UserCourseNotificationStatusId",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setCourseNotification",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ],
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.UserCourseNotificationStatus$UserCourseNotificationStatusId_"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.UserCourseNotificationStatusType",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.UserCourseNotificationStatus_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "courseNotification"
      },
      {
        "name": "status"
      },
      {
        "name": "user"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.UserRole",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.conversation.Channel",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExam",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.domain.Exam"
        ]
      },
      {
        "name": "setExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise"
        ]
      },
      {
        "name": "setIsAnnouncementChannel",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIsArchived",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIsCourseWide",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIsPublic",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLecture",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.lecture.domain.Lecture"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTopic",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getExam",
        "parameterTypes": []
      },
      {
        "name": "getExercise",
        "parameterTypes": []
      },
      {
        "name": "getIsAnnouncementChannel",
        "parameterTypes": []
      },
      {
        "name": "getIsArchived",
        "parameterTypes": []
      },
      {
        "name": "getIsCourseWide",
        "parameterTypes": []
      },
      {
        "name": "getIsPublic",
        "parameterTypes": []
      },
      {
        "name": "getLecture",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getTopic",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.conversation.Channel$HibernateAccessOptimizer$8AHc1XH4",
    "fields": [
      {
        "name": "invocationTarget$1ntgup1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.conversation.Channel$HibernateInstantiator$5UPb0n13",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.conversation.ChannelSubType",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.conversation.Channel_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "description"
      },
      {
        "name": "exam"
      },
      {
        "name": "exercise"
      },
      {
        "name": "isAnnouncementChannel"
      },
      {
        "name": "isArchived"
      },
      {
        "name": "isCourseWide"
      },
      {
        "name": "isPublic"
      },
      {
        "name": "lecture"
      },
      {
        "name": "name"
      },
      {
        "name": "topic"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.conversation.Conversation",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setConversationParticipants",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setCourse",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.Course"
        ]
      },
      {
        "name": "setCreationDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setCreator",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "setLastMessageDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setPosts",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "getConversationParticipants",
        "parameterTypes": []
      },
      {
        "name": "getCreationDate",
        "parameterTypes": []
      },
      {
        "name": "getCreator",
        "parameterTypes": []
      },
      {
        "name": "getLastMessageDate",
        "parameterTypes": []
      },
      {
        "name": "getPosts",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.conversation.Conversation$HibernateAccessOptimizer$P0CZPqXo",
    "fields": [
      {
        "name": "invocationTarget$92m57f1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.conversation.Conversation_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "conversationParticipants"
      },
      {
        "name": "course"
      },
      {
        "name": "creationDate"
      },
      {
        "name": "creator"
      },
      {
        "name": "lastMessageDate"
      },
      {
        "name": "posts"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.conversation.GroupChat",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setConversationParticipants",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getConversationParticipants",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "isConversationParticipants",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.conversation.GroupChat$HibernateAccessOptimizer$JROuqMxS",
    "fields": [
      {
        "name": "invocationTarget$1fsq0e0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.conversation.GroupChat$HibernateInstantiator$KsSRllFE",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.conversation.GroupChat_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "name"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.conversation.OneToOneChat",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setConversationParticipants",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.conversation.OneToOneChat$HibernateAccessOptimizer$7oQX6d9B",
    "fields": [
      {
        "name": "invocationTarget$4jbq2a0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.conversation.OneToOneChat$HibernateInstantiator$MrE4wpxM",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.conversation.OneToOneChat_",
    "fields": [
      {
        "name": "class_"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.conversation.package-info"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.course_notifications.CourseNotification"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.course_notifications.NewExerciseNotification",
    "allDeclaredFields": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.notification.SystemNotification",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setExpireDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setNotificationDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.domain.SystemNotificationType"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.notification.SystemNotification$HibernateAccessOptimizer$d87669Y9",
    "fields": [
      {
        "name": "invocationTarget$59m9200"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.notification.SystemNotification$HibernateInstantiator$tA34Rqmp",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.notification.SystemNotification_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "expireDate"
      },
      {
        "name": "notificationDate"
      },
      {
        "name": "text"
      },
      {
        "name": "title"
      },
      {
        "name": "type"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.notification.package-info"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.package-info"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.push_notification.PushNotificationApiType"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.push_notification.PushNotificationDeviceConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setApiType",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.domain.push_notification.PushNotificationApiType"
        ]
      },
      {
        "name": "setDeviceType",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.domain.push_notification.PushNotificationDeviceType"
        ]
      },
      {
        "name": "setExpirationDate",
        "parameterTypes": [
          "java.util.Date"
        ]
      },
      {
        "name": "setOwner",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "setSecretKey",
        "parameterTypes": [
          "byte[]"
        ]
      },
      {
        "name": "setToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersionCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.push_notification.PushNotificationDeviceConfiguration$HibernateAccessOptimizer$1qGafTSj",
    "fields": [
      {
        "name": "invocationTarget$pq40df1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.push_notification.PushNotificationDeviceConfiguration$HibernateInstantiator$lSuZVaOz",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.push_notification.PushNotificationDeviceConfigurationId",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setDeviceType",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.domain.push_notification.PushNotificationDeviceType"
        ]
      },
      {
        "name": "setOwner",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.push_notification.PushNotificationDeviceConfigurationId_"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.push_notification.PushNotificationDeviceConfiguration_",
    "fields": [
      {
        "name": "apiType"
      },
      {
        "name": "class_"
      },
      {
        "name": "deviceType"
      },
      {
        "name": "expirationDate"
      },
      {
        "name": "owner"
      },
      {
        "name": "secretKey"
      },
      {
        "name": "token"
      },
      {
        "name": "versionCode"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.push_notification.PushNotificationDeviceType"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.push_notification.package-info"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.setting_presets.AllActivityUserCourseNotificationSettingPreset",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.setting_presets.DefaultUserCourseNotificationSettingPreset",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.setting_presets.IgnoreUserCourseNotificationSettingPreset",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.setting_presets.UserCourseNotificationSettingPreset"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.dto.ChannelDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getHasChannelModerationRights",
        "parameterTypes": []
      },
      {
        "name": "getIsAnnouncementChannel",
        "parameterTypes": []
      },
      {
        "name": "getIsArchived",
        "parameterTypes": []
      },
      {
        "name": "getIsChannelModerator",
        "parameterTypes": []
      },
      {
        "name": "getIsCourseWide",
        "parameterTypes": []
      },
      {
        "name": "getIsPublic",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getSubType",
        "parameterTypes": []
      },
      {
        "name": "getSubTypeReferenceId",
        "parameterTypes": []
      },
      {
        "name": "getTopic",
        "parameterTypes": []
      },
      {
        "name": "getTutorialGroupId",
        "parameterTypes": []
      },
      {
        "name": "getTutorialGroupTitle",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHasChannelModerationRights",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIsAnnouncementChannel",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIsArchived",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIsChannelModerator",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIsCourseWide",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIsPublic",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTopic",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.dto.ChannelIdAndNameDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.dto.ConversationDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getCreationDate",
        "parameterTypes": []
      },
      {
        "name": "getCreator",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getIsCreator",
        "parameterTypes": []
      },
      {
        "name": "getIsFavorite",
        "parameterTypes": []
      },
      {
        "name": "getIsHidden",
        "parameterTypes": []
      },
      {
        "name": "getIsMember",
        "parameterTypes": []
      },
      {
        "name": "getIsMuted",
        "parameterTypes": []
      },
      {
        "name": "getLastMessageDate",
        "parameterTypes": []
      },
      {
        "name": "getLastReadDate",
        "parameterTypes": []
      },
      {
        "name": "getNumberOfMembers",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getUnreadMessagesCount",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.dto.ConversationSummary"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.dto.ConversationUserDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getIsChannelModerator",
        "parameterTypes": []
      },
      {
        "name": "getIsRequestingUser",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.dto.ConversationWebsocketDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "action",
        "parameterTypes": []
      },
      {
        "name": "conversation",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.dto.CourseNotificationDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "category",
        "parameterTypes": []
      },
      {
        "name": "courseId",
        "parameterTypes": []
      },
      {
        "name": "creationDate",
        "parameterTypes": []
      },
      {
        "name": "notificationId",
        "parameterTypes": []
      },
      {
        "name": "notificationType",
        "parameterTypes": []
      },
      {
        "name": "parameters",
        "parameterTypes": []
      },
      {
        "name": "relativeWebAppUrl",
        "parameterTypes": []
      },
      {
        "name": "status",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.dto.CourseNotificationInfoDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "channels",
        "parameterTypes": []
      },
      {
        "name": "notificationTypes",
        "parameterTypes": []
      },
      {
        "name": "presets",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.dto.CourseNotificationPageableDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.dto.CourseNotificationSettingInfoDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "notificationTypeChannels",
        "parameterTypes": []
      },
      {
        "name": "selectedPreset",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.dto.CourseNotificationSettingSpecificationRequestDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.dto.CourseNotificationWithStatusDTO",
    "queryAllDeclaredConstructors": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.dto.CreatePostDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "boolean",
          "de.tum.cit.aet.artemis.communication.dto.CreatePostConversationDTO"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.dto.FeedbackChannelRequestDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.dto.GeneralConversationInfo",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "long",
          "long"
        ]
      }
    ],
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.dto.GroupChatDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getMembers",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.dto.MetisCrudAction",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.dto.OneToOneChatDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.dto.PostContextFilterDTO",
    "allRecordComponents": true,
    "queryAllPublicMethods": true,
    "fields": [
      {
        "name": "authorIds"
      },
      {
        "name": "conversationIds"
      },
      {
        "name": "courseId"
      },
      {
        "name": "filterToAnsweredOrReacted"
      },
      {
        "name": "filterToCourseWide"
      },
      {
        "name": "filterToUnresolved"
      },
      {
        "name": "hashCode"
      },
      {
        "name": "pinnedOnly"
      },
      {
        "name": "plagiarismCaseId"
      },
      {
        "name": "postSortCriterion"
      },
      {
        "name": "searchText"
      },
      {
        "name": "sortingOrder"
      },
      {
        "name": "toString"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long",
          "long[]",
          "long[]",
          "java.lang.String",
          "java.lang.Boolean",
          "java.lang.Boolean",
          "java.lang.Boolean",
          "de.tum.cit.aet.artemis.communication.domain.PostSortCriterion",
          "de.tum.cit.aet.artemis.core.dto.SortingOrder",
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.dto.PostDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "action",
        "parameterTypes": []
      },
      {
        "name": "post",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.dto.UpdatePostingDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "long",
          "java.lang.String",
          "java.lang.String",
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.dto.UserConversationInfo",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long",
          "java.lang.Boolean",
          "java.lang.Boolean",
          "java.lang.Boolean",
          "java.lang.Boolean",
          "java.time.ZonedDateTime",
          "long"
        ]
      }
    ],
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.dto.UserCourseNotificationSettingPresetDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "identifier",
        "parameterTypes": []
      },
      {
        "name": "presetMap",
        "parameterTypes": []
      },
      {
        "name": "typeId",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.repository.AnswerPostRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.repository.ConductAgreementRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.repository.ConversationMessageRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "findMessages",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.dto.PostContextFilterDTO",
          "org.springframework.data.domain.Pageable",
          "long"
        ]
      },
      {
        "name": "findMessagePostByIdElseThrow",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.repository.ConversationParticipantRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "deleteAllByConversationId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findConversationParticipantByConversationIdAndUserId",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "findConversationParticipantsByConversationIdAndUserIds",
        "parameterTypes": [
          "java.lang.Long",
          "java.util.Set"
        ]
      },
      {
        "name": "findModeratorConversationParticipantByConversationIdAndUserId",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "updateLastReadAsync",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long",
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "userHasAccessToAllConversationsElseThrow",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "countByConversationId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "decrementUnreadMessagesCountOfParticipants",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "existsByConversationIdAndUserId",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "findConversationParticipantsByConversationId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findConversationParticipantsWithUserGroupsByConversationId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "incrementUnreadMessagesCountOfParticipants",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.repository.CourseNotificationParameterRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.repository.CourseNotificationRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.repository.CustomPostRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "findPostIdsWithSpecification",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification",
          "org.springframework.data.domain.Pageable"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.repository.CustomPostRepositoryImpl",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "jakarta.persistence.EntityManager"
        ]
      },
      {
        "name": "findPostIdsWithSpecification",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification",
          "org.springframework.data.domain.Pageable"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.repository.CustomPostRepositoryImpl$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "toObject",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.repository.FaqRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.repository.ForwardedMessageRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.repository.GlobalNotificationSettingRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "isNotificationEnabled",
        "parameterTypes": [
          "long",
          "de.tum.cit.aet.artemis.communication.domain.GlobalNotificationType"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.repository.PostRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.repository.PushNotificationDeviceConfigurationRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.repository.ReactionRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.repository.SavedPostRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findSavedPostByPostIdAndPostType",
        "parameterTypes": [
          "java.lang.Long",
          "de.tum.cit.aet.artemis.communication.domain.PostingType"
        ]
      },
      {
        "name": "findSavedPostIdsByUserIdAndPostType",
        "parameterTypes": [
          "long",
          "de.tum.cit.aet.artemis.communication.domain.PostingType"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.repository.SystemNotificationRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.repository.UserCourseNotificationSettingPresetRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findUserCourseNotificationSettingPresetByUserIdAndCourseId",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.repository.UserCourseNotificationSettingSpecificationRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.repository.UserCourseNotificationStatusRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "countUnseenCourseNotificationsForUserInCourse",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.repository.conversation.ChannelRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.repository.conversation.ConversationRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "deleteAllByCourseId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithParticipantsById",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getGeneralInformationForConversations",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "getUserInformationForConversations",
        "parameterTypes": [
          "java.lang.Iterable",
          "java.lang.Long"
        ]
      },
      {
        "name": "updateLastMessageDateAsync",
        "parameterTypes": [
          "java.lang.Long",
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "userHasUnreadMessageInCourse",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.repository.conversation.GroupChatRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.repository.conversation.OneToOneChatRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.AnswerMessageService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.ConductAgreementService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.repository.ConductAgreementRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.ConversationMessagingService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "de.tum.cit.aet.artemis.exercise.repository.ExerciseRepository",
          "de.tum.cit.aet.artemis.communication.repository.ConversationMessageRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.communication.service.WebsocketMessagingService",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.communication.service.conversation.ConversationService",
          "de.tum.cit.aet.artemis.communication.repository.ConversationParticipantRepository",
          "de.tum.cit.aet.artemis.communication.service.conversation.auth.ChannelAuthorizationService",
          "de.tum.cit.aet.artemis.communication.repository.SavedPostRepository",
          "de.tum.cit.aet.artemis.communication.service.CourseNotificationService",
          "de.tum.cit.aet.artemis.communication.repository.PostRepository",
          "de.tum.cit.aet.artemis.communication.service.notifications.SingleUserNotificationService"
        ]
      },
      {
        "name": "getMessages",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable",
          "de.tum.cit.aet.artemis.communication.dto.PostContextFilterDTO",
          "de.tum.cit.aet.artemis.core.domain.User",
          "java.lang.Long"
        ]
      },
      {
        "name": "createMessage",
        "parameterTypes": [
          "java.lang.Long",
          "de.tum.cit.aet.artemis.communication.dto.CreatePostDTO"
        ]
      },
      {
        "name": "deleteMessageById",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "notifyAboutMessageCreation",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.domain.CreatedConversationMessage"
        ]
      },
      {
        "name": "updateMessage",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long",
          "de.tum.cit.aet.artemis.communication.dto.UpdatePostingDTO"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.ConversationMessagingService$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.CourseNotificationBroadcastService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.CourseNotificationCacheService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.cache.CacheManager"
        ]
      },
      {
        "name": "invalidateCourseNotificationCacheForUsers",
        "parameterTypes": [
          "java.util.Set",
          "long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.CourseNotificationCacheService$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.CourseNotificationCleanupService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.repository.CourseNotificationRepository",
          "de.tum.cit.aet.artemis.communication.service.CourseNotificationCacheService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.CourseNotificationEmailService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.MessageSource",
          "org.thymeleaf.spring6.SpringTemplateEngine",
          "de.tum.cit.aet.artemis.communication.service.notifications.MailSendingService",
          "de.tum.cit.aet.artemis.communication.service.notifications.MarkdownCustomLinkRendererService",
          "de.tum.cit.aet.artemis.communication.service.notifications.MarkdownCustomReferenceRendererService"
        ]
      },
      {
        "name": "sendCourseNotification",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.dto.CourseNotificationDTO",
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.CourseNotificationEmailService$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.CourseNotificationPushService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.service.notifications.push_notifications.ApplePushNotificationService",
          "de.tum.cit.aet.artemis.communication.service.notifications.push_notifications.FirebasePushNotificationService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.CourseNotificationRegistryService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.CourseNotificationService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.service.CourseNotificationRegistryService",
          "de.tum.cit.aet.artemis.communication.service.CourseNotificationSettingService",
          "de.tum.cit.aet.artemis.communication.repository.CourseNotificationRepository",
          "de.tum.cit.aet.artemis.communication.repository.CourseNotificationParameterRepository",
          "de.tum.cit.aet.artemis.communication.service.UserCourseNotificationStatusService",
          "de.tum.cit.aet.artemis.communication.service.CourseNotificationWebappService",
          "de.tum.cit.aet.artemis.communication.service.CourseNotificationPushService",
          "de.tum.cit.aet.artemis.communication.service.CourseNotificationEmailService"
        ]
      },
      {
        "name": "sendCourseNotification",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.domain.course_notifications.CourseNotification",
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.CourseNotificationService$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.CourseNotificationSettingPresetRegistryService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.CourseNotificationSettingService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.service.CourseNotificationRegistryService",
          "de.tum.cit.aet.artemis.communication.service.CourseNotificationCacheService",
          "de.tum.cit.aet.artemis.communication.repository.UserCourseNotificationSettingSpecificationRepository",
          "de.tum.cit.aet.artemis.communication.repository.UserCourseNotificationSettingPresetRepository",
          "de.tum.cit.aet.artemis.communication.service.CourseNotificationSettingPresetRegistryService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.CourseNotificationWebappService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.service.WebsocketMessagingService"
        ]
      },
      {
        "name": "sendCourseNotification",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.dto.CourseNotificationDTO",
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.CourseNotificationWebappService$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.FaqService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.GlobalNotificationSettingService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.repository.GlobalNotificationSettingRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.NotificationScheduleService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.service.ScheduleService",
          "de.tum.cit.aet.artemis.exercise.repository.ExerciseRepository",
          "de.tum.cit.aet.artemis.core.service.ProfileService",
          "de.tum.cit.aet.artemis.communication.service.notifications.GroupNotificationService",
          "de.tum.cit.aet.artemis.communication.service.notifications.SingleUserNotificationService",
          "org.springframework.scheduling.TaskScheduler"
        ]
      },
      {
        "name": "applicationReady",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.PostingService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "broadcastForPost",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.dto.PostDTO",
          "java.lang.Long",
          "java.util.Set"
        ]
      },
      {
        "name": "preCheckUserAndCourseForCommunicationOrMessaging",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User",
          "de.tum.cit.aet.artemis.core.domain.Course"
        ]
      },
      {
        "name": "preparePostAndBroadcast",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.domain.AnswerPost",
          "de.tum.cit.aet.artemis.core.domain.Course"
        ]
      },
      {
        "name": "preparePostForBroadcast",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.domain.Post"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.PushNotificationDeviceConfigurationCleanupService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.repository.PushNotificationDeviceConfigurationRepository",
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.ReactionService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.SavedPostScheduleService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.repository.SavedPostRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.SavedPostService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.SystemNotificationService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.service.WebsocketMessagingService",
          "de.tum.cit.aet.artemis.communication.repository.SystemNotificationRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.UserCourseNotificationStatusService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.repository.UserCourseNotificationStatusRepository",
          "de.tum.cit.aet.artemis.communication.service.CourseNotificationCacheService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.WebsocketMessagingService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.messaging.simp.SimpMessageSendingOperations",
          "java.util.concurrent.Executor"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.conversation.ChannelService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.repository.ConversationParticipantRepository",
          "de.tum.cit.aet.artemis.communication.repository.conversation.ChannelRepository",
          "de.tum.cit.aet.artemis.communication.service.conversation.ConversationService",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.conversation.ConversationDTOService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.communication.repository.ConversationParticipantRepository",
          "de.tum.cit.aet.artemis.communication.service.conversation.auth.ChannelAuthorizationService",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.conversation.ConversationService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.service.conversation.ConversationDTOService",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.communication.repository.conversation.ChannelRepository",
          "de.tum.cit.aet.artemis.communication.repository.ConversationParticipantRepository",
          "de.tum.cit.aet.artemis.communication.repository.conversation.ConversationRepository",
          "de.tum.cit.aet.artemis.communication.service.WebsocketMessagingService",
          "de.tum.cit.aet.artemis.communication.repository.conversation.OneToOneChatRepository",
          "de.tum.cit.aet.artemis.communication.repository.PostRepository",
          "de.tum.cit.aet.artemis.communication.repository.conversation.GroupChatRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.conversation.GroupChatService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.communication.repository.ConversationParticipantRepository",
          "de.tum.cit.aet.artemis.communication.service.conversation.ConversationService",
          "de.tum.cit.aet.artemis.communication.repository.conversation.GroupChatRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.conversation.OneToOneChatService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.conversation.auth.ChannelAuthorizationService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.communication.repository.ConversationParticipantRepository",
          "de.tum.cit.aet.artemis.communication.repository.conversation.ChannelRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.conversation.auth.ConversationAuthorizationService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.conversation.auth.GroupChatAuthorizationService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.repository.ConversationParticipantRepository",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.communication.repository.conversation.GroupChatRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.conversation.auth.OneToOneChatAuthorizationService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.linkpreview.LinkPreviewService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.notifications.GroupNotificationScheduleService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.service.notifications.SingleUserNotificationService",
          "de.tum.cit.aet.artemis.core.service.messaging.InstanceMessageSendService",
          "de.tum.cit.aet.artemis.communication.service.notifications.GroupNotificationService"
        ]
      },
      {
        "name": "checkNotificationsForNewExerciseAsync",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise"
        ]
      },
      {
        "name": "checkAndCreateAppropriateNotificationsWhenUpdatingExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise",
          "de.tum.cit.aet.artemis.exercise.domain.Exercise",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.notifications.GroupNotificationScheduleService$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.notifications.GroupNotificationService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.communication.service.CourseNotificationService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.notifications.MailSendingService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "tech.jhipster.config.JHipsterProperties",
          "org.springframework.mail.javamail.JavaMailSender",
          "de.tum.cit.aet.artemis.core.service.ProfileService",
          "org.springframework.context.MessageSource",
          "org.thymeleaf.spring6.SpringTemplateEngine"
        ]
      },
      {
        "name": "buildAndSendAsync",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User",
          "java.lang.String",
          "java.lang.String",
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.notifications.MailSendingService$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.notifications.MailService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.MessageSource",
          "org.thymeleaf.spring6.SpringTemplateEngine",
          "de.tum.cit.aet.artemis.communication.service.notifications.MailSendingService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.notifications.MarkdownCustomLinkRendererService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "render",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.notifications.MarkdownCustomReferenceRendererService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "render",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.notifications.MarkdownCustomRendererService",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.notifications.SingleUserNotificationService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository",
          "de.tum.cit.aet.artemis.communication.service.conversation.ConversationService",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.communication.service.CourseNotificationService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.notifications.push_notifications.ApplePushNotificationService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.repository.PushNotificationDeviceConfigurationRepository",
          "org.springframework.web.client.RestTemplate"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.notifications.push_notifications.ApplePushNotificationService$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.notifications.push_notifications.FirebasePushNotificationService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.repository.PushNotificationDeviceConfigurationRepository",
          "org.springframework.web.client.RestTemplate"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.notifications.push_notifications.FirebasePushNotificationService$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.notifications.push_notifications.PushNotificationDataDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.notifications.push_notifications.PushNotificationService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "sendCourseNotification",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.dto.CourseNotificationDTO",
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.notifications.push_notifications.RelayNotificationRequest"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.web.AndroidAppSiteAssociationResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.web.AnswerMessageResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.web.AppleAppSiteAssociationResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.web.ConversationMessageResource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.service.ConversationMessagingService",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository"
        ]
      },
      {
        "name": "getMessages",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable",
          "de.tum.cit.aet.artemis.communication.dto.PostContextFilterDTO",
          "java.security.Principal"
        ]
      },
      {
        "name": "createMessage",
        "parameterTypes": [
          "java.lang.Long",
          "de.tum.cit.aet.artemis.communication.dto.CreatePostDTO"
        ]
      },
      {
        "name": "deleteMessage",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "updateMessage",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long",
          "de.tum.cit.aet.artemis.communication.dto.UpdatePostingDTO"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.web.ConversationMessageResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.web.CourseNotificationResource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.service.CourseNotificationService",
          "de.tum.cit.aet.artemis.communication.service.CourseNotificationSettingPresetRegistryService",
          "de.tum.cit.aet.artemis.communication.service.CourseNotificationRegistryService",
          "de.tum.cit.aet.artemis.core.repository.UserRepository"
        ]
      },
      {
        "name": "getCourseNotificationInfo",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.web.CourseNotificationResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.web.FaqResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.web.ForwardedMessageResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.web.GlobalNotificationSettingResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.web.LinkPreviewResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.web.PushNotificationResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.web.ReactionResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.web.SavedPostResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.web.SystemNotificationResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.web.UserCourseNotificationSettingResource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.service.CourseNotificationSettingService",
          "de.tum.cit.aet.artemis.communication.service.CourseNotificationSettingPresetRegistryService",
          "de.tum.cit.aet.artemis.core.repository.UserRepository"
        ]
      },
      {
        "name": "getSettingInfo",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.web.UserCourseNotificationSettingResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.web.UserCourseNotificationStatusResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.web.admin.AdminSystemNotificationResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.web.conversation.ChannelResource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.repository.ConversationParticipantRepository",
          "de.tum.cit.aet.artemis.communication.service.conversation.ChannelService",
          "de.tum.cit.aet.artemis.communication.repository.conversation.ChannelRepository",
          "de.tum.cit.aet.artemis.communication.service.conversation.auth.ChannelAuthorizationService",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.communication.service.conversation.ConversationDTOService",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.communication.service.conversation.ConversationService",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.communication.service.CourseNotificationService"
        ]
      },
      {
        "name": "getExerciseChannel",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "createChannel",
        "parameterTypes": [
          "java.lang.Long",
          "de.tum.cit.aet.artemis.communication.dto.ChannelDTO"
        ]
      },
      {
        "name": "deregisterUsers",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long",
          "java.util.List"
        ]
      },
      {
        "name": "getCourseChannelsOverview",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "registerUsersToChannel",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long",
          "java.util.List",
          "java.lang.Boolean",
          "java.lang.Boolean",
          "java.lang.Boolean"
        ]
      },
      {
        "name": "updateChannel",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long",
          "de.tum.cit.aet.artemis.communication.dto.ChannelDTO"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.web.conversation.ChannelResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.web.conversation.ConversationManagementResource",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.web.conversation.ConversationResource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.service.conversation.ConversationService",
          "de.tum.cit.aet.artemis.communication.service.conversation.auth.ChannelAuthorizationService",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "de.tum.cit.aet.artemis.communication.service.ConductAgreementService"
        ]
      },
      {
        "name": "acceptCodeOfConduct",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getConversationsOfUser",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getResponsibleUsersForCodeOfConduct",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "hasUnreadMessages",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "isCodeOfConductAccepted",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "searchMembersOfConversation",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long",
          "java.lang.String",
          "de.tum.cit.aet.artemis.communication.service.conversation.ConversationService$ConversationMemberSearchFilters",
          "org.springframework.data.domain.Pageable"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.web.conversation.GroupChatResource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "de.tum.cit.aet.artemis.communication.service.conversation.auth.GroupChatAuthorizationService",
          "de.tum.cit.aet.artemis.communication.service.conversation.ConversationService",
          "de.tum.cit.aet.artemis.communication.service.conversation.GroupChatService",
          "de.tum.cit.aet.artemis.communication.repository.conversation.GroupChatRepository",
          "de.tum.cit.aet.artemis.communication.service.conversation.ConversationDTOService",
          "de.tum.cit.aet.artemis.communication.service.CourseNotificationService"
        ]
      },
      {
        "name": "deregisterUsersFromGroupChat",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long",
          "java.util.List"
        ]
      },
      {
        "name": "registerUsersToGroupChat",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long",
          "java.util.List"
        ]
      },
      {
        "name": "startGroupChat",
        "parameterTypes": [
          "java.lang.Long",
          "java.util.List"
        ]
      },
      {
        "name": "updateGroupChat",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long",
          "de.tum.cit.aet.artemis.communication.dto.GroupChatDTO"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.web.conversation.OneToOneChatResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.FilePathType"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.api.AbstractApi",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.ApplicationConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.ApplicationConfiguration$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.ApplicationConfiguration$$SpringCGLIB$$FastClass$$0",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.ApplicationConfiguration$$SpringCGLIB$$FastClass$$1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.ArtemisCompatibleVersionsConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getAndroid",
        "parameterTypes": []
      },
      {
        "name": "getIos",
        "parameterTypes": []
      },
      {
        "name": "setAndroid",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.config.ArtemisCompatibleVersionsConfiguration$Platform"
        ]
      },
      {
        "name": "setIos",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.config.ArtemisCompatibleVersionsConfiguration$Platform"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.ArtemisCompatibleVersionsConfiguration$Platform",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getMin",
        "parameterTypes": []
      },
      {
        "name": "getRecommended",
        "parameterTypes": []
      },
      {
        "name": "setMin",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRecommended",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.AsyncConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskExecutionProperties"
        ]
      },
      {
        "name": "getAsyncExecutor",
        "parameterTypes": []
      },
      {
        "name": "getAsyncUncaughtExceptionHandler",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.AsyncConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.AsyncConfiguration$$SpringCGLIB$$FastClass$$0",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.AsyncConfiguration$$SpringCGLIB$$FastClass$$1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.CacheConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "java.util.Optional",
          "java.util.Optional",
          "org.springframework.boot.autoconfigure.web.ServerProperties",
          "java.util.Optional",
          "org.springframework.core.env.Environment"
        ]
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.CacheConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.CacheConfiguration$$SpringCGLIB$$FastClass$$0",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.CacheConfiguration$$SpringCGLIB$$FastClass$$1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.CompatibleVersionsInfoContributor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.config.ArtemisCompatibleVersionsConfiguration"
        ]
      },
      {
        "name": "contribute",
        "parameterTypes": [
          "org.springframework.boot.actuate.info.Info$Builder"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.Constants",
    "fields": [
      {
        "name": "PROGRAMMING_GRACE_PERIOD_SECONDS"
      }
    ],
    "allDeclaredFields": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.Constants.PROGRAMMING_GRACE_PERIOD_SECONDS"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.CustomMetricsExtensionConfiguration$JHipsterMetricsEndpointConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.CustomMetricsExtensionConfiguration$JHipsterMetricsEndpointConfiguration$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.CustomMetricsExtensionConfiguration$JHipsterMetricsEndpointConfiguration$$SpringCGLIB$$FastClass$$0",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.CustomMetricsExtensionConfiguration$JHipsterMetricsEndpointConfiguration$$SpringCGLIB$$FastClass$$1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.DatabaseConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.DatabaseConfiguration$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.DateTimeFormatConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addFormatters",
        "parameterTypes": [
          "org.springframework.format.FormatterRegistry"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.DateTimeFormatConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.DeferredEagerBeanInitializer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.EurekaClientConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.EurekaClientConfiguration$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.EurekaClientConfiguration$$SpringCGLIB$$FastClass$$0",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.EurekaClientConfiguration$$SpringCGLIB$$FastClass$$1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.HazelcastConnection",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.cloud.client.discovery.DiscoveryClient",
          "java.util.Optional",
          "org.springframework.core.env.Environment"
        ]
      },
      {
        "name": "connectHazelcast",
        "parameterTypes": []
      },
      {
        "name": "connectToAllMembers",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.HazelcastConnection$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.JGitConfig",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "disablePackedGitMMap",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.JGitConfig$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.JacksonConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.JacksonConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.JacksonConfiguration$$SpringCGLIB$$FastClass$$0",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.JacksonConfiguration$$SpringCGLIB$$FastClass$$1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.JjwtRuntimeHintsConfig",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.JjwtRuntimeHintsConfig$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.LicenseConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "this$0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.config.LicenseConfiguration$MatLabLicense"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.LoggingAspectConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.LoggingAspectConfiguration$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.LoggingAspectConfiguration$$SpringCGLIB$$FastClass$$0",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.LoggingAspectConfiguration$$SpringCGLIB$$FastClass$$1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.LoggingConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.LoggingConfiguration$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.MetricsBean",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry",
          "org.springframework.scheduling.TaskScheduler",
          "org.springframework.web.socket.config.WebSocketMessageBrokerStats",
          "org.springframework.messaging.simp.user.SimpUserRegistry",
          "org.springframework.web.socket.WebSocketHandler",
          "java.util.List",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.exercise.repository.ExerciseRepository",
          "java.util.Optional",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.core.repository.StatisticsRepository",
          "de.tum.cit.aet.artemis.core.service.ProfileService",
          "java.util.Optional"
        ]
      },
      {
        "name": "applicationReady",
        "parameterTypes": []
      },
      {
        "name": "recalculateMetrics",
        "parameterTypes": []
      },
      {
        "name": "updatePublicArtemisMetrics",
        "parameterTypes": []
      },
      {
        "name": "calculateActiveUserMetrics",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.MetricsBean$NowEndDateActiveUserNamesIntegerFunction"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.MetricsBean$NowEndDateActiveUserNamesMetricsEntryFunction"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.ModuleFeatureInfoContributor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      },
      {
        "name": "contribute",
        "parameterTypes": [
          "org.springframework.boot.actuate.info.Info$Builder"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.ProgrammingLanguageConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getDefaultDockerFlags",
        "parameterTypes": []
      },
      {
        "name": "setDefaultDockerFlags",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setImages",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.ProgrammingLanguageConfiguration$DockerFlag",
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "this$0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.PropertiesConfigurationGuard",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.PublicResourcesConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "tech.jhipster.config.JHipsterProperties"
        ]
      },
      {
        "name": "addResourceHandlers",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.PublicResourcesConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.RestTemplateConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.RestTemplateConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.RestTemplateConfiguration$$SpringCGLIB$$FastClass$$0",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.RestTemplateConfiguration$$SpringCGLIB$$FastClass$$1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.SecurityConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.web.filter.CorsFilter",
          "java.util.Optional",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.core.service.user.PasswordService",
          "de.tum.cit.aet.artemis.core.service.ProfileService",
          "de.tum.cit.aet.artemis.core.security.jwt.TokenProvider",
          "de.tum.cit.aet.artemis.core.security.jwt.JWTCookieService"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "validatePasskeyAllowedOriginConfiguration",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.SecurityConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.SecurityConfiguration$$SpringCGLIB$$FastClass$$0",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.SecurityConfiguration$$SpringCGLIB$$FastClass$$1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.SentryConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.SentryConfiguration$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.StompErrorLogFilter",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.TaskSchedulingConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.TaskSchedulingConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.TaskSchedulingConfiguration$$SpringCGLIB$$FastClass$$0",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.TaskSchedulingConfiguration$$SpringCGLIB$$FastClass$$1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.TheiaConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.TomcatConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.TomcatConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.TomcatConfiguration$$SpringCGLIB$$FastClass$$0",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.TomcatConfiguration$$SpringCGLIB$$FastClass$$1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.WebConfigurer",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.env.Environment",
          "tech.jhipster.config.JHipsterProperties",
          "de.tum.cit.aet.artemis.core.security.allowedTools.ToolsInterceptor"
        ]
      },
      {
        "name": "addInterceptors",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.InterceptorRegistry"
        ]
      },
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.boot.web.server.WebServerFactory"
        ]
      },
      {
        "name": "onStartup",
        "parameterTypes": [
          "jakarta.servlet.ServletContext"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.WebConfigurer$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.WebConfigurer$$SpringCGLIB$$FastClass$$0",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.WebConfigurer$$SpringCGLIB$$FastClass$$1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.audit.AuditEventConverter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.migration.MigrationEntry"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.migration.MigrationIntegrityException"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.migration.MigrationRegistry",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.config.migration.MigrationService"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "org.springframework.boot.context.event.ApplicationReadyEvent"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.migration.MigrationService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.repository.MigrationChangeRepository",
          "org.springframework.beans.factory.config.AutowireCapableBeanFactory"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.validator.Base64Url",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.websocket.WebsocketBrokerHealthIndicator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "health",
        "parameterTypes": []
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.websocket.WebsocketConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.http.converter.json.MappingJackson2HttpMessageConverter",
          "org.springframework.scheduling.TaskScheduler",
          "de.tum.cit.aet.artemis.core.security.jwt.TokenProvider",
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.exercise.repository.ExerciseRepository",
          "java.util.Optional"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.websocket.WebsocketConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.websocket.WebsocketConfiguration$$SpringCGLIB$$FastClass$$0",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.websocket.WebsocketConfiguration$$SpringCGLIB$$FastClass$$1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.websocket.WebsocketConfiguration$1",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterHandshake",
        "parameterTypes": [
          "org.springframework.http.server.ServerHttpRequest",
          "org.springframework.http.server.ServerHttpResponse",
          "org.springframework.web.socket.WebSocketHandler",
          "java.lang.Exception"
        ]
      },
      {
        "name": "beforeHandshake",
        "parameterTypes": [
          "org.springframework.http.server.ServerHttpRequest",
          "org.springframework.http.server.ServerHttpResponse",
          "org.springframework.web.socket.WebSocketHandler",
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.websocket.WebsocketSecurityConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.websocket.WebsocketSecurityConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.websocket.WebsocketSecurityConfiguration$$SpringCGLIB$$FastClass$$0",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.websocket.WebsocketSecurityConfiguration$$SpringCGLIB$$FastClass$$1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.AbstractAuditingEntity",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getCreatedDate",
        "parameterTypes": []
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreatedDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setExternalLLMUsageAccepted",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setLastModifiedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastModifiedDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setSavedPosts",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setStarted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setStartedDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getLastModifiedBy",
        "parameterTypes": []
      },
      {
        "name": "getLastModifiedDate",
        "parameterTypes": []
      }
    ],
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.AbstractAuditingEntity$HibernateAccessOptimizer$IXEcX0YD",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.AbstractAuditingEntity$HibernateAccessOptimizer$gC790Ide",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.AbstractAuditingEntity$HibernateAccessOptimizer$gPlH9gLR",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.AbstractAuditingEntity$HibernateAccessOptimizer$kceFiHcv",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.AbstractAuditingEntity$HibernateAccessOptimizer$l4ZunJ6O",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.AbstractAuditingEntity$HibernateAccessOptimizer$vAF5t2pv",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.AbstractAuditingEntity$HibernateAccessOptimizer$yQSODY2Z",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.AbstractAuditingEntity$HibernateAccessOptimizer$zC3mgST9",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.AbstractAuditingEntity_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "createdBy"
      },
      {
        "name": "createdDate"
      },
      {
        "name": "lastModifiedBy"
      },
      {
        "name": "lastModifiedDate"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.Authority",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.Authority$HibernateAccessOptimizer$nzqz1umy",
    "fields": [
      {
        "name": "invocationTarget$32k8rq1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.Authority$HibernateInstantiator$qo7qmFN5",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.Authority_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "name"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.CleanupJobExecution",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCleanupJobType",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.CleanupJobType"
        ]
      },
      {
        "name": "setDeleteFrom",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setDeleteTo",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setDeletionTimestamp",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.CleanupJobExecution$HibernateAccessOptimizer$Udo05GGv",
    "fields": [
      {
        "name": "invocationTarget$37och91"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.CleanupJobExecution$HibernateInstantiator$2MFQFvTI",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.CleanupJobExecution_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "cleanupJobType"
      },
      {
        "name": "deleteFrom"
      },
      {
        "name": "deleteTo"
      },
      {
        "name": "deletionTimestamp"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.CleanupJobType"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.Course",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getAccuracyOfScores",
        "parameterTypes": []
      },
      {
        "name": "getColor",
        "parameterTypes": []
      },
      {
        "name": "getCompetencies",
        "parameterTypes": []
      },
      {
        "name": "getComplaintsEnabled",
        "parameterTypes": []
      },
      {
        "name": "getCourseArchivePath",
        "parameterTypes": []
      },
      {
        "name": "getCourseIcon",
        "parameterTypes": []
      },
      {
        "name": "getCourseInformationSharingConfiguration",
        "parameterTypes": []
      },
      {
        "name": "getCourseInformationSharingMessagingCodeOfConduct",
        "parameterTypes": []
      },
      {
        "name": "getDefaultProgrammingLanguage",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getEditorGroupName",
        "parameterTypes": []
      },
      {
        "name": "getEndDate",
        "parameterTypes": []
      },
      {
        "name": "getEnrollmentConfirmationMessage",
        "parameterTypes": []
      },
      {
        "name": "getEnrollmentEndDate",
        "parameterTypes": []
      },
      {
        "name": "getEnrollmentStartDate",
        "parameterTypes": []
      },
      {
        "name": "getExams",
        "parameterTypes": []
      },
      {
        "name": "getExercises",
        "parameterTypes": []
      },
      {
        "name": "getFaqs",
        "parameterTypes": []
      },
      {
        "name": "getInstructorGroupName",
        "parameterTypes": []
      },
      {
        "name": "getLanguage",
        "parameterTypes": []
      },
      {
        "name": "getLearningPaths",
        "parameterTypes": []
      },
      {
        "name": "getLearningPathsEnabled",
        "parameterTypes": []
      },
      {
        "name": "getLectures",
        "parameterTypes": []
      },
      {
        "name": "getMaxComplaintResponseTextLimit",
        "parameterTypes": []
      },
      {
        "name": "getMaxComplaintTextLimit",
        "parameterTypes": []
      },
      {
        "name": "getMaxComplaintTimeDays",
        "parameterTypes": []
      },
      {
        "name": "getMaxComplaints",
        "parameterTypes": []
      },
      {
        "name": "getMaxPoints",
        "parameterTypes": []
      },
      {
        "name": "getMaxRequestMoreFeedbackTimeDays",
        "parameterTypes": []
      },
      {
        "name": "getMaxTeamComplaints",
        "parameterTypes": []
      },
      {
        "name": "getNumberOfCompetencies",
        "parameterTypes": []
      },
      {
        "name": "getNumberOfEditors",
        "parameterTypes": []
      },
      {
        "name": "getNumberOfInstructors",
        "parameterTypes": []
      },
      {
        "name": "getNumberOfPrerequisites",
        "parameterTypes": []
      },
      {
        "name": "getNumberOfStudents",
        "parameterTypes": []
      },
      {
        "name": "getNumberOfTeachingAssistants",
        "parameterTypes": []
      },
      {
        "name": "getNumberOfTutorialGroups",
        "parameterTypes": []
      },
      {
        "name": "getOnlineCourseConfiguration",
        "parameterTypes": []
      },
      {
        "name": "getOrganizations",
        "parameterTypes": []
      },
      {
        "name": "getPrerequisites",
        "parameterTypes": []
      },
      {
        "name": "getPresentationScore",
        "parameterTypes": []
      },
      {
        "name": "getRequestMoreFeedbackEnabled",
        "parameterTypes": []
      },
      {
        "name": "getRestrictedAthenaModulesAccess",
        "parameterTypes": []
      },
      {
        "name": "getSemester",
        "parameterTypes": []
      },
      {
        "name": "getShortName",
        "parameterTypes": []
      },
      {
        "name": "getStartDate",
        "parameterTypes": []
      },
      {
        "name": "getStudentCourseAnalyticsDashboardEnabled",
        "parameterTypes": []
      },
      {
        "name": "getStudentGroupName",
        "parameterTypes": []
      },
      {
        "name": "getTeachingAssistantGroupName",
        "parameterTypes": []
      },
      {
        "name": "getTimeZone",
        "parameterTypes": []
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "getTutorialGroups",
        "parameterTypes": []
      },
      {
        "name": "getTutorialGroupsConfiguration",
        "parameterTypes": []
      },
      {
        "name": "getUnenrollmentEndDate",
        "parameterTypes": []
      },
      {
        "name": "isEnrollmentEnabled",
        "parameterTypes": []
      },
      {
        "name": "isFaqEnabled",
        "parameterTypes": []
      },
      {
        "name": "isOnlineCourse",
        "parameterTypes": []
      },
      {
        "name": "isTestCourse",
        "parameterTypes": []
      },
      {
        "name": "isTrainingEnabled",
        "parameterTypes": []
      },
      {
        "name": "isUnenrollmentEnabled",
        "parameterTypes": []
      },
      {
        "name": "setAccuracyOfScores",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setColor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCompetencies",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setCourseArchivePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCourseIcon",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCourseInformationSharingConfiguration",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.CourseInformationSharingConfiguration"
        ]
      },
      {
        "name": "setCourseInformationSharingMessagingCodeOfConduct",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDefaultProgrammingLanguage",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingLanguage"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEditorGroupName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEndDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setEnrollmentConfirmationMessage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnrollmentEnabled",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setEnrollmentEndDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setEnrollmentStartDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setExams",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setExercises",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setFaqEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setFaqs",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setInstructorGroupName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLanguage",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.Language"
        ]
      },
      {
        "name": "setLearningPaths",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setLearningPathsEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLectures",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setMaxComplaintResponseTextLimit",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxComplaintTextLimit",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxComplaintTimeDays",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxComplaints",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMaxPoints",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMaxRequestMoreFeedbackTimeDays",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxTeamComplaints",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setNumberOfEditors",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setNumberOfInstructors",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setNumberOfStudents",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setNumberOfTeachingAssistants",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setOnlineCourse",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setOnlineCourse",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOnlineCourseConfiguration",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.lti.domain.OnlineCourseConfiguration"
        ]
      },
      {
        "name": "setOrganizations",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setPrerequisites",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setPresentationScore",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setRestrictedAthenaModulesAccess",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSemester",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setShortName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStartDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setStudentCourseAnalyticsDashboardEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setStudentGroupName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTeachingAssistantGroupName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTestCourse",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTimeZone",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrainingEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTutorialGroups",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setTutorialGroupsConfiguration",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupsConfiguration"
        ]
      },
      {
        "name": "setUnenrollmentEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUnenrollmentEndDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "addExam",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.domain.Exam"
        ]
      },
      {
        "name": "addExercises",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise"
        ]
      },
      {
        "name": "addFaq",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.domain.Faq"
        ]
      },
      {
        "name": "addLectures",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.lecture.domain.Lecture"
        ]
      },
      {
        "name": "defineCourseGroupName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "enrollmentIsActive",
        "parameterTypes": []
      },
      {
        "name": "getDefaultEditorGroupName",
        "parameterTypes": []
      },
      {
        "name": "getDefaultInstructorGroupName",
        "parameterTypes": []
      },
      {
        "name": "getDefaultStudentGroupName",
        "parameterTypes": []
      },
      {
        "name": "getDefaultTeachingAssistantGroupName",
        "parameterTypes": []
      },
      {
        "name": "getMaxComplaintResponseTextLimitForExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise"
        ]
      },
      {
        "name": "getMaxComplaintTextLimitForExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise"
        ]
      },
      {
        "name": "hasCourseArchive",
        "parameterTypes": []
      },
      {
        "name": "setNumberOfCompetencies",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setNumberOfPrerequisites",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setNumberOfTutorialGroups",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "unenrollmentIsActive",
        "parameterTypes": []
      },
      {
        "name": "validateAccuracyOfScores",
        "parameterTypes": []
      },
      {
        "name": "validateComplaintsAndRequestMoreFeedbackConfig",
        "parameterTypes": []
      },
      {
        "name": "validateEnrollmentConfirmationMessage",
        "parameterTypes": []
      },
      {
        "name": "validateEnrollmentStartAndEndDate",
        "parameterTypes": []
      },
      {
        "name": "validateOnlineCourseAndEnrollmentEnabled",
        "parameterTypes": []
      },
      {
        "name": "validateShortName",
        "parameterTypes": []
      },
      {
        "name": "validateStartAndEndDate",
        "parameterTypes": []
      },
      {
        "name": "validateUnenrollmentEndDate",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.Course$HibernateAccessOptimizer$L8hAbYJC",
    "fields": [
      {
        "name": "invocationTarget$f8u8jo1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.Course$HibernateInstantiator$fTTVcfSq",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.CourseExamExportState"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.CourseInformationSharingConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.Course_",
    "fields": [
      {
        "name": "accuracyOfScores"
      },
      {
        "name": "class_"
      },
      {
        "name": "color"
      },
      {
        "name": "competencies"
      },
      {
        "name": "courseArchivePath"
      },
      {
        "name": "courseIcon"
      },
      {
        "name": "courseInformationSharingConfiguration"
      },
      {
        "name": "courseInformationSharingMessagingCodeOfConduct"
      },
      {
        "name": "defaultProgrammingLanguage"
      },
      {
        "name": "description"
      },
      {
        "name": "editorGroupName"
      },
      {
        "name": "endDate"
      },
      {
        "name": "enrollmentConfirmationMessage"
      },
      {
        "name": "enrollmentEnabled"
      },
      {
        "name": "enrollmentEndDate"
      },
      {
        "name": "enrollmentStartDate"
      },
      {
        "name": "exams"
      },
      {
        "name": "exercises"
      },
      {
        "name": "faqEnabled"
      },
      {
        "name": "faqs"
      },
      {
        "name": "instructorGroupName"
      },
      {
        "name": "language"
      },
      {
        "name": "learningPaths"
      },
      {
        "name": "learningPathsEnabled"
      },
      {
        "name": "lectures"
      },
      {
        "name": "maxComplaintResponseTextLimit"
      },
      {
        "name": "maxComplaintTextLimit"
      },
      {
        "name": "maxComplaintTimeDays"
      },
      {
        "name": "maxComplaints"
      },
      {
        "name": "maxPoints"
      },
      {
        "name": "maxRequestMoreFeedbackTimeDays"
      },
      {
        "name": "maxTeamComplaints"
      },
      {
        "name": "onlineCourse"
      },
      {
        "name": "onlineCourseConfiguration"
      },
      {
        "name": "organizations"
      },
      {
        "name": "prerequisites"
      },
      {
        "name": "presentationScore"
      },
      {
        "name": "restrictedAthenaModulesAccess"
      },
      {
        "name": "semester"
      },
      {
        "name": "shortName"
      },
      {
        "name": "startDate"
      },
      {
        "name": "studentCourseAnalyticsDashboardEnabled"
      },
      {
        "name": "studentGroupName"
      },
      {
        "name": "teachingAssistantGroupName"
      },
      {
        "name": "testCourse"
      },
      {
        "name": "timeZone"
      },
      {
        "name": "title"
      },
      {
        "name": "tutorialGroups"
      },
      {
        "name": "tutorialGroupsConfiguration"
      },
      {
        "name": "unenrollmentEnabled"
      },
      {
        "name": "unenrollmentEndDate"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.DataExport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreationFinishedDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setDataExportState",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.DataExportState"
        ]
      },
      {
        "name": "setDownloadDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setFilePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastModifiedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastModifiedDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.DataExport$HibernateAccessOptimizer$Jjyg2PLM",
    "fields": [
      {
        "name": "invocationTarget$neu3t40"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.DataExport$HibernateInstantiator$myKMfDjV",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.DataExportState"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.DataExport_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "creationFinishedDate"
      },
      {
        "name": "dataExportState"
      },
      {
        "name": "downloadDate"
      },
      {
        "name": "filePath"
      },
      {
        "name": "user"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.DomainObject",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "compareTo",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "setAuthenticationMechanism",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.AuthenticationMechanism"
        ]
      },
      {
        "name": "setBuildPlanAccessSecret",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCompetencyJols",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreatedDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setDeepLink",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeploymentId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEmail",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExercise"
        ]
      },
      {
        "name": "setExternalLLMUsageAccepted",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setIpAddress",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIrisFaqIngestionSubSettings",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.domain.settings.IrisFaqIngestionSubSettings"
        ]
      },
      {
        "name": "setIrisTutorSuggestionSubSettings",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.domain.settings.IrisTutorSuggestionSubSettings"
        ]
      },
      {
        "name": "setIss",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastModified",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setLastModifiedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastModifiedDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOnlineCourseConfigurations",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setParticipation",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.participation.Participation"
        ]
      },
      {
        "name": "setProgrammingExercises",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setProgress",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.QuizQuestionProgressData"
        ]
      },
      {
        "name": "setProjectKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResourceLinkId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSavedPosts",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setStarted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setStartedDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setStudent",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "setTeam",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Team"
        ]
      },
      {
        "name": "setTimestamp",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "setUserIdeMappings",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setVersions",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.DomainObject_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "id"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.FileUpload",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCreationDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setEntityId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setEntityType",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.FileUploadEntityType"
        ]
      },
      {
        "name": "setFilename",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setServerFilePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.FileUpload$HibernateAccessOptimizer$6Df6lcFL",
    "fields": [
      {
        "name": "invocationTarget$98940r0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.FileUpload$HibernateInstantiator$ULtU5RLZ",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.FileUploadEntityType"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.FileUpload_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "creationDate"
      },
      {
        "name": "entityId"
      },
      {
        "name": "entityType"
      },
      {
        "name": "filename"
      },
      {
        "name": "path"
      },
      {
        "name": "serverFilePath"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.GraphType"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.LLMRequest"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.LLMServiceType"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.LLMTokenUsageRequest",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCostPerMillionInputTokens",
        "parameterTypes": [
          "float"
        ]
      },
      {
        "name": "setCostPerMillionOutputTokens",
        "parameterTypes": [
          "float"
        ]
      },
      {
        "name": "setModel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNumInputTokens",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setNumOutputTokens",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setServicePipelineId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrace",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.LLMTokenUsageTrace"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.LLMTokenUsageRequest$HibernateAccessOptimizer$mWSSOFfa",
    "fields": [
      {
        "name": "invocationTarget$p1p92n0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.LLMTokenUsageRequest$HibernateInstantiator$tfnRFuBa",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.LLMTokenUsageRequest_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "costPerMillionInputTokens"
      },
      {
        "name": "costPerMillionOutputTokens"
      },
      {
        "name": "model"
      },
      {
        "name": "numInputTokens"
      },
      {
        "name": "numOutputTokens"
      },
      {
        "name": "servicePipelineId"
      },
      {
        "name": "trace"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.LLMTokenUsageTrace",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCourseId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setExerciseId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setIrisMessageId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setLlmRequests",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setServiceType",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.LLMServiceType"
        ]
      },
      {
        "name": "setTime",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.LLMTokenUsageTrace$HibernateAccessOptimizer$IXBKsJ84",
    "fields": [
      {
        "name": "invocationTarget$bsvrje1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.LLMTokenUsageTrace$HibernateInstantiator$0wEqSjdm",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.LLMTokenUsageTrace_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "courseId"
      },
      {
        "name": "exerciseId"
      },
      {
        "name": "irisMessageId"
      },
      {
        "name": "llmRequests"
      },
      {
        "name": "serviceType"
      },
      {
        "name": "time"
      },
      {
        "name": "userId"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.Language",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.MigrationChangelog",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setAuthor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDateExecuted",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setDateString",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeploymentId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSystemVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.MigrationChangelog$HibernateAccessOptimizer$gzOxZyoo",
    "fields": [
      {
        "name": "invocationTarget$2hc7ng0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.MigrationChangelog$HibernateInstantiator$hOpFonl5",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.MigrationChangelog_",
    "fields": [
      {
        "name": "author"
      },
      {
        "name": "class_"
      },
      {
        "name": "dateExecuted"
      },
      {
        "name": "dateString"
      },
      {
        "name": "deploymentId"
      },
      {
        "name": "systemVersion"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.Organization",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCourses",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEmailPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLogoUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setShortName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsers",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.Organization$HibernateAccessOptimizer$CB5nAI7a",
    "fields": [
      {
        "name": "invocationTarget$p0ohh20"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.Organization$HibernateInstantiator$OMclqzxw",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.Organization_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "courses"
      },
      {
        "name": "description"
      },
      {
        "name": "emailPattern"
      },
      {
        "name": "logoUrl"
      },
      {
        "name": "name"
      },
      {
        "name": "shortName"
      },
      {
        "name": "url"
      },
      {
        "name": "users"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.PasskeyCredential",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setAttestationObject",
        "parameterTypes": [
          "org.springframework.security.web.webauthn.api.Bytes"
        ]
      },
      {
        "name": "setBackupEligible",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setBackupState",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCredentialId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCredentialType",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.PasskeyType"
        ]
      },
      {
        "name": "setLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastModifiedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastModifiedDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setLastUsed",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setPublicKeyCose",
        "parameterTypes": [
          "org.springframework.security.web.webauthn.api.PublicKeyCose"
        ]
      },
      {
        "name": "setSignatureCount",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setTransports",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "setUvInitialized",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.PasskeyCredential$HibernateAccessOptimizer$iIZKx3fD",
    "fields": [
      {
        "name": "invocationTarget$cb3qd21"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.PasskeyCredential$HibernateInstantiator$UrMWhFNb",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.PasskeyCredential_",
    "fields": [
      {
        "name": "attestationObject"
      },
      {
        "name": "backupEligible"
      },
      {
        "name": "backupState"
      },
      {
        "name": "class_"
      },
      {
        "name": "credentialId"
      },
      {
        "name": "credentialType"
      },
      {
        "name": "label"
      },
      {
        "name": "lastUsed"
      },
      {
        "name": "publicKeyCose"
      },
      {
        "name": "signatureCount"
      },
      {
        "name": "transports"
      },
      {
        "name": "user"
      },
      {
        "name": "uvInitialized"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.PasskeyType"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.PersistentAuditEvent",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setAuditEventDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setAuditEventType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setData",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setPrincipal",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.PersistentAuditEvent$HibernateAccessOptimizer$XgCL0WIC",
    "fields": [
      {
        "name": "invocationTarget$58st700"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.PersistentAuditEvent$HibernateInstantiator$kTeKceer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.PersistentAuditEvent_",
    "fields": [
      {
        "name": "auditEventDate"
      },
      {
        "name": "auditEventType"
      },
      {
        "name": "class_"
      },
      {
        "name": "data"
      },
      {
        "name": "id"
      },
      {
        "name": "principal"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.SpanType"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.StatisticsView"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.User",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getActivated",
        "parameterTypes": []
      },
      {
        "name": "getAuthorities",
        "parameterTypes": []
      },
      {
        "name": "getEmail",
        "parameterTypes": []
      },
      {
        "name": "getExternalLLMUsageAcceptedTimestamp",
        "parameterTypes": []
      },
      {
        "name": "getFirstName",
        "parameterTypes": []
      },
      {
        "name": "getGroups",
        "parameterTypes": []
      },
      {
        "name": "getImageUrl",
        "parameterTypes": []
      },
      {
        "name": "getLangKey",
        "parameterTypes": []
      },
      {
        "name": "getLastName",
        "parameterTypes": []
      },
      {
        "name": "getLearnerProfile",
        "parameterTypes": []
      },
      {
        "name": "getLogin",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOrganizations",
        "parameterTypes": []
      },
      {
        "name": "getParticipantIdentifier",
        "parameterTypes": []
      },
      {
        "name": "getResetDate",
        "parameterTypes": []
      },
      {
        "name": "getTutorialGroupRegistrations",
        "parameterTypes": []
      },
      {
        "name": "getVisibleRegistrationNumber",
        "parameterTypes": []
      },
      {
        "name": "isDeleted",
        "parameterTypes": []
      },
      {
        "name": "isInternal",
        "parameterTypes": []
      },
      {
        "name": "setActivated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setActivationKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAuthorities",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setCompetencyProgresses",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setCompletedLectureUnits",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeleted",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEmail",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExamUsers",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setExternalLLMUsageAccepted",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setFirstName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGroups",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setImageUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInternal",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLangKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastModifiedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastModifiedDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setLastName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLearnerProfile",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.domain.profile.LearnerProfile"
        ]
      },
      {
        "name": "setLearningPaths",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setLogin",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOrganizations",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPushNotificationDeviceConfigurations",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setRegistrationNumber",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResetDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setResetKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSavedPosts",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setTutorialGroupRegistrations",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setVcsAccessToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVcsAccessTokenExpiryDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "getActivationKey",
        "parameterTypes": []
      },
      {
        "name": "getCompetencyProgresses",
        "parameterTypes": []
      },
      {
        "name": "getCompletedLectureUnits",
        "parameterTypes": []
      },
      {
        "name": "getExamUsers",
        "parameterTypes": []
      },
      {
        "name": "getExternalId",
        "parameterTypes": []
      },
      {
        "name": "getGrantedAuthorities",
        "parameterTypes": []
      },
      {
        "name": "getLearningPaths",
        "parameterTypes": []
      },
      {
        "name": "getParticipants",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getPushNotificationDeviceConfigurations",
        "parameterTypes": []
      },
      {
        "name": "getRegistrationNumber",
        "parameterTypes": []
      },
      {
        "name": "getResetKey",
        "parameterTypes": []
      },
      {
        "name": "getVcsAccessToken",
        "parameterTypes": []
      },
      {
        "name": "getVcsAccessTokenExpiryDate",
        "parameterTypes": []
      },
      {
        "name": "hasAcceptedExternalLLMUsage",
        "parameterTypes": []
      },
      {
        "name": "hasAcceptedExternalLLMUsageElseThrow",
        "parameterTypes": []
      },
      {
        "name": "setExternalLLMUsageAcceptedTimestamp",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setVisibleRegistrationNumber",
        "parameterTypes": []
      },
      {
        "name": "setVisibleRegistrationNumber",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toDatabaseString",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.User$HibernateAccessOptimizer$RJYsP5Zy",
    "fields": [
      {
        "name": "invocationTarget$d76hdv0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.User$HibernateInstantiator$UAHuOcz7",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.UserGroup",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setGroup",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.UserGroup$UserGroupKey"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ],
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.UserGroup$HibernateAccessOptimizer$9wCPPW0L",
    "fields": [
      {
        "name": "invocationTarget$vi6n6o1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.UserGroup$HibernateInstantiator$J16Y6G76",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.UserGroup$UserGroupKey",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setGroup",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ],
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.UserGroup$UserGroupKey_"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.UserGroup_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "group"
      },
      {
        "name": "id"
      },
      {
        "name": "userId"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.User_",
    "fields": [
      {
        "name": "activated"
      },
      {
        "name": "activationKey"
      },
      {
        "name": "authorities"
      },
      {
        "name": "class_"
      },
      {
        "name": "competencyProgresses"
      },
      {
        "name": "completedLectureUnits"
      },
      {
        "name": "deleted"
      },
      {
        "name": "email"
      },
      {
        "name": "examUsers"
      },
      {
        "name": "externalLLMUsageAccepted"
      },
      {
        "name": "firstName"
      },
      {
        "name": "groups"
      },
      {
        "name": "imageUrl"
      },
      {
        "name": "internal"
      },
      {
        "name": "langKey"
      },
      {
        "name": "lastName"
      },
      {
        "name": "learnerProfile"
      },
      {
        "name": "learningPaths"
      },
      {
        "name": "login"
      },
      {
        "name": "organizations"
      },
      {
        "name": "password"
      },
      {
        "name": "pushNotificationDeviceConfigurations"
      },
      {
        "name": "registrationNumber"
      },
      {
        "name": "resetDate"
      },
      {
        "name": "resetKey"
      },
      {
        "name": "savedPosts"
      },
      {
        "name": "tutorialGroupRegistrations"
      },
      {
        "name": "vcsAccessToken"
      },
      {
        "name": "vcsAccessTokenExpiryDate"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.User_Accessor_3tts8f",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.converter.AuthenticatorTransportConverter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "convertToDatabaseColumn",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "convertToEntityAttribute",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.converter.BytesConverter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "convertToDatabaseColumn",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "convertToEntityAttribute",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.converter.PublicKeyCoseConverter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "convertToDatabaseColumn",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "convertToEntityAttribute",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.package-info"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.AuditingEntityDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getCreatedDate",
        "parameterTypes": []
      },
      {
        "name": "getLastModifiedBy",
        "parameterTypes": []
      },
      {
        "name": "getLastModifiedDate",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.CourseCompetencyProgressDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.CourseExistingExerciseDetailsDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "exerciseTitles",
        "parameterTypes": []
      },
      {
        "name": "shortNames",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.CourseForArchiveDTO",
    "queryAllDeclaredConstructors": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.CourseForDashboardDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "course",
        "parameterTypes": []
      },
      {
        "name": "courseNotificationCount",
        "parameterTypes": []
      },
      {
        "name": "fileUploadScores",
        "parameterTypes": []
      },
      {
        "name": "irisCourseChatEnabled",
        "parameterTypes": []
      },
      {
        "name": "modelingScores",
        "parameterTypes": []
      },
      {
        "name": "participationResults",
        "parameterTypes": []
      },
      {
        "name": "programmingScores",
        "parameterTypes": []
      },
      {
        "name": "quizScores",
        "parameterTypes": []
      },
      {
        "name": "textScores",
        "parameterTypes": []
      },
      {
        "name": "totalScores",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.CourseGroupsDTO",
    "queryAllDeclaredConstructors": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.CourseManagementDetailViewDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "activeStudents",
        "parameterTypes": []
      },
      {
        "name": "currentAbsoluteAssessments",
        "parameterTypes": []
      },
      {
        "name": "currentAbsoluteAverageScore",
        "parameterTypes": []
      },
      {
        "name": "currentAbsoluteComplaints",
        "parameterTypes": []
      },
      {
        "name": "currentAbsoluteMoreFeedbacks",
        "parameterTypes": []
      },
      {
        "name": "currentMaxAssessments",
        "parameterTypes": []
      },
      {
        "name": "currentMaxAverageScore",
        "parameterTypes": []
      },
      {
        "name": "currentMaxComplaints",
        "parameterTypes": []
      },
      {
        "name": "currentMaxMoreFeedbacks",
        "parameterTypes": []
      },
      {
        "name": "currentPercentageAssessments",
        "parameterTypes": []
      },
      {
        "name": "currentPercentageAverageScore",
        "parameterTypes": []
      },
      {
        "name": "currentPercentageComplaints",
        "parameterTypes": []
      },
      {
        "name": "currentPercentageMoreFeedbacks",
        "parameterTypes": []
      },
      {
        "name": "currentTotalLlmCostInEur",
        "parameterTypes": []
      },
      {
        "name": "numberOfEditorsInCourse",
        "parameterTypes": []
      },
      {
        "name": "numberOfInstructorsInCourse",
        "parameterTypes": []
      },
      {
        "name": "numberOfStudentsInCourse",
        "parameterTypes": []
      },
      {
        "name": "numberOfTeachingAssistantsInCourse",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.CourseManagementOverviewExerciseStatisticsDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getAverageScoreInPercent",
        "parameterTypes": []
      },
      {
        "name": "getExerciseId",
        "parameterTypes": []
      },
      {
        "name": "getExerciseMaxPoints",
        "parameterTypes": []
      },
      {
        "name": "getNoOfAssessmentsDoneInPercent",
        "parameterTypes": []
      },
      {
        "name": "getNoOfParticipatingStudentsOrTeams",
        "parameterTypes": []
      },
      {
        "name": "getNoOfRatedAssessments",
        "parameterTypes": []
      },
      {
        "name": "getNoOfStudentsInCourse",
        "parameterTypes": []
      },
      {
        "name": "getNoOfSubmissionsInTime",
        "parameterTypes": []
      },
      {
        "name": "getNoOfTeamsInCourse",
        "parameterTypes": []
      },
      {
        "name": "getParticipationRateInPercent",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.CourseManagementOverviewStatisticsDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "activeStudents",
        "parameterTypes": []
      },
      {
        "name": "courseId",
        "parameterTypes": []
      },
      {
        "name": "exerciseDTOS",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.CourseManagementStatisticsDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.CourseScoresDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "maxPoints",
        "parameterTypes": []
      },
      {
        "name": "reachablePoints",
        "parameterTypes": []
      },
      {
        "name": "reachablePresentationPoints",
        "parameterTypes": []
      },
      {
        "name": "studentScores",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.CourseStatisticsAverageScore",
    "queryAllDeclaredConstructors": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.CoursesForDashboardDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "activeExams",
        "parameterTypes": []
      },
      {
        "name": "courses",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.DataExportDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.DueDateStat",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "long",
          "long"
        ]
      },
      {
        "name": "inTime",
        "parameterTypes": []
      },
      {
        "name": "late",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.ImageDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.OnlineCourseDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.PasskeyDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.PasswordChangeDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.RepositoryExportOptionsDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.RequestDataExportDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.SearchResultPageDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getNumberOfPages",
        "parameterTypes": []
      },
      {
        "name": "getResultsOnPage",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.StatisticsEntry",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ],
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.StatsForDashboardDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getComplaintsEnabled",
        "parameterTypes": []
      },
      {
        "name": "getFeedbackRequestEnabled",
        "parameterTypes": []
      },
      {
        "name": "getNumberOfAssessmentLocks",
        "parameterTypes": []
      },
      {
        "name": "getNumberOfAssessmentsOfCorrectionRounds",
        "parameterTypes": []
      },
      {
        "name": "getNumberOfAutomaticAssistedAssessments",
        "parameterTypes": []
      },
      {
        "name": "getNumberOfComplaints",
        "parameterTypes": []
      },
      {
        "name": "getNumberOfLockedAssessmentByOtherTutorsOfCorrectionRound",
        "parameterTypes": []
      },
      {
        "name": "getNumberOfMoreFeedbackRequests",
        "parameterTypes": []
      },
      {
        "name": "getNumberOfOpenComplaints",
        "parameterTypes": []
      },
      {
        "name": "getNumberOfOpenMoreFeedbackRequests",
        "parameterTypes": []
      },
      {
        "name": "getNumberOfRatings",
        "parameterTypes": []
      },
      {
        "name": "getNumberOfStudents",
        "parameterTypes": []
      },
      {
        "name": "getNumberOfSubmissions",
        "parameterTypes": []
      },
      {
        "name": "getTotalNumberOfAssessmentLocks",
        "parameterTypes": []
      },
      {
        "name": "getTotalNumberOfAssessments",
        "parameterTypes": []
      },
      {
        "name": "getTutorLeaderboardEntries",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.StudentDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "email",
        "parameterTypes": []
      },
      {
        "name": "firstName",
        "parameterTypes": []
      },
      {
        "name": "lastName",
        "parameterTypes": []
      },
      {
        "name": "login",
        "parameterTypes": []
      },
      {
        "name": "registrationNumber",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.UserDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getAskToSetupPasskey",
        "parameterTypes": []
      },
      {
        "name": "getAuthorities",
        "parameterTypes": []
      },
      {
        "name": "getEmail",
        "parameterTypes": []
      },
      {
        "name": "getExternalLLMUsageAccepted",
        "parameterTypes": []
      },
      {
        "name": "getFirstName",
        "parameterTypes": []
      },
      {
        "name": "getGroups",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getImageUrl",
        "parameterTypes": []
      },
      {
        "name": "getLangKey",
        "parameterTypes": []
      },
      {
        "name": "getLastName",
        "parameterTypes": []
      },
      {
        "name": "getLogin",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOrganizations",
        "parameterTypes": []
      },
      {
        "name": "getVcsAccessToken",
        "parameterTypes": []
      },
      {
        "name": "getVcsAccessTokenExpiryDate",
        "parameterTypes": []
      },
      {
        "name": "getVisibleRegistrationNumber",
        "parameterTypes": []
      },
      {
        "name": "isActivated",
        "parameterTypes": []
      },
      {
        "name": "isInternal",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.UserPublicInfoDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getFirstName",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getImageUrl",
        "parameterTypes": []
      },
      {
        "name": "getIsEditor",
        "parameterTypes": []
      },
      {
        "name": "getIsInstructor",
        "parameterTypes": []
      },
      {
        "name": "getIsStudent",
        "parameterTypes": []
      },
      {
        "name": "getIsTeachingAssistant",
        "parameterTypes": []
      },
      {
        "name": "getLastName",
        "parameterTypes": []
      },
      {
        "name": "getLogin",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      }
    ],
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.UserRoleDTO",
    "allRecordComponents": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.String",
          "de.tum.cit.aet.artemis.communication.domain.UserRole"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ],
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.calendar.CalendarEventDTO",
    "queryAllDeclaredConstructors": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.calendar.ExamCalendarEventDTO",
    "queryAllDeclaredConstructors": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.calendar.LectureCalendarEventDTO",
    "queryAllDeclaredConstructors": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.calendar.NonQuizExerciseCalendarEventDTO",
    "queryAllDeclaredConstructors": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.calendar.QuizExerciseCalendarEventDTO",
    "queryAllDeclaredConstructors": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.pageablesearch.CompetencyPageableSearchDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.pageablesearch.FinishedBuildJobPageableSearchDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.pageablesearch.SearchTermPageableSearchDTO",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getSearchTerm",
        "parameterTypes": []
      },
      {
        "name": "setSearchTerm",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.pageablesearch.UserPageableSearchDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.vm.KeyAndPasswordVM"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.vm.ManagedUserVM"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.exception.AccessForbiddenException"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.exception.ApiProfileNotPresentException"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.exception.BadRequestAlertException",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.exception.ContinuousIntegrationException"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.exception.EntityNotFoundException"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.exception.ExceptionTranslator",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "handleMethodArgumentNotValid",
        "parameterTypes": [
          "org.springframework.web.bind.MethodArgumentNotValidException",
          "org.springframework.web.context.request.NativeWebRequest"
        ]
      },
      {
        "name": "process",
        "parameterTypes": [
          "org.springframework.http.ResponseEntity",
          "org.springframework.web.context.request.NativeWebRequest"
        ]
      },
      {
        "name": "exceptionHandler",
        "parameterTypes": [
          "java.io.IOException",
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "handleBadRequestAlertException",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.exception.BadRequestAlertException",
          "org.springframework.web.context.request.NativeWebRequest"
        ]
      },
      {
        "name": "handleEntityNotFoundException",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.exception.EntityNotFoundException",
          "org.springframework.web.context.request.NativeWebRequest"
        ]
      }
    ],
    "allDeclaredFields": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.exception.GitException"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.exception.LocalCIException"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.exception.NetworkingException"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.exception.NoUniqueQueryException"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.exception.QuizJoinException"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.exception.QuizSubmissionException"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.exception.VersionControlException"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.exception.WebsocketError",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getError",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.exception.localvc.LocalVCAuthException"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.exception.localvc.LocalVCForbiddenException"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.exception.localvc.LocalVCInternalException"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.management.SecurityMetersService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.repository.AuthorityRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.repository.CourseRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "countCourseMembers",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findAllActive",
        "parameterTypes": []
      },
      {
        "name": "findAllActive",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "findAllActiveWithoutTestCourses",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "findAllNotEnded",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "findByIdWithEagerExercisesElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByIdWithEagerOnlineCourseConfigurationAndTutorialGroupConfigurationElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByIdWithLecturesElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findCoursesForAtLeastTutorWithGroups",
        "parameterTypes": [
          "java.util.Set",
          "boolean"
        ]
      },
      {
        "name": "getActiveStudents",
        "parameterTypes": [
          "java.util.Set",
          "java.time.ZonedDateTime",
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "filterInterestingExercisesForAssessmentDashboards",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "findAllByShortName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findAllEditorGroupNames",
        "parameterTypes": []
      },
      {
        "name": "findAllInstructorGroupNames",
        "parameterTypes": []
      },
      {
        "name": "findAllNotEndedCoursesByManagementGroupNames",
        "parameterTypes": [
          "java.time.ZonedDateTime",
          "java.util.List"
        ]
      },
      {
        "name": "findAllTeachingAssistantGroupNames",
        "parameterTypes": []
      },
      {
        "name": "findByIdForUpdateElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByIdWithEagerTutorialGroupConfigurationElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithEagerExercisesById",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "isCommunicationEnabled",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "isMessagingEnabled",
        "parameterTypes": [
          "long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.repository.CustomAuditEventRepository",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.env.Environment",
          "de.tum.cit.aet.artemis.core.repository.PersistenceAuditEventRepository",
          "de.tum.cit.aet.artemis.core.config.audit.AuditEventConverter"
        ]
      },
      {
        "name": "add",
        "parameterTypes": [
          "org.springframework.boot.actuate.audit.AuditEvent"
        ]
      },
      {
        "name": "find",
        "parameterTypes": [
          "java.lang.String",
          "java.time.Instant",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.repository.CustomAuditEventRepository$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.repository.DataExportRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.repository.FileUploadRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.repository.LLMTokenUsageRequestRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.repository.LLMTokenUsageTraceRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.repository.MigrationChangeRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.repository.OrganizationRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "findAllOrganizationsByCourseId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getAllMatchingOrganizationsByUserEmail",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.repository.PasskeyCredentialsRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.repository.PersistenceAuditEventRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.repository.StatisticsRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "addUserToTimeslot",
        "parameterTypes": [
          "java.util.Map",
          "de.tum.cit.aet.artemis.core.dto.StatisticsEntry",
          "java.lang.Integer"
        ]
      },
      {
        "name": "getWeekOfDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "sortDataIntoWeeks",
        "parameterTypes": [
          "java.util.List",
          "java.util.List",
          "java.time.ZonedDateTime"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.repository.UserRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "countUserInGroup",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCurrentUserLogin",
        "parameterTypes": []
      },
      {
        "name": "getUser",
        "parameterTypes": []
      },
      {
        "name": "getUserWithGroupsAndAuthorities",
        "parameterTypes": []
      },
      {
        "name": "getUserWithGroupsAndAuthorities",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUsersInCourse",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.Course"
        ]
      },
      {
        "name": "findByIdWithGroupsAndAuthoritiesElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getStudents",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.Course"
        ]
      },
      {
        "name": "getTutors",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.Course"
        ]
      },
      {
        "name": "getUserByLoginElseThrow",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "searchAllUsersByLoginOrName",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable",
          "java.lang.String"
        ]
      },
      {
        "name": "searchAllWithGroupsByLoginOrNameInConversation",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable",
          "java.lang.String",
          "long"
        ]
      },
      {
        "name": "searchAllWithGroupsByLoginOrNameInGroups",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable",
          "java.lang.String",
          "java.util.Set"
        ]
      },
      {
        "name": "searchAllWithGroupsByLoginOrNameInGroupsNotUserId",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable",
          "java.lang.String",
          "java.util.Set",
          "long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.repository.base.ArtemisJpaRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findByIdElseThrow",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findOneById",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification",
          "java.lang.Object"
        ]
      },
      {
        "name": "findOneBySpec",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification"
        ]
      },
      {
        "name": "getArbitraryValueElseThrow",
        "parameterTypes": [
          "java.util.Optional"
        ]
      },
      {
        "name": "getArbitraryValueElseThrow",
        "parameterTypes": [
          "java.util.Optional",
          "java.lang.String"
        ]
      },
      {
        "name": "getValueElseThrow",
        "parameterTypes": [
          "java.util.Optional"
        ]
      },
      {
        "name": "getValueElseThrow",
        "parameterTypes": [
          "java.util.Optional",
          "java.lang.Object"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.repository.base.DynamicSpecificationRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "findByIdWithDynamicFetchElseThrow",
        "parameterTypes": [
          "java.lang.Object",
          "java.util.Collection"
        ]
      },
      {
        "name": "findByIdWithDynamicFetchElseThrow",
        "parameterTypes": [
          "java.lang.Object",
          "de.tum.cit.aet.artemis.core.repository.base.FetchOptions[]"
        ]
      },
      {
        "name": "findOneByIdElseThrow",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification",
          "java.lang.Object"
        ]
      },
      {
        "name": "getDynamicSpecification",
        "parameterTypes": [
          "java.util.Collection"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.repository.base.FetchOptions"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.repository.base.RepositoryImpl",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.data.jpa.repository.support.JpaEntityInformation",
          "jakarta.persistence.EntityManager"
        ]
      },
      {
        "name": "addUserToTimeslot",
        "parameterTypes": [
          "java.util.Map",
          "de.tum.cit.aet.artemis.core.dto.StatisticsEntry",
          "java.lang.Integer"
        ]
      },
      {
        "name": "areQuizQuestionsAvailableForPractice",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "calculateTotalLlmCostInEurForCourse",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "countAccessibleConversations",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "countActiveExercisesGroupByExerciseType",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "countActiveStudentsInExercisesWithDueDateBetweenGroupByExerciseType",
        "parameterTypes": [
          "java.time.ZonedDateTime",
          "java.time.ZonedDateTime",
          "java.util.List"
        ]
      },
      {
        "name": "countActiveStudentsInExercisesWithReleaseDateBetweenGroupByExerciseType",
        "parameterTypes": [
          "java.time.ZonedDateTime",
          "java.time.ZonedDateTime",
          "java.util.List"
        ]
      },
      {
        "name": "countActiveUsers",
        "parameterTypes": [
          "java.time.ZonedDateTime",
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "countAllActiveExams",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "countAllByExerciseIdsSubmittedAfterDueDate",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "countAllByExerciseIdsSubmittedBeforeDueDate",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "countAllSubmissionsByExerciseIdsSubmitted",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "countAssessmentsByExerciseIdsAndRated",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "countByComplaint_Result_Submission_Participation_Exercise_Course_Id_AndComplaint_ComplaintType_AndSubmittedTimeIsNotNull",
        "parameterTypes": [
          "java.lang.Long",
          "de.tum.cit.aet.artemis.assessment.domain.ComplaintType"
        ]
      },
      {
        "name": "countByCourse",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.Course"
        ]
      },
      {
        "name": "countByDeletedIsFalseAndGroupsContains",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "countByResult_Submission_Participation_Exercise_Course_IdAndComplaintType",
        "parameterTypes": [
          "java.lang.Long",
          "de.tum.cit.aet.artemis.assessment.domain.ComplaintType"
        ]
      },
      {
        "name": "countByShortNameAndCourse",
        "parameterTypes": [
          "java.lang.String",
          "de.tum.cit.aet.artemis.core.domain.Course"
        ]
      },
      {
        "name": "countByShortNameAndExerciseGroupExamCourse",
        "parameterTypes": [
          "java.lang.String",
          "de.tum.cit.aet.artemis.core.domain.Course"
        ]
      },
      {
        "name": "countByTitleAndCourse",
        "parameterTypes": [
          "java.lang.String",
          "de.tum.cit.aet.artemis.core.domain.Course"
        ]
      },
      {
        "name": "countByTitleAndExerciseGroupExamCourse",
        "parameterTypes": [
          "java.lang.String",
          "de.tum.cit.aet.artemis.core.domain.Course"
        ]
      },
      {
        "name": "countCourseMembers",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "countExamUsersInExamsWithEndDateBetween",
        "parameterTypes": [
          "java.time.ZonedDateTime",
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "countExamUsersInExamsWithStartDateBetween",
        "parameterTypes": [
          "java.time.ZonedDateTime",
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "countExamsWithEndDateBetween",
        "parameterTypes": [
          "java.time.ZonedDateTime",
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "countExamsWithStartDateBetween",
        "parameterTypes": [
          "java.time.ZonedDateTime",
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "countExercisesGroupByExerciseType",
        "parameterTypes": []
      },
      {
        "name": "countExercisesWithEndDateBetweenGroupByExerciseType",
        "parameterTypes": [
          "java.time.ZonedDateTime",
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "countExercisesWithReleaseDateBetweenGroupByExerciseType",
        "parameterTypes": [
          "java.time.ZonedDateTime",
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "countNumberOfAssessments",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "countStudentsInExercisesWithDueDateBetweenGroupByExerciseType",
        "parameterTypes": [
          "java.time.ZonedDateTime",
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "countStudentsInExercisesWithReleaseDateBetweenGroupByExerciseType",
        "parameterTypes": [
          "java.time.ZonedDateTime",
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "countUnseenCourseNotificationsForUserInCourse",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "countUserInGroup",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "deleteAllByAssessedExerciseId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "deleteAllByConversationId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "deleteAllByExerciseId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "deleteByComplaint_Result_Id",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "deleteByProgrammingSubmissionId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "deleteByResult_Id",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "deletePlagiarismResultsByExerciseId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "existsByUserId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findActiveExams",
        "parameterTypes": [
          "java.util.Set",
          "long",
          "java.time.ZonedDateTime",
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "findAllActive",
        "parameterTypes": []
      },
      {
        "name": "findAllActive",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "findAllActiveAdminLogins",
        "parameterTypes": []
      },
      {
        "name": "findAllActiveAndFutureSystemNotifications",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "findAllActiveWithoutTestCourses",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "findAllByBuildStatusIn",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "findAllByCourseIdAndFaqState",
        "parameterTypes": [
          "java.lang.Long",
          "de.tum.cit.aet.artemis.communication.domain.FaqState"
        ]
      },
      {
        "name": "findAllByDueDateAfterDateWithTestsAfterDueDateWithoutBuildStudentSubmissionsDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "findAllByExerciseIdWithExerciseLinks",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findAllByLastModifiedDateAfter",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "findAllByParticipationIdWithResults",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findAllByProjectKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findAllByUserId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findAllByUserId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findAllCategoryNames",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findAllExercisesByCourseId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findAllExercisesWithCurrentOrUpcomingAssessmentDueDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "findAllExercisesWithCurrentOrUpcomingReleaseDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "findAllGlobalSettings",
        "parameterTypes": []
      },
      {
        "name": "findAllIdsByCourseId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findAllIdsByExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise"
        ]
      },
      {
        "name": "findAllIdsByLearningObject",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.domain.LearningObject"
        ]
      },
      {
        "name": "findAllLastBuildDatesForDockerImages",
        "parameterTypes": []
      },
      {
        "name": "findAllNotEnded",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "findAllOrganizationsByCourseId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findAllOutdated",
        "parameterTypes": []
      },
      {
        "name": "findAllToBeScheduled",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "findAllWithCategoriesByCourseId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findAllWithEagerExamByExamEndDateAfterDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "findAllWithGroupsAndAuthoritiesByDeletedIsFalseAndGroupsContains",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "findAllWithLatestSubmissionByExerciseIds",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "findAvgRatedScore",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "findBranchByExerciseId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findBuildJobStatisticsByExerciseId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findByBuildJobId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findByCompetenciesAndUser",
        "parameterTypes": [
          "java.util.Collection",
          "long"
        ]
      },
      {
        "name": "findByCourseId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByCourseIdForUser",
        "parameterTypes": [
          "java.lang.Long",
          "long",
          "java.util.Set",
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "findByCourseIdOrderById",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByCourseIdWithCategories",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByCourseIdWithCategories",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findByCourseIds",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "findByExerciseId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByExerciseId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findByExerciseIdAndActive",
        "parameterTypes": [
          "long",
          "java.lang.Boolean"
        ]
      },
      {
        "name": "findByExerciseIdAndStudentIdWithEagerResultsAndSubmissions",
        "parameterTypes": [
          "long",
          "long"
        ]
      },
      {
        "name": "findByExerciseIdElseThrow",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification",
          "long"
        ]
      },
      {
        "name": "findByExerciseIdWithDynamicFetchElseThrow",
        "parameterTypes": [
          "long",
          "java.util.Collection"
        ]
      },
      {
        "name": "findByExerciseIdWithEagerGradingCriteria",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByExerciseIdWithTestCases",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findByIdElseThrow",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findByIdWithCompetenciesBidirectional",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findByIdWithDetailsForStudent",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findByIdWithDynamicFetchElseThrow",
        "parameterTypes": [
          "java.lang.Object",
          "java.util.Collection"
        ]
      },
      {
        "name": "findByIdWithEagerExampleSubmissions",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findByIdWithEagerExampleSubmissionsElseThrow",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findByIdWithEagerExercisesElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByIdWithEagerOnlineCourseConfigurationAndTutorialGroupConfigurationElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByIdWithLecturesElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByIdWithStudentParticipationsAndSubmissionsElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByIdWithSubmissionPolicyElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByIdWithSubmissionsResults",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByIdWithTemplateAndSolutionParticipationAndAuxiliaryRepositoriesElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByIdWithTemplateAndSolutionParticipationElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByIdWithTemplateAndSolutionParticipationTeamAssignmentConfigCategoriesAndCompetenciesAndPlagiarismDetectionConfigAndBuildConfigElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByIdWithTemplateAndSolutionParticipationTeamAssignmentConfigCategoriesAndCompetenciesElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByIdWithTemplateParticipationElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByParticipationIdAndCommitHashOrderByIdDescWithFeedbacksAndTeamStudents",
        "parameterTypes": [
          "long",
          "java.lang.String"
        ]
      },
      {
        "name": "findByPostIdsWithEagerRelationships",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "findByProgrammingExerciseId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByProgrammingExerciseId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findByProgrammingExerciseIdElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByResultSubmissionId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findByStudentIdAndExerciseIdWithPost",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "findByStudentIdAndExerciseIds",
        "parameterTypes": [
          "java.lang.Long",
          "java.util.Set"
        ]
      },
      {
        "name": "findByStudentIdAndIndividualExercisesWithEagerSubmissionsResult",
        "parameterTypes": [
          "long",
          "java.util.Collection",
          "boolean"
        ]
      },
      {
        "name": "findByTutorialGroupChannelId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findByUserIdAndParticipationId",
        "parameterTypes": [
          "long",
          "long"
        ]
      },
      {
        "name": "findByUserIdAndParticipationIdOrElseThrow",
        "parameterTypes": [
          "long",
          "long"
        ]
      },
      {
        "name": "findByUserIn",
        "parameterTypes": [
          "java.util.Set",
          "de.tum.cit.aet.artemis.communication.domain.push_notification.PushNotificationDeviceType"
        ]
      },
      {
        "name": "findChannelByExerciseId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findConversationParticipantByConversationIdAndUserId",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "findConversationParticipantsByConversationIdAndUserIds",
        "parameterTypes": [
          "java.lang.Long",
          "java.util.Set"
        ]
      },
      {
        "name": "findCourseSettings",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findCoursesForAtLeastTutorWithGroups",
        "parameterTypes": [
          "java.util.Set",
          "boolean"
        ]
      },
      {
        "name": "findExamsInCourses",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "findExerciseSettings",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findFirstByParticipationIdAndCommitHashOrderByIdDescWithFeedbacksAndTeamStudents",
        "parameterTypes": [
          "long",
          "java.lang.String"
        ]
      },
      {
        "name": "findFirstByParticipationIdWithResultsOrderBySubmissionDateDesc",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findFirstBySubmissionParticipationIdOrderByCompletionDateDesc",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findFirstIdByParticipationIdOrderBySubmissionDateDesc",
        "parameterTypes": [
          "long",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findFirstWithSubmissionAndFeedbacksAndTestCasesByParticipationIdOrderByCompletionDateDesc",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findForCreationById",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findForCreationByIdElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findGlobalSettingsElseThrow",
        "parameterTypes": []
      },
      {
        "name": "findHiddenSlidesProjection",
        "parameterTypes": []
      },
      {
        "name": "findLatestIndividualDueDate",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findLatestResultWithFeedbacksForParticipation",
        "parameterTypes": [
          "long",
          "boolean"
        ]
      },
      {
        "name": "findLatestResultsBySubmissionIds",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "findLatestSubmissionByParticipationId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findMessages",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.dto.PostContextFilterDTO",
          "org.springframework.data.domain.Pageable",
          "long"
        ]
      },
      {
        "name": "findModeratorConversationParticipantByConversationIdAndUserId",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "findOneByIdElseThrow",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification",
          "java.lang.Object"
        ]
      },
      {
        "name": "findOneByLogin",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findOneByProjectKeyOrThrow",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "findOneBySpec",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification"
        ]
      },
      {
        "name": "findOneWithGroupsAndAuthoritiesAndExternalLLMUsageAcceptedTimestampByLogin",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findOneWithGroupsAndAuthoritiesByLogin",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findPostIdsWithSpecification",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findProgrammingSubmissionWithResultsById",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findResultWithSubmissionAndFeedbacksTestCasesById",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findUserCourseNotificationSettingPresetByUserIdAndCourseId",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "findUserRolesInCourse",
        "parameterTypes": [
          "java.util.Collection",
          "long"
        ]
      },
      {
        "name": "findWithCompetenciesById",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithCompetenciesByIdElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithEagerExercisesById",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithEagerLecturesById",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithEagerOnlineCourseConfigurationAndTutorialGroupConfigurationById",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithEagerStudentParticipationsStudentAndSubmissionsById",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithEagerSubmissionsByExerciseIdAndStudentLogin",
        "parameterTypes": [
          "long",
          "java.lang.String"
        ]
      },
      {
        "name": "findWithProgrammingExerciseWithBuildConfigById",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithSubmissionPolicyById",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithSubmissionsByRepositoryUri",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findWithSubmissionsByRepositoryUriElseThrow",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findWithTemplateAndSolutionParticipationAndAuxiliaryRepositoriesById",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithTemplateAndSolutionParticipationTeamAssignmentConfigCategoriesAndCompetenciesAndPlagiarismDetectionConfigAndBuildConfigById",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithTemplateAndSolutionParticipationTeamAssignmentConfigCategoriesAndCompetenciesById",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithTemplateAndSolutionParticipationTeamAssignmentConfigCategoriesById",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithTemplateParticipationById",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getActiveExercisesForCourseManagementOverview",
        "parameterTypes": [
          "java.lang.Long",
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "getActiveStudents",
        "parameterTypes": [
          "java.util.Set",
          "java.time.ZonedDateTime",
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "getActiveUserNames",
        "parameterTypes": [
          "java.time.ZonedDateTime",
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "getAllParticipationsOfUserInExercises",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User",
          "java.util.Set",
          "boolean"
        ]
      },
      {
        "name": "getCurrentUserLogin",
        "parameterTypes": []
      },
      {
        "name": "getDynamicSpecification",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "getExercisesForCourseManagementOverview",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getLatestModifiedDate",
        "parameterTypes": []
      },
      {
        "name": "getNumberOfExercisePosts",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getNumberOfResolvedExercisePosts",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getPastExercisesForCourseManagementOverview",
        "parameterTypes": [
          "java.lang.Long",
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "getProgrammingExerciseBuildConfigElseThrow",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExercise"
        ]
      },
      {
        "name": "getProgrammingExerciseFromParticipation",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseParticipation"
        ]
      },
      {
        "name": "getScoreDistributionForExercise",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getStudentParticipationCountById",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getUser",
        "parameterTypes": []
      },
      {
        "name": "getUserWithGroupsAndAuthorities",
        "parameterTypes": []
      },
      {
        "name": "getUserWithGroupsAndAuthorities",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUsersInCourse",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.Course"
        ]
      },
      {
        "name": "getValueElseThrow",
        "parameterTypes": [
          "java.util.Optional"
        ]
      },
      {
        "name": "getValueElseThrow",
        "parameterTypes": [
          "java.util.Optional",
          "java.lang.Object"
        ]
      },
      {
        "name": "getWeekOfDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "hasFeedbackByExerciseGradingCriteria",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "initializeSubmission",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.participation.Participation",
          "de.tum.cit.aet.artemis.exercise.domain.Exercise",
          "de.tum.cit.aet.artemis.exercise.domain.SubmissionType"
        ]
      },
      {
        "name": "isAtLeastEditorInCourse",
        "parameterTypes": [
          "java.lang.String",
          "long"
        ]
      },
      {
        "name": "isAtLeastStudentInCourse",
        "parameterTypes": [
          "java.lang.String",
          "long"
        ]
      },
      {
        "name": "isAtLeastStudentInExercise",
        "parameterTypes": [
          "java.lang.String",
          "long"
        ]
      },
      {
        "name": "isAtLeastTeachingAssistantInCourse",
        "parameterTypes": [
          "java.lang.String",
          "long"
        ]
      },
      {
        "name": "isAtLeastTeachingAssistantInExercise",
        "parameterTypes": [
          "java.lang.String",
          "long"
        ]
      },
      {
        "name": "isCourseChatEnabled",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "isExamExercise",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "saveForCreation",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExercise"
        ]
      },
      {
        "name": "setAverageScoreForStatisticsDTO",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.dto.CourseManagementOverviewExerciseStatisticsDTO",
          "java.util.Map",
          "de.tum.cit.aet.artemis.exercise.domain.Exercise"
        ]
      },
      {
        "name": "sortDataIntoWeeks",
        "parameterTypes": [
          "java.util.List",
          "java.util.List",
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "updateBuildJobStatusWithBuildStartDate",
        "parameterTypes": [
          "java.lang.String",
          "de.tum.cit.aet.artemis.programming.domain.build.BuildStatus",
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "updateLastReadAsync",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long",
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "updateStatistics",
        "parameterTypes": [
          "long",
          "long",
          "java.lang.Long"
        ]
      },
      {
        "name": "userHasAccessToAllConversationsElseThrow",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "validateCourseAndExerciseShortName",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExercise",
          "de.tum.cit.aet.artemis.core.domain.Course"
        ]
      },
      {
        "name": "validateCourseSettings",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExercise",
          "de.tum.cit.aet.artemis.core.domain.Course"
        ]
      },
      {
        "name": "validateTitle",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExercise",
          "de.tum.cit.aet.artemis.core.domain.Course"
        ]
      },
      {
        "name": "getAllMatchingOrganizationsByUserEmail",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "countAfterDueDateByExerciseId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "countByExamId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithSubmissionsAndTeamStudentsByExerciseId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "addNumberOfExamExerciseParticipations",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.domain.ExerciseGroup"
        ]
      },
      {
        "name": "averageRatingByExerciseId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "calculateTotalPoints",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "checkTestRunsExist",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise"
        ]
      },
      {
        "name": "constrainToRange",
        "parameterTypes": [
          "double",
          "double"
        ]
      },
      {
        "name": "convertDatabaseResponseToDueDateStats",
        "parameterTypes": [
          "java.util.List",
          "int"
        ]
      },
      {
        "name": "countAllByExerciseId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "countAnswerPostsByCourseId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "countBuildJobsByCourseId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "countBuildJobsByExerciseIds",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "countByComplaint_Result_Submission_Participation_Exercise_ExerciseGroup_Exam_Id_AndComplaint_ComplaintType_AndSubmittedTimeIsNotNull",
        "parameterTypes": [
          "java.lang.Long",
          "de.tum.cit.aet.artemis.assessment.domain.ComplaintType"
        ]
      },
      {
        "name": "countByConversationId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "countByConversationId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "countByCourseIdGroupedByType",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "countByCourse_Id",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "countByCreatorIdAndCourseId",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "countByExamIdSubmittedSubmissionsIgnoreTestRuns",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "countByExerciseIdSubmittedBeforeDueDate",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "countByExerciseIdSubmittedBeforeDueDateIgnoreTestRuns",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "countByExerciseIdsSubmittedAfterDueDate",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "countByExerciseIdsSubmittedBeforeDueDateIgnoreTestRuns",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "countByResultParticipationExerciseIdAndComplaintTypeIgnoreTestRuns",
        "parameterTypes": [
          "java.lang.Long",
          "de.tum.cit.aet.artemis.assessment.domain.ComplaintType"
        ]
      },
      {
        "name": "countByResult_Submission_Participation_Exercise_Course_Id",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "countByResult_Submission_Participation_Exercise_ExerciseGroup_Exam_IdAndComplaintType",
        "parameterTypes": [
          "java.lang.Long",
          "de.tum.cit.aet.artemis.assessment.domain.ComplaintType"
        ]
      },
      {
        "name": "countByResult_Submission_Participation_Exercise_Id",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "countComplaintResponseByExerciseIdAndComplaintTypeAndSubmittedTimeIsNotNull",
        "parameterTypes": [
          "java.lang.Long",
          "de.tum.cit.aet.artemis.assessment.domain.ComplaintType"
        ]
      },
      {
        "name": "countComplaintsByExerciseIdAndComplaintType",
        "parameterTypes": [
          "java.lang.Long",
          "de.tum.cit.aet.artemis.assessment.domain.ComplaintType"
        ]
      },
      {
        "name": "countComplaintsByExerciseIdsAndComplaintComplaintType",
        "parameterTypes": [
          "java.util.Set",
          "de.tum.cit.aet.artemis.assessment.domain.ComplaintType"
        ]
      },
      {
        "name": "countComplaintsByExerciseIdsAndComplaintComplaintTypeIgnoreTestRuns",
        "parameterTypes": [
          "java.util.Set",
          "de.tum.cit.aet.artemis.assessment.domain.ComplaintType"
        ]
      },
      {
        "name": "countComplaintsByExerciseIdsAndComplaintType",
        "parameterTypes": [
          "java.util.Set",
          "de.tum.cit.aet.artemis.assessment.domain.ComplaintType"
        ]
      },
      {
        "name": "countComplaintsByExerciseIdsAndComplaintTypeIgnoreTestRuns",
        "parameterTypes": [
          "java.util.Set",
          "de.tum.cit.aet.artemis.assessment.domain.ComplaintType"
        ]
      },
      {
        "name": "countExamUsersByExamIds",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "countGeneratedStudentExamsByExamWithoutTestRuns",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "countLockedSubmissionsByCourseId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "countLockedSubmissionsByExamId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "countLockedSubmissionsByExerciseId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "countLockedSubmissionsByUserIdAndCourseId",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "countLockedSubmissionsByUserIdAndExamId",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "countNumberOfAssessmentsByTypeForExerciseAfterDueDate",
        "parameterTypes": [
          "long",
          "java.util.List"
        ]
      },
      {
        "name": "countNumberOfAssessmentsByTypeForExerciseBeforeDueDate",
        "parameterTypes": [
          "long",
          "java.util.List"
        ]
      },
      {
        "name": "countNumberOfAutomaticAssistedAssessmentsForExercise",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "countNumberOfFinishedAssessmentsByExamIdIgnoreTestRuns",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "countNumberOfFinishedAssessmentsByExerciseIdIgnoreTestRuns",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "countNumberOfFinishedAssessmentsForExamExerciseForCorrectionRounds",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise",
          "int"
        ]
      },
      {
        "name": "countNumberOfFinishedAssessmentsForExamForCorrectionRounds",
        "parameterTypes": [
          "long",
          "int"
        ]
      },
      {
        "name": "countNumberOfFinishedAssessmentsForExercise",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "countNumberOfFinishedAssessmentsForExerciseIgnoreTestRuns",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "countNumberOfLockedAssessmentsByOtherTutorsForExamExerciseForCorrectionRounds",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise",
          "int",
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "countNumberOfLockedAssessmentsByOtherTutorsForExamExerciseForCorrectionRoundsIgnoreTestRuns",
        "parameterTypes": [
          "long",
          "long"
        ]
      },
      {
        "name": "countNumberOfRatedResultsForExercise",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "countParticipationsByExerciseIdAndTestRun",
        "parameterTypes": [
          "long",
          "boolean"
        ]
      },
      {
        "name": "countPostsByCourseId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "countStudentExamsNotStartedByExamIdIgnoreTestRuns",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "countStudentExamsStartedByExamIdIgnoreTestRuns",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "countStudentExamsSubmittedByExamIdIgnoreTestRuns",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "countSubmissionsByExamIdSubmitted",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "countSubmissionsByExerciseIdsSubmittedIgnoreTestRun",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "countSubmissionsForExercise",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "countSubmissionsPerParticipationByExerciseId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "countSubmissionsPerParticipationByExerciseIdAsMap",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "countTestRunsByExamId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "countUsersByLoginOrNameInConversation",
        "parameterTypes": [
          "java.lang.String",
          "long"
        ]
      },
      {
        "name": "countUsersByLoginOrNameInGroups",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Set"
        ]
      },
      {
        "name": "countUsersByLoginOrNameInGroupsNotUserId",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Set",
          "long"
        ]
      },
      {
        "name": "createRandomStudentExams",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.domain.Exam",
          "java.util.Set"
        ]
      },
      {
        "name": "decrementUnreadMessagesCountOfParticipants",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "deleteAllByCourse",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.Course"
        ]
      },
      {
        "name": "deleteAllByCourseId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "deleteAllByCourseId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "deleteAllByLectureId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "deleteByExerciseAndUser",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise",
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "deleteByFeedbackIds",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "deleteByParticipationId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "existsByAssessedExerciseIdAndTutorId",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "existsByConversationIdAndUserId",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "existsByIdAndUserId",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "existsByParticipationId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "existsBySubmissionId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "existsBySubmission_Participation_Exercise_Id",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "existsUnassessedQuizzesByExamId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "existsUnsubmittedExercisesByExamId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "filterInterestingExercisesForAssessmentDashboards",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "filterVisibleExams",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "findAllByAssessedExercise_Course_IdAndTutor_Id",
        "parameterTypes": [
          "long",
          "long"
        ]
      },
      {
        "name": "findAllByAssessedExercise_ExerciseGroup_Exam_IdAndTutor_Id",
        "parameterTypes": [
          "long",
          "long"
        ]
      },
      {
        "name": "findAllByCourseId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findAllByCourseId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findAllByCourseIdWithAttachments",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findAllByCourseIdWithAttachmentsAndLectureUnits",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findAllByDeletedIsFalseAndGroupsContains",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findAllByExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise"
        ]
      },
      {
        "name": "findAllByExerciseIdAndStudentLogin",
        "parameterTypes": [
          "long",
          "java.lang.String"
        ]
      },
      {
        "name": "findAllByLectureId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findAllByParticipationExerciseIdAndResultAssessorAndCorrectionRoundIgnoreTestRuns",
        "parameterTypes": [
          "long",
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "findAllByParticipationExerciseIdAndResultAssessorIgnoreTestRuns",
        "parameterTypes": [
          "java.lang.Long",
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "findAllByProgrammingExerciseIds",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "findAllByQuizExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.QuizExercise"
        ]
      },
      {
        "name": "findAllByQuizExerciseAndCreator",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.QuizExercise",
          "java.lang.Long"
        ]
      },
      {
        "name": "findAllByShortName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findAllByStudentExamIdOrGlobalByExamId",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "findAllEditorGroupNames",
        "parameterTypes": []
      },
      {
        "name": "findAllIdsByLectureUnit",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.lecture.domain.LectureUnit"
        ]
      },
      {
        "name": "findAllInstructorGroupNames",
        "parameterTypes": []
      },
      {
        "name": "findAllNotEndedCoursesByManagementGroupNames",
        "parameterTypes": [
          "java.time.ZonedDateTime",
          "java.util.List"
        ]
      },
      {
        "name": "findAllReleasedExercisesByCourseId",
        "parameterTypes": [
          "long",
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "findAllTeachingAssistantGroupNames",
        "parameterTypes": []
      },
      {
        "name": "findAllTestRunsByExamId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findAllTestRunsWithExercisesByExamIdForUser",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "findAllVisibleByCourseIdWithEagerLectureUnits",
        "parameterTypes": [
          "long",
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "findAllWithEagerSubmissionsAndEagerResultsByExerciseId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findAllWithExercisesByExamId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findAllWithGroupsAndAuthoritiesByDeletedIsFalseAndGroupsContains",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findAllWithGroupsAndAuthoritiesByDeletedIsFalseAndLoginIn",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "findAllWithParticipantsAndUserGroupsByCourseIdAndUserId",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "findAllWithResultByExerciseId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findAverageScoreForExercise",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findAverageScoreForExercises",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "findByCourseIdAndUserId",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "findByCourseIdWithExerciseGroupsAndExercises",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByExamId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByExamIdAndStudentId",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "findByExamIdAndUserId",
        "parameterTypes": [
          "long",
          "long"
        ]
      },
      {
        "name": "findByExamIdWithBonusFrom",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByExamIdWithSessions",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByExerciseIdAndStudentId",
        "parameterTypes": [
          "long",
          "long"
        ]
      },
      {
        "name": "findByExerciseIdAndStudentIdWithEagerSubmissions",
        "parameterTypes": [
          "long",
          "long"
        ]
      },
      {
        "name": "findByExerciseIdAndStudentLogin",
        "parameterTypes": [
          "long",
          "java.lang.String"
        ]
      },
      {
        "name": "findByExerciseIdAndStudentLogin",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.String"
        ]
      },
      {
        "name": "findByExerciseIdAndUserId",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "findByExerciseIdInWithCompetency",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "findByExerciseIdWithLatestSubmission",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByExerciseIdWithLatestSubmissionWithoutManualResultsAndIgnoreTestRunParticipation",
        "parameterTypes": [
          "long",
          "long"
        ]
      },
      {
        "name": "findByExerciseIdWithLatestSubmissionWithoutManualResultsWithPassedIndividualDueDateIgnoreTestRuns",
        "parameterTypes": [
          "long",
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "findByExerciseIdsWithCategories",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "findByIdElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByIdForUpdateElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByIdWithBatchesElseThrow",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findByIdWithCategoriesAndTeamAssignmentConfigElseThrow",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findByIdWithCompetenciesAndSlidesElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByIdWithEagerParticipations",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findByIdWithEagerResultAndFeedbackAndAssessorAndAssessmentNoteAndParticipationResultsElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByIdWithEagerResultAndFeedbackAndAssessorAndAssessmentNoteAndParticipationResultsElseThrow",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findByIdWithEagerResultAndFeedbackElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByIdWithEagerResultsAndFeedbackAndTextBlocksElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByIdWithEagerTutorialGroupConfigurationElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByIdWithExamUsersElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByIdWithExamUsersExerciseGroupsAndExercisesElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByIdWithExampleSubmissionsAndResultsAndGradingCriteria",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findByIdWithExampleSubmissionsAndResultsElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByIdWithExerciseGroupsElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByIdWithExercisesAndSessionsAndStudentParticipationsElseThrow",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findByIdWithExercisesAndStudentParticipationsElseThrow",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findByIdWithExercisesElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByIdWithExercisesElseThrow",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findByIdWithGroupsAndAuthoritiesElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByIdWithLatestSubmissionsResultsFeedbackElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByIdWithLectureUnitsAndAttachments",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findByIdWithLectureUnitsAndAttachmentsElseThrow",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findByIdWithLectureUnitsAndCompetencies",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findByIdWithLectureUnitsAndCompetenciesElseThrow",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findByIdWithLectureUnitsWithCompetencyLinksAndAttachments",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findByIdWithLectureUnitsWithCompetencyLinksAndAttachmentsElseThrow",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findByIdWithQuestionsAndCompetenciesElseThrow",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findByIdWithQuestionsAndStatisticsAndCompetenciesAndBatchesAndGradingCriteriaElseThrow",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findByIdWithQuestionsAndStatisticsElseThrow",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findByIdWithQuestionsElseThrow",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findByIdWithResultsAndFeedback",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByIdWithResultsAndTutorParticipations",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByIdWithStudentParticipationsElseThrow",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findByKeyHash",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findByLectureId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findByQuizExerciseAndPassword",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.QuizExercise",
          "java.lang.String"
        ]
      },
      {
        "name": "findByQuizExerciseAndStudentLogin",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.QuizExercise",
          "java.lang.String"
        ]
      },
      {
        "name": "findByRepositoryUri",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findByRepositoryUriElseThrow",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findByStudentExamWithEagerLatestSubmissionsResult",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.domain.StudentExam",
          "boolean"
        ]
      },
      {
        "name": "findByStudentExamWithEagerSubmissions",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.domain.StudentExam",
          "java.util.List"
        ]
      },
      {
        "name": "findByStudentIdAndIndividualExercisesWithEagerLatestSubmissionsResultIgnoreTestRuns",
        "parameterTypes": [
          "long",
          "java.util.Collection"
        ]
      },
      {
        "name": "findByStudentIdAndIndividualExercisesWithEagerSubmissionsIgnoreTestRuns",
        "parameterTypes": [
          "long",
          "java.util.List"
        ]
      },
      {
        "name": "findByStudentIdAndTeamExercisesWithEagerSubmissionsResult",
        "parameterTypes": [
          "long",
          "java.util.Collection"
        ]
      },
      {
        "name": "findBySubmission",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.QuizSubmission"
        ]
      },
      {
        "name": "findByUserIdAndNotificationType",
        "parameterTypes": [
          "long",
          "de.tum.cit.aet.artemis.communication.domain.GlobalNotificationType"
        ]
      },
      {
        "name": "findChannelByCourseIdAndName",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.String"
        ]
      },
      {
        "name": "findChannelByCourseIdAndNameAndIdNot",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.String",
          "java.lang.Long"
        ]
      },
      {
        "name": "findChannelByExamId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findChannelByLectureId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findChannelsByCourseId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findChannelsOfUser",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "findCompletionsForLectureAndUser",
        "parameterTypes": [
          "long",
          "long"
        ]
      },
      {
        "name": "findConversationParticipantsByConversationId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findConversationParticipantsWithUserGroupsByConversationId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findDiagramsByCourseId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findDnDQuestionById",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findDnDQuestionByIdOrElseThrow",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findEarliestIndividualDueDate",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findExamSessionCountByStudentExamId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findFirstByExamIdAndUserIdOrderByCreatedDateDesc",
        "parameterTypes": [
          "long",
          "long"
        ]
      },
      {
        "name": "findFirstByExerciseIdAndStudentLoginOrderByIdDesc",
        "parameterTypes": [
          "long",
          "java.lang.String"
        ]
      },
      {
        "name": "findFirstByQuizExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.QuizExercise"
        ]
      },
      {
        "name": "findFirstBySubmissionParticipationIdAndRatedOrderByCompletionDateDesc",
        "parameterTypes": [
          "long",
          "boolean"
        ]
      },
      {
        "name": "findForUpdateById",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findGroupChatWithExactParticipants",
        "parameterTypes": [
          "java.lang.Long",
          "java.util.List",
          "long"
        ]
      },
      {
        "name": "findGroupChatsOfUserWithParticipantsAndUserGroups",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "findLatestResultsWithAssessmentNoteBySubmissionIds",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "findLatestWithEagerSubmissionsByExerciseIdAndStudentLogin",
        "parameterTypes": [
          "long",
          "java.lang.String"
        ]
      },
      {
        "name": "findLongestWorkingTimeForExam",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findMaxWorkingTimeByExamId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findMessagePostByIdElseThrow",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findNewestByParticipationId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findNewestByRepositoryUri",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findOneByExamIdAndUserIdElseThrow",
        "parameterTypes": [
          "long",
          "long"
        ]
      },
      {
        "name": "findOneByExerciseIdAndUserId",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "findOneWithEagerExercisesGroupsAndStudentExams",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findOneWithGroupsAndAuthoritiesById",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findOneWithGroupsAndAuthoritiesByLoginAndInternal",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "findProgrammingExerciseIdsByExamId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findSavedPostByPostIdAndPostType",
        "parameterTypes": [
          "java.lang.Long",
          "de.tum.cit.aet.artemis.communication.domain.PostingType"
        ]
      },
      {
        "name": "findSavedPostIdsByUserIdAndPostType",
        "parameterTypes": [
          "long",
          "de.tum.cit.aet.artemis.communication.domain.PostingType"
        ]
      },
      {
        "name": "findSidebarDataForRealStudentExamsByCourseId",
        "parameterTypes": [
          "long",
          "java.time.ZonedDateTime",
          "long"
        ]
      },
      {
        "name": "findStudentExamsForTestExamsByUserIdAndCourseId",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "findStudentExamsForTestExamsByUserIdAndExamId",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "findTestExamParticipationsByStudentIdAndIndividualExercisesWithEagerLatestSubmissionResultIgnoreTestRuns",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findTestRunParticipationsByStudentIdAndIndividualExercisesWithEagerSubmissionsResult",
        "parameterTypes": [
          "long",
          "java.util.List"
        ]
      },
      {
        "name": "findTutorLeaderboardAnsweredMoreFeedbackRequestsByCourseId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findTutorLeaderboardAnsweredMoreFeedbackRequestsByExerciseId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findTutorLeaderboardAssessmentByCourseId",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "findTutorLeaderboardAssessmentByExamId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findTutorLeaderboardAssessmentByExerciseId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findTutorLeaderboardComplaintResponsesByCourseId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findTutorLeaderboardComplaintResponsesByExamId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findTutorLeaderboardComplaintResponsesByExerciseId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findTutorLeaderboardComplaintsByCourseId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findTutorLeaderboardComplaintsByExamId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findTutorLeaderboardComplaintsByExerciseId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findTutorLeaderboardMoreFeedbackRequestsByCourseId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findTutorLeaderboardMoreFeedbackRequestsByExerciseId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findUnsubmittedStudentExamsForTestExamsWithExercisesByExamIdAndUserId",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "findUserIdsByLoginOrNameInGroups",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Set",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findUserIdsByLoginOrNameInGroupsNotUserId",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Set",
          "long",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findUsersByIdsWithGroupsOrdered",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "findUsersByLoginOrNameInConversation",
        "parameterTypes": [
          "java.lang.String",
          "long",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findUsersWithGroupsByIdIn",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "findUsersWithStudentExamsForExam",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findVisibleSlidesByAttachmentVideoUnits",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "findWithCompetenciesAndSlidesById",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithEagerBatchesById",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findWithEagerBatchesByIdOrElseThrow",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findWithEagerCategoriesAndTeamAssignmentConfigById",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findWithEagerCompetenciesAndCategoriesById",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithEagerCompetenciesAndCategoriesByIdElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithEagerCompetenciesById",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findWithEagerCompetenciesByIdElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithEagerExampleSubmissionAndResultsByAssessedExerciseAndTutor",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise",
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "findWithEagerExampleSubmissionsAndCompetenciesById",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findWithEagerExampleSubmissionsAndCompetenciesByIdElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithEagerLatestSubmissionResultsFeedbacksById",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithEagerQuestionsAndCompetenciesById",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findWithEagerQuestionsAndStatisticsAndCompetenciesAndBatchesAndGradingCriteriaById",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findWithEagerQuestionsAndStatisticsById",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findWithEagerQuestionsById",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findWithEagerResultAndFeedbackById",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithEagerResultsAndFeedbackAndTextBlocksById",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithEagerSubmittedAnswersById",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithEagerSubmittedAnswersByParticipationId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithEagerSubmittedAnswersByParticipationIds",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "findWithEagerTeamAssignmentConfigAndCategoriesAndCompetenciesAndPlagiarismDetectionConfigById",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithEagerTeamAssignmentConfigAndCategoriesAndCompetenciesById",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithEagerTutorialGroupConfigurationsById",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithExamUsersAndExerciseGroupsAndExercisesById",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithExamUsersById",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithExampleSubmissionsAndResultsById",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithExerciseGroupsAndExercisesAndDetailsById",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithExerciseGroupsAndExercisesAndDetailsByIdOrElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithExerciseGroupsAndExercisesById",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithExerciseGroupsAndExercisesByIdOrElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithExerciseGroupsById",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithExercisesAndStudentParticipationsById",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findWithExercisesById",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findWithExercisesByUserIdAndExamId",
        "parameterTypes": [
          "long",
          "long",
          "boolean"
        ]
      },
      {
        "name": "findWithExercisesParticipationsSubmissionsById",
        "parameterTypes": [
          "long",
          "boolean"
        ]
      },
      {
        "name": "findWithExercisesSubmissionPolicySessionsAndStudentParticipationsById",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithIndividualDueDateByExerciseId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithParticipantsById",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithResultsFeedbacksAssessorAssessmentNoteAndParticipationResultsById",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithResultsFeedbacksAssessorAssessmentNoteAndParticipationResultsById",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findWithStudentExamsExercisesById",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithSubmissionPolicyByProjectKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findWithTemplateAndSolutionParticipationAndBuildConfigById",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithTestCasesById",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getAllComplaintsByExerciseIdAndComplaintType",
        "parameterTypes": [
          "java.lang.Long",
          "de.tum.cit.aet.artemis.assessment.domain.ComplaintType"
        ]
      },
      {
        "name": "getExamTitle",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getExerciseTitle",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getGeneralInformationForConversations",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "getNumberOfTeamsForExercise",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getStudents",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.Course"
        ]
      },
      {
        "name": "getTeamParticipationCountById",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getTutors",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.Course"
        ]
      },
      {
        "name": "getUserByLoginElseThrow",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUserInformationForConversations",
        "parameterTypes": [
          "java.lang.Iterable",
          "java.lang.Long"
        ]
      },
      {
        "name": "incrementUnreadMessagesCountOfParticipants",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "informationSharingConfigurationIsOneOf",
        "parameterTypes": [
          "long",
          "java.util.Set"
        ]
      },
      {
        "name": "isAtLeastEditorInExercise",
        "parameterTypes": [
          "java.lang.String",
          "long"
        ]
      },
      {
        "name": "isAtLeastInstructorInCourse",
        "parameterTypes": [
          "java.lang.String",
          "long"
        ]
      },
      {
        "name": "isAtLeastInstructorInExercise",
        "parameterTypes": [
          "java.lang.String",
          "long"
        ]
      },
      {
        "name": "isAtLeastStudentInLecture",
        "parameterTypes": [
          "java.lang.String",
          "long"
        ]
      },
      {
        "name": "isCommunicationEnabled",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "isMessagingEnabled",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "isNotificationEnabled",
        "parameterTypes": [
          "long",
          "de.tum.cit.aet.artemis.communication.domain.GlobalNotificationType"
        ]
      },
      {
        "name": "isSubmitted",
        "parameterTypes": [
          "long",
          "long"
        ]
      },
      {
        "name": "loadQuizSubmissionsSubmittedAnswers",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "removeIndividualDueDatesIfBeforeDueDate",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise",
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "searchAllByLoginOrName",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable",
          "java.lang.String"
        ]
      },
      {
        "name": "searchAllUsersByLoginOrName",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable",
          "java.lang.String"
        ]
      },
      {
        "name": "searchAllWithGroupsByLoginOrNameInConversation",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable",
          "java.lang.String",
          "long"
        ]
      },
      {
        "name": "searchAllWithGroupsByLoginOrNameInGroups",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable",
          "java.lang.String",
          "java.util.Set"
        ]
      },
      {
        "name": "searchAllWithGroupsByLoginOrNameInGroupsNotUserId",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable",
          "java.lang.String",
          "java.util.Set",
          "long"
        ]
      },
      {
        "name": "setNumberOfExamUsersForExams",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "startStudentExam",
        "parameterTypes": [
          "java.lang.Long",
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "submitResult",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.Result",
          "de.tum.cit.aet.artemis.exercise.domain.Exercise"
        ]
      },
      {
        "name": "submitStudentExam",
        "parameterTypes": [
          "java.lang.Long",
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "updateLastMessageDateAsync",
        "parameterTypes": [
          "java.lang.Long",
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "userHasUnreadMessageInCourse",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "findAllByExerciseIdWithEagerStudents",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise",
          "java.lang.Long"
        ]
      },
      {
        "name": "findAllByExerciseIdWithEagerStudents",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.repository.cleanup.CleanupJobExecutionRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.repository.passkey.ArtemisPublicKeyCredentialUserEntityRepository",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.repository.UserRepository"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "org.springframework.security.web.webauthn.api.Bytes"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "org.springframework.security.web.webauthn.api.Bytes"
        ]
      },
      {
        "name": "findByUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "org.springframework.security.web.webauthn.api.PublicKeyCredentialUserEntity"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.repository.passkey.ArtemisPublicKeyCredentialUserEntityRepository$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.repository.passkey.ArtemisUserCredentialRepository",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.repository.passkey.ArtemisPublicKeyCredentialUserEntityRepository",
          "de.tum.cit.aet.artemis.core.repository.PasskeyCredentialsRepository",
          "de.tum.cit.aet.artemis.core.repository.UserRepository"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "org.springframework.security.web.webauthn.api.Bytes"
        ]
      },
      {
        "name": "findByCredentialId",
        "parameterTypes": [
          "org.springframework.security.web.webauthn.api.Bytes"
        ]
      },
      {
        "name": "findByUserId",
        "parameterTypes": [
          "org.springframework.security.web.webauthn.api.Bytes"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "org.springframework.security.web.webauthn.api.CredentialRecord"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.repository.passkey.ArtemisUserCredentialRepository$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.repository.passkey.HazelcastHttpSessionPublicKeyCredentialCreationOptionsRepository",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.hazelcast.core.HazelcastInstance"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "load",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "org.springframework.security.web.webauthn.api.PublicKeyCredentialCreationOptions"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.repository.passkey.HazelcastHttpSessionPublicKeyCredentialCreationOptionsRepository$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.repository.passkey.HazelcastPublicKeyCredentialRequestOptionsRepository",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.hazelcast.core.HazelcastInstance"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "load",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "org.springframework.security.web.webauthn.api.PublicKeyCredentialRequestOptions"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.repository.passkey.HazelcastPublicKeyCredentialRequestOptionsRepository$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.security.DomainUserDetailsService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.repository.UserRepository"
        ]
      },
      {
        "name": "loadUserByUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.security.Role"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.security.SpringSecurityAuditorAware",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getCurrentAuditor",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.security.allowedTools.AllowedTools",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.security.allowedTools.ToolTokenType"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.security.allowedTools.ToolsInterceptor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.security.jwt.TokenProvider"
        ]
      },
      {
        "name": "preHandle",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.security.annotations.EnforceAdmin",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.security.annotations.EnforceAtLeastEditor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.security.annotations.EnforceAtLeastInstructor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.security.annotations.EnforceAtLeastStudent",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.security.annotations.EnforceAtLeastTutor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.security.annotations.EnforceNothing",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.security.annotations.EnforceRoleInResourceAspect",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "around",
        "parameterTypes": [
          "org.aspectj.lang.ProceedingJoinPoint"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.security.annotations.ManualConfig",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.security.annotations.enforceRoleInCourse.EnforceAtLeastEditorInCourse",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "resourceIdFieldName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.security.annotations.enforceRoleInCourse.EnforceAtLeastInstructorInCourse",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.security.annotations.enforceRoleInCourse.EnforceAtLeastStudentInCourse",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "resourceIdFieldName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.security.annotations.enforceRoleInCourse.EnforceAtLeastTutorInCourse",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "resourceIdFieldName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.security.annotations.enforceRoleInCourse.EnforceRoleInCourse",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "resourceIdFieldName",
        "parameterTypes": []
      },
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.security.annotations.enforceRoleInCourse.EnforceRoleInCourseAspect",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.security.annotations.enforceRoleInExercise.EnforceAtLeastEditorInExercise",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "resourceIdFieldName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.security.annotations.enforceRoleInExercise.EnforceAtLeastInstructorInExercise",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "resourceIdFieldName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.security.annotations.enforceRoleInExercise.EnforceAtLeastStudentInExercise",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "resourceIdFieldName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.security.annotations.enforceRoleInExercise.EnforceAtLeastTutorInExercise",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "resourceIdFieldName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.security.annotations.enforceRoleInExercise.EnforceRoleInExercise",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "resourceIdFieldName",
        "parameterTypes": []
      },
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.security.annotations.enforceRoleInExercise.EnforceRoleInExerciseAspect",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.security.annotations.enforceRoleInLecture.EnforceAtLeastStudentInLecture",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "resourceIdFieldName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.security.annotations.enforceRoleInLecture.EnforceRoleInLecture",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "resourceIdFieldName",
        "parameterTypes": []
      },
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.security.annotations.enforceRoleInLecture.EnforceRoleInLectureAspect",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.security.annotations.enforceRoleInLectureUnit.EnforceAtLeastEditorInLectureUnit",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.security.annotations.enforceRoleInLectureUnit.EnforceAtLeastInstructorInLectureUnit",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.security.annotations.enforceRoleInLectureUnit.EnforceAtLeastStudentInLectureUnit",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.security.annotations.enforceRoleInLectureUnit.EnforceRoleInLectureUnit",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.security.annotations.enforceRoleInLectureUnit.EnforceRoleInLectureUnitAspect",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.security.filter.ApiVersionFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "doFilter",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse",
          "jakarta.servlet.FilterChain"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.security.filter.CachingHttpHeadersFilter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.security.jwt.AuthenticationMethod",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.security.jwt.JWTConfigurer"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.security.jwt.JWTCookieService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.security.jwt.TokenProvider",
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.security.jwt.TokenProvider",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "tech.jhipster.config.JHipsterProperties",
          "de.tum.cit.aet.artemis.core.management.SecurityMetersService"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.security.passkey.ArtemisPasskeyWebAuthnConfigurer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.actuate.audit.AuditEventRepository",
          "org.springframework.http.converter.json.MappingJackson2HttpMessageConverter",
          "de.tum.cit.aet.artemis.core.security.jwt.JWTCookieService",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "org.springframework.security.web.webauthn.management.PublicKeyCredentialUserEntityRepository",
          "org.springframework.security.web.webauthn.management.UserCredentialRepository",
          "org.springframework.security.web.webauthn.registration.PublicKeyCredentialCreationOptionsRepository",
          "org.springframework.security.web.webauthn.authentication.PublicKeyCredentialRequestOptionsRepository",
          "de.tum.cit.aet.artemis.core.service.AndroidFingerprintService",
          "de.tum.cit.aet.artemis.communication.service.notifications.MailSendingService",
          "de.tum.cit.aet.artemis.core.service.ArtemisSuccessfulLoginService",
          "de.tum.cit.aet.artemis.communication.repository.GlobalNotificationSettingRepository"
        ]
      },
      {
        "name": "validatePasskeyAllowedOriginConfiguration",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.AccountService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.AndroidFingerprintService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.service.ProfileService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.ArtemisSuccessfulLoginService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.communication.service.notifications.MailSendingService",
          "de.tum.cit.aet.artemis.communication.repository.GlobalNotificationSettingRepository",
          "java.net.URL",
          "java.util.Optional",
          "java.util.Optional"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.AuditEventService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "de.tum.cit.aet.artemis.exercise.repository.TeamRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService$EnrollmentAuthorization"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService$UnenrollmentAuthorization"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.DataExportScheduleService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.repository.DataExportRepository",
          "de.tum.cit.aet.artemis.core.service.export.DataExportCreationService",
          "de.tum.cit.aet.artemis.core.service.export.DataExportService",
          "de.tum.cit.aet.artemis.core.service.ProfileService",
          "de.tum.cit.aet.artemis.communication.service.notifications.MailService",
          "de.tum.cit.aet.artemis.core.service.user.UserService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.ExternalPasswordResetInfoContributor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "contribute",
        "parameterTypes": [
          "org.springframework.boot.actuate.info.Info$Builder"
        ]
      },
      {
        "name": "setCredentialProvider",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLinks",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.FileService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getFileForPath",
        "parameterTypes": [
          "java.nio.file.Path"
        ]
      },
      {
        "name": "schedulePathForDeletion",
        "parameterTypes": [
          "java.nio.file.Path",
          "long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.FileService$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.LLMTokenUsageService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.repository.LLMTokenUsageTraceRepository",
          "de.tum.cit.aet.artemis.core.repository.LLMTokenUsageRequestRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.LLMTokenUsageService$LLMTokenUsageBuilder"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.LegalDocumentService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.OrganizationService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.ProfileService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.ResourceLoaderService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader",
          "java.nio.file.Path"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.ScheduleService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.service.ExerciseLifecycleService",
          "de.tum.cit.aet.artemis.exercise.service.ParticipationLifecycleService",
          "de.tum.cit.aet.artemis.lecture.api.SlideLifecycleServiceApi"
        ]
      },
      {
        "name": "startup",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.ScheduleService$LifecycleKey"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.ScheduleService$ScheduledExerciseEvent"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.ScheduleService$ScheduledSlideEvent"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.ScheduleService$ScheduledTaskName"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.StatisticsService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.repository.StatisticsRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ParticipantScoreRepository",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "de.tum.cit.aet.artemis.exercise.repository.ExerciseRepository",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.exercise.repository.TeamRepository",
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository",
          "de.tum.cit.aet.artemis.assessment.repository.GradingScaleRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.TimeService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.TitleCacheEvictionService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "onPostDelete",
        "parameterTypes": [
          "org.hibernate.event.spi.PostDeleteEvent"
        ]
      },
      {
        "name": "onPostUpdate",
        "parameterTypes": [
          "org.hibernate.event.spi.PostUpdateEvent"
        ]
      },
      {
        "name": "requiresPostCommitHandling",
        "parameterTypes": [
          "org.hibernate.persister.entity.EntityPersister"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.UserScheduleService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "org.springframework.cache.CacheManager",
          "java.util.Optional"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.ZipFileService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.service.FileService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.cleanup.DataCleanupService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.connectors.ConnectorHealth"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.connectors.HazelcastHealthIndicator",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.hazelcast.core.HazelcastInstance"
        ]
      },
      {
        "name": "health",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.course.CourseAccessService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "de.tum.cit.aet.artemis.core.service.user.UserService",
          "java.util.Optional",
          "org.springframework.boot.actuate.audit.AuditEventRepository",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.core.repository.UserRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.course.CourseAdminService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.repository.BuildJobRepository",
          "de.tum.cit.aet.artemis.communication.repository.PostRepository",
          "de.tum.cit.aet.artemis.communication.repository.AnswerPostRepository",
          "java.util.Optional",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.exercise.repository.ExerciseRepository",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.course.CourseArchiveService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.course.CourseAtlasService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.course.CourseDeletionService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.service.ExerciseDeletionService",
          "de.tum.cit.aet.artemis.core.service.user.UserService",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.assessment.repository.GradingScaleRepository",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.communication.repository.CourseNotificationRepository",
          "de.tum.cit.aet.artemis.communication.repository.conversation.ConversationRepository",
          "de.tum.cit.aet.artemis.communication.repository.FaqRepository",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "java.util.Optional"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.course.CourseForUserGroupService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.course.CourseLoadService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "de.tum.cit.aet.artemis.exercise.repository.ExerciseRepository",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.course.CourseOverviewService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.core.repository.UserRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.course.CourseSearchService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.repository.UserRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.course.CourseService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.Optional",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "de.tum.cit.aet.artemis.exercise.service.ExerciseService",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository",
          "de.tum.cit.aet.artemis.exercise.repository.ExerciseRepository",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.communication.repository.FaqRepository",
          "de.tum.cit.aet.artemis.core.service.course.CourseVisibleService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.course.CourseStatsService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "de.tum.cit.aet.artemis.core.repository.StatisticsRepository",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.exercise.repository.ExerciseRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ResultRepository",
          "de.tum.cit.aet.artemis.exercise.repository.SubmissionRepository",
          "de.tum.cit.aet.artemis.assessment.service.PresentationPointsCalculationService",
          "de.tum.cit.aet.artemis.assessment.service.ComplaintService",
          "de.tum.cit.aet.artemis.assessment.service.TutorLeaderboardService",
          "de.tum.cit.aet.artemis.assessment.repository.ParticipantScoreRepository",
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ComplaintRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ComplaintResponseRepository",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseRepository",
          "de.tum.cit.aet.artemis.assessment.repository.RatingRepository",
          "de.tum.cit.aet.artemis.core.repository.LLMTokenUsageTraceRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.course.CourseVisibleService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.export.CourseExamExportService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseExportService",
          "de.tum.cit.aet.artemis.core.service.ZipFileService",
          "de.tum.cit.aet.artemis.core.service.FileService",
          "java.util.Optional",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.modeling.service.ModelingExerciseWithSubmissionsExportService",
          "de.tum.cit.aet.artemis.quiz.service.QuizExerciseWithSubmissionsExportService",
          "de.tum.cit.aet.artemis.communication.service.WebsocketMessagingService",
          "java.util.Optional"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.export.DataExportCommunicationDataService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.repository.PostRepository",
          "de.tum.cit.aet.artemis.communication.repository.AnswerPostRepository",
          "de.tum.cit.aet.artemis.communication.repository.ReactionRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.export.DataExportCreationService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.nio.file.Path",
          "de.tum.cit.aet.artemis.core.service.ZipFileService",
          "de.tum.cit.aet.artemis.core.service.FileService",
          "de.tum.cit.aet.artemis.communication.service.notifications.SingleUserNotificationService",
          "de.tum.cit.aet.artemis.core.repository.DataExportRepository",
          "de.tum.cit.aet.artemis.communication.service.notifications.MailService",
          "de.tum.cit.aet.artemis.core.service.user.UserService",
          "de.tum.cit.aet.artemis.core.service.export.DataExportExerciseCreationService",
          "de.tum.cit.aet.artemis.core.service.export.DataExportExamCreationService",
          "de.tum.cit.aet.artemis.core.service.export.DataExportCommunicationDataService",
          "de.tum.cit.aet.artemis.core.service.export.DataExportScienceEventService",
          "de.tum.cit.aet.artemis.core.service.ResourceLoaderService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.export.DataExportExamCreationService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.Optional",
          "de.tum.cit.aet.artemis.core.service.export.DataExportExerciseCreationService",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.assessment.repository.GradingScaleRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.export.DataExportExerciseCreationService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.nio.file.Path",
          "de.tum.cit.aet.artemis.core.service.FileService",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseExportService",
          "de.tum.cit.aet.artemis.core.service.export.DataExportQuizExerciseCreationService",
          "java.util.Optional",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.assessment.repository.ComplaintRepository",
          "de.tum.cit.aet.artemis.exercise.repository.ExerciseRepository",
          "de.tum.cit.aet.artemis.assessment.service.ResultService",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.export.DataExportQuizExerciseCreationService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.repository.QuizSubmissionRepository",
          "de.tum.cit.aet.artemis.quiz.repository.QuizQuestionRepository",
          "de.tum.cit.aet.artemis.quiz.service.DragAndDropQuizAnswerConversionService",
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.export.DataExportScienceEventService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.Optional"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.export.DataExportService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "int",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.core.repository.DataExportRepository",
          "de.tum.cit.aet.artemis.core.service.FileService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.feature.Feature",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.feature.FeatureToggle",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.feature.FeatureToggleAspect",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.service.feature.FeatureToggleService"
        ]
      },
      {
        "name": "around",
        "parameterTypes": [
          "org.aspectj.lang.ProceedingJoinPoint"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.feature.FeatureToggleInfoContributor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.service.feature.FeatureToggleService"
        ]
      },
      {
        "name": "contribute",
        "parameterTypes": [
          "org.springframework.boot.actuate.info.Info$Builder"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.feature.FeatureToggleService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.service.WebsocketMessagingService",
          "com.hazelcast.core.HazelcastInstance"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.file.FileUploadScheduleService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.repository.FileUploadRepository",
          "de.tum.cit.aet.artemis.core.service.file.FileUploadService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.file.FileUploadService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.repository.FileUploadRepository",
          "de.tum.cit.aet.artemis.core.service.FileService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.messaging.InstanceMessageReceiveService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseRepository",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseScheduleService",
          "de.tum.cit.aet.artemis.exercise.repository.ExerciseRepository",
          "java.util.Optional",
          "com.hazelcast.core.HazelcastInstance",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.core.service.UserScheduleService",
          "de.tum.cit.aet.artemis.communication.service.NotificationScheduleService",
          "de.tum.cit.aet.artemis.assessment.service.ParticipantScoreScheduleService",
          "de.tum.cit.aet.artemis.quiz.service.QuizScheduleService",
          "de.tum.cit.aet.artemis.lecture.service.SlideUnhideScheduleService",
          "java.util.Optional"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.messaging.InstanceMessageSendService",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.messaging.MainInstanceMessageSendService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.service.messaging.InstanceMessageReceiveService"
        ]
      },
      {
        "name": "sendAssessedExerciseSubmissionNotificationSchedule",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "sendCancelRemoveNonActivatedUserSchedule",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "sendExerciseReleaseNotificationSchedule",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "sendLectureUnitAutoIngestionSchedule",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "sendLectureUnitAutoIngestionScheduleCancel",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "sendParticipantScoreSchedule",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "sendProgrammingExerciseSchedule",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "sendProgrammingExerciseScheduleCancel",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "sendQuizExerciseStartCancel",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "sendQuizExerciseStartSchedule",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "sendRemoveNonActivatedUserSchedule",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "sendSlideUnhideSchedule",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "sendSlideUnhideScheduleCancel",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "sendTextExerciseSchedule",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "sendTextExerciseScheduleCancel",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.telemetry.TelemetrySendingService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.telemetry.TelemetryService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.user.AuthorityService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.repository.CourseRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.user.PasswordService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.user.UserCreationService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.core.service.user.PasswordService",
          "de.tum.cit.aet.artemis.core.repository.AuthorityRepository",
          "java.util.Optional",
          "org.springframework.cache.CacheManager",
          "de.tum.cit.aet.artemis.core.repository.OrganizationRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.user.UserManagementInfoContributor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "contribute",
        "parameterTypes": [
          "org.springframework.boot.actuate.info.Info$Builder"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.user.UserService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.service.user.UserCreationService",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.core.service.user.AuthorityService",
          "de.tum.cit.aet.artemis.core.repository.AuthorityRepository",
          "org.springframework.cache.CacheManager",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.core.service.user.PasswordService",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.core.service.messaging.InstanceMessageSendService",
          "de.tum.cit.aet.artemis.core.service.FileService",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.programming.service.ParticipationVcsAccessTokenService",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.communication.repository.SavedPostRepository",
          "de.tum.cit.aet.artemis.programming.service.sshuserkeys.UserSshPublicKeyService",
          "de.tum.cit.aet.artemis.communication.service.CourseNotificationSettingService",
          "de.tum.cit.aet.artemis.communication.service.UserCourseNotificationStatusService",
          "de.tum.cit.aet.artemis.communication.service.GlobalNotificationSettingService"
        ]
      },
      {
        "name": "applicationReady",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.util.CalendarEventRelatedEntity"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.util.CalendarEventRelatedEntity.FILE_UPLOAD_EXERCISE"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.util.CalendarEventRelatedEntity.MODELING_EXERCISE"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.util.CalendarEventRelatedEntity.PROGRAMMING_EXERCISE"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.util.CalendarEventRelatedEntity.TEXT_EXERCISE"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.util.CalendarEventRelatedEntity.TUTORIAL"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.util.CalendarEventSemantics"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.util.CalendarEventSemantics.START_AND_END_DATE"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.util.ClientEnvironment"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.util.ExamExerciseStartPreparationStatus",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "failed",
        "parameterTypes": []
      },
      {
        "name": "finished",
        "parameterTypes": []
      },
      {
        "name": "overall",
        "parameterTypes": []
      },
      {
        "name": "participationCount",
        "parameterTypes": []
      },
      {
        "name": "startedAt",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.util.Pair"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.AccountResource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.core.service.user.UserService",
          "de.tum.cit.aet.artemis.core.service.user.UserCreationService",
          "de.tum.cit.aet.artemis.core.service.AccountService",
          "de.tum.cit.aet.artemis.core.service.FileService"
        ]
      },
      {
        "name": "getVcsAccessToken",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.AccountResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.CalendarResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.CustomMetricsExtension",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "tech.jhipster.config.metric.JHipsterMetricsEndpoint",
          "org.springframework.messaging.simp.user.SimpUserRegistry"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.DataExportResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.FileResource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.service.file.FileUploadService",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.core.service.FileService",
          "de.tum.cit.aet.artemis.core.service.ResourceLoaderService",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.quiz.repository.QuizQuestionRepository",
          "de.tum.cit.aet.artemis.quiz.repository.DragItemRepository",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "java.util.Optional"
        ]
      },
      {
        "name": "getTemplateFile",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingLanguage",
          "java.util.Optional"
        ]
      },
      {
        "name": "getCourseCodeOfConduct",
        "parameterTypes": []
      },
      {
        "name": "getCourseIcon",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getDragAndDropBackgroundFile",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.FileResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.OrganizationResource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.repository.OrganizationRepository"
        ]
      },
      {
        "name": "getAllOrganizationsByCourse",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.OrganizationResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.PasskeyResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.StatisticsResource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.service.StatisticsService",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "de.tum.cit.aet.artemis.exercise.repository.ExerciseRepository"
        ]
      },
      {
        "name": "getExerciseStatistics",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.StatisticsResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.TokenResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.UserResource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.core.service.user.UserCreationService",
          "java.util.Optional"
        ]
      },
      {
        "name": "searchAllUsers",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.admin.AdminAuditResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.admin.AdminBuildJobQueueResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.admin.AdminCleanupResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.admin.AdminCourseResource",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.core.service.course.CourseAdminService",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "org.springframework.boot.actuate.audit.AuditEventRepository",
          "de.tum.cit.aet.artemis.core.service.FileService",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.communication.service.conversation.ChannelService",
          "de.tum.cit.aet.artemis.core.service.course.CourseDeletionService",
          "de.tum.cit.aet.artemis.core.service.course.CourseAccessService",
          "de.tum.cit.aet.artemis.core.service.course.CourseLoadService"
        ]
      },
      {
        "name": "createCourse",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.Course",
          "org.springframework.web.multipart.MultipartFile"
        ]
      },
      {
        "name": "deleteCourse",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getDeletionSummary",
        "parameterTypes": [
          "long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.admin.AdminDataExportResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.admin.AdminFeatureToggleResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.admin.AdminImprintResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.admin.AdminLogResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.admin.AdminOrganizationResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.admin.AdminPrivacyStatementResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.admin.AdminScheduleResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.admin.AdminStatisticsResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.admin.AdminUserResource",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.core.service.user.UserService",
          "de.tum.cit.aet.artemis.core.service.user.UserCreationService",
          "de.tum.cit.aet.artemis.core.repository.AuthorityRepository",
          "java.util.Optional"
        ]
      },
      {
        "name": "getUser",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.course.CourseAccessResource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.service.course.CourseAccessService",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.core.service.course.CourseSearchService"
        ]
      },
      {
        "name": "addInstructorToCourse",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.String"
        ]
      },
      {
        "name": "addStudentToCourse",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.String"
        ]
      },
      {
        "name": "addTutorToCourse",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.String"
        ]
      },
      {
        "name": "getInstructorsInCourse",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getStudentsInCourse",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getTutorsInCourse",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "removeStudentFromCourse",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.String"
        ]
      },
      {
        "name": "searchUsersInCourse",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.String",
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.course.CourseArchiveResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.course.CourseResource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.core.service.course.CourseService",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.assessment.repository.TutorParticipationRepository",
          "de.tum.cit.aet.artemis.exercise.service.SubmissionService",
          "de.tum.cit.aet.artemis.assessment.service.AssessmentDashboardService",
          "de.tum.cit.aet.artemis.exercise.repository.ExerciseRepository",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.core.service.FileService",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.assessment.service.CourseScoreCalculationService",
          "de.tum.cit.aet.artemis.assessment.repository.GradingScaleRepository",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.communication.service.ConductAgreementService",
          "java.util.Optional",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.assessment.service.ComplaintService",
          "de.tum.cit.aet.artemis.exercise.repository.TeamRepository",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.core.service.course.CourseForUserGroupService",
          "de.tum.cit.aet.artemis.core.service.course.CourseOverviewService",
          "de.tum.cit.aet.artemis.core.service.course.CourseLoadService",
          "de.tum.cit.aet.artemis.quiz.service.QuizQuestionProgressService"
        ]
      },
      {
        "name": "getCategoriesInCourse",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getCourse",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getCourseForDashboard",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getCoursesForDashboard",
        "parameterTypes": []
      },
      {
        "name": "getCoursesForDropdown",
        "parameterTypes": []
      },
      {
        "name": "getCoursesForManagementOverview",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getExercisesForCourseOverview",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getExistingExerciseDetails",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.String"
        ]
      },
      {
        "name": "getCourseForAssessmentDashboard",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getCourseWithExercises",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getCoursesForNotifications",
        "parameterTypes": []
      },
      {
        "name": "updateCourse",
        "parameterTypes": [
          "java.lang.Long",
          "de.tum.cit.aet.artemis.core.domain.Course",
          "org.springframework.web.multipart.MultipartFile"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.course.CourseResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.course.CourseResource$CourseDropdownDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "courseIcon",
        "parameterTypes": []
      },
      {
        "name": "id",
        "parameterTypes": []
      },
      {
        "name": "title",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.course.CourseStatsResource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.core.service.course.CourseStatsService",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "de.tum.cit.aet.artemis.exercise.service.ExerciseService",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.core.service.course.CourseForUserGroupService",
          "de.tum.cit.aet.artemis.exercise.repository.ExerciseRepository",
          "de.tum.cit.aet.artemis.assessment.repository.GradingScaleRepository",
          "de.tum.cit.aet.artemis.core.service.course.CourseOverviewService"
        ]
      },
      {
        "name": "getActiveStudentsForCourseDetailView",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long",
          "java.util.Optional"
        ]
      },
      {
        "name": "getCourseDTOForDetailView",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getCoursesWithUserStats",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getExerciseStatsForCourseOverview",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getStatsForAssessmentDashboard",
        "parameterTypes": [
          "long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.course.CourseStatsResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.open.PublicAccountResource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.service.AccountService",
          "de.tum.cit.aet.artemis.core.service.user.UserService",
          "de.tum.cit.aet.artemis.communication.service.notifications.MailService",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "java.util.Optional"
        ]
      },
      {
        "name": "getAccount",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.open.PublicAccountResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.open.PublicImprintResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.open.PublicPrivacyStatementResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.open.PublicSystemNotificationResource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.service.SystemNotificationService"
        ]
      },
      {
        "name": "getActiveAndFutureSystemNotifications",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.open.PublicSystemNotificationResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.open.PublicTimeResource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "time",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.open.PublicTimeResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.open.PublicUserJwtResource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.security.jwt.JWTCookieService",
          "org.springframework.security.authentication.AuthenticationManager",
          "de.tum.cit.aet.artemis.core.service.ArtemisSuccessfulLoginService",
          "java.util.Optional"
        ]
      },
      {
        "name": "authorize",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.dto.vm.LoginVM",
          "java.lang.String",
          "de.tum.cit.aet.artemis.core.security.allowedTools.ToolTokenType",
          "jakarta.servlet.http.HttpServletResponse",
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "logout",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.api.AbstractExamApi",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.api.ExamAccessApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.service.ExamAccessService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.api.ExamApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.service.ExamService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.api.ExamDateApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.service.ExamDateService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.api.ExamDeletionApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.service.ExamDeletionService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.api.ExamLiveEventsApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.service.ExamLiveEventsService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.api.ExamMetricsApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.repository.ExamRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.api.ExamRepositoryApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.repository.ExamRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.api.ExamSubmissionApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.service.ExamSubmissionService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.api.ExamUserApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.repository.ExamUserRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.api.ExerciseGroupApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.repository.ExerciseGroupRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.api.StudentExamApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.repository.StudentExamRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.config.ExamApiNotPresentException"
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.Exam",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setConfirmationEndText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConfirmationStartText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCourse",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.Course"
        ]
      },
      {
        "name": "setCourseName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEndDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setEndText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExamArchivePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExamMaxPoints",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setExamStudentReviewEnd",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setExamStudentReviewStart",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setExamUsers",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setExamWithAttendanceCheck",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setExaminer",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExampleSolutionPublicationDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setExerciseGroups",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setGracePeriod",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setModuleNumber",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNumberOfCorrectionRoundsInExam",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setNumberOfExercisesInExam",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setPublishResultsDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setRandomizeExerciseOrder",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setStartDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setStartText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStudentExams",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setTestExam",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVisibleDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setWorkingTime",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getChannelName",
        "parameterTypes": []
      },
      {
        "name": "getConfirmationEndText",
        "parameterTypes": []
      },
      {
        "name": "getConfirmationStartText",
        "parameterTypes": []
      },
      {
        "name": "getCourse",
        "parameterTypes": []
      },
      {
        "name": "getCourseName",
        "parameterTypes": []
      },
      {
        "name": "getEndDate",
        "parameterTypes": []
      },
      {
        "name": "getEndText",
        "parameterTypes": []
      },
      {
        "name": "getExamArchivePath",
        "parameterTypes": []
      },
      {
        "name": "getExamMaxPoints",
        "parameterTypes": []
      },
      {
        "name": "getExamStudentReviewEnd",
        "parameterTypes": []
      },
      {
        "name": "getExamStudentReviewStart",
        "parameterTypes": []
      },
      {
        "name": "getExamUsers",
        "parameterTypes": []
      },
      {
        "name": "getExaminer",
        "parameterTypes": []
      },
      {
        "name": "getExampleSolutionPublicationDate",
        "parameterTypes": []
      },
      {
        "name": "getExerciseGroups",
        "parameterTypes": []
      },
      {
        "name": "getGracePeriod",
        "parameterTypes": []
      },
      {
        "name": "getModuleNumber",
        "parameterTypes": []
      },
      {
        "name": "getNumberOfCorrectionRoundsInExam",
        "parameterTypes": []
      },
      {
        "name": "getNumberOfExamUsers",
        "parameterTypes": []
      },
      {
        "name": "getNumberOfExercisesInExam",
        "parameterTypes": []
      },
      {
        "name": "getPublishResultsDate",
        "parameterTypes": []
      },
      {
        "name": "getQuizExamMaxPoints",
        "parameterTypes": []
      },
      {
        "name": "getRandomizeExerciseOrder",
        "parameterTypes": []
      },
      {
        "name": "getStartDate",
        "parameterTypes": []
      },
      {
        "name": "getStartText",
        "parameterTypes": []
      },
      {
        "name": "getStudentExams",
        "parameterTypes": []
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "getVisibleDate",
        "parameterTypes": []
      },
      {
        "name": "getWorkingTime",
        "parameterTypes": []
      },
      {
        "name": "isExamWithAttendanceCheck",
        "parameterTypes": []
      },
      {
        "name": "isTestExam",
        "parameterTypes": []
      },
      {
        "name": "setChannelName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGracePeriod",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setNumberOfExamUsers",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.Exam$HibernateAccessOptimizer$zAxLz2Dg",
    "fields": [
      {
        "name": "invocationTarget$ugg71e1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.Exam$HibernateInstantiator$HKWR4NtI",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.ExamSession",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setBrowserFingerprintHash",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInstanceId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIpAddress",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastModifiedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastModifiedDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setSessionToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStudentExam",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.domain.StudentExam"
        ]
      },
      {
        "name": "setUserAgent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBrowserFingerprintHash",
        "parameterTypes": []
      },
      {
        "name": "getInstanceId",
        "parameterTypes": []
      },
      {
        "name": "getIpAddress",
        "parameterTypes": []
      },
      {
        "name": "getSessionToken",
        "parameterTypes": []
      },
      {
        "name": "getSuspiciousReasons",
        "parameterTypes": []
      },
      {
        "name": "getUserAgent",
        "parameterTypes": []
      },
      {
        "name": "isInitialSession",
        "parameterTypes": []
      },
      {
        "name": "setInitialSession",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.ExamSession$HibernateAccessOptimizer$CHxYaBdh",
    "fields": [
      {
        "name": "invocationTarget$0klv5n0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.ExamSession$HibernateInstantiator$rlJrdGpX",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.ExamSession_",
    "fields": [
      {
        "name": "browserFingerprintHash"
      },
      {
        "name": "class_"
      },
      {
        "name": "instanceId"
      },
      {
        "name": "ipAddress"
      },
      {
        "name": "sessionToken"
      },
      {
        "name": "studentExam"
      },
      {
        "name": "userAgent"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.ExamUser",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setActualRoom",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setActualSeat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDidCheckImage",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDidCheckLogin",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDidCheckName",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDidCheckRegistrationNumber",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setExam",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.domain.Exam"
        ]
      },
      {
        "name": "setLastModifiedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastModifiedDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setPlannedRoom",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPlannedSeat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSigningImagePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStudentImagePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "getActualRoom",
        "parameterTypes": []
      },
      {
        "name": "getActualSeat",
        "parameterTypes": []
      },
      {
        "name": "getDidCheckImage",
        "parameterTypes": []
      },
      {
        "name": "getDidCheckLogin",
        "parameterTypes": []
      },
      {
        "name": "getDidCheckName",
        "parameterTypes": []
      },
      {
        "name": "getDidCheckRegistrationNumber",
        "parameterTypes": []
      },
      {
        "name": "getPlannedRoom",
        "parameterTypes": []
      },
      {
        "name": "getPlannedSeat",
        "parameterTypes": []
      },
      {
        "name": "getSigningImagePath",
        "parameterTypes": []
      },
      {
        "name": "getStudentImagePath",
        "parameterTypes": []
      },
      {
        "name": "getUser",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.ExamUser$HibernateAccessOptimizer$RFjknXao",
    "fields": [
      {
        "name": "invocationTarget$dkk68h0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.ExamUser$HibernateInstantiator$V80xVHas",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.ExamUser_",
    "fields": [
      {
        "name": "actualRoom"
      },
      {
        "name": "actualSeat"
      },
      {
        "name": "class_"
      },
      {
        "name": "didCheckImage"
      },
      {
        "name": "didCheckLogin"
      },
      {
        "name": "didCheckName"
      },
      {
        "name": "didCheckRegistrationNumber"
      },
      {
        "name": "exam"
      },
      {
        "name": "plannedRoom"
      },
      {
        "name": "plannedSeat"
      },
      {
        "name": "signingImagePath"
      },
      {
        "name": "studentImagePath"
      },
      {
        "name": "user"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.Exam_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "confirmationEndText"
      },
      {
        "name": "confirmationStartText"
      },
      {
        "name": "course"
      },
      {
        "name": "courseName"
      },
      {
        "name": "endDate"
      },
      {
        "name": "endText"
      },
      {
        "name": "examArchivePath"
      },
      {
        "name": "examMaxPoints"
      },
      {
        "name": "examStudentReviewEnd"
      },
      {
        "name": "examStudentReviewStart"
      },
      {
        "name": "examUsers"
      },
      {
        "name": "examWithAttendanceCheck"
      },
      {
        "name": "examiner"
      },
      {
        "name": "exampleSolutionPublicationDate"
      },
      {
        "name": "exerciseGroups"
      },
      {
        "name": "gracePeriod"
      },
      {
        "name": "moduleNumber"
      },
      {
        "name": "numberOfCorrectionRoundsInExam"
      },
      {
        "name": "numberOfExercisesInExam"
      },
      {
        "name": "publishResultsDate"
      },
      {
        "name": "randomizeExerciseOrder"
      },
      {
        "name": "startDate"
      },
      {
        "name": "startText"
      },
      {
        "name": "studentExams"
      },
      {
        "name": "testExam"
      },
      {
        "name": "title"
      },
      {
        "name": "visibleDate"
      },
      {
        "name": "workingTime"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.ExerciseGroup",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setExam",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.domain.Exam"
        ]
      },
      {
        "name": "setExercises",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setIsMandatory",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getExam",
        "parameterTypes": []
      },
      {
        "name": "getExercises",
        "parameterTypes": []
      },
      {
        "name": "getIsMandatory",
        "parameterTypes": []
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.ExerciseGroup$HibernateAccessOptimizer$KzB7u9jm",
    "fields": [
      {
        "name": "invocationTarget$vj1ddk0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.ExerciseGroup$HibernateInstantiator$nEDUOJCu",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.ExerciseGroup_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "exam"
      },
      {
        "name": "exercises"
      },
      {
        "name": "isMandatory"
      },
      {
        "name": "title"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.StudentExam",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExam",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.domain.Exam"
        ]
      },
      {
        "name": "setExamSessions",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setExercises",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setLastModifiedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastModifiedDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setStarted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setStartedDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setStudentParticipations",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSubmissionDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setSubmitted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setTestRun",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "setWorkingTime",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getExam",
        "parameterTypes": []
      },
      {
        "name": "getExamSessions",
        "parameterTypes": []
      },
      {
        "name": "getExercises",
        "parameterTypes": []
      },
      {
        "name": "getStartedDate",
        "parameterTypes": []
      },
      {
        "name": "getStudentParticipations",
        "parameterTypes": []
      },
      {
        "name": "getSubmissionDate",
        "parameterTypes": []
      },
      {
        "name": "getUser",
        "parameterTypes": []
      },
      {
        "name": "getWorkingTime",
        "parameterTypes": []
      },
      {
        "name": "isEnded",
        "parameterTypes": []
      },
      {
        "name": "isFinished",
        "parameterTypes": []
      },
      {
        "name": "isStarted",
        "parameterTypes": []
      },
      {
        "name": "isSubmitted",
        "parameterTypes": []
      },
      {
        "name": "isTestRun",
        "parameterTypes": []
      },
      {
        "name": "setTestRun",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.StudentExam$HibernateAccessOptimizer$2rhlhlEn",
    "fields": [
      {
        "name": "invocationTarget$pn2bod0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.StudentExam$HibernateInstantiator$cCnlZnWW",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.StudentExam_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "exam"
      },
      {
        "name": "examSessions"
      },
      {
        "name": "exercises"
      },
      {
        "name": "started"
      },
      {
        "name": "startedDate"
      },
      {
        "name": "studentParticipations"
      },
      {
        "name": "submissionDate"
      },
      {
        "name": "submitted"
      },
      {
        "name": "testRun"
      },
      {
        "name": "user"
      },
      {
        "name": "workingTime"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.SuspiciousSessionReason",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.event.ExamAttendanceCheckEvent",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreatedDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setTextContent",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.event.ExamAttendanceCheckEvent$HibernateAccessOptimizer$aroS8kcC",
    "fields": [
      {
        "name": "invocationTarget$je9qke1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.event.ExamAttendanceCheckEvent$HibernateInstantiator$O0vheSDw",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.event.ExamAttendanceCheckEvent_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "textContent"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.event.ExamLiveEvent",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreatedDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setExamId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setStudentExamId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.event.ExamLiveEvent$HibernateAccessOptimizer$s4Oswm7v",
    "fields": [
      {
        "name": "invocationTarget$pviuml1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.event.ExamLiveEvent_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "createdBy"
      },
      {
        "name": "createdDate"
      },
      {
        "name": "examId"
      },
      {
        "name": "studentExamId"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.event.ExamWideAnnouncementEvent",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreatedDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setTextContent",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.event.ExamWideAnnouncementEvent$HibernateAccessOptimizer$r8htVqQe",
    "fields": [
      {
        "name": "invocationTarget$hv6t420"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.event.ExamWideAnnouncementEvent$HibernateInstantiator$pwqWRees",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.event.ExamWideAnnouncementEvent_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "textContent"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.event.ProblemStatementUpdateEvent",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreatedDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setExerciseId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setExerciseName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProblemStatement",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTextContent",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.event.ProblemStatementUpdateEvent$HibernateAccessOptimizer$oH0P38EC",
    "fields": [
      {
        "name": "invocationTarget$bui9le0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.event.ProblemStatementUpdateEvent$HibernateInstantiator$DedLCfoI",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.event.ProblemStatementUpdateEvent_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "exerciseId"
      },
      {
        "name": "exerciseName"
      },
      {
        "name": "problemStatement"
      },
      {
        "name": "textContent"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.event.WorkingTimeUpdateEvent",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCourseWide",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreatedDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setNewWorkingTime",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setOldWorkingTime",
        "parameterTypes": [
          "int"
        ]
      }
    ],
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.event.WorkingTimeUpdateEvent$HibernateAccessOptimizer$M6H4yQRD",
    "fields": [
      {
        "name": "invocationTarget$5omm840"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.event.WorkingTimeUpdateEvent$HibernateInstantiator$EArOF58E",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.event.WorkingTimeUpdateEvent_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "courseWide"
      },
      {
        "name": "newWorkingTime"
      },
      {
        "name": "oldWorkingTime"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.event.package-info"
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.package-info"
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.dto.ExamChecklistDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "allExamExercisesAllStudentsPrepared",
        "parameterTypes": []
      },
      {
        "name": "existsUnassessedQuizzes",
        "parameterTypes": []
      },
      {
        "name": "existsUnsubmittedExercises",
        "parameterTypes": []
      },
      {
        "name": "numberOfAllComplaints",
        "parameterTypes": []
      },
      {
        "name": "numberOfAllComplaintsDone",
        "parameterTypes": []
      },
      {
        "name": "numberOfExamsStarted",
        "parameterTypes": []
      },
      {
        "name": "numberOfExamsSubmitted",
        "parameterTypes": []
      },
      {
        "name": "numberOfGeneratedStudentExams",
        "parameterTypes": []
      },
      {
        "name": "numberOfTestRuns",
        "parameterTypes": []
      },
      {
        "name": "numberOfTotalExamAssessmentsFinishedByCorrectionRound",
        "parameterTypes": []
      },
      {
        "name": "numberOfTotalParticipationsForAssessment",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.dto.ExamScoresDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.dto.ExamScoresDTO$StudentResult",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "email",
        "parameterTypes": []
      },
      {
        "name": "exerciseGroupIdToExerciseResult",
        "parameterTypes": []
      },
      {
        "name": "gradeWithBonus",
        "parameterTypes": []
      },
      {
        "name": "hasPassed",
        "parameterTypes": []
      },
      {
        "name": "login",
        "parameterTypes": []
      },
      {
        "name": "mostSeverePlagiarismVerdict",
        "parameterTypes": []
      },
      {
        "name": "name",
        "parameterTypes": []
      },
      {
        "name": "overallGrade",
        "parameterTypes": []
      },
      {
        "name": "overallGradeInFirstCorrection",
        "parameterTypes": []
      },
      {
        "name": "overallPointsAchieved",
        "parameterTypes": []
      },
      {
        "name": "overallPointsAchievedInFirstCorrection",
        "parameterTypes": []
      },
      {
        "name": "overallScoreAchieved",
        "parameterTypes": []
      },
      {
        "name": "registrationNumber",
        "parameterTypes": []
      },
      {
        "name": "submitted",
        "parameterTypes": []
      },
      {
        "name": "userId",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.dto.ExamSidebarDataDTO",
    "queryAllDeclaredConstructors": true,
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "long",
          "java.lang.String",
          "java.time.ZonedDateTime",
          "int",
          "int"
        ]
      },
      {
        "name": "examMaxPoints",
        "parameterTypes": []
      },
      {
        "name": "id",
        "parameterTypes": []
      },
      {
        "name": "moduleNumber",
        "parameterTypes": []
      },
      {
        "name": "startDate",
        "parameterTypes": []
      },
      {
        "name": "title",
        "parameterTypes": []
      },
      {
        "name": "workingTime",
        "parameterTypes": []
      }
    ],
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.dto.ExamUserAttendanceCheckDTO",
    "queryAllDeclaredConstructors": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.dto.ExamUsersNotFoundDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.dto.StudentExamWithGradeDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "achievedPointsPerExercise",
        "parameterTypes": []
      },
      {
        "name": "gradeType",
        "parameterTypes": []
      },
      {
        "name": "maxBonusPoints",
        "parameterTypes": []
      },
      {
        "name": "maxPoints",
        "parameterTypes": []
      },
      {
        "name": "studentExam",
        "parameterTypes": []
      },
      {
        "name": "studentResult",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.repository.ExamLiveEventRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.repository.ExamRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "countAllActiveExams",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "countExamUsersInExamsWithEndDateBetween",
        "parameterTypes": [
          "java.time.ZonedDateTime",
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "countExamUsersInExamsWithStartDateBetween",
        "parameterTypes": [
          "java.time.ZonedDateTime",
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "countExamsWithEndDateBetween",
        "parameterTypes": [
          "java.time.ZonedDateTime",
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "countExamsWithStartDateBetween",
        "parameterTypes": [
          "java.time.ZonedDateTime",
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "findActiveExams",
        "parameterTypes": [
          "java.util.Set",
          "long",
          "java.time.ZonedDateTime",
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "findByCourseIdForUser",
        "parameterTypes": [
          "java.lang.Long",
          "long",
          "java.util.Set",
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "findExamsInCourses",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "countByCourse_Id",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "countGeneratedStudentExamsByExamWithoutTestRuns",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "filterVisibleExams",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "findByCourseId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByCourseIdWithExerciseGroupsAndExercises",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByIdWithExamUsersElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByIdWithExamUsersExerciseGroupsAndExercisesElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByIdWithExerciseGroupsElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findOneWithEagerExercisesGroupsAndStudentExams",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findSidebarDataForRealStudentExamsByCourseId",
        "parameterTypes": [
          "long",
          "java.time.ZonedDateTime",
          "long"
        ]
      },
      {
        "name": "findWithExerciseGroupsAndExercisesAndDetailsByIdOrElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithExerciseGroupsAndExercisesByIdOrElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithStudentExamsExercisesById",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getExamTitle",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setNumberOfExamUsersForExams",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.repository.ExamSessionRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.repository.ExamUserRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.repository.ExerciseGroupRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "findByIdWithExercisesElseThrow",
        "parameterTypes": [
          "long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.repository.StudentExamRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "createRandomStudentExams",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.domain.Exam",
          "java.util.Set"
        ]
      },
      {
        "name": "findByIdWithExercisesAndSessionsAndStudentParticipationsElseThrow",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findByIdWithExercisesAndStudentParticipationsElseThrow",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findByIdWithExercisesElseThrow",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findOneByExamIdAndUserIdElseThrow",
        "parameterTypes": [
          "long",
          "long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.service.ExamAccessService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.repository.ExamRepository",
          "de.tum.cit.aet.artemis.exam.repository.StudentExamRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "de.tum.cit.aet.artemis.exam.service.ExamRegistrationService",
          "de.tum.cit.aet.artemis.exam.service.StudentExamService",
          "de.tum.cit.aet.artemis.exam.service.ExamDateService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.service.ExamDateService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.repository.ExamRepository",
          "de.tum.cit.aet.artemis.exam.repository.StudentExamRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.service.ExamDeletionService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.service.ExerciseDeletionService",
          "de.tum.cit.aet.artemis.exercise.service.ParticipationDeletionService",
          "org.springframework.cache.CacheManager",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.exam.repository.ExamRepository",
          "org.springframework.boot.actuate.audit.AuditEventRepository",
          "de.tum.cit.aet.artemis.exam.repository.StudentExamRepository",
          "de.tum.cit.aet.artemis.assessment.repository.GradingScaleRepository",
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository",
          "de.tum.cit.aet.artemis.communication.repository.conversation.ChannelRepository",
          "de.tum.cit.aet.artemis.communication.service.conversation.ChannelService",
          "de.tum.cit.aet.artemis.exam.repository.ExamLiveEventRepository",
          "de.tum.cit.aet.artemis.programming.repository.BuildJobRepository",
          "de.tum.cit.aet.artemis.communication.repository.PostRepository",
          "de.tum.cit.aet.artemis.communication.repository.AnswerPostRepository",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseRepository",
          "de.tum.cit.aet.artemis.exam.repository.ExamUserRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.service.ExamImportService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.Optional",
          "de.tum.cit.aet.artemis.modeling.service.ModelingExerciseImportService",
          "de.tum.cit.aet.artemis.modeling.repository.ModelingExerciseRepository",
          "de.tum.cit.aet.artemis.exam.repository.ExamRepository",
          "de.tum.cit.aet.artemis.exam.repository.ExerciseGroupRepository",
          "de.tum.cit.aet.artemis.quiz.repository.QuizExerciseRepository",
          "de.tum.cit.aet.artemis.quiz.service.QuizExerciseImportService",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseValidationService",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseRepository",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseImportService",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.assessment.repository.GradingCriterionRepository",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseTaskRepository",
          "de.tum.cit.aet.artemis.communication.service.conversation.ChannelService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.service.ExamLiveEventsService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.service.WebsocketMessagingService",
          "de.tum.cit.aet.artemis.exam.repository.ExamLiveEventRepository",
          "de.tum.cit.aet.artemis.exam.repository.StudentExamRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.service.ExamQuizService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ResultRepository",
          "de.tum.cit.aet.artemis.exercise.repository.SubmissionRepository",
          "de.tum.cit.aet.artemis.quiz.repository.QuizExerciseRepository",
          "de.tum.cit.aet.artemis.quiz.service.QuizStatisticService",
          "de.tum.cit.aet.artemis.assessment.service.ResultService",
          "de.tum.cit.aet.artemis.quiz.repository.QuizSubmissionRepository",
          "de.tum.cit.aet.artemis.quiz.repository.SubmittedAnswerRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.service.ExamRegistrationService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.repository.ExamUserRepository",
          "de.tum.cit.aet.artemis.exam.repository.ExamRepository",
          "de.tum.cit.aet.artemis.core.service.user.UserService",
          "de.tum.cit.aet.artemis.exercise.service.ParticipationDeletionService",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "org.springframework.boot.actuate.audit.AuditEventRepository",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "de.tum.cit.aet.artemis.exam.repository.StudentExamRepository",
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.exam.service.ExamUserService",
          "de.tum.cit.aet.artemis.exam.service.StudentExamService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.service.ExamService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.repository.ExamRepository",
          "de.tum.cit.aet.artemis.exam.repository.StudentExamRepository",
          "de.tum.cit.aet.artemis.assessment.service.TutorLeaderboardService",
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ComplaintRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ComplaintResponseRepository",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseRepository",
          "de.tum.cit.aet.artemis.quiz.repository.QuizExerciseRepository",
          "de.tum.cit.aet.artemis.exam.service.ExamLiveEventsService",
          "de.tum.cit.aet.artemis.assessment.repository.ResultRepository",
          "de.tum.cit.aet.artemis.exercise.repository.SubmissionRepository",
          "de.tum.cit.aet.artemis.core.service.export.CourseExamExportService",
          "de.tum.cit.aet.artemis.programming.service.GitService",
          "de.tum.cit.aet.artemis.assessment.repository.GradingScaleRepository",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.assessment.service.BonusService",
          "de.tum.cit.aet.artemis.exercise.service.ExerciseDeletionService",
          "de.tum.cit.aet.artemis.quiz.repository.SubmittedAnswerRepository",
          "org.springframework.boot.actuate.audit.AuditEventRepository",
          "de.tum.cit.aet.artemis.assessment.service.CourseScoreCalculationService",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "de.tum.cit.aet.artemis.quiz.service.QuizResultService"
        ]
      },
      {
        "name": "calculateStudentResultWithGradeAndPoints",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.domain.StudentExam",
          "java.util.List"
        ]
      },
      {
        "name": "evaluateQuizExercises",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.domain.Exam"
        ]
      },
      {
        "name": "fetchParticipationsSubmissionsAndResultsForExam",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.domain.StudentExam",
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "filterParticipationForExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.domain.StudentExam",
          "de.tum.cit.aet.artemis.exercise.domain.Exercise",
          "java.util.List",
          "boolean"
        ]
      },
      {
        "name": "findByIdWithExerciseGroupsAndExercisesElseThrow",
        "parameterTypes": [
          "java.lang.Long",
          "boolean"
        ]
      },
      {
        "name": "getStatsForChecklist",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.domain.Exam",
          "boolean"
        ]
      },
      {
        "name": "getStatsForExamAssessmentDashboard",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.Course",
          "java.lang.Long"
        ]
      },
      {
        "name": "getStudentExamGradesForSummary",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User",
          "de.tum.cit.aet.artemis.exam.domain.StudentExam",
          "boolean"
        ]
      },
      {
        "name": "loadQuizExercisesForStudentExam",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.domain.StudentExam"
        ]
      },
      {
        "name": "setExamProperties",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.domain.Exam"
        ]
      },
      {
        "name": "updateStudentExamsAndRescheduleExercises",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.domain.Exam",
          "int",
          "int"
        ]
      },
      {
        "name": "validateForStudentExamGeneration",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.domain.Exam"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.service.ExamService$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.service.ExamService$ExamBonusCalculator"
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.service.ExamSessionService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.repository.ExamSessionRepository",
          "de.tum.cit.aet.artemis.exam.repository.StudentExamRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.service.ExamSubmissionService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.repository.StudentExamRepository",
          "de.tum.cit.aet.artemis.exam.repository.ExamRepository",
          "de.tum.cit.aet.artemis.exercise.service.ParticipationService",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.service.ExamUserService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.service.FileService",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.exam.repository.ExamUserRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.service.StudentExamAccessService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.exam.repository.ExamRepository",
          "de.tum.cit.aet.artemis.exam.repository.StudentExamRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.service.StudentExamService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.repository.StudentExamRepository",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.exercise.service.ParticipationService",
          "de.tum.cit.aet.artemis.quiz.repository.QuizSubmissionRepository",
          "de.tum.cit.aet.artemis.quiz.repository.SubmittedAnswerRepository",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.modeling.repository.ModelingSubmissionRepository",
          "de.tum.cit.aet.artemis.exercise.service.SubmissionVersionService",
          "de.tum.cit.aet.artemis.exercise.service.SubmissionService",
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository",
          "de.tum.cit.aet.artemis.exam.service.ExamQuizService",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseRepository",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingTriggerService",
          "de.tum.cit.aet.artemis.exam.repository.ExamRepository",
          "org.springframework.cache.CacheManager",
          "de.tum.cit.aet.artemis.communication.service.WebsocketMessagingService",
          "org.springframework.scheduling.TaskScheduler"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.web.ExamResource",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "de.tum.cit.aet.artemis.exam.service.ExamService",
          "de.tum.cit.aet.artemis.exam.service.ExamDeletionService",
          "de.tum.cit.aet.artemis.exam.service.ExamAccessService",
          "de.tum.cit.aet.artemis.core.service.messaging.InstanceMessageSendService",
          "de.tum.cit.aet.artemis.exam.repository.ExamRepository",
          "de.tum.cit.aet.artemis.exercise.service.SubmissionService",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.exam.service.ExamDateService",
          "de.tum.cit.aet.artemis.assessment.repository.TutorParticipationRepository",
          "de.tum.cit.aet.artemis.assessment.service.AssessmentDashboardService",
          "de.tum.cit.aet.artemis.exam.service.ExamRegistrationService",
          "de.tum.cit.aet.artemis.exam.service.ExamImportService",
          "de.tum.cit.aet.artemis.core.repository.CustomAuditEventRepository",
          "de.tum.cit.aet.artemis.communication.service.conversation.ChannelService",
          "de.tum.cit.aet.artemis.communication.repository.conversation.ChannelRepository",
          "de.tum.cit.aet.artemis.exercise.repository.ExerciseRepository",
          "de.tum.cit.aet.artemis.exam.service.ExamSessionService",
          "de.tum.cit.aet.artemis.exam.service.ExamLiveEventsService",
          "de.tum.cit.aet.artemis.exam.service.StudentExamService",
          "de.tum.cit.aet.artemis.exam.service.ExamUserService"
        ]
      },
      {
        "name": "addStudentToExam",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long",
          "java.lang.String"
        ]
      },
      {
        "name": "createExam",
        "parameterTypes": [
          "java.lang.Long",
          "de.tum.cit.aet.artemis.exam.domain.Exam"
        ]
      },
      {
        "name": "createExamAnnouncement",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long",
          "java.lang.String"
        ]
      },
      {
        "name": "deleteExam",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "evaluateQuizExercises",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "generateMissingStudentExams",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "generateStudentExams",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "getDeletionSummary",
        "parameterTypes": [
          "long",
          "long"
        ]
      },
      {
        "name": "getExam",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long",
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "getExamForAssessmentDashboard",
        "parameterTypes": [
          "long",
          "long"
        ]
      },
      {
        "name": "getExamStatistics",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "getExamTitle",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getExamsForCourse",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getLatestIndividualEndDateOfExam",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "getOwnStudentExam",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "getSidebarDataForRealExams",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getStatsForExamAssessmentDashboard",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "registerCourseStudents",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "updateExam",
        "parameterTypes": [
          "java.lang.Long",
          "de.tum.cit.aet.artemis.exam.domain.Exam"
        ]
      },
      {
        "name": "updateExamWorkingTime",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long",
          "int"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.web.ExamUserResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.web.ExerciseGroupResource",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.repository.ExerciseGroupRepository",
          "de.tum.cit.aet.artemis.exam.service.ExamAccessService",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.exercise.service.ExerciseDeletionService",
          "org.springframework.boot.actuate.audit.AuditEventRepository",
          "de.tum.cit.aet.artemis.exam.repository.ExamRepository",
          "de.tum.cit.aet.artemis.exam.service.ExamImportService"
        ]
      },
      {
        "name": "createExerciseGroup",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long",
          "de.tum.cit.aet.artemis.exam.domain.ExerciseGroup"
        ]
      },
      {
        "name": "deleteExerciseGroup",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long",
          "java.lang.Long",
          "boolean"
        ]
      },
      {
        "name": "getExerciseGroup",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "updateExerciseGroup",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long",
          "de.tum.cit.aet.artemis.exam.domain.ExerciseGroup"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.web.StudentExamResource",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.service.ExamAccessService",
          "de.tum.cit.aet.artemis.exam.service.ExamDeletionService",
          "de.tum.cit.aet.artemis.exam.service.StudentExamService",
          "de.tum.cit.aet.artemis.exam.service.StudentExamAccessService",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "org.springframework.boot.actuate.audit.AuditEventRepository",
          "de.tum.cit.aet.artemis.exam.repository.StudentExamRepository",
          "de.tum.cit.aet.artemis.exam.service.ExamDateService",
          "de.tum.cit.aet.artemis.exam.service.ExamSessionService",
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository",
          "de.tum.cit.aet.artemis.exam.repository.ExamRepository",
          "de.tum.cit.aet.artemis.quiz.repository.SubmittedAnswerRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.exam.service.ExamService",
          "de.tum.cit.aet.artemis.communication.service.WebsocketMessagingService",
          "de.tum.cit.aet.artemis.programming.repository.SubmissionPolicyRepository",
          "de.tum.cit.aet.artemis.exam.service.ExamLiveEventsService",
          "de.tum.cit.aet.artemis.exam.repository.ExamLiveEventRepository"
        ]
      },
      {
        "name": "createTestRun",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long",
          "de.tum.cit.aet.artemis.exam.domain.StudentExam"
        ]
      },
      {
        "name": "findAllTestRunsForExam",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "getExamLiveEvents",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "getExerciseStartStatus",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "getLongestWorkingTimeForExam",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "getStudentExam",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "getStudentExamForConduction",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long",
          "java.lang.Long",
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "getStudentExamForSummary",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "getStudentExamGradesForSummary",
        "parameterTypes": [
          "long",
          "long",
          "long",
          "java.lang.Long"
        ]
      },
      {
        "name": "getStudentExamsForCoursePerUser",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getStudentExamsForExam",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "getTestRunForConduction",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long",
          "java.lang.Long",
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "startExercises",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "submitStudentExam",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long",
          "de.tum.cit.aet.artemis.exam.domain.StudentExam"
        ]
      },
      {
        "name": "updateWorkingTime",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long",
          "java.lang.Long",
          "java.lang.Integer"
        ]
      },
      {
        "name": "deleteTestRun",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long",
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.web.admin.AdminExamResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.BaseExercise",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getAssessmentDueDate",
        "parameterTypes": []
      },
      {
        "name": "getAssessmentType",
        "parameterTypes": []
      },
      {
        "name": "getBonusPoints",
        "parameterTypes": []
      },
      {
        "name": "getDifficulty",
        "parameterTypes": []
      },
      {
        "name": "getDueDate",
        "parameterTypes": []
      },
      {
        "name": "getExampleSolutionPublicationDate",
        "parameterTypes": []
      },
      {
        "name": "getMaxPoints",
        "parameterTypes": []
      },
      {
        "name": "getMode",
        "parameterTypes": []
      },
      {
        "name": "getReleaseDate",
        "parameterTypes": []
      },
      {
        "name": "getShortName",
        "parameterTypes": []
      },
      {
        "name": "getStartDate",
        "parameterTypes": []
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "isTeamMode",
        "parameterTypes": []
      },
      {
        "name": "isVisibleToStudents",
        "parameterTypes": []
      },
      {
        "name": "setAssessmentDueDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setAssessmentType",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.AssessmentType"
        ]
      },
      {
        "name": "setBonusPoints",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setDifficulty",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.DifficultyLevel"
        ]
      },
      {
        "name": "setDueDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setExampleSolutionPublicationDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setMaxPoints",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setMode",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.ExerciseMode"
        ]
      },
      {
        "name": "setProjectKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReleaseDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setShortName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStartDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSanitizedExerciseTitle",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.BaseExercise$HibernateAccessOptimizer$5W8qTmc9",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.BaseExercise$HibernateAccessOptimizer$B74MYcH7",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.BaseExercise$HibernateAccessOptimizer$BgIP3YSz",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.BaseExercise$HibernateAccessOptimizer$EMTQ26N7",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.BaseExercise$HibernateAccessOptimizer$dDNze9Uh",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.BaseExercise_",
    "fields": [
      {
        "name": "assessmentDueDate"
      },
      {
        "name": "assessmentType"
      },
      {
        "name": "bonusPoints"
      },
      {
        "name": "class_"
      },
      {
        "name": "difficulty"
      },
      {
        "name": "dueDate"
      },
      {
        "name": "exampleSolutionPublicationDate"
      },
      {
        "name": "maxPoints"
      },
      {
        "name": "mode"
      },
      {
        "name": "releaseDate"
      },
      {
        "name": "shortName"
      },
      {
        "name": "startDate"
      },
      {
        "name": "title"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.DifficultyLevel",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Exercise",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getAllowComplaintsForAutomaticAssessments",
        "parameterTypes": []
      },
      {
        "name": "getAllowFeedbackRequests",
        "parameterTypes": []
      },
      {
        "name": "getAttachments",
        "parameterTypes": []
      },
      {
        "name": "getAverageRating",
        "parameterTypes": []
      },
      {
        "name": "getCategories",
        "parameterTypes": []
      },
      {
        "name": "getChannelName",
        "parameterTypes": []
      },
      {
        "name": "getCompetencyLinks",
        "parameterTypes": []
      },
      {
        "name": "getCourse",
        "parameterTypes": []
      },
      {
        "name": "getExampleSubmissions",
        "parameterTypes": []
      },
      {
        "name": "getExerciseGroup",
        "parameterTypes": []
      },
      {
        "name": "getFeedbackSuggestionModule",
        "parameterTypes": []
      },
      {
        "name": "getGradingCriteria",
        "parameterTypes": []
      },
      {
        "name": "getGradingInstructions",
        "parameterTypes": []
      },
      {
        "name": "getIncludedInOverallScore",
        "parameterTypes": []
      },
      {
        "name": "getNumberOfAssessmentsOfCorrectionRounds",
        "parameterTypes": []
      },
      {
        "name": "getNumberOfComplaints",
        "parameterTypes": []
      },
      {
        "name": "getNumberOfMoreFeedbackRequests",
        "parameterTypes": []
      },
      {
        "name": "getNumberOfOpenComplaints",
        "parameterTypes": []
      },
      {
        "name": "getNumberOfOpenMoreFeedbackRequests",
        "parameterTypes": []
      },
      {
        "name": "getNumberOfParticipations",
        "parameterTypes": []
      },
      {
        "name": "getNumberOfRatings",
        "parameterTypes": []
      },
      {
        "name": "getNumberOfSubmissions",
        "parameterTypes": []
      },
      {
        "name": "getPlagiarismCases",
        "parameterTypes": []
      },
      {
        "name": "getPlagiarismDetectionConfig",
        "parameterTypes": []
      },
      {
        "name": "getPresentationScoreEnabled",
        "parameterTypes": []
      },
      {
        "name": "getProblemStatement",
        "parameterTypes": []
      },
      {
        "name": "getSecondCorrectionEnabled",
        "parameterTypes": []
      },
      {
        "name": "getStudentAssignedTeamId",
        "parameterTypes": []
      },
      {
        "name": "getStudentParticipations",
        "parameterTypes": []
      },
      {
        "name": "getTeamAssignmentConfig",
        "parameterTypes": []
      },
      {
        "name": "getTeams",
        "parameterTypes": []
      },
      {
        "name": "getTestRunParticipationsExist",
        "parameterTypes": []
      },
      {
        "name": "getTotalNumberOfAssessments",
        "parameterTypes": []
      },
      {
        "name": "getTutorParticipations",
        "parameterTypes": []
      },
      {
        "name": "isGradingInstructionFeedbackUsed",
        "parameterTypes": []
      },
      {
        "name": "isStudentAssignedTeamIdComputed",
        "parameterTypes": []
      },
      {
        "name": "setAllowComplaintsForAutomaticAssessments",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAllowFeedbackRequests",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAttachments",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setCategories",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setChannelName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCompetencyLinks",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setCourse",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.Course"
        ]
      },
      {
        "name": "setExampleSubmissions",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setExerciseGroup",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.domain.ExerciseGroup"
        ]
      },
      {
        "name": "setFeedbackSuggestionModule",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGradingCriteria",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setGradingInstructions",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIncludedInOverallScore",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.IncludedInOverallScore"
        ]
      },
      {
        "name": "setNumberOfAssessmentsOfCorrectionRounds",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.dto.DueDateStat[]"
        ]
      },
      {
        "name": "setPlagiarismCases",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setPlagiarismDetectionConfig",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismDetectionConfig"
        ]
      },
      {
        "name": "setPresentationScoreEnabled",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setProblemStatement",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProjectKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSecondCorrectionEnabled",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSecondCorrectionEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setStudentAssignedTeamIdComputed",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setStudentParticipations",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setTeamAssignmentConfig",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.TeamAssignmentConfig"
        ]
      },
      {
        "name": "setTeams",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setTutorParticipations",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "addExampleSubmission",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.ExampleSubmission"
        ]
      },
      {
        "name": "addGradingCriteria",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.GradingCriterion"
        ]
      },
      {
        "name": "addParticipation",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.participation.StudentParticipation"
        ]
      },
      {
        "name": "areFeedbackSuggestionsEnabled",
        "parameterTypes": []
      },
      {
        "name": "checkCourseAndExerciseGroupExclusivity",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "copyGradingCriteria",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "course",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.Course"
        ]
      },
      {
        "name": "findParticipation",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getCompletionDate",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "getCourseViaExerciseGroupOrCourseMember",
        "parameterTypes": []
      },
      {
        "name": "getExam",
        "parameterTypes": []
      },
      {
        "name": "getNumberOfCorrectionRounds",
        "parameterTypes": []
      },
      {
        "name": "getParticipationStartDate",
        "parameterTypes": []
      },
      {
        "name": "isCourseExercise",
        "parameterTypes": []
      },
      {
        "name": "isExamExercise",
        "parameterTypes": []
      },
      {
        "name": "isExampleSolutionPublished",
        "parameterTypes": []
      },
      {
        "name": "isReleased",
        "parameterTypes": []
      },
      {
        "name": "isTestExamExercise",
        "parameterTypes": []
      },
      {
        "name": "participations",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "removeExampleSubmission",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.ExampleSubmission"
        ]
      },
      {
        "name": "removeParticipation",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.participation.StudentParticipation"
        ]
      },
      {
        "name": "setAverageRating",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setGradingInstructionFeedbackUsed",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNumberOfComplaints",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setNumberOfMoreFeedbackRequests",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setNumberOfOpenComplaints",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setNumberOfOpenMoreFeedbackRequests",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setNumberOfParticipations",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setNumberOfRatings",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setNumberOfSubmissions",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.dto.DueDateStat"
        ]
      },
      {
        "name": "setStudentAssignedTeamId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setTestRunParticipationsExist",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setTotalNumberOfAssessments",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.dto.DueDateStat"
        ]
      },
      {
        "name": "validateDates",
        "parameterTypes": []
      },
      {
        "name": "validateGeneralSettings",
        "parameterTypes": []
      },
      {
        "name": "validateScoreSettings",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Exercise$HibernateAccessOptimizer$8QMY8KYH",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Exercise$HibernateAccessOptimizer$MMzWIsTt",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Exercise$HibernateAccessOptimizer$R50NkhLQ",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Exercise$HibernateAccessOptimizer$g4p8GIcl",
    "fields": [
      {
        "name": "invocationTarget$eclo4k1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Exercise$HibernateAccessOptimizer$idU56H7m",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Exercise$HibernateAccessOptimizer$x13CTXfz",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.ExerciseLifecycle"
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.ExerciseMode",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.ExerciseMode.TEAM"
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.ExerciseType",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Exercise_",
    "fields": [
      {
        "name": "allowComplaintsForAutomaticAssessments"
      },
      {
        "name": "allowFeedbackRequests"
      },
      {
        "name": "attachments"
      },
      {
        "name": "categories"
      },
      {
        "name": "class_"
      },
      {
        "name": "competencyLinks"
      },
      {
        "name": "course"
      },
      {
        "name": "exampleSubmissions"
      },
      {
        "name": "exerciseGroup"
      },
      {
        "name": "feedbackSuggestionModule"
      },
      {
        "name": "gradingCriteria"
      },
      {
        "name": "gradingInstructions"
      },
      {
        "name": "includedInOverallScore"
      },
      {
        "name": "plagiarismCases"
      },
      {
        "name": "plagiarismDetectionConfig"
      },
      {
        "name": "presentationScoreEnabled"
      },
      {
        "name": "problemStatement"
      },
      {
        "name": "secondCorrectionEnabled"
      },
      {
        "name": "studentParticipations"
      },
      {
        "name": "teamAssignmentConfig"
      },
      {
        "name": "teams"
      },
      {
        "name": "tutorParticipations"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.IncludedInOverallScore",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.IncludedInOverallScore$1",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.InitializationState",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.InitializationState.INACTIVE"
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.InitializationState.INITIALIZED"
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Submission",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "compareTo",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getDurationInMinutes",
        "parameterTypes": []
      },
      {
        "name": "getParticipation",
        "parameterTypes": []
      },
      {
        "name": "getResults",
        "parameterTypes": []
      },
      {
        "name": "getSubmissionDate",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "isExampleSubmission",
        "parameterTypes": []
      },
      {
        "name": "isSubmitted",
        "parameterTypes": []
      },
      {
        "name": "setExampleSubmission",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setParticipation",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.participation.Participation"
        ]
      },
      {
        "name": "setResults",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSubmissionDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setSubmitted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.SubmissionType"
        ]
      },
      {
        "name": "setVersions",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Submission$HibernateAccessOptimizer$1TpiwvMk",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Submission$HibernateAccessOptimizer$QUCkyLbf",
    "fields": [
      {
        "name": "invocationTarget$i717dt0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Submission$HibernateAccessOptimizer$Uy3ADKL4",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Submission$HibernateAccessOptimizer$WNVDdoQz",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Submission$HibernateAccessOptimizer$WaHx9jOw",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Submission$HibernateAccessOptimizer$gLDATJ5Q",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Submission$HibernateAccessOptimizer$lIM1CiKp",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.SubmissionType",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.SubmissionType.INSTRUCTOR"
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.SubmissionType.TEST"
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.SubmissionVersion",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setAuthor",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "setContent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreatedDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setLastModifiedDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setSubmission",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Submission"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.SubmissionVersion$HibernateAccessOptimizer$6fW8a28g",
    "fields": [
      {
        "name": "invocationTarget$u51jnl0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.SubmissionVersion$HibernateInstantiator$v1g9oXrG",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.SubmissionVersion_",
    "fields": [
      {
        "name": "author"
      },
      {
        "name": "class_"
      },
      {
        "name": "content"
      },
      {
        "name": "createdDate"
      },
      {
        "name": "lastModifiedDate"
      },
      {
        "name": "submission"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Submission_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "exampleSubmission"
      },
      {
        "name": "participation"
      },
      {
        "name": "results"
      },
      {
        "name": "submissionDate"
      },
      {
        "name": "submitted"
      },
      {
        "name": "type"
      },
      {
        "name": "versions"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Team",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise"
        ]
      },
      {
        "name": "setImage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastModifiedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastModifiedDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOwner",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "setShortName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStudents",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Team$HibernateAccessOptimizer$t5c2h6TD",
    "fields": [
      {
        "name": "invocationTarget$q3d4360"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Team$HibernateInstantiator$FaIhS9tB",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.TeamAssignmentConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise"
        ]
      },
      {
        "name": "setMaxTeamSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMinTeamSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getMaxTeamSize",
        "parameterTypes": []
      },
      {
        "name": "getMinTeamSize",
        "parameterTypes": []
      },
      {
        "name": "copyTeamAssignmentConfig",
        "parameterTypes": []
      },
      {
        "name": "getExercise",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.TeamAssignmentConfig$HibernateAccessOptimizer$ZjRj8KpW",
    "fields": [
      {
        "name": "invocationTarget$pk7us00"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.TeamAssignmentConfig$HibernateInstantiator$AcTWbgLc",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.TeamAssignmentConfig_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "exercise"
      },
      {
        "name": "maxTeamSize"
      },
      {
        "name": "minTeamSize"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Team_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "exercise"
      },
      {
        "name": "image"
      },
      {
        "name": "name"
      },
      {
        "name": "owner"
      },
      {
        "name": "shortName"
      },
      {
        "name": "students"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.package-info"
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.participation.IdToPresentationScoreSum",
    "queryAllDeclaredConstructors": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.participation.Participant",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExternalLLMUsageAccepted",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setLastModifiedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastModifiedDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setSavedPosts",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      }
    ],
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.participation.Participation",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getAttempt",
        "parameterTypes": []
      },
      {
        "name": "getIndividualDueDate",
        "parameterTypes": []
      },
      {
        "name": "getInitializationDate",
        "parameterTypes": []
      },
      {
        "name": "getInitializationState",
        "parameterTypes": []
      },
      {
        "name": "getSubmissionCount",
        "parameterTypes": []
      },
      {
        "name": "getSubmissions",
        "parameterTypes": []
      },
      {
        "name": "isTestRun",
        "parameterTypes": []
      },
      {
        "name": "setAttempt",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setIndividualDueDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setInitializationDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setInitializationState",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.InitializationState"
        ]
      },
      {
        "name": "setStudent",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "setSubmissions",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setTeam",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Team"
        ]
      },
      {
        "name": "setTestRun",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSubmissionCount",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setTestRun",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "addPracticePrefixIfTestRun",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "addSubmission",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Submission"
        ]
      },
      {
        "name": "findLatestResult",
        "parameterTypes": []
      },
      {
        "name": "findLatestSubmission",
        "parameterTypes": []
      },
      {
        "name": "initializationDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "initializationState",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.InitializationState"
        ]
      },
      {
        "name": "isPracticeMode",
        "parameterTypes": []
      },
      {
        "name": "setPracticeMode",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "submissions",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.participation.Participation$HibernateAccessOptimizer$6zsyANfD",
    "fields": [
      {
        "name": "invocationTarget$nufvq10"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.participation.Participation$HibernateAccessOptimizer$TZdBPTre",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.participation.Participation$HibernateAccessOptimizer$gk3DtAiv",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.participation.Participation$HibernateAccessOptimizer$kCcgf6dX",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.participation.ParticipationInterface",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise"
        ]
      },
      {
        "name": "setStudent",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "setTeam",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Team"
        ]
      },
      {
        "name": "setTestRun",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.participation.Participation_",
    "fields": [
      {
        "name": "attempt"
      },
      {
        "name": "class_"
      },
      {
        "name": "exercise"
      },
      {
        "name": "individualDueDate"
      },
      {
        "name": "initializationDate"
      },
      {
        "name": "initializationState"
      },
      {
        "name": "submissions"
      },
      {
        "name": "testRun"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.participation.StudentParticipation",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getExercise",
        "parameterTypes": []
      },
      {
        "name": "getParticipantIdentifier",
        "parameterTypes": []
      },
      {
        "name": "getParticipantName",
        "parameterTypes": []
      },
      {
        "name": "getPresentationScore",
        "parameterTypes": []
      },
      {
        "name": "getStudent",
        "parameterTypes": []
      },
      {
        "name": "getTeam",
        "parameterTypes": []
      },
      {
        "name": "setExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise"
        ]
      },
      {
        "name": "setPresentationScore",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setStudent",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "setTeam",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Team"
        ]
      },
      {
        "name": "setTestRun",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.participation.StudentParticipation$HibernateAccessOptimizer$5OGPtesb",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.participation.StudentParticipation$HibernateAccessOptimizer$y4jHQ2nK",
    "fields": [
      {
        "name": "invocationTarget$fheq6a1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.participation.StudentParticipation$HibernateInstantiator$4oIghCUR",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.participation.StudentParticipation_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "presentationScore"
      },
      {
        "name": "student"
      },
      {
        "name": "team"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.participation.package-info"
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.dto.ExerciseDetailsDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "exercise",
        "parameterTypes": []
      },
      {
        "name": "irisSettings",
        "parameterTypes": []
      },
      {
        "name": "plagiarismCaseInfo",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.dto.ExerciseInformationDTO",
    "queryAllDeclaredConstructors": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.dto.ExerciseManagementStatisticsDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "averageScoreOfExercise",
        "parameterTypes": []
      },
      {
        "name": "maxPointsOfExercise",
        "parameterTypes": []
      },
      {
        "name": "numberOfExerciseScores",
        "parameterTypes": []
      },
      {
        "name": "numberOfParticipations",
        "parameterTypes": []
      },
      {
        "name": "numberOfPosts",
        "parameterTypes": []
      },
      {
        "name": "numberOfResolvedPosts",
        "parameterTypes": []
      },
      {
        "name": "numberOfStudentsOrTeamsInCourse",
        "parameterTypes": []
      },
      {
        "name": "scoreDistribution",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.dto.ExerciseScoresAggregatedInformation",
    "queryAllDeclaredConstructors": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.dto.ExerciseTypeCountDTO",
    "allRecordComponents": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.ExerciseType",
          "long"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Long"
        ]
      }
    ],
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.dto.ExerciseTypeMetricsEntry",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class",
          "long"
        ]
      }
    ],
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.dto.GradeScoreDTO",
    "queryAllDeclaredConstructors": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.dto.ParticipationDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "exercise",
        "parameterTypes": []
      },
      {
        "name": "id",
        "parameterTypes": []
      },
      {
        "name": "submissionCount",
        "parameterTypes": []
      },
      {
        "name": "testRun",
        "parameterTypes": []
      },
      {
        "name": "type",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.dto.ParticipationDTO$CourseDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "accuracyOfScores",
        "parameterTypes": []
      },
      {
        "name": "id",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.dto.ParticipationDTO$ParticipationExerciseDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "assessmentDueDate",
        "parameterTypes": []
      },
      {
        "name": "assessmentType",
        "parameterTypes": []
      },
      {
        "name": "course",
        "parameterTypes": []
      },
      {
        "name": "dueDate",
        "parameterTypes": []
      },
      {
        "name": "exerciseType",
        "parameterTypes": []
      },
      {
        "name": "id",
        "parameterTypes": []
      },
      {
        "name": "maxPoints",
        "parameterTypes": []
      },
      {
        "name": "type",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.dto.ParticipationResultDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "participationId",
        "parameterTypes": []
      },
      {
        "name": "rated",
        "parameterTypes": []
      },
      {
        "name": "score",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.dto.StudentDTO",
    "allRecordComponents": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "long",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ],
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.dto.SubmissionDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "buildFailed",
        "parameterTypes": []
      },
      {
        "name": "buildStartDate",
        "parameterTypes": []
      },
      {
        "name": "commitHash",
        "parameterTypes": []
      },
      {
        "name": "estimatedCompletionDate",
        "parameterTypes": []
      },
      {
        "name": "exampleSubmission",
        "parameterTypes": []
      },
      {
        "name": "id",
        "parameterTypes": []
      },
      {
        "name": "isProcessing",
        "parameterTypes": []
      },
      {
        "name": "participation",
        "parameterTypes": []
      },
      {
        "name": "submissionDate",
        "parameterTypes": []
      },
      {
        "name": "submissionExerciseType",
        "parameterTypes": []
      },
      {
        "name": "submitted",
        "parameterTypes": []
      },
      {
        "name": "type",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.dto.SubmissionExportOptionsDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.dto.SubmissionPatch"
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.repository.ExerciseMetricsRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.repository.ExerciseRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "countActiveExercisesGroupByExerciseType",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "countActiveStudentsInExercisesWithDueDateBetweenGroupByExerciseType",
        "parameterTypes": [
          "java.time.ZonedDateTime",
          "java.time.ZonedDateTime",
          "java.util.List"
        ]
      },
      {
        "name": "countActiveStudentsInExercisesWithReleaseDateBetweenGroupByExerciseType",
        "parameterTypes": [
          "java.time.ZonedDateTime",
          "java.time.ZonedDateTime",
          "java.util.List"
        ]
      },
      {
        "name": "countExercisesGroupByExerciseType",
        "parameterTypes": []
      },
      {
        "name": "countExercisesWithEndDateBetweenGroupByExerciseType",
        "parameterTypes": [
          "java.time.ZonedDateTime",
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "countExercisesWithReleaseDateBetweenGroupByExerciseType",
        "parameterTypes": [
          "java.time.ZonedDateTime",
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "countStudentsInExercisesWithDueDateBetweenGroupByExerciseType",
        "parameterTypes": [
          "java.time.ZonedDateTime",
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "countStudentsInExercisesWithReleaseDateBetweenGroupByExerciseType",
        "parameterTypes": [
          "java.time.ZonedDateTime",
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "findAllCategoryNames",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findAllExercisesByCourseId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findAllExercisesWithCurrentOrUpcomingAssessmentDueDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "findAllExercisesWithCurrentOrUpcomingReleaseDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "findAllIdsByCourseId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findByCourseIdWithCategories",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findByCourseIds",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "findByIdWithDetailsForStudent",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findByIdWithEagerExampleSubmissionsElseThrow",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findWithCompetenciesByIdElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getActiveExercisesForCourseManagementOverview",
        "parameterTypes": [
          "java.lang.Long",
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "getExercisesForCourseManagementOverview",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getPastExercisesForCourseManagementOverview",
        "parameterTypes": [
          "java.lang.Long",
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "getStudentParticipationCountById",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "isExamExercise",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "countByCourseIdGroupedByType",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findAllReleasedExercisesByCourseId",
        "parameterTypes": [
          "long",
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "findByExerciseIdsWithCategories",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "findByIdWithCategoriesAndTeamAssignmentConfigElseThrow",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findByIdWithEagerExampleSubmissions",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findByIdWithStudentParticipationsElseThrow",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getExerciseTitle",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getTeamParticipationCountById",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.repository.ParticipationRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "removeIndividualDueDatesIfBeforeDueDate",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise",
          "java.time.ZonedDateTime"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getAllParticipationsOfUserInExercises",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User",
          "java.util.Set",
          "boolean"
        ]
      },
      {
        "name": "addNumberOfExamExerciseParticipations",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.domain.ExerciseGroup"
        ]
      },
      {
        "name": "checkTestRunsExist",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise"
        ]
      },
      {
        "name": "countSubmissionsPerParticipationByExerciseIdAsMap",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByIdWithLatestSubmissionsResultsFeedbackElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByStudentExamWithEagerLatestSubmissionsResult",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.domain.StudentExam",
          "boolean"
        ]
      },
      {
        "name": "findByStudentExamWithEagerSubmissions",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.domain.StudentExam",
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.repository.SubmissionRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "initializeSubmission",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.participation.Participation",
          "de.tum.cit.aet.artemis.exercise.domain.Exercise",
          "de.tum.cit.aet.artemis.exercise.domain.SubmissionType"
        ]
      },
      {
        "name": "countSubmissionsForExercise",
        "parameterTypes": [
          "long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.repository.SubmissionVersionRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.repository.TeamRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "findAllByExerciseIdWithEagerStudents",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise",
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.service.ExerciseDateService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.repository.ParticipationRepository",
          "java.util.Optional",
          "java.util.Optional"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.service.ExerciseDeletionService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.repository.ExerciseRepository",
          "de.tum.cit.aet.artemis.exercise.service.ParticipationDeletionService",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseDeletionService",
          "de.tum.cit.aet.artemis.quiz.service.QuizExerciseService",
          "de.tum.cit.aet.artemis.assessment.repository.TutorParticipationRepository",
          "de.tum.cit.aet.artemis.assessment.service.ExampleSubmissionService",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.communication.repository.conversation.ChannelRepository",
          "de.tum.cit.aet.artemis.communication.service.conversation.ChannelService",
          "java.util.Optional",
          "java.util.Optional"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.service.ExerciseImportService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.service.ExerciseLifecycleService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.scheduling.TaskScheduler"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.service.ExerciseScoresChartService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.service.ExerciseService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.repository.ExerciseRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "org.springframework.boot.actuate.audit.AuditEventRepository",
          "de.tum.cit.aet.artemis.exercise.repository.TeamRepository",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseRepository",
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ResultRepository",
          "de.tum.cit.aet.artemis.exercise.repository.SubmissionRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ParticipantScoreRepository",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ComplaintRepository",
          "de.tum.cit.aet.artemis.assessment.service.TutorLeaderboardService",
          "de.tum.cit.aet.artemis.assessment.repository.ComplaintResponseRepository",
          "de.tum.cit.aet.artemis.assessment.repository.GradingCriterionRepository",
          "de.tum.cit.aet.artemis.assessment.repository.FeedbackRepository",
          "de.tum.cit.aet.artemis.assessment.service.RatingService",
          "de.tum.cit.aet.artemis.exercise.service.ExerciseDateService",
          "de.tum.cit.aet.artemis.assessment.repository.ExampleSubmissionRepository",
          "de.tum.cit.aet.artemis.quiz.service.QuizBatchService",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.communication.service.notifications.GroupNotificationScheduleService",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.exercise.service.ParticipationFilterService"
        ]
      },
      {
        "name": "checkExerciseIfStructuredGradingInstructionFeedbackUsed",
        "parameterTypes": [
          "java.util.Set",
          "de.tum.cit.aet.artemis.exercise.domain.Exercise"
        ]
      },
      {
        "name": "filterExerciseForCourseDashboard",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise",
          "java.util.Set",
          "boolean"
        ]
      },
      {
        "name": "filterExercisesForCourse",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.Course",
          "de.tum.cit.aet.artemis.core.domain.User",
          "boolean"
        ]
      },
      {
        "name": "findOneWithDetailsForStudents",
        "parameterTypes": [
          "java.lang.Long",
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "getStatisticsForCourseManagementOverview",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Integer"
        ]
      },
      {
        "name": "loadExerciseDetailsIfNecessary",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.Course",
          "de.tum.cit.aet.artemis.core.domain.User",
          "boolean"
        ]
      },
      {
        "name": "logDeletion",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise",
          "de.tum.cit.aet.artemis.core.domain.Course",
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "saveWithCompetencyLinks",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise",
          "java.util.function.Function"
        ]
      },
      {
        "name": "checkExampleSubmissions",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise"
        ]
      },
      {
        "name": "checkForConversionBetweenExamAndCourseExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise",
          "de.tum.cit.aet.artemis.exercise.domain.Exercise",
          "java.lang.String"
        ]
      },
      {
        "name": "filterOutExercisesThatUserShouldNotSee",
        "parameterTypes": [
          "java.util.Set",
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "loadExercisesWithInformationForDashboard",
        "parameterTypes": [
          "java.util.Set",
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "logUpdate",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise",
          "de.tum.cit.aet.artemis.core.domain.Course",
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "notifyAboutExerciseChanges",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise",
          "de.tum.cit.aet.artemis.exercise.domain.Exercise",
          "java.lang.String"
        ]
      },
      {
        "name": "populateCommonStatistics",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise",
          "boolean"
        ]
      },
      {
        "name": "updatePointsInRelatedParticipantScores",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise",
          "de.tum.cit.aet.artemis.exercise.domain.Exercise"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.service.ExerciseService$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.service.ExerciseSpecificationService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.service.ExerciseWithSubmissionsExportService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.service.IExerciseScheduleService",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "applicationReady",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.service.ParticipationAuthorizationCheckService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.exercise.repository.TeamRepository",
          "de.tum.cit.aet.artemis.exercise.service.ExerciseDateService",
          "de.tum.cit.aet.artemis.programming.repository.SubmissionPolicyRepository",
          "de.tum.cit.aet.artemis.exercise.repository.SubmissionRepository",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.service.ParticipationDeletionService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ParticipantScoreRepository",
          "de.tum.cit.aet.artemis.exercise.repository.SubmissionRepository",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.exercise.repository.ParticipationRepository",
          "de.tum.cit.aet.artemis.assessment.repository.TeamScoreRepository",
          "de.tum.cit.aet.artemis.assessment.service.ResultService",
          "de.tum.cit.aet.artemis.assessment.repository.StudentScoreRepository",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseStudentParticipationRepository",
          "java.util.Optional",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.programming.service.GitService",
          "de.tum.cit.aet.artemis.programming.service.BuildLogEntryService",
          "de.tum.cit.aet.artemis.programming.service.ParticipationVcsAccessTokenService",
          "java.util.Optional"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.service.ParticipationFilterService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.service.SubmissionFilterService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.service.ParticipationLifecycleService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.scheduling.TaskScheduler"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.service.ParticipationService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.Optional",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.exercise.repository.ParticipationRepository",
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseStudentParticipationRepository",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseRepository",
          "de.tum.cit.aet.artemis.exercise.repository.SubmissionRepository",
          "de.tum.cit.aet.artemis.exercise.repository.TeamRepository",
          "de.tum.cit.aet.artemis.programming.service.UriService",
          "de.tum.cit.aet.artemis.programming.service.ParticipationVcsAccessTokenService",
          "de.tum.cit.aet.artemis.assessment.repository.ResultRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.service.SubmissionExportService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "exportStudentSubmissions",
        "parameterTypes": [
          "java.lang.Long",
          "de.tum.cit.aet.artemis.exercise.dto.SubmissionExportOptionsDTO"
        ]
      },
      {
        "name": "exportStudentSubmissions",
        "parameterTypes": [
          "java.lang.Long",
          "de.tum.cit.aet.artemis.exercise.dto.SubmissionExportOptionsDTO",
          "boolean",
          "java.nio.file.Path",
          "java.util.List",
          "java.util.List"
        ]
      },
      {
        "name": "exportStudentSubmissionsElseThrow",
        "parameterTypes": [
          "java.lang.Long",
          "de.tum.cit.aet.artemis.exercise.dto.SubmissionExportOptionsDTO"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.service.SubmissionFilterService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.service.SubmissionService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.repository.SubmissionRepository",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.assessment.repository.ResultRepository",
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository",
          "de.tum.cit.aet.artemis.exercise.service.ParticipationService",
          "de.tum.cit.aet.artemis.assessment.repository.FeedbackRepository",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.exercise.service.ExerciseDateService",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "de.tum.cit.aet.artemis.exercise.repository.ParticipationRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ComplaintRepository",
          "de.tum.cit.aet.artemis.assessment.service.FeedbackService",
          "java.util.Optional"
        ]
      },
      {
        "name": "addEmptyProgrammingSubmissionToParticipation",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.participation.StudentParticipation"
        ]
      },
      {
        "name": "addResultWithFeedbackByCorrectionRound",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.participation.StudentParticipation",
          "de.tum.cit.aet.artemis.core.domain.User",
          "double",
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "checkIfExerciseDueDateIsReached",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise"
        ]
      },
      {
        "name": "checkSubmissionAllowanceElseThrow",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise",
          "de.tum.cit.aet.artemis.exercise.domain.Submission",
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "checkSubmissionLockLimit",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "copyFeedbackToNewResult",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.Result",
          "de.tum.cit.aet.artemis.assessment.domain.Result"
        ]
      },
      {
        "name": "copyResultFromPreviousRoundAndSave",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Submission",
          "de.tum.cit.aet.artemis.assessment.domain.Result"
        ]
      },
      {
        "name": "createResultAfterComplaintResponse",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Submission",
          "de.tum.cit.aet.artemis.assessment.domain.Result",
          "java.util.List",
          "java.lang.String"
        ]
      },
      {
        "name": "getAllSubmissionsAssessedByTutorForCorrectionRoundAndExerciseIgnoreTestRuns",
        "parameterTypes": [
          "java.lang.Long",
          "de.tum.cit.aet.artemis.core.domain.User",
          "boolean",
          "int"
        ]
      },
      {
        "name": "getAllSubmissionsForExercise",
        "parameterTypes": [
          "java.lang.Long",
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "getAthenaSubmissionToAssess",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise",
          "boolean",
          "boolean",
          "int",
          "java.util.function.Function"
        ]
      },
      {
        "name": "getLockedSubmissions",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getLockedSubmissions",
        "parameterTypes": [
          "java.lang.Long",
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "getNextAssessableSubmission",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise",
          "boolean",
          "int"
        ]
      },
      {
        "name": "getRandomAssessableSubmission",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise",
          "boolean",
          "int"
        ]
      },
      {
        "name": "getRandomAssessableSubmission",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise",
          "boolean",
          "boolean",
          "int",
          "java.util.function.Function"
        ]
      },
      {
        "name": "getRandomAssessableSubmission",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getSubmissionsOnPageWithSize",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.dto.pageablesearch.SearchTermPageableSearchDTO",
          "java.lang.Long"
        ]
      },
      {
        "name": "getSubmissionsWithComplaintsForExercise",
        "parameterTypes": [
          "java.lang.Long",
          "boolean"
        ]
      },
      {
        "name": "getSubmissionsWithMoreFeedbackRequestsForExercise",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "hideDetails",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Submission",
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "prepareTestRunSubmissionForAssessment",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Submission"
        ]
      },
      {
        "name": "reduceParticipationSubmissionsToLatest",
        "parameterTypes": [
          "java.util.List",
          "boolean"
        ]
      },
      {
        "name": "saveNewEmptyResult",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Submission"
        ]
      },
      {
        "name": "saveNewResult",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Submission",
          "de.tum.cit.aet.artemis.assessment.domain.Result"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.service.SubmissionVersionService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.repository.SubmissionVersionRepository",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "com.fasterxml.jackson.databind.ObjectMapper"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.service.team.TeamService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.repository.TeamRepository",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.exercise.service.ParticipationDeletionService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.web.AbstractSubmissionResource",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.web.ConsistencyCheckResource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.programming.service.ConsistencyCheckService",
          "de.tum.cit.aet.artemis.exercise.repository.ExerciseRepository"
        ]
      },
      {
        "name": "checkConsistencyOfProgrammingExercise",
        "parameterTypes": [
          "long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.web.ConsistencyCheckResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.web.ExerciseResource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.service.ExerciseService",
          "de.tum.cit.aet.artemis.exercise.service.ExerciseDeletionService",
          "de.tum.cit.aet.artemis.exercise.service.ParticipationService",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.assessment.service.TutorParticipationService",
          "de.tum.cit.aet.artemis.assessment.repository.ExampleSubmissionRepository",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseRepository",
          "de.tum.cit.aet.artemis.assessment.repository.GradingCriterionRepository",
          "de.tum.cit.aet.artemis.exercise.repository.ExerciseRepository",
          "de.tum.cit.aet.artemis.quiz.service.QuizBatchService",
          "de.tum.cit.aet.artemis.exercise.repository.ParticipationRepository",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional"
        ]
      },
      {
        "name": "getExerciseDetails",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getExercise",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getExerciseForAssessmentDashboard",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getExerciseTitle",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getStatsForExerciseAssessmentDashboard",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.web.ExerciseResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.web.ExerciseScoresChartResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.web.ParticipationResource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.service.ParticipationService",
          "de.tum.cit.aet.artemis.exercise.service.ParticipationDeletionService",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseParticipationService",
          "de.tum.cit.aet.artemis.quiz.repository.QuizExerciseRepository",
          "de.tum.cit.aet.artemis.exercise.repository.ExerciseRepository",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.exercise.service.ParticipationAuthorizationCheckService",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository",
          "org.springframework.boot.actuate.audit.AuditEventRepository",
          "de.tum.cit.aet.artemis.exercise.repository.TeamRepository",
          "de.tum.cit.aet.artemis.core.service.feature.FeatureToggleService",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseStudentParticipationRepository",
          "de.tum.cit.aet.artemis.exercise.repository.SubmissionRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ResultRepository",
          "de.tum.cit.aet.artemis.exercise.service.ExerciseDateService",
          "de.tum.cit.aet.artemis.core.service.messaging.InstanceMessageSendService",
          "de.tum.cit.aet.artemis.quiz.service.QuizBatchService",
          "de.tum.cit.aet.artemis.quiz.repository.SubmittedAnswerRepository",
          "de.tum.cit.aet.artemis.quiz.service.QuizSubmissionService",
          "de.tum.cit.aet.artemis.assessment.service.GradingScaleService",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseCodeReviewFeedbackService",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.modeling.service.ModelingExerciseFeedbackService",
          "java.util.Optional"
        ]
      },
      {
        "name": "startParticipation",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getAllParticipationsForExercise",
        "parameterTypes": [
          "java.lang.Long",
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.web.ParticipationResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.web.ParticipationTeamWebsocketService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.service.WebsocketMessagingService",
          "org.springframework.messaging.simp.user.SimpUserRegistry",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository",
          "de.tum.cit.aet.artemis.exercise.repository.ExerciseRepository",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.modeling.service.ModelingSubmissionService",
          "com.hazelcast.core.HazelcastInstance"
        ]
      },
      {
        "name": "handleDisconnect",
        "parameterTypes": [
          "org.springframework.web.socket.messaging.SessionDisconnectEvent"
        ]
      },
      {
        "name": "handleUnsubscribe",
        "parameterTypes": [
          "org.springframework.web.socket.messaging.SessionUnsubscribeEvent"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.web.SubmissionResource",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.service.SubmissionService",
          "de.tum.cit.aet.artemis.exercise.repository.SubmissionRepository",
          "de.tum.cit.aet.artemis.programming.service.BuildLogEntryService",
          "de.tum.cit.aet.artemis.assessment.service.ResultService",
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.exercise.repository.ExerciseRepository",
          "de.tum.cit.aet.artemis.exercise.repository.SubmissionVersionRepository"
        ]
      },
      {
        "name": "getSubmissionsWithComplaintsForAssessmentDashboard",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getSubmissionsWithMoreFeedbackRequestForAssessmentDashboard",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.web.TeamAssignmentConfigConstraints",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.web.TeamResource",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.repository.TeamRepository",
          "de.tum.cit.aet.artemis.exercise.service.team.TeamService",
          "de.tum.cit.aet.artemis.exercise.web.TeamWebsocketService",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "de.tum.cit.aet.artemis.exercise.repository.ExerciseRepository",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.exercise.service.ParticipationDeletionService",
          "de.tum.cit.aet.artemis.exercise.service.SubmissionService",
          "org.springframework.boot.actuate.audit.AuditEventRepository",
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository",
          "de.tum.cit.aet.artemis.assessment.repository.TeamScoreRepository"
        ]
      },
      {
        "name": "getTeamsForExercise",
        "parameterTypes": [
          "long",
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.web.TeamWebsocketService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.service.WebsocketMessagingService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.web.admin.AdminExerciseResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.fileupload.api.AbstractFileModuleApi",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.fileupload.api.FileSubmissionExportApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.fileupload.service.FileUploadExerciseWithSubmissionsExportService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.fileupload.api.FileUploadApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.fileupload.repository.FileUploadSubmissionRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.fileupload.api.FileUploadImportApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.fileupload.repository.FileUploadExerciseRepository",
          "de.tum.cit.aet.artemis.fileupload.service.FileUploadExerciseImportService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.fileupload.domain.FileUploadExercise",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setExampleSolution",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFilePattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSecondCorrectionEnabled",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getExampleSolution",
        "parameterTypes": []
      },
      {
        "name": "getExerciseType",
        "parameterTypes": []
      },
      {
        "name": "getFilePattern",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.fileupload.domain.FileUploadExercise$HibernateAccessOptimizer$GbeVChEP",
    "fields": [
      {
        "name": "invocationTarget$jju3121"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.fileupload.domain.FileUploadExercise$HibernateInstantiator$Pbg50BRm",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.fileupload.domain.FileUploadExercise_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "exampleSolution"
      },
      {
        "name": "filePattern"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.fileupload.domain.FileUploadSubmission",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setFilePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersions",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "getFilePath",
        "parameterTypes": []
      },
      {
        "name": "getSubmissionExerciseType",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "onDelete",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.fileupload.domain.FileUploadSubmission$HibernateAccessOptimizer$5P7sIfaj",
    "fields": [
      {
        "name": "invocationTarget$n9lrh71"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.fileupload.domain.FileUploadSubmission$HibernateInstantiator$ingRFl8N",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.fileupload.domain.FileUploadSubmission_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "filePath"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.fileupload.repository.FileUploadExerciseRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.fileupload.repository.FileUploadSubmissionRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "findByIdWithEagerResultAndFeedbackAndAssessorAndAssessmentNoteAndParticipationResultsElseThrow",
        "parameterTypes": [
          "long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.fileupload.service.FileUploadExerciseImportService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.repository.ExampleSubmissionRepository",
          "de.tum.cit.aet.artemis.exercise.repository.SubmissionRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ResultRepository",
          "de.tum.cit.aet.artemis.fileupload.repository.FileUploadExerciseRepository",
          "de.tum.cit.aet.artemis.communication.service.conversation.ChannelService",
          "de.tum.cit.aet.artemis.assessment.service.FeedbackService",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.exercise.service.ExerciseService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.fileupload.service.FileUploadExerciseService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.service.ExerciseSpecificationService",
          "de.tum.cit.aet.artemis.fileupload.repository.FileUploadExerciseRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.fileupload.service.FileUploadExerciseWithSubmissionsExportService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.service.FileService",
          "de.tum.cit.aet.artemis.fileupload.service.FileUploadSubmissionExportService",
          "org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.fileupload.service.FileUploadSubmissionExportService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.repository.ExerciseRepository",
          "de.tum.cit.aet.artemis.core.service.ZipFileService",
          "de.tum.cit.aet.artemis.core.service.FileService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.fileupload.service.FileUploadSubmissionService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.fileupload.repository.FileUploadSubmissionRepository",
          "de.tum.cit.aet.artemis.exercise.repository.SubmissionRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ResultRepository",
          "de.tum.cit.aet.artemis.exercise.service.ParticipationService",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository",
          "de.tum.cit.aet.artemis.core.service.FileService",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.assessment.repository.FeedbackRepository",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.exercise.service.ExerciseDateService",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "de.tum.cit.aet.artemis.exercise.repository.ParticipationRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ComplaintRepository",
          "de.tum.cit.aet.artemis.assessment.service.FeedbackService",
          "java.util.Optional"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.fileupload.web.FileUploadAssessmentResource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getAssessmentBySubmissionId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.fileupload.web.FileUploadExerciseResource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.fileupload.repository.FileUploadExerciseRepository",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.core.service.course.CourseService",
          "de.tum.cit.aet.artemis.exercise.service.ExerciseService",
          "de.tum.cit.aet.artemis.exercise.service.ExerciseDeletionService",
          "de.tum.cit.aet.artemis.fileupload.service.FileUploadSubmissionExportService",
          "de.tum.cit.aet.artemis.assessment.repository.GradingCriterionRepository",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "de.tum.cit.aet.artemis.exercise.repository.ParticipationRepository",
          "de.tum.cit.aet.artemis.communication.service.notifications.GroupNotificationScheduleService",
          "de.tum.cit.aet.artemis.fileupload.service.FileUploadExerciseImportService",
          "de.tum.cit.aet.artemis.fileupload.service.FileUploadExerciseService",
          "de.tum.cit.aet.artemis.communication.service.conversation.ChannelService",
          "de.tum.cit.aet.artemis.communication.repository.conversation.ChannelRepository",
          "java.util.Optional",
          "java.util.Optional"
        ]
      },
      {
        "name": "getFileUploadExercisesForCourse",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "createFileUploadExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.fileupload.domain.FileUploadExercise"
        ]
      },
      {
        "name": "deleteFileUploadExercise",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.fileupload.web.FileUploadExerciseResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.fileupload.web.FileUploadSubmissionResource",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.repository.SubmissionRepository",
          "de.tum.cit.aet.artemis.fileupload.service.FileUploadSubmissionService",
          "de.tum.cit.aet.artemis.fileupload.repository.FileUploadExerciseRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.exercise.repository.ExerciseRepository",
          "de.tum.cit.aet.artemis.assessment.repository.GradingCriterionRepository",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository",
          "de.tum.cit.aet.artemis.fileupload.repository.FileUploadSubmissionRepository",
          "de.tum.cit.aet.artemis.communication.service.notifications.SingleUserNotificationService"
        ]
      },
      {
        "name": "createFileUploadSubmission",
        "parameterTypes": [
          "long",
          "de.tum.cit.aet.artemis.fileupload.domain.FileUploadSubmission",
          "org.springframework.web.multipart.MultipartFile"
        ]
      },
      {
        "name": "getAllFileUploadSubmissions",
        "parameterTypes": [
          "java.lang.Long",
          "boolean",
          "boolean",
          "int"
        ]
      },
      {
        "name": "getDataForFileUpload",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getFileUploadSubmissionWithoutAssessment",
        "parameterTypes": [
          "java.lang.Long",
          "boolean",
          "int"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.api.AbstractIrisApi",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.api.IrisCompetencyApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.service.IrisCompetencyGenerationService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.api.IrisLectureApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.service.pyris.PyrisWebhookService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.api.IrisLectureUnitAutoIngestionApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.service.IrisLectureUnitAutoIngestionService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.api.IrisSettingsApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.repository.IrisExerciseSettingsRepository",
          "de.tum.cit.aet.artemis.iris.service.settings.IrisSettingsService",
          "de.tum.cit.aet.artemis.iris.repository.IrisSettingsRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.api.PyrisEventApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.service.pyris.PyrisEventService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.api.PyrisFaqApi",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.config.PyrisAuthorizationInterceptor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "intercept",
        "parameterTypes": [
          "org.springframework.http.HttpRequest",
          "byte[]",
          "org.springframework.http.client.ClientHttpRequestExecution"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.dao.IrisChatSessionDAO",
    "queryAllDeclaredConstructors": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.message.IrisJsonMessageContent",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setJsonContent",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.message.IrisJsonMessageContent$HibernateAccessOptimizer$fka9S2Ji",
    "fields": [
      {
        "name": "invocationTarget$dgjo6n0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.message.IrisJsonMessageContent$HibernateInstantiator$0x4DUFTb",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.message.IrisJsonMessageContent_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "jsonContent"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.message.IrisMessage",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setContent",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setHelpful",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSender",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.domain.message.IrisMessageSender"
        ]
      },
      {
        "name": "setSentAt",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setSession",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.domain.session.IrisSession"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.message.IrisMessage$HibernateAccessOptimizer$HI0flTOi",
    "fields": [
      {
        "name": "invocationTarget$980hc21"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.message.IrisMessage$HibernateInstantiator$A2oCKkiC",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.message.IrisMessageContent",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setMessage",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.domain.message.IrisMessage"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.message.IrisMessageContent$HibernateAccessOptimizer$5WwDGb5r",
    "fields": [
      {
        "name": "invocationTarget$tcme7q0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.message.IrisMessageContent_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "message"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.message.IrisMessageSender"
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.message.IrisMessageSender.LLM"
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.message.IrisMessageSender.USER"
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.message.IrisMessage_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "content"
      },
      {
        "name": "helpful"
      },
      {
        "name": "sender"
      },
      {
        "name": "sentAt"
      },
      {
        "name": "session"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.message.IrisTextMessageContent",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setTextContent",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.message.IrisTextMessageContent$HibernateAccessOptimizer$53tlf1H7",
    "fields": [
      {
        "name": "invocationTarget$70bh4p0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.message.IrisTextMessageContent$HibernateInstantiator$5kNNJDSK",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.message.IrisTextMessageContent_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "textContent"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.message.package-info"
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisChatSession",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setUserId",
        "parameterTypes": [
          "long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisChatSession$HibernateAccessOptimizer$mtCtOEPs",
    "fields": [
      {
        "name": "invocationTarget$4rpc930"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisChatSession_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "userId"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisCourseChatSession",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCourseId",
        "parameterTypes": [
          "long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisCourseChatSession$HibernateAccessOptimizer$6YJEYOOp",
    "fields": [
      {
        "name": "invocationTarget$mgsmrn0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisCourseChatSession$HibernateInstantiator$Oh0GZvTA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisCourseChatSession_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "courseId"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisLectureChatSession",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setLectureId",
        "parameterTypes": [
          "long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisLectureChatSession$HibernateAccessOptimizer$OygsqtHi",
    "fields": [
      {
        "name": "invocationTarget$dkrv911"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisLectureChatSession$HibernateInstantiator$h8Xlkkdq",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisLectureChatSession_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "lectureId"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisProgrammingExerciseChatSession",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setExerciseId",
        "parameterTypes": [
          "long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisProgrammingExerciseChatSession$HibernateAccessOptimizer$IgQyYjxw",
    "fields": [
      {
        "name": "invocationTarget$k56j931"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisProgrammingExerciseChatSession$HibernateInstantiator$pca1Xvjs",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisProgrammingExerciseChatSession_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "exerciseId"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisSession",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setCreationDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setLatestSuggestions",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMessages",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisSession$HibernateAccessOptimizer$51pj1lf2",
    "fields": [
      {
        "name": "invocationTarget$08m04l0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisSession_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "creationDate"
      },
      {
        "name": "latestSuggestions"
      },
      {
        "name": "messages"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisTextExerciseChatSession",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setExerciseId",
        "parameterTypes": [
          "long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisTextExerciseChatSession$HibernateAccessOptimizer$2dZ8Pj2k",
    "fields": [
      {
        "name": "invocationTarget$ogut400"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisTextExerciseChatSession$HibernateInstantiator$SxaS1mT6",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisTextExerciseChatSession_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "exerciseId"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisTutorSuggestionSession",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setPostId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisTutorSuggestionSession$HibernateAccessOptimizer$XcNejy8K",
    "fields": [
      {
        "name": "invocationTarget$efr89s1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisTutorSuggestionSession$HibernateInstantiator$gc3XNjx9",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisTutorSuggestionSession_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "postId"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.package-info"
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.HasEnabledCategories",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisCompetencyGenerationSubSettings",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisCompetencyGenerationSubSettings$HibernateAccessOptimizer$mMlgQshA",
    "fields": [
      {
        "name": "invocationTarget$t8no1b0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisCompetencyGenerationSubSettings$HibernateInstantiator$OwTk7ekY",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisCompetencyGenerationSubSettings_",
    "fields": [
      {
        "name": "class_"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisCourseChatSubSettings",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getCustomInstructions",
        "parameterTypes": []
      },
      {
        "name": "getRateLimit",
        "parameterTypes": []
      },
      {
        "name": "getRateLimitTimeframeHours",
        "parameterTypes": []
      },
      {
        "name": "setCustomInstructions",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRateLimit",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setRateLimitTimeframeHours",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisCourseChatSubSettings$HibernateAccessOptimizer$qOeJIgAk",
    "fields": [
      {
        "name": "invocationTarget$2er5j81"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisCourseChatSubSettings$HibernateInstantiator$xXhjWnWn",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisCourseChatSubSettings_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "customInstructions"
      },
      {
        "name": "rateLimit"
      },
      {
        "name": "rateLimitTimeframeHours"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisCourseSettings",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getCourseId",
        "parameterTypes": []
      },
      {
        "name": "getIrisCompetencyGenerationSettings",
        "parameterTypes": []
      },
      {
        "name": "getIrisCourseChatSettings",
        "parameterTypes": []
      },
      {
        "name": "getIrisFaqIngestionSettings",
        "parameterTypes": []
      },
      {
        "name": "getIrisLectureChatSettings",
        "parameterTypes": []
      },
      {
        "name": "getIrisLectureIngestionSettings",
        "parameterTypes": []
      },
      {
        "name": "getIrisProgrammingExerciseChatSettings",
        "parameterTypes": []
      },
      {
        "name": "getIrisTextExerciseChatSettings",
        "parameterTypes": []
      },
      {
        "name": "getIrisTutorSuggestionSettings",
        "parameterTypes": []
      },
      {
        "name": "setCourseId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setIrisCompetencyGenerationSettings",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.domain.settings.IrisCompetencyGenerationSubSettings"
        ]
      },
      {
        "name": "setIrisCourseChatSettings",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.domain.settings.IrisCourseChatSubSettings"
        ]
      },
      {
        "name": "setIrisFaqIngestionSettings",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.domain.settings.IrisFaqIngestionSubSettings"
        ]
      },
      {
        "name": "setIrisLectureChatSettings",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.domain.settings.IrisLectureChatSubSettings"
        ]
      },
      {
        "name": "setIrisLectureIngestionSettings",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.domain.settings.IrisLectureIngestionSubSettings"
        ]
      },
      {
        "name": "setIrisProgrammingExerciseChatSettings",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.domain.settings.IrisProgrammingExerciseChatSubSettings"
        ]
      },
      {
        "name": "setIrisTextExerciseChatSettings",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.domain.settings.IrisTextExerciseChatSubSettings"
        ]
      },
      {
        "name": "setIrisTutorSuggestionSettings",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.domain.settings.IrisTutorSuggestionSubSettings"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisCourseSettings$HibernateAccessOptimizer$44jXOVjL",
    "fields": [
      {
        "name": "invocationTarget$mc3i0k0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisCourseSettings$HibernateInstantiator$g1KWXHEX",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisCourseSettings_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "courseId"
      },
      {
        "name": "irisCompetencyGenerationSettings"
      },
      {
        "name": "irisCourseChatSettings"
      },
      {
        "name": "irisFaqIngestionSettings"
      },
      {
        "name": "irisLectureChatSettings"
      },
      {
        "name": "irisLectureIngestionSettings"
      },
      {
        "name": "irisProgrammingExerciseChatSettings"
      },
      {
        "name": "irisTextExerciseChatSettings"
      },
      {
        "name": "irisTutorSuggestionSettings"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisExerciseSettings",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setExerciseId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setIrisProgrammingExerciseChatSettings",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.domain.settings.IrisProgrammingExerciseChatSubSettings"
        ]
      },
      {
        "name": "setIrisTextExerciseChatSettings",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.domain.settings.IrisTextExerciseChatSubSettings"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisExerciseSettings$HibernateAccessOptimizer$9157YIzs",
    "fields": [
      {
        "name": "invocationTarget$ji6be50"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisExerciseSettings$HibernateInstantiator$DGaVkCUf",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisExerciseSettings_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "exerciseId"
      },
      {
        "name": "irisProgrammingExerciseChatSettings"
      },
      {
        "name": "irisTextExerciseChatSettings"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisFaqIngestionSubSettings",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getAutoIngestOnFaqCreation",
        "parameterTypes": []
      },
      {
        "name": "setAutoIngestOnFaqCreation",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisFaqIngestionSubSettings$HibernateAccessOptimizer$9o1JYKun",
    "fields": [
      {
        "name": "invocationTarget$jfb1dj1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisFaqIngestionSubSettings$HibernateInstantiator$l08PvNwB",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisFaqIngestionSubSettings_",
    "fields": [
      {
        "name": "autoIngestOnFaqCreation"
      },
      {
        "name": "class_"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisGlobalSettings",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setIrisCompetencyGenerationSettings",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.domain.settings.IrisCompetencyGenerationSubSettings"
        ]
      },
      {
        "name": "setIrisCourseChatSettings",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.domain.settings.IrisCourseChatSubSettings"
        ]
      },
      {
        "name": "setIrisFaqIngestionSubSettings",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.domain.settings.IrisFaqIngestionSubSettings"
        ]
      },
      {
        "name": "setIrisLectureChatSettings",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.domain.settings.IrisLectureChatSubSettings"
        ]
      },
      {
        "name": "setIrisLectureIngestionSettings",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.domain.settings.IrisLectureIngestionSubSettings"
        ]
      },
      {
        "name": "setIrisProgrammingExerciseChatSettings",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.domain.settings.IrisProgrammingExerciseChatSubSettings"
        ]
      },
      {
        "name": "setIrisTextExerciseChatSettings",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.domain.settings.IrisTextExerciseChatSubSettings"
        ]
      },
      {
        "name": "setIrisTutorSuggestionSubSettings",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.domain.settings.IrisTutorSuggestionSubSettings"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisGlobalSettings$HibernateAccessOptimizer$D546zAZ6",
    "fields": [
      {
        "name": "invocationTarget$ofm7hq1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisGlobalSettings$HibernateInstantiator$JjvmT3jr",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisGlobalSettings_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "irisCompetencyGenerationSettings"
      },
      {
        "name": "irisCourseChatSettings"
      },
      {
        "name": "irisFaqIngestionSubSettings"
      },
      {
        "name": "irisLectureChatSettings"
      },
      {
        "name": "irisLectureIngestionSettings"
      },
      {
        "name": "irisProgrammingExerciseChatSettings"
      },
      {
        "name": "irisTextExerciseChatSettings"
      },
      {
        "name": "irisTutorSuggestionSubSettings"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisLectureChatSubSettings",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getCustomInstructions",
        "parameterTypes": []
      },
      {
        "name": "getRateLimit",
        "parameterTypes": []
      },
      {
        "name": "getRateLimitTimeframeHours",
        "parameterTypes": []
      },
      {
        "name": "setCustomInstructions",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRateLimit",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setRateLimitTimeframeHours",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisLectureChatSubSettings$HibernateAccessOptimizer$fFONHnyR",
    "fields": [
      {
        "name": "invocationTarget$a3m8ji0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisLectureChatSubSettings$HibernateInstantiator$u23NzJNG",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisLectureChatSubSettings_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "customInstructions"
      },
      {
        "name": "rateLimit"
      },
      {
        "name": "rateLimitTimeframeHours"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisLectureIngestionSubSettings",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getAutoIngestOnLectureAttachmentUpload",
        "parameterTypes": []
      },
      {
        "name": "setAutoIngestOnLectureAttachmentUpload",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisLectureIngestionSubSettings$HibernateAccessOptimizer$On7EbOWE",
    "fields": [
      {
        "name": "invocationTarget$un62gl0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisLectureIngestionSubSettings$HibernateInstantiator$5N7r9477",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisLectureIngestionSubSettings_",
    "fields": [
      {
        "name": "autoIngestOnLectureAttachmentUpload"
      },
      {
        "name": "class_"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisListConverter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "convertToDatabaseColumn",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "convertToEntityAttribute",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisProgrammingExerciseChatSubSettings",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getCustomInstructions",
        "parameterTypes": []
      },
      {
        "name": "getDisabledProactiveEvents",
        "parameterTypes": []
      },
      {
        "name": "getEnabledForCategories",
        "parameterTypes": []
      },
      {
        "name": "getRateLimit",
        "parameterTypes": []
      },
      {
        "name": "getRateLimitTimeframeHours",
        "parameterTypes": []
      },
      {
        "name": "setCustomInstructions",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisabledProactiveEvents",
        "parameterTypes": [
          "java.util.SortedSet"
        ]
      },
      {
        "name": "setEnabledForCategories",
        "parameterTypes": [
          "java.util.SortedSet"
        ]
      },
      {
        "name": "setRateLimit",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setRateLimitTimeframeHours",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisProgrammingExerciseChatSubSettings$HibernateAccessOptimizer$QgeDIqQx",
    "fields": [
      {
        "name": "invocationTarget$a3246f1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisProgrammingExerciseChatSubSettings$HibernateInstantiator$lLJmvrRI",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisProgrammingExerciseChatSubSettings_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "customInstructions"
      },
      {
        "name": "disabledProactiveEvents"
      },
      {
        "name": "enabledForCategories"
      },
      {
        "name": "rateLimit"
      },
      {
        "name": "rateLimitTimeframeHours"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisSettings",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setIrisFaqIngestionSubSettings",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.domain.settings.IrisFaqIngestionSubSettings"
        ]
      },
      {
        "name": "setIrisTutorSuggestionSubSettings",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.domain.settings.IrisTutorSuggestionSubSettings"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisSettings$HibernateAccessOptimizer$rqXLXuM1",
    "fields": [
      {
        "name": "invocationTarget$f0r4k40"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisSettingsType"
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisSettings_",
    "fields": [
      {
        "name": "class_"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisSubSettings",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getAllowedVariants",
        "parameterTypes": []
      },
      {
        "name": "getSelectedVariant",
        "parameterTypes": []
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      },
      {
        "name": "setAllowedVariants",
        "parameterTypes": [
          "java.util.SortedSet"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSelectedVariant",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisSubSettings$HibernateAccessOptimizer$JOGoWrTd",
    "fields": [
      {
        "name": "invocationTarget$ttnmoj0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisSubSettingsType"
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisSubSettings_",
    "fields": [
      {
        "name": "allowedVariants"
      },
      {
        "name": "class_"
      },
      {
        "name": "enabled"
      },
      {
        "name": "selectedVariant"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisTextExerciseChatSubSettings",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getCustomInstructions",
        "parameterTypes": []
      },
      {
        "name": "getEnabledForCategories",
        "parameterTypes": []
      },
      {
        "name": "getRateLimit",
        "parameterTypes": []
      },
      {
        "name": "getRateLimitTimeframeHours",
        "parameterTypes": []
      },
      {
        "name": "setCustomInstructions",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnabledForCategories",
        "parameterTypes": [
          "java.util.SortedSet"
        ]
      },
      {
        "name": "setRateLimit",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setRateLimitTimeframeHours",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisTextExerciseChatSubSettings$HibernateAccessOptimizer$5E3KZtsV",
    "fields": [
      {
        "name": "invocationTarget$j2o1cq0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisTextExerciseChatSubSettings$HibernateInstantiator$hMzudRDG",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisTextExerciseChatSubSettings_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "customInstructions"
      },
      {
        "name": "enabledForCategories"
      },
      {
        "name": "rateLimit"
      },
      {
        "name": "rateLimitTimeframeHours"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisTutorSuggestionSubSettings",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisTutorSuggestionSubSettings$HibernateAccessOptimizer$gtzguyHX",
    "fields": [
      {
        "name": "invocationTarget$mg11ol1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisTutorSuggestionSubSettings$HibernateInstantiator$LpqicHNR",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisTutorSuggestionSubSettings_",
    "fields": [
      {
        "name": "class_"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.event.IrisEventType"
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.package-info"
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.dto.IngestionState"
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.dto.IrisCombinedCompetencyGenerationSubSettingsDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "allowedVariants",
        "parameterTypes": []
      },
      {
        "name": "enabled",
        "parameterTypes": []
      },
      {
        "name": "selectedVariant",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.dto.IrisCombinedCourseChatSubSettingsDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "allowedVariants",
        "parameterTypes": []
      },
      {
        "name": "customInstructions",
        "parameterTypes": []
      },
      {
        "name": "enabled",
        "parameterTypes": []
      },
      {
        "name": "rateLimit",
        "parameterTypes": []
      },
      {
        "name": "rateLimitTimeframeHours",
        "parameterTypes": []
      },
      {
        "name": "selectedVariant",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.dto.IrisCombinedFaqIngestionSubSettingsDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "allowedVariants",
        "parameterTypes": []
      },
      {
        "name": "autoIngest",
        "parameterTypes": []
      },
      {
        "name": "enabled",
        "parameterTypes": []
      },
      {
        "name": "selectedVariant",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.dto.IrisCombinedLectureChatSubSettingsDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "allowedVariants",
        "parameterTypes": []
      },
      {
        "name": "customInstructions",
        "parameterTypes": []
      },
      {
        "name": "enabled",
        "parameterTypes": []
      },
      {
        "name": "rateLimit",
        "parameterTypes": []
      },
      {
        "name": "rateLimitTimeframeHours",
        "parameterTypes": []
      },
      {
        "name": "selectedVariant",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.dto.IrisCombinedLectureIngestionSubSettingsDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "allowedVariants",
        "parameterTypes": []
      },
      {
        "name": "autoIngest",
        "parameterTypes": []
      },
      {
        "name": "enabled",
        "parameterTypes": []
      },
      {
        "name": "selectedVariant",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.dto.IrisCombinedProgrammingExerciseChatSubSettingsDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "allowedVariants",
        "parameterTypes": []
      },
      {
        "name": "customInstructions",
        "parameterTypes": []
      },
      {
        "name": "disabledProactiveEvents",
        "parameterTypes": []
      },
      {
        "name": "enabled",
        "parameterTypes": []
      },
      {
        "name": "enabledForCategories",
        "parameterTypes": []
      },
      {
        "name": "rateLimit",
        "parameterTypes": []
      },
      {
        "name": "rateLimitTimeframeHours",
        "parameterTypes": []
      },
      {
        "name": "selectedVariant",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.dto.IrisCombinedSettingsDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "irisCompetencyGenerationSettings",
        "parameterTypes": []
      },
      {
        "name": "irisCourseChatSettings",
        "parameterTypes": []
      },
      {
        "name": "irisFaqIngestionSettings",
        "parameterTypes": []
      },
      {
        "name": "irisLectureChatSettings",
        "parameterTypes": []
      },
      {
        "name": "irisLectureIngestionSettings",
        "parameterTypes": []
      },
      {
        "name": "irisProgrammingExerciseChatSettings",
        "parameterTypes": []
      },
      {
        "name": "irisTextExerciseChatSettings",
        "parameterTypes": []
      },
      {
        "name": "irisTutorSuggestionSettings",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.dto.IrisCombinedTextExerciseChatSubSettingsDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "allowedVariants",
        "parameterTypes": []
      },
      {
        "name": "customInstructions",
        "parameterTypes": []
      },
      {
        "name": "enabled",
        "parameterTypes": []
      },
      {
        "name": "enabledForCategories",
        "parameterTypes": []
      },
      {
        "name": "rateLimit",
        "parameterTypes": []
      },
      {
        "name": "rateLimitTimeframeHours",
        "parameterTypes": []
      },
      {
        "name": "selectedVariant",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.dto.IrisCombinedTutorSuggestionSubSettingsDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "allowedVariants",
        "parameterTypes": []
      },
      {
        "name": "enabled",
        "parameterTypes": []
      },
      {
        "name": "selectedVariant",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.exception.IrisException"
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.repository.IrisChatSessionRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.repository.IrisCourseChatSessionRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.repository.IrisExerciseChatSessionRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.repository.IrisExerciseSettingsRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.repository.IrisLectureChatSessionRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.repository.IrisMessageRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.repository.IrisSessionRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.repository.IrisSettingsRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "findGlobalSettingsElseThrow",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.repository.IrisSubSettingsRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.repository.IrisTextExerciseChatSessionRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.repository.IrisTutorSuggestionSessionRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.IrisCompetencyGenerationService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.service.pyris.PyrisPipelineService",
          "de.tum.cit.aet.artemis.core.service.LLMTokenUsageService",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "de.tum.cit.aet.artemis.iris.service.websocket.IrisWebsocketService",
          "de.tum.cit.aet.artemis.iris.service.pyris.PyrisJobService",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.iris.service.settings.IrisSettingsService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.IrisConsistencyCheckService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.IrisLectureUnitAutoIngestionService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.api.IrisLectureApi",
          "org.springframework.scheduling.TaskScheduler",
          "de.tum.cit.aet.artemis.lecture.api.LectureUnitRepositoryApi"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.IrisMessageService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.repository.IrisSessionRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.IrisRateLimitService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.repository.IrisMessageRepository",
          "de.tum.cit.aet.artemis.iris.service.settings.IrisSettingsService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.IrisRateLimitService$IrisRateLimitInformation"
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.IrisRewritingService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.IrisSessionService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.pyris.PyrisConnectorException"
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.pyris.PyrisConnectorService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.web.client.RestTemplate",
          "org.springframework.http.converter.json.MappingJackson2HttpMessageConverter",
          "de.tum.cit.aet.artemis.iris.service.pyris.PyrisJobService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.pyris.PyrisDTOService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.service.RepositoryService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.pyris.PyrisEventService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.service.session.IrisCourseChatSessionService",
          "de.tum.cit.aet.artemis.iris.service.session.IrisExerciseChatSessionService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.pyris.PyrisEventService$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.pyris.PyrisHealthIndicator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.web.client.RestTemplate"
        ]
      },
      {
        "name": "health",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.pyris.PyrisJobService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.hazelcast.core.HazelcastInstance"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.pyris.PyrisPipelineService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.service.pyris.PyrisConnectorService",
          "de.tum.cit.aet.artemis.iris.service.pyris.PyrisJobService",
          "de.tum.cit.aet.artemis.iris.service.pyris.PyrisDTOService",
          "de.tum.cit.aet.artemis.iris.service.websocket.IrisChatWebsocketService",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.core.service.course.CourseLoadService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.pyris.PyrisStatusUpdateService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.pyris.PyrisWebhookService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.service.pyris.PyrisConnectorService",
          "de.tum.cit.aet.artemis.iris.service.pyris.PyrisJobService",
          "de.tum.cit.aet.artemis.iris.service.settings.IrisSettingsService",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.core.service.messaging.InstanceMessageSendService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.pyris.dto.PyrisPipelineExecutionDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.pyris.dto.chat.PyrisChatStatusUpdateDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.pyris.dto.chat.PyrisEventDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.pyris.dto.competency.PyrisCompetencyExtractionInputDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.pyris.dto.competency.PyrisCompetencyRecommendationDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.pyris.dto.competency.PyrisCompetencyStatusUpdateDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.pyris.dto.data.PyrisBuildLogEntryDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.pyris.dto.data.PyrisFeedbackDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.pyris.dto.data.PyrisProgrammingExerciseDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.pyris.dto.data.PyrisResultDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.pyris.dto.data.PyrisSubmissionDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.pyris.dto.faqingestionwebhook.PyrisFaqWebhookDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.pyris.dto.faqingestionwebhook.PyrisWebhookFaqDeletionExecutionDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.pyris.dto.faqingestionwebhook.PyrisWebhookFaqIngestionExecutionDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.pyris.dto.lectureingestionwebhook.PyrisLectureUnitWebhookDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.pyris.dto.lectureingestionwebhook.PyrisWebhookLectureDeletionExecutionDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.pyris.dto.lectureingestionwebhook.PyrisWebhookLectureIngestionExecutionDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.pyris.event.CompetencyJolSetEvent"
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.pyris.event.NewResultEvent"
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.pyris.event.PyrisEvent"
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.pyris.job.CompetencyExtractionJob"
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.pyris.job.LectureIngestionWebhookJob"
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.pyris.job.PyrisJob"
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.pyris.job.TrackedSessionBasedPyrisJob"
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.session.AbstractIrisChatSessionService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "handleStatusUpdate",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.service.pyris.job.TrackedSessionBasedPyrisJob",
          "de.tum.cit.aet.artemis.iris.service.pyris.dto.chat.PyrisChatStatusUpdateDTO"
        ]
      },
      {
        "name": "setLLMTokenUsageParameters",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.service.LLMTokenUsageService$LLMTokenUsageBuilder",
          "de.tum.cit.aet.artemis.iris.domain.session.IrisChatSession"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.session.IrisChatBasedFeatureInterface",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.session.IrisCourseChatSessionService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.service.IrisMessageService",
          "de.tum.cit.aet.artemis.core.service.LLMTokenUsageService",
          "de.tum.cit.aet.artemis.iris.service.settings.IrisSettingsService",
          "de.tum.cit.aet.artemis.iris.service.websocket.IrisChatWebsocketService",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.iris.repository.IrisSessionRepository",
          "de.tum.cit.aet.artemis.iris.service.IrisRateLimitService",
          "de.tum.cit.aet.artemis.iris.repository.IrisCourseChatSessionRepository",
          "de.tum.cit.aet.artemis.iris.service.pyris.PyrisPipelineService",
          "com.fasterxml.jackson.databind.ObjectMapper",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository"
        ]
      },
      {
        "name": "checkHasAccessTo",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User",
          "de.tum.cit.aet.artemis.iris.domain.session.IrisSession"
        ]
      },
      {
        "name": "checkIsFeatureActivatedFor",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.domain.session.IrisSession"
        ]
      },
      {
        "name": "checkRateLimit",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "requestAndHandleResponse",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.domain.session.IrisSession"
        ]
      },
      {
        "name": "sendOverWebsocket",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.domain.session.IrisSession",
          "de.tum.cit.aet.artemis.iris.domain.message.IrisMessage"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.session.IrisExerciseChatSessionService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.service.IrisMessageService",
          "de.tum.cit.aet.artemis.core.service.LLMTokenUsageService",
          "de.tum.cit.aet.artemis.iris.service.settings.IrisSettingsService",
          "de.tum.cit.aet.artemis.iris.service.websocket.IrisChatWebsocketService",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.iris.repository.IrisSessionRepository",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseStudentParticipationRepository",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingSubmissionRepository",
          "de.tum.cit.aet.artemis.iris.service.IrisRateLimitService",
          "de.tum.cit.aet.artemis.iris.service.pyris.PyrisPipelineService",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseRepository",
          "com.fasterxml.jackson.databind.ObjectMapper",
          "de.tum.cit.aet.artemis.iris.repository.IrisExerciseChatSessionRepository",
          "de.tum.cit.aet.artemis.exercise.repository.SubmissionRepository",
          "de.tum.cit.aet.artemis.exercise.repository.ExerciseRepository",
          "de.tum.cit.aet.artemis.core.repository.UserRepository"
        ]
      },
      {
        "name": "checkHasAccessTo",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User",
          "de.tum.cit.aet.artemis.iris.domain.session.IrisSession"
        ]
      },
      {
        "name": "checkIsFeatureActivatedFor",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.domain.session.IrisSession"
        ]
      },
      {
        "name": "checkRateLimit",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "requestAndHandleResponse",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.domain.session.IrisSession"
        ]
      },
      {
        "name": "sendOverWebsocket",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.domain.session.IrisSession",
          "de.tum.cit.aet.artemis.iris.domain.message.IrisMessage"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.session.IrisLectureChatSessionService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "checkHasAccessTo",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User",
          "de.tum.cit.aet.artemis.iris.domain.session.IrisSession"
        ]
      },
      {
        "name": "checkIsFeatureActivatedFor",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.domain.session.IrisSession"
        ]
      },
      {
        "name": "checkRateLimit",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "requestAndHandleResponse",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.domain.session.IrisSession"
        ]
      },
      {
        "name": "sendOverWebsocket",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.domain.session.IrisSession",
          "de.tum.cit.aet.artemis.iris.domain.message.IrisMessage"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.session.IrisRateLimitedFeatureInterface",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.session.IrisSubFeatureInterface",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.session.IrisTextExerciseChatSessionService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "checkHasAccessTo",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User",
          "de.tum.cit.aet.artemis.iris.domain.session.IrisSession"
        ]
      },
      {
        "name": "checkIsFeatureActivatedFor",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.domain.session.IrisSession"
        ]
      },
      {
        "name": "checkRateLimit",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "requestAndHandleResponse",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.domain.session.IrisSession"
        ]
      },
      {
        "name": "sendOverWebsocket",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.domain.session.IrisSession",
          "de.tum.cit.aet.artemis.iris.domain.message.IrisMessage"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.session.IrisTutorSuggestionSessionService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "checkHasAccessTo",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User",
          "de.tum.cit.aet.artemis.iris.domain.session.IrisSession"
        ]
      },
      {
        "name": "checkIsFeatureActivatedFor",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.domain.session.IrisSession"
        ]
      },
      {
        "name": "checkRateLimit",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "requestAndHandleResponse",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.domain.session.IrisSession"
        ]
      },
      {
        "name": "sendOverWebsocket",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.domain.session.IrisSession",
          "de.tum.cit.aet.artemis.iris.domain.message.IrisMessage"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.settings.IrisSettingsService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.repository.IrisSettingsRepository",
          "de.tum.cit.aet.artemis.iris.service.settings.IrisSubSettingsService",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseRepository",
          "com.fasterxml.jackson.databind.ObjectMapper",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.exercise.repository.ExerciseRepository"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.settings.IrisSubSettingsService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.websocket.IrisChatWebsocketService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.service.websocket.IrisWebsocketService",
          "de.tum.cit.aet.artemis.iris.service.IrisRateLimitService",
          "de.tum.cit.aet.artemis.core.repository.UserRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.service.websocket.IrisWebsocketService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.service.WebsocketMessagingService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.web.IrisChatSessionResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.web.IrisConsistencyCheckResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.web.IrisCourseChatSessionResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.web.IrisLectureChatSessionResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.web.IrisMessageResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.web.IrisProgrammingExerciseChatSessionResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.web.IrisResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.web.IrisRewritingResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.web.IrisSettingsResource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "de.tum.cit.aet.artemis.iris.service.settings.IrisSettingsService",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.exercise.repository.ExerciseRepository"
        ]
      },
      {
        "name": "getCourseSettings",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getRawCourseSettings",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getExerciseSettings",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.web.IrisSettingsResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.web.IrisTextExerciseChatSessionResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.web.IrisTutorSuggestionSessionResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.web.IrisVariantsResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.web.admin.AdminIrisSettingsResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.web.open.PublicPyrisStatusUpdateResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.api.AbstractLectureApi",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.api.LectureApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.lecture.service.LectureService",
          "de.tum.cit.aet.artemis.lecture.service.LectureImportService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.api.LectureAttachmentApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.lecture.repository.AttachmentRepository",
          "de.tum.cit.aet.artemis.lecture.repository.AttachmentVideoUnitRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.api.LectureImportApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.lecture.service.LectureImportService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.api.LectureRepositoryApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.lecture.repository.LectureRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.api.LectureTranscriptionsRepositoryApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.lecture.repository.LectureTranscriptionRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.api.LectureUnitApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.lecture.service.LectureUnitService",
          "de.tum.cit.aet.artemis.lecture.repository.LectureUnitRepository",
          "de.tum.cit.aet.artemis.lecture.service.LectureUnitImportService",
          "de.tum.cit.aet.artemis.lecture.repository.ExerciseUnitRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.api.LectureUnitRepositoryApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.lecture.repository.LectureUnitRepository",
          "de.tum.cit.aet.artemis.lecture.repository.LectureUnitCompletionRepository",
          "de.tum.cit.aet.artemis.lecture.repository.LectureUnitMetricsRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.api.SlideApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.lecture.service.SlideService",
          "de.tum.cit.aet.artemis.lecture.repository.SlideRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.api.SlideLifecycleServiceApi",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.config.LectureApiNotPresentException"
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.Attachment",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setAttachmentType",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.lecture.domain.AttachmentType"
        ]
      },
      {
        "name": "setAttachmentVideoUnit",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.lecture.domain.AttachmentVideoUnit"
        ]
      },
      {
        "name": "setExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise"
        ]
      },
      {
        "name": "setLecture",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.lecture.domain.Lecture"
        ]
      },
      {
        "name": "setLink",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReleaseDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setStudentVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUploadDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.Attachment$HibernateAccessOptimizer$0nYF7Bv5",
    "fields": [
      {
        "name": "invocationTarget$2g6j5e1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.Attachment$HibernateInstantiator$4esr58JO",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.AttachmentType",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.AttachmentVideoUnit",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setAttachment",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.lecture.domain.Attachment"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSlides",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setVideoSource",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.AttachmentVideoUnit$HibernateAccessOptimizer$63y9pEGI",
    "fields": [
      {
        "name": "invocationTarget$cbqk181"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.AttachmentVideoUnit$HibernateInstantiator$HjjdZNbx",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.AttachmentVideoUnit_",
    "fields": [
      {
        "name": "attachment"
      },
      {
        "name": "class_"
      },
      {
        "name": "description"
      },
      {
        "name": "slides"
      },
      {
        "name": "videoSource"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.Attachment_",
    "fields": [
      {
        "name": "attachmentType"
      },
      {
        "name": "attachmentVideoUnit"
      },
      {
        "name": "class_"
      },
      {
        "name": "exercise"
      },
      {
        "name": "lecture"
      },
      {
        "name": "link"
      },
      {
        "name": "name"
      },
      {
        "name": "releaseDate"
      },
      {
        "name": "studentVersion"
      },
      {
        "name": "uploadDate"
      },
      {
        "name": "version"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.ExerciseUnit",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCompetencyLinks",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReleaseDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "getCompetencyLinks",
        "parameterTypes": []
      },
      {
        "name": "getExercise",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getReleaseDate",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "isVisibleToStudents",
        "parameterTypes": []
      },
      {
        "name": "prePersistOrUpdate",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.ExerciseUnit_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "exercise"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.Lecture",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setAttachments",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setCourse",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.Course"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEndDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setLectureUnits",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setStartDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVisibleDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "getAttachments",
        "parameterTypes": []
      },
      {
        "name": "getChannelName",
        "parameterTypes": []
      },
      {
        "name": "getCourse",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getEndDate",
        "parameterTypes": []
      },
      {
        "name": "getLectureUnits",
        "parameterTypes": []
      },
      {
        "name": "getStartDate",
        "parameterTypes": []
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "getVisibleDate",
        "parameterTypes": []
      },
      {
        "name": "isVisibleToStudents",
        "parameterTypes": []
      },
      {
        "name": "setChannelName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.Lecture$HibernateAccessOptimizer$uF9DkCK7",
    "fields": [
      {
        "name": "invocationTarget$oo8guc0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.Lecture$HibernateInstantiator$GpqAVm9y",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.LectureTranscription",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setLanguage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLectureUnit",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.lecture.domain.LectureUnit"
        ]
      },
      {
        "name": "setSegments",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.LectureTranscription$HibernateAccessOptimizer$98ogYWxz",
    "fields": [
      {
        "name": "invocationTarget$tukf9g0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.LectureTranscription$HibernateInstantiator$NZlcgeTb",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.LectureTranscriptionSegmentConverter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "convertToDatabaseColumn",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "convertToEntityAttribute",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.LectureTranscription_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "language"
      },
      {
        "name": "lectureUnit"
      },
      {
        "name": "segments"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.LectureUnit",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setCompetencyLinks",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setCompletedUsers",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setLecture",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.lecture.domain.Lecture"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReleaseDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "getCompetencyLinks",
        "parameterTypes": []
      },
      {
        "name": "getLecture",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getReleaseDate",
        "parameterTypes": []
      },
      {
        "name": "isCompleted",
        "parameterTypes": []
      },
      {
        "name": "isVisibleToStudents",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.LectureUnit$HibernateAccessOptimizer$muDPFtYB",
    "fields": [
      {
        "name": "invocationTarget$ifkjol1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.LectureUnitCompletion",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCompletedAt",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.lecture.domain.LectureUnitCompletion$LectureUnitUserId"
        ]
      },
      {
        "name": "setLectureUnit",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.lecture.domain.LectureUnit"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.LectureUnitCompletion$HibernateAccessOptimizer$HttqB51z",
    "fields": [
      {
        "name": "invocationTarget$jkaucq0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.LectureUnitCompletion$HibernateInstantiator$BvFUjZHw",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.LectureUnitCompletion$LectureUnitUserId",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setLectureUnitId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ],
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.LectureUnitCompletion$LectureUnitUserId_"
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.LectureUnitCompletion_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "completedAt"
      },
      {
        "name": "id"
      },
      {
        "name": "lectureUnit"
      },
      {
        "name": "user"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.LectureUnit_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "competencyLinks"
      },
      {
        "name": "completedUsers"
      },
      {
        "name": "lecture"
      },
      {
        "name": "name"
      },
      {
        "name": "releaseDate"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.Lecture_",
    "fields": [
      {
        "name": "attachments"
      },
      {
        "name": "class_"
      },
      {
        "name": "course"
      },
      {
        "name": "description"
      },
      {
        "name": "endDate"
      },
      {
        "name": "lectureUnits"
      },
      {
        "name": "startDate"
      },
      {
        "name": "title"
      },
      {
        "name": "visibleDate"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.OnlineUnit",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSource",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.OnlineUnit$HibernateAccessOptimizer$YzAEs1MB",
    "fields": [
      {
        "name": "invocationTarget$5iugkt0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.OnlineUnit$HibernateInstantiator$SrD06ctI",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.OnlineUnit_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "description"
      },
      {
        "name": "source"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.Slide",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setAttachmentVideoUnit",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.lecture.domain.AttachmentVideoUnit"
        ]
      },
      {
        "name": "setExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise"
        ]
      },
      {
        "name": "setHidden",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setSlideImagePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSlideNumber",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.Slide$HibernateAccessOptimizer$6LbQvRoW",
    "fields": [
      {
        "name": "invocationTarget$kt6pnm1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.Slide$HibernateInstantiator$rKtEI9nF",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.SlideLifecycle"
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.Slide_",
    "fields": [
      {
        "name": "attachmentVideoUnit"
      },
      {
        "name": "class_"
      },
      {
        "name": "exercise"
      },
      {
        "name": "hidden"
      },
      {
        "name": "slideImagePath"
      },
      {
        "name": "slideNumber"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.TextUnit",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setContent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getContent",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.TextUnit$HibernateAccessOptimizer$aBariV8x",
    "fields": [
      {
        "name": "invocationTarget$nvb78p1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.TextUnit$HibernateInstantiator$NaIpetiB",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.TextUnit_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "content"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.package-info"
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.dto.HiddenPageInfoDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.dto.SlideDTO",
    "queryAllDeclaredConstructors": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.dto.SlideOrderDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.dto.SlideUnhideDTO",
    "queryAllDeclaredConstructors": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.repository.AttachmentRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.repository.AttachmentVideoUnitRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.repository.ExerciseUnitRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.repository.LectureRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "countByCourse_Id",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findAllByCourseIdWithAttachments",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findAllByCourseIdWithAttachmentsAndLectureUnits",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findAllVisibleByCourseIdWithEagerLectureUnits",
        "parameterTypes": [
          "long",
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "findByIdWithLectureUnitsAndAttachmentsElseThrow",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findByIdWithLectureUnitsAndCompetenciesElseThrow",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findByIdWithLectureUnitsWithCompetencyLinksAndAttachmentsElseThrow",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.repository.LectureTranscriptionRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.repository.LectureUnitCompletionRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.repository.LectureUnitMetricsRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.repository.LectureUnitRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "findByIdWithCompetenciesAndSlidesElseThrow",
        "parameterTypes": [
          "long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.repository.OnlineUnitRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.repository.SlideRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.repository.TextUnitRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.service.AttachmentService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.lecture.repository.AttachmentRepository",
          "de.tum.cit.aet.artemis.lecture.repository.SlideRepository",
          "de.tum.cit.aet.artemis.core.service.FileService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.service.AttachmentVideoUnitService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.service.LectureImportService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.lecture.repository.LectureRepository",
          "de.tum.cit.aet.artemis.lecture.repository.AttachmentRepository",
          "de.tum.cit.aet.artemis.lecture.service.LectureUnitImportService",
          "de.tum.cit.aet.artemis.communication.service.conversation.ChannelService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.service.LectureImportService$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.service.LectureService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.lecture.repository.LectureRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.communication.repository.conversation.ChannelRepository",
          "de.tum.cit.aet.artemis.communication.service.conversation.ChannelService",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.exercise.service.ExerciseService",
          "de.tum.cit.aet.artemis.lecture.repository.LectureUnitRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.service.LectureUnitImportService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.lecture.repository.LectureUnitRepository",
          "de.tum.cit.aet.artemis.lecture.repository.AttachmentRepository",
          "de.tum.cit.aet.artemis.lecture.service.SlideSplitterService",
          "java.util.Optional"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.service.LectureUnitProcessingService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.service.LectureUnitService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.lecture.repository.LectureUnitRepository",
          "de.tum.cit.aet.artemis.lecture.repository.LectureRepository",
          "de.tum.cit.aet.artemis.lecture.repository.LectureUnitCompletionRepository",
          "de.tum.cit.aet.artemis.core.service.FileService",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.service.SlideLifecycleService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.scheduling.TaskScheduler"
        ]
      },
      {
        "name": "scheduleTask",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.lecture.domain.Slide",
          "de.tum.cit.aet.artemis.lecture.domain.SlideLifecycle",
          "java.lang.Runnable"
        ]
      },
      {
        "name": "scheduleTask",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.lecture.domain.Slide",
          "java.time.ZonedDateTime",
          "de.tum.cit.aet.artemis.lecture.domain.SlideLifecycle",
          "java.lang.Runnable"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.service.SlideService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.lecture.repository.SlideRepository",
          "de.tum.cit.aet.artemis.lecture.service.SlideUnhideService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.service.SlideSplitterService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.lecture.repository.SlideRepository",
          "de.tum.cit.aet.artemis.lecture.service.SlideUnhideService",
          "de.tum.cit.aet.artemis.exercise.repository.ExerciseRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.service.SlideSplitterService$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.service.SlideUnhideExecutionService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.lecture.repository.SlideRepository",
          "de.tum.cit.aet.artemis.lecture.service.AttachmentService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.service.SlideUnhideScheduleService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.lecture.repository.SlideRepository",
          "de.tum.cit.aet.artemis.lecture.service.SlideUnhideExecutionService",
          "de.tum.cit.aet.artemis.core.service.ScheduleService"
        ]
      },
      {
        "name": "onApplicationReady",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.service.SlideUnhideService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.service.messaging.InstanceMessageSendService",
          "de.tum.cit.aet.artemis.lecture.service.SlideUnhideExecutionService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.web.AttachmentResource",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.lecture.repository.AttachmentRepository",
          "de.tum.cit.aet.artemis.communication.service.notifications.GroupNotificationService",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.core.service.FileService"
        ]
      },
      {
        "name": "getAttachmentsForLecture",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.web.AttachmentVideoUnitResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.web.ExerciseUnitResource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.lecture.repository.LectureRepository",
          "de.tum.cit.aet.artemis.lecture.repository.ExerciseUnitRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService"
        ]
      },
      {
        "name": "createExerciseUnit",
        "parameterTypes": [
          "java.lang.Long",
          "de.tum.cit.aet.artemis.lecture.domain.ExerciseUnit"
        ]
      },
      {
        "name": "getAllExerciseUnitsOfLecture",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.web.LectureResource",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.lecture.repository.LectureRepository",
          "de.tum.cit.aet.artemis.lecture.service.LectureService",
          "de.tum.cit.aet.artemis.lecture.service.LectureImportService",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.communication.service.conversation.ChannelService",
          "de.tum.cit.aet.artemis.communication.repository.conversation.ChannelRepository",
          "de.tum.cit.aet.artemis.lecture.repository.SlideRepository"
        ]
      },
      {
        "name": "createLecture",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.lecture.domain.Lecture"
        ]
      },
      {
        "name": "deleteLecture",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getLecture",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getLectureWithDetails",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getLecturesForCourse",
        "parameterTypes": [
          "java.lang.Long",
          "boolean"
        ]
      },
      {
        "name": "getLecturesWithSlidesForCourse",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "updateLecture",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.lecture.domain.Lecture"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.web.LectureTranscriptionResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.web.LectureUnitResource",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.lecture.repository.LectureRepository",
          "de.tum.cit.aet.artemis.lecture.repository.LectureUnitRepository",
          "de.tum.cit.aet.artemis.lecture.service.LectureUnitService",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.core.service.messaging.InstanceMessageSendService"
        ]
      },
      {
        "name": "updateLectureUnitsOrder",
        "parameterTypes": [
          "java.lang.Long",
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.web.OnlineUnitResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.web.TextUnitResource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.lecture.repository.LectureRepository",
          "de.tum.cit.aet.artemis.lecture.repository.TextUnitRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.lecture.service.LectureUnitService"
        ]
      },
      {
        "name": "createTextUnit",
        "parameterTypes": [
          "java.lang.Long",
          "de.tum.cit.aet.artemis.lecture.domain.TextUnit"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lti.api.LtiApi"
  },
  {
    "name": "de.tum.cit.aet.artemis.lti.config.CustomLti13Configurer"
  },
  {
    "name": "de.tum.cit.aet.artemis.lti.domain.LtiPlatformConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setAuthorizationUri",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClientId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCustomName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setJwkSetUri",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOnlineCourseConfigurations",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setOriginalUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRegistrationId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTokenUri",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lti.domain.LtiPlatformConfiguration$HibernateAccessOptimizer$9WWTc9Dg",
    "fields": [
      {
        "name": "invocationTarget$2rb8kb1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lti.domain.LtiPlatformConfiguration$HibernateInstantiator$h75dVKqf",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lti.domain.LtiPlatformConfiguration_",
    "fields": [
      {
        "name": "authorizationUri"
      },
      {
        "name": "class_"
      },
      {
        "name": "clientId"
      },
      {
        "name": "customName"
      },
      {
        "name": "jwkSetUri"
      },
      {
        "name": "onlineCourseConfigurations"
      },
      {
        "name": "originalUrl"
      },
      {
        "name": "registrationId"
      },
      {
        "name": "tokenUri"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lti.domain.LtiResourceLaunch",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setDeploymentId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise"
        ]
      },
      {
        "name": "setIss",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLtiPlatformConfiguration",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.lti.domain.LtiPlatformConfiguration"
        ]
      },
      {
        "name": "setResourceLinkId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setScoreLineItemUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSub",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      }
    ],
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.lti.domain.LtiResourceLaunch$HibernateAccessOptimizer$Xh3HjpTO",
    "fields": [
      {
        "name": "invocationTarget$325u9o1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lti.domain.LtiResourceLaunch$HibernateInstantiator$JrlJjLQe",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lti.domain.LtiResourceLaunch_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "deploymentId"
      },
      {
        "name": "exercise"
      },
      {
        "name": "iss"
      },
      {
        "name": "ltiPlatformConfiguration"
      },
      {
        "name": "resourceLinkId"
      },
      {
        "name": "scoreLineItemUrl"
      },
      {
        "name": "sub"
      },
      {
        "name": "user"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lti.domain.OnlineCourseConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCourse",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.Course"
        ]
      },
      {
        "name": "setLtiPlatformConfiguration",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.lti.domain.LtiPlatformConfiguration"
        ]
      },
      {
        "name": "setRequireExistingUser",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUserPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lti.domain.OnlineCourseConfiguration$HibernateAccessOptimizer$lM596Ym3",
    "fields": [
      {
        "name": "invocationTarget$n6r6ro1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lti.domain.OnlineCourseConfiguration$HibernateInstantiator$v5nj2rR6",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lti.domain.OnlineCourseConfiguration_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "course"
      },
      {
        "name": "ltiPlatformConfiguration"
      },
      {
        "name": "requireExistingUser"
      },
      {
        "name": "userPrefix"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lti.domain.package-info"
  },
  {
    "name": "de.tum.cit.aet.artemis.modeling.domain.ApollonDiagram",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCourseId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setDiagramType",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.modeling.domain.DiagramType"
        ]
      },
      {
        "name": "setJsonRepresentation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCourseId",
        "parameterTypes": []
      },
      {
        "name": "getDiagramType",
        "parameterTypes": []
      },
      {
        "name": "getJsonRepresentation",
        "parameterTypes": []
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.modeling.domain.ApollonDiagram$HibernateAccessOptimizer$kAftWKAn",
    "fields": [
      {
        "name": "invocationTarget$dp7f6u0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.modeling.domain.ApollonDiagram$HibernateInstantiator$Y7P0lDBd",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.modeling.domain.ApollonDiagram_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "courseId"
      },
      {
        "name": "diagramType"
      },
      {
        "name": "jsonRepresentation"
      },
      {
        "name": "title"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.modeling.domain.DiagramType",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.modeling.domain.ModelingExercise",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setDiagramType",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.modeling.domain.DiagramType"
        ]
      },
      {
        "name": "setExampleSolutionExplanation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExampleSolutionModel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSecondCorrectionEnabled",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getDiagramType",
        "parameterTypes": []
      },
      {
        "name": "getExampleSolutionExplanation",
        "parameterTypes": []
      },
      {
        "name": "getExampleSolutionModel",
        "parameterTypes": []
      },
      {
        "name": "getExerciseType",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.modeling.domain.ModelingExercise$HibernateAccessOptimizer$oOiGHVGr",
    "fields": [
      {
        "name": "invocationTarget$4gplck1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.modeling.domain.ModelingExercise$HibernateInstantiator$QYQY92S4",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.modeling.domain.ModelingExercise_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "diagramType"
      },
      {
        "name": "exampleSolutionExplanation"
      },
      {
        "name": "exampleSolutionModel"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.modeling.domain.ModelingSubmission",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setExplanationText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setModel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersions",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "getExplanationText",
        "parameterTypes": []
      },
      {
        "name": "getModel",
        "parameterTypes": []
      },
      {
        "name": "getSubmissionExerciseType",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.modeling.domain.ModelingSubmission$HibernateAccessOptimizer$hdDMAvPf",
    "fields": [
      {
        "name": "invocationTarget$tmmln30"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.modeling.domain.ModelingSubmission$HibernateInstantiator$FyJh8qbq",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.modeling.domain.ModelingSubmission_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "explanationText"
      },
      {
        "name": "model"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.modeling.domain.package-info"
  },
  {
    "name": "de.tum.cit.aet.artemis.modeling.repository.ApollonDiagramRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "findDiagramsByCourseId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.modeling.repository.ModelingExerciseRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "findByIdWithExampleSubmissionsAndResultsElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithEagerCompetenciesByIdElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithEagerExampleSubmissionsAndCompetenciesByIdElseThrow",
        "parameterTypes": [
          "long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.modeling.repository.ModelingSubmissionRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "findByIdWithEagerResultAndFeedbackAndAssessorAndAssessmentNoteAndParticipationResultsElseThrow",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.modeling.service.ModelingExerciseFeedbackService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.Optional",
          "de.tum.cit.aet.artemis.exercise.service.SubmissionService",
          "de.tum.cit.aet.artemis.assessment.service.ResultService",
          "de.tum.cit.aet.artemis.assessment.repository.ResultRepository",
          "de.tum.cit.aet.artemis.assessment.web.ResultWebsocketService",
          "de.tum.cit.aet.artemis.exercise.service.ParticipationService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.modeling.service.ModelingExerciseImportService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.modeling.repository.ModelingExerciseRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ExampleSubmissionRepository",
          "de.tum.cit.aet.artemis.exercise.repository.SubmissionRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ResultRepository",
          "de.tum.cit.aet.artemis.communication.service.conversation.ChannelService",
          "de.tum.cit.aet.artemis.assessment.service.FeedbackService",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.exercise.service.ExerciseService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.modeling.service.ModelingExerciseService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.modeling.repository.ModelingExerciseRepository",
          "de.tum.cit.aet.artemis.exercise.service.ExerciseSpecificationService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.modeling.service.ModelingExerciseWithSubmissionsExportService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.service.FileService",
          "de.tum.cit.aet.artemis.modeling.service.ModelingSubmissionExportService",
          "org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.modeling.service.ModelingSubmissionExportService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.repository.ExerciseRepository",
          "de.tum.cit.aet.artemis.core.service.ZipFileService",
          "de.tum.cit.aet.artemis.core.service.FileService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.modeling.service.ModelingSubmissionService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.modeling.repository.ModelingSubmissionRepository",
          "de.tum.cit.aet.artemis.exercise.repository.SubmissionRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ResultRepository",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.exercise.service.SubmissionVersionService",
          "de.tum.cit.aet.artemis.exercise.service.ParticipationService",
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.assessment.repository.FeedbackRepository",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.exercise.service.ExerciseDateService",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "de.tum.cit.aet.artemis.exercise.repository.ParticipationRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ComplaintRepository",
          "de.tum.cit.aet.artemis.assessment.service.FeedbackService",
          "java.util.Optional"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.modeling.web.ApollonDiagramResource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.modeling.repository.ApollonDiagramRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository"
        ]
      },
      {
        "name": "createApollonDiagram",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.modeling.domain.ApollonDiagram",
          "java.lang.Long"
        ]
      },
      {
        "name": "getApollonDiagram",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Long"
        ]
      },
      {
        "name": "getDiagramsByCourse",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "updateApollonDiagram",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.modeling.domain.ApollonDiagram",
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.modeling.web.ModelingAssessmentResource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getAssessmentBySubmissionId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.modeling.repository.ModelingExerciseRepository",
          "de.tum.cit.aet.artemis.assessment.service.AssessmentService",
          "de.tum.cit.aet.artemis.modeling.repository.ModelingSubmissionRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ExampleSubmissionRepository",
          "de.tum.cit.aet.artemis.exercise.repository.ExerciseRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ResultRepository",
          "de.tum.cit.aet.artemis.exercise.repository.SubmissionRepository"
        ]
      },
      {
        "name": "saveModelingExampleAssessment",
        "parameterTypes": [
          "long",
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.modeling.web.ModelingExerciseResource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.modeling.repository.ModelingExerciseRepository",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.core.service.course.CourseService",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "de.tum.cit.aet.artemis.exercise.repository.ParticipationRepository",
          "de.tum.cit.aet.artemis.modeling.service.ModelingExerciseService",
          "de.tum.cit.aet.artemis.exercise.service.ExerciseDeletionService",
          "de.tum.cit.aet.artemis.modeling.service.ModelingExerciseImportService",
          "de.tum.cit.aet.artemis.exercise.service.SubmissionExportService",
          "de.tum.cit.aet.artemis.exercise.service.ExerciseService",
          "de.tum.cit.aet.artemis.communication.service.notifications.GroupNotificationScheduleService",
          "de.tum.cit.aet.artemis.assessment.repository.GradingCriterionRepository",
          "de.tum.cit.aet.artemis.communication.service.conversation.ChannelService",
          "de.tum.cit.aet.artemis.communication.repository.conversation.ChannelRepository",
          "java.util.Optional",
          "java.util.Optional"
        ]
      },
      {
        "name": "getModelingExercisesForCourse",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "createModelingExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.modeling.domain.ModelingExercise"
        ]
      },
      {
        "name": "deleteModelingExercise",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getAllExercisesOnPage",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.dto.pageablesearch.SearchTermPageableSearchDTO",
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "getModelingExercise",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "importExercise",
        "parameterTypes": [
          "long",
          "de.tum.cit.aet.artemis.modeling.domain.ModelingExercise"
        ]
      },
      {
        "name": "updateModelingExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.modeling.domain.ModelingExercise",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.modeling.web.ModelingExerciseResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.modeling.web.ModelingSubmissionResource",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.repository.SubmissionRepository",
          "de.tum.cit.aet.artemis.modeling.service.ModelingSubmissionService",
          "de.tum.cit.aet.artemis.modeling.repository.ModelingExerciseRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.exercise.repository.ExerciseRepository",
          "de.tum.cit.aet.artemis.assessment.repository.GradingCriterionRepository",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository",
          "de.tum.cit.aet.artemis.modeling.repository.ModelingSubmissionRepository",
          "java.util.Optional"
        ]
      },
      {
        "name": "getAllModelingSubmissions",
        "parameterTypes": [
          "java.lang.Long",
          "boolean",
          "boolean",
          "int"
        ]
      },
      {
        "name": "getLatestModelingSubmission",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getModelingSubmissionWithoutAssessment",
        "parameterTypes": [
          "java.lang.Long",
          "boolean",
          "int"
        ]
      },
      {
        "name": "updateModelingSubmission",
        "parameterTypes": [
          "long",
          "de.tum.cit.aet.artemis.modeling.domain.ModelingSubmission"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.api.AbstractPlagiarismApi",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.api.PlagiarismAccessApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.plagiarism.service.PlagiarismAccessService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.api.PlagiarismCaseApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.plagiarism.repository.PlagiarismCaseRepository",
          "de.tum.cit.aet.artemis.plagiarism.service.PlagiarismCaseService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.api.PlagiarismDetectionApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.plagiarism.service.PlagiarismDetectionService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.api.PlagiarismPostApi",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.api.PlagiarismResultApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.plagiarism.repository.PlagiarismResultRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.api.dtos.PlagiarismMapping"
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismCase",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreatedByContinuousPlagiarismControl",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise"
        ]
      },
      {
        "name": "setLastModifiedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastModifiedDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setPlagiarismSubmissions",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setPost",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.domain.Post"
        ]
      },
      {
        "name": "setStudent",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "setTeam",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Team"
        ]
      },
      {
        "name": "setVerdict",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismVerdict"
        ]
      },
      {
        "name": "setVerdictBy",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "setVerdictDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setVerdictMessage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVerdictPointDeduction",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismCase$HibernateAccessOptimizer$2IOM0ata",
    "fields": [
      {
        "name": "invocationTarget$t714o00"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismCase$HibernateInstantiator$qTZJS2yf",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismCase_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "createdByContinuousPlagiarismControl"
      },
      {
        "name": "exercise"
      },
      {
        "name": "plagiarismSubmissions"
      },
      {
        "name": "post"
      },
      {
        "name": "student"
      },
      {
        "name": "team"
      },
      {
        "name": "verdict"
      },
      {
        "name": "verdictBy"
      },
      {
        "name": "verdictDate"
      },
      {
        "name": "verdictMessage"
      },
      {
        "name": "verdictPointDeduction"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismCheckState"
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismComparison",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setMatches",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setPlagiarismResult",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismResult"
        ]
      },
      {
        "name": "setSimilarity",
        "parameterTypes": [
          "double"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismStatus"
        ]
      },
      {
        "name": "setSubmissionA",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismSubmission"
        ]
      },
      {
        "name": "setSubmissionB",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismSubmission"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismComparison$HibernateAccessOptimizer$CqiEXMka",
    "fields": [
      {
        "name": "invocationTarget$1dia7m1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismComparison$HibernateInstantiator$lIP0hHhP",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismComparison_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "matches"
      },
      {
        "name": "plagiarismResult"
      },
      {
        "name": "similarity"
      },
      {
        "name": "status"
      },
      {
        "name": "submissionA"
      },
      {
        "name": "submissionB"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismDetectionConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getContinuousPlagiarismControlPlagiarismCaseStudentResponsePeriod",
        "parameterTypes": []
      },
      {
        "name": "getMinimumScore",
        "parameterTypes": []
      },
      {
        "name": "getMinimumSize",
        "parameterTypes": []
      },
      {
        "name": "getSimilarityThreshold",
        "parameterTypes": []
      },
      {
        "name": "isContinuousPlagiarismControlEnabled",
        "parameterTypes": []
      },
      {
        "name": "isContinuousPlagiarismControlPostDueDateChecksEnabled",
        "parameterTypes": []
      },
      {
        "name": "setContinuousPlagiarismControlEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setContinuousPlagiarismControlPlagiarismCaseStudentResponsePeriod",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setContinuousPlagiarismControlPostDueDateChecksEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMinimumScore",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMinimumSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setSimilarityThreshold",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "filterSensitiveInformation",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismDetectionConfig$HibernateAccessOptimizer$8Re0EpCC",
    "fields": [
      {
        "name": "invocationTarget$0s6cr80"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismDetectionConfig$HibernateInstantiator$tJfmOULx",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismDetectionConfig_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "continuousPlagiarismControlEnabled"
      },
      {
        "name": "continuousPlagiarismControlPlagiarismCaseStudentResponsePeriod"
      },
      {
        "name": "continuousPlagiarismControlPostDueDateChecksEnabled"
      },
      {
        "name": "minimumScore"
      },
      {
        "name": "minimumSize"
      },
      {
        "name": "similarityThreshold"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismMatch",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setLength",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setStartA",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setStartB",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismMatch_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "length"
      },
      {
        "name": "startA"
      },
      {
        "name": "startB"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismResult",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setComparisons",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDuration",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise"
        ]
      },
      {
        "name": "setLastModifiedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastModifiedDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setSimilarityDistribution",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismResult$HibernateAccessOptimizer$ZkVHnuki",
    "fields": [
      {
        "name": "invocationTarget$jn0qva1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismResult$HibernateInstantiator$qE5K5G0w",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismResult_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "comparisons"
      },
      {
        "name": "duration"
      },
      {
        "name": "exercise"
      },
      {
        "name": "similarityDistribution"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismStatus",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismStatus.NONE"
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismSubmission",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setElements",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setPlagiarismCase",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismCase"
        ]
      },
      {
        "name": "setPlagiarismComparison",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismComparison"
        ]
      },
      {
        "name": "setScore",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setStudentLogin",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSubmissionId",
        "parameterTypes": [
          "long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismSubmission$HibernateAccessOptimizer$7HDR0xDk",
    "fields": [
      {
        "name": "invocationTarget$fb8g8q1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismSubmission$HibernateInstantiator$YgAbOURy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismSubmissionElement",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setColumn",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setFile",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLength",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setLine",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPlagiarismSubmission",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismSubmission"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismSubmissionElement$HibernateAccessOptimizer$fJRQimjh",
    "fields": [
      {
        "name": "invocationTarget$icb2iv0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismSubmissionElement$HibernateInstantiator$XVEbjysj",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismSubmissionElement_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "column"
      },
      {
        "name": "file"
      },
      {
        "name": "length"
      },
      {
        "name": "line"
      },
      {
        "name": "plagiarismSubmission"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismSubmission_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "elements"
      },
      {
        "name": "plagiarismCase"
      },
      {
        "name": "plagiarismComparison"
      },
      {
        "name": "score"
      },
      {
        "name": "size"
      },
      {
        "name": "studentLogin"
      },
      {
        "name": "submissionId"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismVerdict",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.package-info"
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.dto.PlagiarismCaseDTO",
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.dto.PlagiarismCaseInfoDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.dto.PlagiarismVerdictDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.exception.PlagiarismApiNotPresentException"
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.exception.ProgrammingLanguageNotSupportedForPlagiarismDetectionException"
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.repository.PlagiarismCaseRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.repository.PlagiarismComparisonRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.repository.PlagiarismResultRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.repository.PlagiarismSubmissionRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.service.ContinuousPlagiarismControlService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.repository.ExerciseRepository",
          "de.tum.cit.aet.artemis.plagiarism.service.PlagiarismDetectionService",
          "de.tum.cit.aet.artemis.plagiarism.repository.PlagiarismComparisonRepository",
          "de.tum.cit.aet.artemis.plagiarism.service.PlagiarismCaseService",
          "de.tum.cit.aet.artemis.plagiarism.repository.PlagiarismCaseRepository",
          "de.tum.cit.aet.artemis.plagiarism.service.PlagiarismPostService",
          "de.tum.cit.aet.artemis.plagiarism.repository.PlagiarismResultRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.service.PlagiarismAccessService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.plagiarism.repository.PlagiarismComparisonRepository",
          "de.tum.cit.aet.artemis.exercise.service.ExerciseDateService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.service.PlagiarismAnswerPostService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.service.PlagiarismCaseService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.plagiarism.repository.PlagiarismCaseRepository",
          "de.tum.cit.aet.artemis.plagiarism.repository.PlagiarismComparisonRepository",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.communication.service.notifications.SingleUserNotificationService",
          "de.tum.cit.aet.artemis.plagiarism.repository.PlagiarismSubmissionRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.service.PlagiarismDetectionService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.plagiarism.service.TextPlagiarismDetectionService",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.plagiarism.service.ProgrammingPlagiarismDetectionService",
          "de.tum.cit.aet.artemis.plagiarism.repository.PlagiarismResultRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.service.PlagiarismPostService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.communication.repository.SavedPostRepository",
          "de.tum.cit.aet.artemis.communication.repository.PostRepository",
          "de.tum.cit.aet.artemis.exercise.repository.ExerciseRepository",
          "de.tum.cit.aet.artemis.communication.service.WebsocketMessagingService",
          "de.tum.cit.aet.artemis.plagiarism.service.PlagiarismCaseService",
          "de.tum.cit.aet.artemis.plagiarism.repository.PlagiarismCaseRepository",
          "de.tum.cit.aet.artemis.communication.repository.ConversationParticipantRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.service.PlagiarismService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.plagiarism.repository.PlagiarismComparisonRepository",
          "de.tum.cit.aet.artemis.plagiarism.service.PlagiarismCaseService",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.exercise.repository.SubmissionRepository",
          "de.tum.cit.aet.artemis.core.repository.UserRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.service.PlagiarismWebsocketService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.service.WebsocketMessagingService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.service.ProgrammingPlagiarismDetectionService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.service.FileService",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseRepository",
          "de.tum.cit.aet.artemis.plagiarism.service.PlagiarismService",
          "de.tum.cit.aet.artemis.programming.service.GitService",
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseExportService",
          "de.tum.cit.aet.artemis.plagiarism.service.PlagiarismWebsocketService",
          "de.tum.cit.aet.artemis.plagiarism.service.cache.PlagiarismCacheService",
          "de.tum.cit.aet.artemis.programming.service.UriService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.service.TextPlagiarismDetectionService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.Optional",
          "de.tum.cit.aet.artemis.plagiarism.service.PlagiarismWebsocketService",
          "de.tum.cit.aet.artemis.plagiarism.service.cache.PlagiarismCacheService",
          "de.tum.cit.aet.artemis.plagiarism.service.PlagiarismService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.service.cache.PlagiarismCacheService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.hazelcast.core.HazelcastInstance"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.web.PlagiarismAnswerPostResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.web.PlagiarismCaseResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.web.PlagiarismPostResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.web.PlagiarismResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.AbstractBaseProgrammingExerciseParticipation",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getBuildPlanId",
        "parameterTypes": []
      },
      {
        "name": "getRepositoryUri",
        "parameterTypes": []
      },
      {
        "name": "setBuildPlanId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise"
        ]
      },
      {
        "name": "setRepositoryUri",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTestRun",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "filterSensitiveInformation",
        "parameterTypes": []
      },
      {
        "name": "getExercise",
        "parameterTypes": []
      },
      {
        "name": "setRepositoryUri",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.service.localvc.LocalVCRepositoryUri"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.AbstractBaseProgrammingExerciseParticipation_",
    "fields": [
      {
        "name": "buildPlanId"
      },
      {
        "name": "class_"
      },
      {
        "name": "repositoryUri"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.AuthenticationMechanism"
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.AuxiliaryRepository",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCheckoutDirectory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExercise"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRepositoryUri",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.AuxiliaryRepository$HibernateAccessOptimizer$CyU3Abzg",
    "fields": [
      {
        "name": "invocationTarget$jjpto91"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.AuxiliaryRepository$HibernateInstantiator$HAaUXFjN",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.AuxiliaryRepository_",
    "fields": [
      {
        "name": "checkoutDirectory"
      },
      {
        "name": "class_"
      },
      {
        "name": "description"
      },
      {
        "name": "exercise"
      },
      {
        "name": "name"
      },
      {
        "name": "repositoryUri"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.Commit"
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.File"
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.FileType",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ParticipationLifecycle"
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ParticipationVCSAccessToken",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setParticipation",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.participation.Participation"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "setVcsAccessToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ParticipationVCSAccessToken$HibernateAccessOptimizer$OKibWqwC",
    "fields": [
      {
        "name": "invocationTarget$ff0pdh1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ParticipationVCSAccessToken$HibernateInstantiator$mCVc9ZgE",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ParticipationVCSAccessToken_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "participation"
      },
      {
        "name": "user"
      },
      {
        "name": "vcsAccessToken"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExercise",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getAssessmentType",
        "parameterTypes": []
      },
      {
        "name": "getAuxiliaryRepositories",
        "parameterTypes": []
      },
      {
        "name": "getBuildAndTestStudentSubmissionsAfterDueDate",
        "parameterTypes": []
      },
      {
        "name": "getBuildConfig",
        "parameterTypes": []
      },
      {
        "name": "getDefaultTestCaseVisibility",
        "parameterTypes": []
      },
      {
        "name": "getExerciseType",
        "parameterTypes": []
      },
      {
        "name": "getMaxStaticCodeAnalysisPenalty",
        "parameterTypes": []
      },
      {
        "name": "getPackageName",
        "parameterTypes": []
      },
      {
        "name": "getProgrammingLanguage",
        "parameterTypes": []
      },
      {
        "name": "getProjectKey",
        "parameterTypes": []
      },
      {
        "name": "getProjectType",
        "parameterTypes": []
      },
      {
        "name": "getShowTestNamesToStudents",
        "parameterTypes": []
      },
      {
        "name": "getSolutionParticipation",
        "parameterTypes": []
      },
      {
        "name": "getStaticCodeAnalysisCategories",
        "parameterTypes": []
      },
      {
        "name": "getSubmissionPolicy",
        "parameterTypes": []
      },
      {
        "name": "getTasks",
        "parameterTypes": []
      },
      {
        "name": "getTemplateParticipation",
        "parameterTypes": []
      },
      {
        "name": "getTestCases",
        "parameterTypes": []
      },
      {
        "name": "getTestCasesChanged",
        "parameterTypes": []
      },
      {
        "name": "getTestRepositoryUri",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "isAllowOfflineIde",
        "parameterTypes": []
      },
      {
        "name": "isAllowOnlineEditor",
        "parameterTypes": []
      },
      {
        "name": "isAllowOnlineIde",
        "parameterTypes": []
      },
      {
        "name": "isReleaseTestsWithExampleSolution",
        "parameterTypes": []
      },
      {
        "name": "isStaticCodeAnalysisEnabled",
        "parameterTypes": []
      },
      {
        "name": "setAllowOfflineIde",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setAllowOnlineEditor",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setAllowOnlineIde",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAuxiliaryRepositories",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setBuildAndTestStudentSubmissionsAfterDueDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setBuildConfig",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseBuildConfig"
        ]
      },
      {
        "name": "setMaxStaticCodeAnalysisPenalty",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setPackageName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProgrammingLanguage",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingLanguage"
        ]
      },
      {
        "name": "setProjectKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProjectType",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProjectType"
        ]
      },
      {
        "name": "setReleaseTestsWithExampleSolution",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSecondCorrectionEnabled",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setShowTestNamesToStudents",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setShowTestNamesToStudents",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSolutionParticipation",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.SolutionProgrammingExerciseParticipation"
        ]
      },
      {
        "name": "setStaticCodeAnalysisCategories",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setStaticCodeAnalysisEnabled",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSubmissionPolicy",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.submissionpolicy.SubmissionPolicy"
        ]
      },
      {
        "name": "setTasks",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setTemplateParticipation",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.TemplateProgrammingExerciseParticipation"
        ]
      },
      {
        "name": "setTestCases",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setTestCasesChanged",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setTestRepositoryUri",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "addAuxiliaryRepository",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.AuxiliaryRepository"
        ]
      },
      {
        "name": "addStaticCodeAnalysisCategory",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.StaticCodeAnalysisCategory"
        ]
      },
      {
        "name": "areManualResultsAllowed",
        "parameterTypes": []
      },
      {
        "name": "disconnectRelatedEntities",
        "parameterTypes": []
      },
      {
        "name": "filterResultsForStudents",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.participation.Participation"
        ]
      },
      {
        "name": "filterSensitiveInformation",
        "parameterTypes": []
      },
      {
        "name": "forceNewProjectKey",
        "parameterTypes": []
      },
      {
        "name": "generateAndSetProjectKey",
        "parameterTypes": []
      },
      {
        "name": "generateBuildPlanId",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.build.BuildPlanType"
        ]
      },
      {
        "name": "generateRepositoryName",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.RepositoryType"
        ]
      },
      {
        "name": "generateRepositoryName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAuxiliaryRepositoriesForBuildPlan",
        "parameterTypes": []
      },
      {
        "name": "getPackageFolderName",
        "parameterTypes": []
      },
      {
        "name": "getProjectName",
        "parameterTypes": []
      },
      {
        "name": "getRepositoryURI",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.RepositoryType"
        ]
      },
      {
        "name": "getSolutionBuildPlanId",
        "parameterTypes": []
      },
      {
        "name": "getSolutionRepositoryUri",
        "parameterTypes": []
      },
      {
        "name": "getTemplateBuildPlanId",
        "parameterTypes": []
      },
      {
        "name": "getTemplateRepositoryUri",
        "parameterTypes": []
      },
      {
        "name": "getVcsSolutionRepositoryUri",
        "parameterTypes": []
      },
      {
        "name": "getVcsTemplateRepositoryUri",
        "parameterTypes": []
      },
      {
        "name": "getVcsTestRepositoryUri",
        "parameterTypes": []
      },
      {
        "name": "programmingLanguage",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingLanguage"
        ]
      },
      {
        "name": "setSolutionRepositoryUri",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTemplateRepositoryUri",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTestCasesChanged",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "validateProgrammingSettings",
        "parameterTypes": []
      },
      {
        "name": "validateSettingsForFeedbackRequest",
        "parameterTypes": []
      },
      {
        "name": "validateStaticCodeAnalysisSettings",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.service.ProgrammingLanguageFeature"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExercise$HibernateAccessOptimizer$WxAkSbHx",
    "fields": [
      {
        "name": "invocationTarget$efknaq1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExercise$HibernateInstantiator$vKv8t6aG",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseBuildConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getAssignmentCheckoutPath",
        "parameterTypes": []
      },
      {
        "name": "getBranch",
        "parameterTypes": []
      },
      {
        "name": "getBranchRegex",
        "parameterTypes": []
      },
      {
        "name": "getBuildPlanAccessSecret",
        "parameterTypes": []
      },
      {
        "name": "getBuildPlanConfiguration",
        "parameterTypes": []
      },
      {
        "name": "getBuildScript",
        "parameterTypes": []
      },
      {
        "name": "getCheckoutSolutionRepository",
        "parameterTypes": []
      },
      {
        "name": "getDockerFlags",
        "parameterTypes": []
      },
      {
        "name": "getSolutionCheckoutPath",
        "parameterTypes": []
      },
      {
        "name": "getTestCheckoutPath",
        "parameterTypes": []
      },
      {
        "name": "getTheiaImage",
        "parameterTypes": []
      },
      {
        "name": "getTimeoutSeconds",
        "parameterTypes": []
      },
      {
        "name": "getWindfile",
        "parameterTypes": []
      },
      {
        "name": "hasSequentialTestRuns",
        "parameterTypes": []
      },
      {
        "name": "isAllowBranching",
        "parameterTypes": []
      },
      {
        "name": "setAllowBranching",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAssignmentCheckoutPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBranch",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBranchRegex",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBuildPlanAccessSecret",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBuildPlanConfiguration",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBuildScript",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCheckoutSolutionRepository",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDockerFlags",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProgrammingExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExercise"
        ]
      },
      {
        "name": "setSequentialTestRuns",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSolutionCheckoutPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTestCheckoutPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTheiaImage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimeoutSeconds",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "filterSensitiveInformation",
        "parameterTypes": []
      },
      {
        "name": "generateAndSetBuildPlanAccessSecret",
        "parameterTypes": []
      },
      {
        "name": "getProgrammingExercise",
        "parameterTypes": []
      },
      {
        "name": "hasBuildPlanAccessSecretSet",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseBuildConfig$HibernateAccessOptimizer$mAd4Y3Ve",
    "fields": [
      {
        "name": "invocationTarget$58f9sr1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseBuildConfig$HibernateInstantiator$nWWyGYKn",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseBuildConfig_",
    "fields": [
      {
        "name": "allowBranching"
      },
      {
        "name": "assignmentCheckoutPath"
      },
      {
        "name": "branch"
      },
      {
        "name": "branchRegex"
      },
      {
        "name": "buildPlanAccessSecret"
      },
      {
        "name": "buildPlanConfiguration"
      },
      {
        "name": "buildScript"
      },
      {
        "name": "checkoutSolutionRepository"
      },
      {
        "name": "class_"
      },
      {
        "name": "dockerFlags"
      },
      {
        "name": "programmingExercise"
      },
      {
        "name": "sequentialTestRuns"
      },
      {
        "name": "solutionCheckoutPath"
      },
      {
        "name": "testCheckoutPath"
      },
      {
        "name": "theiaImage"
      },
      {
        "name": "timeoutSeconds"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseBuildStatistics",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setBuildCountWhenUpdated",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setBuildDurationSeconds",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setExerciseId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseBuildStatistics$HibernateAccessOptimizer$VAS47hVZ",
    "fields": [
      {
        "name": "invocationTarget$t8mmsn1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseBuildStatistics$HibernateInstantiator$DBpBLCFY",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseBuildStatistics_",
    "fields": [
      {
        "name": "buildCountWhenUpdated"
      },
      {
        "name": "buildDurationSeconds"
      },
      {
        "name": "class_"
      },
      {
        "name": "exerciseId"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseParticipation",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getUserIndependentRepositoryUri",
        "parameterTypes": []
      },
      {
        "name": "setStudent",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "setTeam",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Team"
        ]
      },
      {
        "name": "setTestRun",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getVcsRepositoryUri",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseStudentParticipation",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getBranch",
        "parameterTypes": []
      },
      {
        "name": "getBuildPlanId",
        "parameterTypes": []
      },
      {
        "name": "getRepositoryUri",
        "parameterTypes": []
      },
      {
        "name": "setBranch",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBuildPlanId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRepositoryUri",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStudent",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "setTeam",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Team"
        ]
      },
      {
        "name": "setTestRun",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseStudentParticipation$HibernateAccessOptimizer$6KNATGoh",
    "fields": [
      {
        "name": "invocationTarget$h4a3u90"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseStudentParticipation$HibernateInstantiator$NCSfuIkR",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseStudentParticipation_",
    "fields": [
      {
        "name": "branch"
      },
      {
        "name": "buildPlanId"
      },
      {
        "name": "class_"
      },
      {
        "name": "repositoryUri"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseTask",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExercise"
        ]
      },
      {
        "name": "setTaskName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTestCases",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseTask$HibernateAccessOptimizer$QuMfs2B7",
    "fields": [
      {
        "name": "invocationTarget$pg5v1r0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseTask$HibernateInstantiator$kdwEU4rl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseTask_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "exercise"
      },
      {
        "name": "taskName"
      },
      {
        "name": "testCases"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseTestCase",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getBonusMultiplier",
        "parameterTypes": []
      },
      {
        "name": "getBonusPoints",
        "parameterTypes": []
      },
      {
        "name": "getTasks",
        "parameterTypes": []
      },
      {
        "name": "getTestName",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getVisibility",
        "parameterTypes": []
      },
      {
        "name": "getWeight",
        "parameterTypes": []
      },
      {
        "name": "isActive",
        "parameterTypes": []
      },
      {
        "name": "setActive",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setBonusMultiplier",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setBonusPoints",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExercise"
        ]
      },
      {
        "name": "setTasks",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setTestName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseTestCaseType"
        ]
      },
      {
        "name": "setVisibility",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.Visibility"
        ]
      },
      {
        "name": "setWeight",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "active",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "bonusMultiplier",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "bonusPoints",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "clone",
        "parameterTypes": []
      },
      {
        "name": "exercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExercise"
        ]
      },
      {
        "name": "getExercise",
        "parameterTypes": []
      },
      {
        "name": "id",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "isAfterDueDate",
        "parameterTypes": []
      },
      {
        "name": "isInvisible",
        "parameterTypes": []
      },
      {
        "name": "isSameTestCase",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseTestCase"
        ]
      },
      {
        "name": "isSuccessful",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.Result"
        ]
      },
      {
        "name": "testName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "visibility",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.Visibility"
        ]
      },
      {
        "name": "wasNotExecuted",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.Result"
        ]
      },
      {
        "name": "weight",
        "parameterTypes": [
          "java.lang.Double"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseTestCase$HibernateAccessOptimizer$D0VclUtY",
    "fields": [
      {
        "name": "invocationTarget$fcq9471"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseTestCase$HibernateInstantiator$7J7SZijw",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseTestCaseType",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseTestCase_",
    "fields": [
      {
        "name": "active"
      },
      {
        "name": "bonusMultiplier"
      },
      {
        "name": "bonusPoints"
      },
      {
        "name": "class_"
      },
      {
        "name": "exercise"
      },
      {
        "name": "tasks"
      },
      {
        "name": "testName"
      },
      {
        "name": "type"
      },
      {
        "name": "visibility"
      },
      {
        "name": "weight"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExercise_",
    "fields": [
      {
        "name": "allowOfflineIde"
      },
      {
        "name": "allowOnlineEditor"
      },
      {
        "name": "allowOnlineIde"
      },
      {
        "name": "auxiliaryRepositories"
      },
      {
        "name": "buildAndTestStudentSubmissionsAfterDueDate"
      },
      {
        "name": "buildConfig"
      },
      {
        "name": "class_"
      },
      {
        "name": "maxStaticCodeAnalysisPenalty"
      },
      {
        "name": "packageName"
      },
      {
        "name": "programmingLanguage"
      },
      {
        "name": "projectKey"
      },
      {
        "name": "projectType"
      },
      {
        "name": "releaseTestsWithExampleSolution"
      },
      {
        "name": "showTestNamesToStudents"
      },
      {
        "name": "solutionParticipation"
      },
      {
        "name": "staticCodeAnalysisCategories"
      },
      {
        "name": "staticCodeAnalysisEnabled"
      },
      {
        "name": "submissionPolicy"
      },
      {
        "name": "tasks"
      },
      {
        "name": "templateParticipation"
      },
      {
        "name": "testCases"
      },
      {
        "name": "testCasesChanged"
      },
      {
        "name": "testRepositoryUri"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingLanguage",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingSubmission",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getBuildLogEntries",
        "parameterTypes": []
      },
      {
        "name": "getCommitHash",
        "parameterTypes": []
      },
      {
        "name": "getSubmissionExerciseType",
        "parameterTypes": []
      },
      {
        "name": "isBuildFailed",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "setBuildFailed",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setBuildLogEntries",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setCommitHash",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersions",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingSubmission$HibernateAccessOptimizer$wHVxk6un",
    "fields": [
      {
        "name": "invocationTarget$287o0h1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingSubmission$HibernateInstantiator$UZNXO73c",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingSubmission_",
    "fields": [
      {
        "name": "buildFailed"
      },
      {
        "name": "buildLogEntries"
      },
      {
        "name": "class_"
      },
      {
        "name": "commitHash"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProjectType",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.Repository"
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.RepositoryType",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.SolutionProgrammingExerciseParticipation",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setProgrammingExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExercise"
        ]
      },
      {
        "name": "setTestRun",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getProgrammingExercise",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.SolutionProgrammingExerciseParticipation$HibernateAccessOptimizer$URjMB97u",
    "fields": [
      {
        "name": "invocationTarget$ibi3po0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.SolutionProgrammingExerciseParticipation$HibernateInstantiator$0JC5fPdc",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.SolutionProgrammingExerciseParticipation_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "programmingExercise"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.StaticCodeAnalysisCategory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExercise"
        ]
      },
      {
        "name": "setMaxPenalty",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPenalty",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setState",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.CategoryState"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.StaticCodeAnalysisCategory$HibernateAccessOptimizer$BIQN5U5j",
    "fields": [
      {
        "name": "invocationTarget$37h8df0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.StaticCodeAnalysisCategory$HibernateInstantiator$odS3VHKK",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.StaticCodeAnalysisCategory_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "exercise"
      },
      {
        "name": "maxPenalty"
      },
      {
        "name": "name"
      },
      {
        "name": "penalty"
      },
      {
        "name": "state"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.StaticCodeAnalysisDefaultCategory"
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.StaticCodeAnalysisDefaultCategory$CategoryMapping"
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.TemplateProgrammingExerciseParticipation",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getProgrammingExercise",
        "parameterTypes": []
      },
      {
        "name": "setProgrammingExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExercise"
        ]
      },
      {
        "name": "setTestRun",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getType",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.TemplateProgrammingExerciseParticipation$HibernateAccessOptimizer$7voROj1l",
    "fields": [
      {
        "name": "invocationTarget$4ti9mj1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.TemplateProgrammingExerciseParticipation$HibernateInstantiator$v2yO3rid",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.TemplateProgrammingExerciseParticipation_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "programmingExercise"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.UserSshPublicKey",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCreationDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setExpiryDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setKeyHash",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastUsedDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setPublicKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.UserSshPublicKey$HibernateAccessOptimizer$kbolF7L5",
    "fields": [
      {
        "name": "invocationTarget$gevajl1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.UserSshPublicKey$HibernateInstantiator$4Vcnfeem",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.UserSshPublicKey_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "creationDate"
      },
      {
        "name": "expiryDate"
      },
      {
        "name": "keyHash"
      },
      {
        "name": "label"
      },
      {
        "name": "lastUsedDate"
      },
      {
        "name": "publicKey"
      },
      {
        "name": "userId"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.VcsAccessLog",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setAuthenticationMechanism",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.AuthenticationMechanism"
        ]
      },
      {
        "name": "setCommitHash",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEmail",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIpAddress",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setParticipation",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.participation.Participation"
        ]
      },
      {
        "name": "setRepositoryActionType",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.web.repository.RepositoryActionType"
        ]
      },
      {
        "name": "setTimestamp",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.VcsAccessLog$HibernateAccessOptimizer$hL8ShonR",
    "fields": [
      {
        "name": "invocationTarget$bmbd360"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.VcsAccessLog$HibernateInstantiator$P93i54Mg",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.VcsAccessLog_",
    "fields": [
      {
        "name": "authenticationMechanism"
      },
      {
        "name": "class_"
      },
      {
        "name": "commitHash"
      },
      {
        "name": "email"
      },
      {
        "name": "ipAddress"
      },
      {
        "name": "name"
      },
      {
        "name": "participation"
      },
      {
        "name": "repositoryActionType"
      },
      {
        "name": "timestamp"
      },
      {
        "name": "user"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.VcsRepositoryUri"
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.build.BuildJob",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setBuildAgentAddress",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBuildCompletionDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setBuildJobId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBuildStartDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setBuildStatus",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.build.BuildStatus"
        ]
      },
      {
        "name": "setBuildSubmissionDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setCommitHash",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCourseId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setDockerImage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExerciseId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setParticipationId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setPriority",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setRepositoryName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRepositoryType",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.RepositoryType"
        ]
      },
      {
        "name": "setResult",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.Result"
        ]
      },
      {
        "name": "setRetryCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setTriggeredByPushTo",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.RepositoryType"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.build.BuildJob$HibernateAccessOptimizer$rH8vCVsJ",
    "fields": [
      {
        "name": "invocationTarget$f82pit0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.build.BuildJob$HibernateInstantiator$BzoLcUhi",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.build.BuildJob_",
    "fields": [
      {
        "name": "buildAgentAddress"
      },
      {
        "name": "buildCompletionDate"
      },
      {
        "name": "buildJobId"
      },
      {
        "name": "buildStartDate"
      },
      {
        "name": "buildStatus"
      },
      {
        "name": "buildSubmissionDate"
      },
      {
        "name": "class_"
      },
      {
        "name": "commitHash"
      },
      {
        "name": "courseId"
      },
      {
        "name": "dockerImage"
      },
      {
        "name": "exerciseId"
      },
      {
        "name": "name"
      },
      {
        "name": "participationId"
      },
      {
        "name": "priority"
      },
      {
        "name": "repositoryName"
      },
      {
        "name": "repositoryType"
      },
      {
        "name": "result"
      },
      {
        "name": "retryCount"
      },
      {
        "name": "triggeredByPushTo"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.build.BuildLogEntry",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setLog",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProgrammingSubmission",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingSubmission"
        ]
      },
      {
        "name": "setTime",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.build.BuildLogEntry$HibernateAccessOptimizer$SxxvFT5R",
    "fields": [
      {
        "name": "invocationTarget$6b3ka11"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.build.BuildLogEntry$HibernateInstantiator$J9KKCK2n",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.build.BuildLogEntry_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "log"
      },
      {
        "name": "programmingSubmission"
      },
      {
        "name": "time"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.build.BuildPlan",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setBuildPlan",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProgrammingExercises",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.build.BuildPlan$HibernateAccessOptimizer$AAoLjzTu",
    "fields": [
      {
        "name": "invocationTarget$7tv1qk1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.build.BuildPlan$HibernateInstantiator$jQ2MUAtD",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.build.BuildPlanType"
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.build.BuildPlan_",
    "fields": [
      {
        "name": "buildPlan"
      },
      {
        "name": "class_"
      },
      {
        "name": "programmingExercises"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.build.BuildStatus",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.build.BuildStatus.SUCCESSFUL"
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.build.package-info"
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ide.Ide",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setDeepLink",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserIdeMappings",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ide.Ide$HibernateAccessOptimizer$pT1WWzi8",
    "fields": [
      {
        "name": "invocationTarget$9qoan31"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ide.Ide$HibernateInstantiator$fxXVHHxf",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ide.Ide_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "deepLink"
      },
      {
        "name": "name"
      },
      {
        "name": "userIdeMappings"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ide.UserIdeMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ide.UserIdeMapping$UserIdeMappingId"
        ]
      },
      {
        "name": "setIde",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ide.Ide"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ide.UserIdeMapping$HibernateAccessOptimizer$LrOSYQCP",
    "fields": [
      {
        "name": "invocationTarget$61elcn1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ide.UserIdeMapping$HibernateInstantiator$TKUcRPED",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ide.UserIdeMapping$UserIdeMappingId",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setProgrammingLanguage",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingLanguage"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ],
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ide.UserIdeMapping$UserIdeMappingId_"
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ide.UserIdeMapping_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "id"
      },
      {
        "name": "ide"
      },
      {
        "name": "user"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ide.package-info"
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.package-info"
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.submissionpolicy.LockRepositoryPolicy",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.submissionpolicy.LockRepositoryPolicy$HibernateAccessOptimizer$uQDEpQc8",
    "fields": [
      {
        "name": "invocationTarget$3ghp7d0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.submissionpolicy.LockRepositoryPolicy$HibernateInstantiator$L6dRhAoZ",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.submissionpolicy.LockRepositoryPolicy_",
    "fields": [
      {
        "name": "class_"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.submissionpolicy.SubmissionPenaltyPolicy",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setExceedingPenalty",
        "parameterTypes": [
          "java.lang.Double"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.submissionpolicy.SubmissionPenaltyPolicy$HibernateAccessOptimizer$gEfyKcgm",
    "fields": [
      {
        "name": "invocationTarget$1mt6m30"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.submissionpolicy.SubmissionPenaltyPolicy$HibernateInstantiator$zQ3QsB7q",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.submissionpolicy.SubmissionPenaltyPolicy_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "exceedingPenalty"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.submissionpolicy.SubmissionPolicy",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setActive",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setProgrammingExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExercise"
        ]
      },
      {
        "name": "setSubmissionLimit",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.submissionpolicy.SubmissionPolicy$HibernateAccessOptimizer$H1ej86fx",
    "fields": [
      {
        "name": "invocationTarget$ob97ab1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.submissionpolicy.SubmissionPolicy_",
    "fields": [
      {
        "name": "active"
      },
      {
        "name": "class_"
      },
      {
        "name": "programmingExercise"
      },
      {
        "name": "submissionLimit"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.submissionpolicy.package-info"
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.dto.BuildJobInterface"
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.dto.BuildJobStatisticsDTO",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "double",
          "long",
          "java.lang.Long"
        ]
      }
    ],
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.dto.BuildPlanCheckoutDirectoriesDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "exerciseCheckoutDirectory",
        "parameterTypes": []
      },
      {
        "name": "solutionCheckoutDirectory",
        "parameterTypes": []
      },
      {
        "name": "testCheckoutDirectory",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.dto.BuildResultNotification"
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.dto.CheckoutDirectoriesDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "solutionBuildPlanCheckoutDirectories",
        "parameterTypes": []
      },
      {
        "name": "submissionBuildPlanCheckoutDirectories",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.dto.ConsistencyErrorDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.dto.ConsistencyErrorDTO$ErrorType",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.dto.FileMove"
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.dto.IdeDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.dto.IdeMappingDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.dto.OnlineTeamStudentDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.dto.ProgrammingExerciseGradingStatisticsDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.dto.ProgrammingExerciseGradingStatisticsDTO$TestCaseStats"
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.dto.ProgrammingExerciseNamesDTO",
    "queryAllDeclaredConstructors": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.dto.ProgrammingExerciseResetOptionsDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.dto.ProgrammingExerciseTestCaseDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Double",
          "java.lang.Double",
          "java.lang.Double",
          "de.tum.cit.aet.artemis.assessment.domain.Visibility"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.dto.ProgrammingSubmissionIdAndSubmissionDateDTO",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "long",
          "java.time.ZonedDateTime"
        ]
      }
    ],
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.dto.RepositoryStatusDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "repositoryStatus",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.dto.RepositoryStatusDTOType",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.dto.ResultDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "assessmentType",
        "parameterTypes": []
      },
      {
        "name": "codeIssueCount",
        "parameterTypes": []
      },
      {
        "name": "completionDate",
        "parameterTypes": []
      },
      {
        "name": "exampleResult",
        "parameterTypes": []
      },
      {
        "name": "feedbacks",
        "parameterTypes": []
      },
      {
        "name": "hasComplaint",
        "parameterTypes": []
      },
      {
        "name": "id",
        "parameterTypes": []
      },
      {
        "name": "participation",
        "parameterTypes": []
      },
      {
        "name": "passedTestCaseCount",
        "parameterTypes": []
      },
      {
        "name": "rated",
        "parameterTypes": []
      },
      {
        "name": "score",
        "parameterTypes": []
      },
      {
        "name": "submission",
        "parameterTypes": []
      },
      {
        "name": "successful",
        "parameterTypes": []
      },
      {
        "name": "testCaseCount",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.dto.ResultDTO$FeedbackDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "credits",
        "parameterTypes": []
      },
      {
        "name": "detailText",
        "parameterTypes": []
      },
      {
        "name": "hasLongFeedbackText",
        "parameterTypes": []
      },
      {
        "name": "id",
        "parameterTypes": []
      },
      {
        "name": "positive",
        "parameterTypes": []
      },
      {
        "name": "reference",
        "parameterTypes": []
      },
      {
        "name": "testCase",
        "parameterTypes": []
      },
      {
        "name": "text",
        "parameterTypes": []
      },
      {
        "name": "type",
        "parameterTypes": []
      },
      {
        "name": "visibility",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.dto.ResultDTO$TestCaseDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "id",
        "parameterTypes": []
      },
      {
        "name": "testName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.dto.StaticCodeAnalysisIssue"
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.dto.SubmissionProcessingDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "buildStartDate",
        "parameterTypes": []
      },
      {
        "name": "commitHash",
        "parameterTypes": []
      },
      {
        "name": "estimatedCompletionDate",
        "parameterTypes": []
      },
      {
        "name": "exerciseId",
        "parameterTypes": []
      },
      {
        "name": "participationId",
        "parameterTypes": []
      },
      {
        "name": "submissionDate",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.dto.TestCaseBase"
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.dto.UserSshPublicKeyDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.time.ZonedDateTime",
          "java.time.ZonedDateTime",
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "creationDate",
        "parameterTypes": []
      },
      {
        "name": "expiryDate",
        "parameterTypes": []
      },
      {
        "name": "id",
        "parameterTypes": []
      },
      {
        "name": "keyHash",
        "parameterTypes": []
      },
      {
        "name": "label",
        "parameterTypes": []
      },
      {
        "name": "lastUsedDate",
        "parameterTypes": []
      },
      {
        "name": "publicKey",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.dto.aeolus.Action",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.dto.aeolus.AeolusRepository",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.dto.aeolus.AeolusResult",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "before",
        "parameterTypes": []
      },
      {
        "name": "ignore",
        "parameterTypes": []
      },
      {
        "name": "name",
        "parameterTypes": []
      },
      {
        "name": "path",
        "parameterTypes": []
      },
      {
        "name": "type",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.dto.aeolus.DockerConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.util.List",
          "java.util.List"
        ]
      },
      {
        "name": "image",
        "parameterTypes": []
      },
      {
        "name": "parameters",
        "parameterTypes": []
      },
      {
        "name": "tag",
        "parameterTypes": []
      },
      {
        "name": "volumes",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.dto.aeolus.ScriptAction",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "java.util.Map",
          "java.util.List",
          "java.lang.String",
          "boolean",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "environment",
        "parameterTypes": []
      },
      {
        "name": "name",
        "parameterTypes": []
      },
      {
        "name": "parameters",
        "parameterTypes": []
      },
      {
        "name": "platform",
        "parameterTypes": []
      },
      {
        "name": "results",
        "parameterTypes": []
      },
      {
        "name": "runAlways",
        "parameterTypes": []
      },
      {
        "name": "script",
        "parameterTypes": []
      },
      {
        "name": "workdir",
        "parameterTypes": []
      }
    ],
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.dto.aeolus.Windfile",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "de.tum.cit.aet.artemis.programming.dto.aeolus.WindfileMetadata",
          "java.util.List",
          "java.util.Map"
        ]
      },
      {
        "name": "actions",
        "parameterTypes": []
      },
      {
        "name": "api",
        "parameterTypes": []
      },
      {
        "name": "metadata",
        "parameterTypes": []
      },
      {
        "name": "repositories",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.dto.aeolus.WindfileMetadata",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "de.tum.cit.aet.artemis.programming.dto.aeolus.DockerConfig",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "author",
        "parameterTypes": []
      },
      {
        "name": "description",
        "parameterTypes": []
      },
      {
        "name": "docker",
        "parameterTypes": []
      },
      {
        "name": "gitCredentials",
        "parameterTypes": []
      },
      {
        "name": "id",
        "parameterTypes": []
      },
      {
        "name": "name",
        "parameterTypes": []
      },
      {
        "name": "resultHook",
        "parameterTypes": []
      },
      {
        "name": "resultHookCredentials",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.exception.BuildTriggerWebsocketError",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getParticipationId",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.repository.AuxiliaryRepositoryRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.repository.BuildJobRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.repository.BuildLogEntryRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.repository.BuildPlanRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.repository.ParticipationVCSAccessTokenRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "findByUserIdAndParticipationIdOrElseThrow",
        "parameterTypes": [
          "long",
          "long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseBuildConfigRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getProgrammingExerciseBuildConfigElseThrow",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExercise"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseBuildStatisticsRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "findByIdWithStudentParticipationsAndSubmissionsElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByIdWithSubmissionPolicyElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByIdWithTemplateAndSolutionParticipationAndAuxiliaryRepositoriesElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByIdWithTemplateAndSolutionParticipationElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByIdWithTemplateAndSolutionParticipationTeamAssignmentConfigCategoriesAndCompetenciesAndPlagiarismDetectionConfigAndBuildConfigElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByIdWithTemplateAndSolutionParticipationTeamAssignmentConfigCategoriesAndCompetenciesElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findByIdWithTemplateParticipationElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findForCreationByIdElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findOneByProjectKeyOrThrow",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getProgrammingExerciseFromParticipation",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseParticipation"
        ]
      },
      {
        "name": "saveForCreation",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExercise"
        ]
      },
      {
        "name": "validateCourseAndExerciseShortName",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExercise",
          "de.tum.cit.aet.artemis.core.domain.Course"
        ]
      },
      {
        "name": "validateCourseSettings",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExercise",
          "de.tum.cit.aet.artemis.core.domain.Course"
        ]
      },
      {
        "name": "validateTitle",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExercise",
          "de.tum.cit.aet.artemis.core.domain.Course"
        ]
      },
      {
        "name": "findByIdElseThrow",
        "parameterTypes": [
          "long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseStudentParticipationRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "findWithSubmissionsByRepositoryUriElseThrow",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findByRepositoryUriElseThrow",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseTaskRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseTestCaseRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.repository.ProgrammingSubmissionRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "findFirstByParticipationIdAndCommitHashOrderByIdDescWithFeedbacksAndTeamStudents",
        "parameterTypes": [
          "long",
          "java.lang.String"
        ]
      },
      {
        "name": "findFirstByParticipationIdWithResultsOrderBySubmissionDateDesc",
        "parameterTypes": [
          "long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.repository.SolutionProgrammingExerciseParticipationRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "findByExerciseIdElseThrow",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification",
          "long"
        ]
      },
      {
        "name": "findByExerciseIdWithDynamicFetchElseThrow",
        "parameterTypes": [
          "long",
          "java.util.Collection"
        ]
      },
      {
        "name": "findByProgrammingExerciseIdElseThrow",
        "parameterTypes": [
          "long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.repository.StaticCodeAnalysisCategoryRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.repository.SubmissionPolicyRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.repository.TemplateProgrammingExerciseParticipationRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "findByExerciseIdElseThrow",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification",
          "long"
        ]
      },
      {
        "name": "findByExerciseIdWithDynamicFetchElseThrow",
        "parameterTypes": [
          "long",
          "java.util.Collection"
        ]
      },
      {
        "name": "findByProgrammingExerciseIdElseThrow",
        "parameterTypes": [
          "long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.repository.UserSshPublicKeyRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.repository.VcsAccessLogRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.repository.settings.IdeRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.repository.settings.UserIdeMappingRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.AbstractGitService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "cleanup",
        "parameterTypes": []
      },
      {
        "name": "deleteLocalRepository",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.Repository"
        ]
      },
      {
        "name": "getLastCommitHash",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.service.localvc.LocalVCRepositoryUri"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.AutomaticProgrammingExerciseCleanupService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.service.ProfileService",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseStudentParticipationRepository",
          "de.tum.cit.aet.artemis.exercise.service.ParticipationDeletionService",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseRepository",
          "de.tum.cit.aet.artemis.programming.service.GitService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.AuxiliaryRepositoryService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.repository.AuxiliaryRepositoryRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.BuildLogEntryService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.repository.BuildLogEntryRepository",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingSubmissionRepository",
          "de.tum.cit.aet.artemis.core.service.ProfileService",
          "de.tum.cit.aet.artemis.programming.repository.BuildJobRepository",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.BuildScriptGenerationService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.BuildScriptProviderService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.service.ResourceLoaderService",
          "de.tum.cit.aet.artemis.core.service.ProfileService"
        ]
      },
      {
        "name": "cacheOnBoot",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.ConsistencyCheckService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.Optional",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.DefaultTemplateUpgradeService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "upgradeTemplate",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExercise"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.GenericBuildScriptGenerationService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.service.BuildScriptProviderService"
        ]
      },
      {
        "name": "getScript",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExercise"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.GitService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.service.ZipFileService"
        ]
      },
      {
        "name": "cleanup",
        "parameterTypes": []
      },
      {
        "name": "deleteLocalRepository",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.Repository"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.JavaTemplateUpgradeService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseRepositoryService",
          "de.tum.cit.aet.artemis.programming.service.GitService",
          "de.tum.cit.aet.artemis.core.service.ResourceLoaderService",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.programming.service.RepositoryService"
        ]
      },
      {
        "name": "upgradeTemplate",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExercise"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.LicenseService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.config.LicenseConfiguration"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.ParticipationVcsAccessTokenService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.repository.ParticipationVCSAccessTokenRepository",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseStudentParticipationRepository",
          "de.tum.cit.aet.artemis.exercise.repository.TeamRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.PlantUmlService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.service.ResourceLoaderService",
          "java.nio.file.Path"
        ]
      },
      {
        "name": "applicationReady",
        "parameterTypes": []
      },
      {
        "name": "generateSvg",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.ProgrammingAssessmentService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseAtlasIrisService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.Optional",
          "java.util.Optional"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseBuildConfigService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.service.LicenseService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseBuildPlanService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseBuildConfigRepository",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.core.service.ProfileService",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseStudentParticipationRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseCodeReviewFeedbackService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.service.notifications.GroupNotificationService",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.exercise.service.SubmissionService",
          "de.tum.cit.aet.artemis.assessment.service.ResultService",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseStudentParticipationRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ResultRepository",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseParticipationService",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingMessagingService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseCreationScheduleService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.service.notifications.GroupNotificationScheduleService",
          "de.tum.cit.aet.artemis.core.service.messaging.InstanceMessageSendService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseCreationUpdateService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseRepositoryService",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseBuildConfigRepository",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingSubmissionService",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.exercise.service.ExerciseService",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseRepository",
          "de.tum.cit.aet.artemis.communication.service.conversation.ChannelService",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseTaskService",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseBuildPlanService",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseCreationScheduleService",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseAtlasIrisService",
          "de.tum.cit.aet.artemis.programming.repository.TemplateProgrammingExerciseParticipationRepository",
          "de.tum.cit.aet.artemis.programming.repository.SolutionProgrammingExerciseParticipationRepository",
          "de.tum.cit.aet.artemis.programming.repository.AuxiliaryRepositoryRepository",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.exercise.repository.ParticipationRepository",
          "de.tum.cit.aet.artemis.programming.service.GitService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseDeletionService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseRepositoryService",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseRepository",
          "de.tum.cit.aet.artemis.exercise.service.ParticipationDeletionService",
          "java.util.Optional",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.core.service.messaging.InstanceMessageSendService",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseTaskRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseExportService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseRepository",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseTaskService",
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository",
          "de.tum.cit.aet.artemis.core.service.FileService",
          "de.tum.cit.aet.artemis.programming.service.GitService",
          "de.tum.cit.aet.artemis.core.service.ZipFileService",
          "org.springframework.http.converter.json.MappingJackson2HttpMessageConverter",
          "de.tum.cit.aet.artemis.programming.repository.AuxiliaryRepositoryRepository",
          "de.tum.cit.aet.artemis.programming.repository.BuildPlanRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseFeedbackCreationService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseTestCaseRepository",
          "de.tum.cit.aet.artemis.communication.service.WebsocketMessagingService",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseTaskService",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseRepository",
          "de.tum.cit.aet.artemis.programming.repository.StaticCodeAnalysisCategoryRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseGradingService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ResultRepository",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseTestCaseRepository",
          "de.tum.cit.aet.artemis.programming.repository.TemplateProgrammingExerciseParticipationRepository",
          "de.tum.cit.aet.artemis.assessment.service.FeedbackService",
          "de.tum.cit.aet.artemis.programming.repository.SolutionProgrammingExerciseParticipationRepository",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingSubmissionRepository",
          "org.springframework.boot.actuate.audit.AuditEventRepository",
          "de.tum.cit.aet.artemis.communication.service.notifications.GroupNotificationService",
          "de.tum.cit.aet.artemis.assessment.service.ResultService",
          "de.tum.cit.aet.artemis.exercise.service.ExerciseDateService",
          "de.tum.cit.aet.artemis.programming.service.SubmissionPolicyService",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseRepository",
          "de.tum.cit.aet.artemis.programming.service.BuildLogEntryService",
          "de.tum.cit.aet.artemis.programming.repository.StaticCodeAnalysisCategoryRepository",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseFeedbackCreationService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseGradingService$ScoreCalculationData"
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseImportBasicService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.Optional",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseParticipationService",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseTestCaseRepository",
          "de.tum.cit.aet.artemis.programming.repository.StaticCodeAnalysisCategoryRepository",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseRepository",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseCreationUpdateService",
          "de.tum.cit.aet.artemis.programming.service.StaticCodeAnalysisService",
          "de.tum.cit.aet.artemis.programming.repository.AuxiliaryRepositoryRepository",
          "de.tum.cit.aet.artemis.programming.repository.SubmissionPolicyRepository",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseTaskRepository",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseTaskService",
          "de.tum.cit.aet.artemis.communication.service.conversation.ChannelService",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseBuildConfigRepository",
          "de.tum.cit.aet.artemis.exercise.service.ExerciseService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseImportBasicService$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseImportFromFileService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseImportService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseRepositoryService",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseValidationService",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseBuildPlanService",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseCreationScheduleService",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseTaskService",
          "de.tum.cit.aet.artemis.programming.repository.AuxiliaryRepositoryRepository",
          "de.tum.cit.aet.artemis.programming.service.UriService",
          "de.tum.cit.aet.artemis.programming.service.TemplateUpgradePolicyService",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseImportBasicService",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseTestCaseRepository",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseParticipationService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.repository.SolutionProgrammingExerciseParticipationRepository",
          "de.tum.cit.aet.artemis.programming.repository.TemplateProgrammingExerciseParticipationRepository",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseStudentParticipationRepository",
          "de.tum.cit.aet.artemis.exercise.repository.ParticipationRepository",
          "de.tum.cit.aet.artemis.exercise.repository.TeamRepository",
          "de.tum.cit.aet.artemis.programming.service.GitService",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.assessment.repository.ResultRepository",
          "de.tum.cit.aet.artemis.exercise.repository.SubmissionRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseRepositoryService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.service.GitService",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.core.service.ResourceLoaderService",
          "java.util.Optional"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseRepositoryService$BuildStage"
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseRepositoryService$RepositoryResources"
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseScheduleService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.service.ScheduleService",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseRepository",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseTestCaseRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ResultRepository",
          "de.tum.cit.aet.artemis.exercise.repository.ParticipationRepository",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseStudentParticipationRepository",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingTriggerService",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseGradingService",
          "org.springframework.scheduling.TaskScheduler",
          "de.tum.cit.aet.artemis.core.service.ProfileService"
        ]
      },
      {
        "name": "applicationReady",
        "parameterTypes": []
      },
      {
        "name": "scheduleRunningExercisesOnStartup",
        "parameterTypes": []
      },
      {
        "name": "updateScheduling",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Exercise"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseRepository",
          "de.tum.cit.aet.artemis.programming.repository.TemplateProgrammingExerciseParticipationRepository",
          "de.tum.cit.aet.artemis.programming.repository.SolutionProgrammingExerciseParticipationRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ResultRepository",
          "de.tum.cit.aet.artemis.programming.repository.AuxiliaryRepositoryRepository",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseTaskService",
          "de.tum.cit.aet.artemis.exercise.service.ExerciseSpecificationService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseTaskService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseTaskRepository",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseTestCaseRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseTestCaseChangedService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ResultRepository",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingTestCaseChangedUserNotificationService",
          "java.util.Optional"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseTestCaseService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseTestCaseRepository",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseRepository",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseTestCaseChangedService",
          "org.springframework.boot.actuate.audit.AuditEventRepository",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseTaskService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseValidationService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.service.AuxiliaryRepositoryService",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseRepository",
          "de.tum.cit.aet.artemis.programming.service.SubmissionPolicyService",
          "java.util.Optional",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseBuildConfigService",
          "java.util.Optional"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.ProgrammingLanguageFeature",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "auxiliaryRepositoriesSupported",
        "parameterTypes": []
      },
      {
        "name": "checkoutSolutionRepositoryAllowed",
        "parameterTypes": []
      },
      {
        "name": "packageNameRequired",
        "parameterTypes": []
      },
      {
        "name": "plagiarismCheckSupported",
        "parameterTypes": []
      },
      {
        "name": "programmingLanguage",
        "parameterTypes": []
      },
      {
        "name": "projectTypes",
        "parameterTypes": []
      },
      {
        "name": "sequentialTestRuns",
        "parameterTypes": []
      },
      {
        "name": "staticCodeAnalysis",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.ProgrammingLanguageFeatureService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "contribute",
        "parameterTypes": [
          "org.springframework.boot.actuate.info.Info$Builder"
        ]
      },
      {
        "name": "getProgrammingLanguageFeatures",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingLanguage"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.ProgrammingMessagingService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.service.notifications.GroupNotificationService",
          "de.tum.cit.aet.artemis.communication.service.WebsocketMessagingService",
          "de.tum.cit.aet.artemis.assessment.web.ResultWebsocketService",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.exercise.repository.TeamRepository",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.exercise.repository.ParticipationRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.ProgrammingSubmissionMessagingService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.repository.TeamRepository",
          "de.tum.cit.aet.artemis.communication.service.WebsocketMessagingService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.ProgrammingSubmissionService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingSubmissionRepository",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseRepository",
          "de.tum.cit.aet.artemis.exercise.repository.SubmissionRepository",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.assessment.repository.ResultRepository",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.exercise.service.ParticipationService",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseParticipationService",
          "de.tum.cit.aet.artemis.programming.service.GitService",
          "de.tum.cit.aet.artemis.assessment.service.FeedbackService",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository",
          "de.tum.cit.aet.artemis.assessment.repository.FeedbackRepository",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.exercise.service.ExerciseDateService",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "de.tum.cit.aet.artemis.exercise.repository.ParticipationRepository",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseStudentParticipationRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ComplaintRepository",
          "de.tum.cit.aet.artemis.exercise.service.ParticipationAuthorizationCheckService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.ProgrammingTestCaseChangedUserNotificationService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.service.notifications.GroupNotificationService",
          "de.tum.cit.aet.artemis.communication.service.WebsocketMessagingService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.ProgrammingTriggerService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingSubmissionRepository",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseRepository",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.exercise.service.ParticipationService",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseParticipationService",
          "org.springframework.boot.actuate.audit.AuditEventRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ResultRepository",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseStudentParticipationRepository",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingMessagingService",
          "de.tum.cit.aet.artemis.programming.repository.TemplateProgrammingExerciseParticipationRepository",
          "de.tum.cit.aet.artemis.programming.repository.SolutionProgrammingExerciseParticipationRepository",
          "de.tum.cit.aet.artemis.core.service.ProfileService",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseTestCaseChangedService",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingSubmissionMessagingService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.ProgrammingTriggerService$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.RepositoryAccessService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.Optional",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.exercise.service.ExerciseDateService",
          "de.tum.cit.aet.artemis.exercise.service.ParticipationAuthorizationCheckService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.RepositoryCheckoutService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.RepositoryParticipationService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.repository.ParticipationRepository",
          "de.tum.cit.aet.artemis.programming.service.GitService",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.programming.service.RepositoryAccessService",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.RepositoryService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.service.GitService",
          "java.util.Optional"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.StaticCodeAnalysisService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.repository.StaticCodeAnalysisCategoryRepository",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseTestCaseChangedService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.SubmissionPolicyService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseRepository",
          "de.tum.cit.aet.artemis.programming.repository.SubmissionPolicyRepository",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingSubmissionRepository",
          "de.tum.cit.aet.artemis.exercise.repository.ParticipationRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.TemplateUpgradePolicyService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.service.JavaTemplateUpgradeService",
          "de.tum.cit.aet.artemis.programming.service.DefaultTemplateUpgradeService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.TemplateUpgradeService",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.UriService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.aeolus.AeolusTemplateService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.config.ProgrammingLanguageConfiguration",
          "de.tum.cit.aet.artemis.core.service.ResourceLoaderService",
          "de.tum.cit.aet.artemis.programming.service.BuildScriptProviderService",
          "de.tum.cit.aet.artemis.core.service.ProfileService"
        ]
      },
      {
        "name": "cacheOnBoot",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.ci.AbstractBuildPlanCreator",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "createBuildPlanForExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExercise"
        ]
      },
      {
        "name": "generateBuildPlanURL",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExercise"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.ci.AbstractContinuousIntegrationResultService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "createResultFromBuildResult",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.dto.BuildResultNotification",
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseParticipation"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.ci.CIUserManagementService"
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.ci.ContinuousIntegrationResultService",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.ci.ContinuousIntegrationServerHealthIndicator",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.Optional"
        ]
      },
      {
        "name": "health",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.ci.ContinuousIntegrationService",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.ci.ContinuousIntegrationService$BuildStatus"
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.ci.ContinuousIntegrationTriggerService",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "triggerBuild",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseParticipation"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.jenkins.JenkinsAuthorizationInterceptor"
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.jenkins.build_plan.JenkinsPipelineScriptCreator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.localci.DistributedDataAccessService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.hazelcast.core.HazelcastInstance"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.localci.LocalCIBuildConfigurationService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.service.aeolus.AeolusTemplateService",
          "de.tum.cit.aet.artemis.programming.service.BuildScriptProviderService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.localci.LocalCIEventListenerService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.service.localci.DistributedDataAccessService",
          "de.tum.cit.aet.artemis.programming.service.localci.LocalCIQueueWebsocketService",
          "de.tum.cit.aet.artemis.programming.repository.BuildJobRepository",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingMessagingService",
          "de.tum.cit.aet.artemis.programming.service.localci.LocalCIResultProcessingService",
          "de.tum.cit.aet.artemis.core.service.user.UserService",
          "de.tum.cit.aet.artemis.communication.service.notifications.MailService"
        ]
      },
      {
        "name": "checkPendingBuildJobsStatus",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "processQueuedResults",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.localci.LocalCIInfoContributor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.config.ProgrammingLanguageConfiguration"
        ]
      },
      {
        "name": "contribute",
        "parameterTypes": [
          "org.springframework.boot.actuate.info.Info$Builder"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.localci.LocalCIPriorityQueueComparator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.localci.LocalCIProgrammingLanguageFeatureService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.service.LicenseService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.localci.LocalCIQueueWebsocketService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.service.localci.LocalCIWebsocketMessagingService",
          "de.tum.cit.aet.artemis.programming.service.localci.DistributedDataAccessService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.localci.LocalCIResultProcessingService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseGradingService",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingMessagingService",
          "de.tum.cit.aet.artemis.programming.repository.BuildJobRepository",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseRepository",
          "de.tum.cit.aet.artemis.exercise.repository.ParticipationRepository",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingTriggerService",
          "de.tum.cit.aet.artemis.programming.service.BuildLogEntryService",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseBuildStatisticsRepository",
          "de.tum.cit.aet.artemis.programming.service.localci.DistributedDataAccessService",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingSubmissionMessagingService"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "removeListener",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.localci.LocalCIResultService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseFeedbackCreationService",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseTestCaseRepository",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseBuildConfigRepository"
        ]
      },
      {
        "name": "convertBuildResult",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.localci.LocalCIService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.service.BuildScriptProviderService",
          "de.tum.cit.aet.artemis.programming.service.aeolus.AeolusTemplateService",
          "de.tum.cit.aet.artemis.programming.service.localci.DistributedDataAccessService",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseBuildConfigRepository"
        ]
      },
      {
        "name": "checkIfBuildPlanExists",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "checkIfProjectExists",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "configureBuildPlan",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseParticipation"
        ]
      },
      {
        "name": "copyBuildPlan",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExercise",
          "java.lang.String",
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExercise",
          "java.lang.String",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "createBuildPlanForExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExercise",
          "java.lang.String",
          "de.tum.cit.aet.artemis.programming.domain.VcsRepositoryUri",
          "de.tum.cit.aet.artemis.programming.domain.VcsRepositoryUri",
          "de.tum.cit.aet.artemis.programming.domain.VcsRepositoryUri"
        ]
      },
      {
        "name": "createProjectForExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExercise"
        ]
      },
      {
        "name": "deleteBuildPlan",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "deleteProject",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "enablePlan",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getBuildStatus",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseParticipation"
        ]
      },
      {
        "name": "getPlanKey",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "givePlanPermissions",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExercise",
          "java.lang.String"
        ]
      },
      {
        "name": "health",
        "parameterTypes": []
      },
      {
        "name": "recreateBuildPlansForExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExercise"
        ]
      },
      {
        "name": "updatePlanRepository",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.localci.LocalCITriggerService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.service.localci.DistributedDataAccessService",
          "de.tum.cit.aet.artemis.programming.service.aeolus.AeolusTemplateService",
          "de.tum.cit.aet.artemis.core.config.ProgrammingLanguageConfiguration",
          "de.tum.cit.aet.artemis.programming.repository.AuxiliaryRepositoryRepository",
          "de.tum.cit.aet.artemis.programming.service.localci.LocalCIProgrammingLanguageFeatureService",
          "de.tum.cit.aet.artemis.programming.service.GitService",
          "de.tum.cit.aet.artemis.exercise.service.ExerciseDateService",
          "de.tum.cit.aet.artemis.programming.repository.SolutionProgrammingExerciseParticipationRepository",
          "de.tum.cit.aet.artemis.programming.service.localci.LocalCIBuildConfigurationService",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseBuildStatisticsRepository",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseBuildConfigRepository",
          "de.tum.cit.aet.artemis.programming.service.BuildScriptProviderService",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseBuildConfigService",
          "de.tum.cit.aet.artemis.programming.repository.BuildJobRepository"
        ]
      },
      {
        "name": "triggerBuild",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseParticipation",
          "java.lang.String",
          "de.tum.cit.aet.artemis.programming.domain.RepositoryType"
        ]
      },
      {
        "name": "triggerBuild",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseParticipation",
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.localci.LocalCIWebsocketMessagingService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.service.WebsocketMessagingService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.localci.SharedQueueManagementService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.repository.BuildJobRepository",
          "de.tum.cit.aet.artemis.core.service.ProfileService",
          "de.tum.cit.aet.artemis.programming.service.localci.DistributedDataAccessService"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "pushDockerImageCleanupInfo",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.localci.SharedQueueManagementService$BuildTimingInfo"
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.localvc.ArtemisGitServletService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.service.localvc.LocalVCServletService"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.localvc.AuthenticationContext"
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.localvc.AutomaticVcsAccessLogCleanupService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.repository.VcsAccessLogRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.localvc.GitPublickeyAuthenticatorService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "authenticate",
        "parameterTypes": [
          "java.lang.String",
          "java.security.PublicKey",
          "org.apache.sshd.server.session.ServerSession"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.localvc.JGitServletConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.service.localvc.ArtemisGitServletService"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.localvc.JGitServletConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.localvc.JGitServletConfiguration$$SpringCGLIB$$FastClass$$0",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.localvc.JGitServletConfiguration$$SpringCGLIB$$FastClass$$1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.localvc.LocalVCInfoContributor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "contribute",
        "parameterTypes": [
          "org.springframework.boot.actuate.info.Info$Builder"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.localvc.LocalVCPersonalAccessTokenManagementService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.localvc.LocalVCRepositoryUri"
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.localvc.LocalVCService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.service.UriService",
          "de.tum.cit.aet.artemis.programming.service.GitService",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseStudentParticipationRepository",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseRepository",
          "de.tum.cit.aet.artemis.programming.repository.TemplateProgrammingExerciseParticipationRepository",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseBuildConfigRepository"
        ]
      },
      {
        "name": "checkIfProjectExists",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "createProjectForExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExercise"
        ]
      },
      {
        "name": "createRepository",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "deleteProject",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "deleteRepository",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.service.localvc.LocalVCRepositoryUri"
        ]
      },
      {
        "name": "getCloneRepositoryUri",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "repositoryUriIsValid",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.service.localvc.LocalVCRepositoryUri"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.localvc.LocalVCServletService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.authentication.AuthenticationManager",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseRepository",
          "de.tum.cit.aet.artemis.programming.service.RepositoryAccessService",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseParticipationService",
          "de.tum.cit.aet.artemis.programming.service.AuxiliaryRepositoryService",
          "de.tum.cit.aet.artemis.programming.service.ci.ContinuousIntegrationTriggerService",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingSubmissionService",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingSubmissionMessagingService",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseTestCaseChangedService",
          "de.tum.cit.aet.artemis.programming.repository.ParticipationVCSAccessTokenRepository",
          "java.util.Optional"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.localvc.LocalVCServletService$UsernameAndPassword"
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.localvc.SshGitCommandFactoryService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "createGitCommand",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.localvc.SshGitLocationResolverService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "resolveRootDirectory",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String[]",
          "org.apache.sshd.server.session.ServerSession",
          "java.nio.file.FileSystem"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.localvc.VcsAccessLogService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.repository.VcsAccessLogRepository",
          "de.tum.cit.aet.artemis.exercise.repository.ParticipationRepository"
        ]
      },
      {
        "name": "createPreliminaryCodeEditorAccessLog",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.Repository",
          "de.tum.cit.aet.artemis.core.domain.User",
          "java.lang.Long"
        ]
      },
      {
        "name": "saveVcsAccesslog",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.VcsAccessLog"
        ]
      },
      {
        "name": "saveAccessLog",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User",
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseParticipation",
          "de.tum.cit.aet.artemis.programming.web.repository.RepositoryActionType",
          "de.tum.cit.aet.artemis.programming.domain.AuthenticationMechanism",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "updateCommitHash",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseParticipation",
          "java.lang.String"
        ]
      },
      {
        "name": "updateRepositoryActionType",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.service.localvc.LocalVCRepositoryUri",
          "de.tum.cit.aet.artemis.programming.web.repository.RepositoryActionType"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.localvc.VcsAccessLogService$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.localvc.ssh.SshConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.localvc.ssh.SshConfiguration$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.localvc.ssh.SshConfiguration$$SpringCGLIB$$FastClass$$0",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.localvc.ssh.SshConfiguration$$SpringCGLIB$$FastClass$$1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.localvc.ssh.SshFingerprintsProviderService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.sshuserkeys.UserSshPublicKeyExpiryNotificationService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.repository.UserSshPublicKeyRepository",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.communication.service.notifications.MailSendingService",
          "de.tum.cit.aet.artemis.communication.repository.GlobalNotificationSettingRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.sshuserkeys.UserSshPublicKeyService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.repository.UserSshPublicKeyRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.tokens.UserTokenExpiryNotificationService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.communication.service.notifications.MailSendingService",
          "de.tum.cit.aet.artemis.communication.repository.GlobalNotificationSettingRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.vcs.AbstractVersionControlService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "copyRepositoryWithHistory",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.Integer"
        ]
      },
      {
        "name": "copyRepositoryWithoutHistory",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.vcs.VersionControlService",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.web.IdeSettingsResource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.repository.settings.UserIdeMappingRepository",
          "de.tum.cit.aet.artemis.programming.repository.settings.IdeRepository",
          "de.tum.cit.aet.artemis.core.repository.UserRepository"
        ]
      },
      {
        "name": "getIdesOfUser",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.web.IdeSettingsResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.web.PlantUmlResource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.service.PlantUmlService",
          "tech.jhipster.config.JHipsterProperties"
        ]
      },
      {
        "name": "generateSvg",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.web.ProgrammingAssessmentResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.web.ProgrammingExerciseExportImportResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.web.ProgrammingExerciseGradingResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.web.ProgrammingExerciseParticipationResource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseParticipationService",
          "de.tum.cit.aet.artemis.assessment.repository.ResultRepository",
          "de.tum.cit.aet.artemis.exercise.repository.ParticipationRepository",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseStudentParticipationRepository",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingSubmissionService",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.assessment.service.ResultService",
          "de.tum.cit.aet.artemis.exercise.service.ParticipationAuthorizationCheckService",
          "de.tum.cit.aet.artemis.programming.service.RepositoryService",
          "java.util.Optional",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.programming.repository.AuxiliaryRepositoryRepository",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional"
        ]
      },
      {
        "name": "getLatestPendingSubmission",
        "parameterTypes": [
          "java.lang.Long",
          "boolean"
        ]
      },
      {
        "name": "getLatestResultWithFeedbacksForProgrammingExerciseParticipation",
        "parameterTypes": [
          "java.lang.Long",
          "boolean"
        ]
      },
      {
        "name": "getParticipationWithLatestResultForStudentParticipation",
        "parameterTypes": [
          "long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.web.ProgrammingExerciseParticipationResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.web.ProgrammingExercisePlagiarismResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.web.ProgrammingExerciseResource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseRepository",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseTestCaseRepository",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseBuildConfigRepository",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.core.service.course.CourseService",
          "java.util.Optional",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.exercise.service.ExerciseService",
          "de.tum.cit.aet.artemis.exercise.service.ExerciseDeletionService",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseService",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseValidationService",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseCreationUpdateService",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseRepositoryService",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseTaskService",
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository",
          "de.tum.cit.aet.artemis.programming.service.StaticCodeAnalysisService",
          "de.tum.cit.aet.artemis.assessment.repository.GradingCriterionRepository",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "de.tum.cit.aet.artemis.programming.service.AuxiliaryRepositoryService",
          "de.tum.cit.aet.artemis.programming.repository.SolutionProgrammingExerciseParticipationRepository",
          "de.tum.cit.aet.artemis.programming.repository.TemplateProgrammingExerciseParticipationRepository",
          "de.tum.cit.aet.artemis.communication.repository.conversation.ChannelRepository",
          "java.util.Optional",
          "org.springframework.core.env.Environment",
          "de.tum.cit.aet.artemis.programming.service.RepositoryCheckoutService",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseDeletionService"
        ]
      },
      {
        "name": "createProgrammingExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExercise"
        ]
      },
      {
        "name": "deleteProgrammingExercise",
        "parameterTypes": [
          "long",
          "boolean"
        ]
      },
      {
        "name": "getProgrammingExercise",
        "parameterTypes": [
          "long",
          "boolean"
        ]
      },
      {
        "name": "getProgrammingExerciseWithTemplateAndSolutionParticipation",
        "parameterTypes": [
          "long",
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "getProgrammingExercisesForCourse",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getRepositoryCheckoutDirectories",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingLanguage",
          "boolean"
        ]
      },
      {
        "name": "redirectGetSolutionRepositoryFiles",
        "parameterTypes": [
          "java.lang.Long",
          "boolean"
        ]
      },
      {
        "name": "redirectGetTemplateRepositoryFiles",
        "parameterTypes": [
          "java.lang.Long",
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.web.ProgrammingExerciseResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.web.ProgrammingExerciseTaskResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.web.ProgrammingExerciseTestCaseResource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseTestCaseRepository",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseTestCaseService",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseCreationScheduleService",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.core.repository.UserRepository"
        ]
      },
      {
        "name": "getTestCases",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "updateTestCases",
        "parameterTypes": [
          "java.lang.Long",
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.web.ProgrammingExerciseTestCaseResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.web.ProgrammingSubmissionResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.web.StaticCodeAnalysisResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.web.SubmissionPolicyResource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.programming.service.SubmissionPolicyService",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseStudentParticipationRepository",
          "de.tum.cit.aet.artemis.exercise.service.ParticipationAuthorizationCheckService"
        ]
      },
      {
        "name": "getSubmissionPolicyOfExercise",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.web.SubmissionPolicyResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.web.localci.AeolusTemplateResource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.service.aeolus.AeolusTemplateService",
          "de.tum.cit.aet.artemis.programming.service.BuildScriptProviderService"
        ]
      },
      {
        "name": "getAeolusTemplate",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingLanguage",
          "java.util.Optional",
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "getAeolusTemplateScript",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingLanguage",
          "java.util.Optional",
          "boolean",
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.web.localci.AeolusTemplateResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.web.localci.BuildJobQueueResource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.service.localci.SharedQueueManagementService",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "de.tum.cit.aet.artemis.programming.repository.BuildJobRepository",
          "de.tum.cit.aet.artemis.programming.service.localci.DistributedDataAccessService"
        ]
      },
      {
        "name": "getBuildJobEstimatedStartDate",
        "parameterTypes": [
          "long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.web.localci.BuildLogResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.web.localvc.ssh.SshFingerprintsProviderResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.web.repository.AuxiliaryRepositoryResource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "commitChanges",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "createFile",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.String",
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "createFolder",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.String",
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "deleteFile",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.String"
        ]
      },
      {
        "name": "getFile",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.String"
        ]
      },
      {
        "name": "getFiles",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getStatus",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "pullChanges",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "renameFile",
        "parameterTypes": [
          "java.lang.Long",
          "de.tum.cit.aet.artemis.programming.dto.FileMove"
        ]
      },
      {
        "name": "resetToLastCommit",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.web.repository.FileSubmission",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setFileContent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFileName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.web.repository.RepositoryActionType"
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.web.repository.RepositoryProgrammingExerciseParticipationResource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.service.ProfileService",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.exercise.service.ParticipationAuthorizationCheckService",
          "de.tum.cit.aet.artemis.programming.service.GitService",
          "de.tum.cit.aet.artemis.programming.service.RepositoryService",
          "de.tum.cit.aet.artemis.programming.service.ProgrammingExerciseParticipationService",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingExerciseRepository",
          "de.tum.cit.aet.artemis.exercise.repository.ParticipationRepository",
          "de.tum.cit.aet.artemis.programming.service.BuildLogEntryService",
          "de.tum.cit.aet.artemis.programming.repository.ProgrammingSubmissionRepository",
          "de.tum.cit.aet.artemis.programming.repository.SubmissionPolicyRepository",
          "de.tum.cit.aet.artemis.programming.service.RepositoryAccessService",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.programming.service.RepositoryParticipationService"
        ]
      },
      {
        "name": "commitChanges",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "createFile",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.String",
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "createFolder",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.String",
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "deleteFile",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.String"
        ]
      },
      {
        "name": "getFile",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.String"
        ]
      },
      {
        "name": "getFiles",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getFilesWithContent",
        "parameterTypes": [
          "java.lang.Long",
          "boolean"
        ]
      },
      {
        "name": "getStatus",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "pullChanges",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "renameFile",
        "parameterTypes": [
          "java.lang.Long",
          "de.tum.cit.aet.artemis.programming.dto.FileMove"
        ]
      },
      {
        "name": "resetToLastCommit",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "updateParticipationFiles",
        "parameterTypes": [
          "java.lang.Long",
          "java.util.List",
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.web.repository.RepositoryProgrammingExerciseParticipationResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.web.repository.RepositoryResource",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.web.repository.TestRepositoryResource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "commitChanges",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "createFile",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.String",
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "createFolder",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.String",
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "deleteFile",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.String"
        ]
      },
      {
        "name": "getFile",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.String"
        ]
      },
      {
        "name": "getFiles",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getStatus",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "pullChanges",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "renameFile",
        "parameterTypes": [
          "java.lang.Long",
          "de.tum.cit.aet.artemis.programming.dto.FileMove"
        ]
      },
      {
        "name": "resetToLastCommit",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.web.repository.util.RepositoryExecutor"
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.web.sshuserkeys.SshPublicKeysResource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.service.sshuserkeys.UserSshPublicKeyService",
          "de.tum.cit.aet.artemis.core.repository.UserRepository"
        ]
      },
      {
        "name": "getSshPublicKeys",
        "parameterTypes": []
      },
      {
        "name": "addSshPublicKey",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.dto.UserSshPublicKeyDTO"
        ]
      },
      {
        "name": "deleteSshPublicKey",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.web.sshuserkeys.SshPublicKeysResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.AbstractQuizSubmission",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setScoreInPoints",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setSubmittedAnswers",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setVersions",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "getScoreInPoints",
        "parameterTypes": []
      },
      {
        "name": "getSubmittedAnswers",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.AbstractQuizSubmission$HibernateAccessOptimizer$DKGAFrpQ",
    "fields": [
      {
        "name": "invocationTarget$5gv1o71"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.AbstractQuizSubmission_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "scoreInPoints"
      },
      {
        "name": "submittedAnswers"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.AnswerCounter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setAnswer",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.AnswerOption"
        ]
      },
      {
        "name": "setMultipleChoiceQuestionStatistic",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.MultipleChoiceQuestionStatistic"
        ]
      },
      {
        "name": "getAnswer",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.AnswerCounter$HibernateAccessOptimizer$n8Kiv5Eh",
    "fields": [
      {
        "name": "invocationTarget$e7dkft1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.AnswerCounter$HibernateInstantiator$Kg7kWnoN",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.AnswerCounter_",
    "fields": [
      {
        "name": "answer"
      },
      {
        "name": "class_"
      },
      {
        "name": "multipleChoiceQuestionStatistic"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.AnswerOption",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setExplanation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHint",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInvalid",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setIsCorrect",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setQuestion",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.MultipleChoiceQuestion"
        ]
      },
      {
        "name": "setText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getExplanation",
        "parameterTypes": []
      },
      {
        "name": "getHint",
        "parameterTypes": []
      },
      {
        "name": "getText",
        "parameterTypes": []
      },
      {
        "name": "isInvalid",
        "parameterTypes": []
      },
      {
        "name": "isIsCorrect",
        "parameterTypes": []
      }
    ],
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.AnswerOption$HibernateAccessOptimizer$oEICHPL9",
    "fields": [
      {
        "name": "invocationTarget$cpg7tc0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.AnswerOption$HibernateInstantiator$48ebR520",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.AnswerOption_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "explanation"
      },
      {
        "name": "hint"
      },
      {
        "name": "invalid"
      },
      {
        "name": "isCorrect"
      },
      {
        "name": "question"
      },
      {
        "name": "text"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DragAndDropMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setDragItem",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.DragItem"
        ]
      },
      {
        "name": "setDragItemIndex",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setDropLocation",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.DropLocation"
        ]
      },
      {
        "name": "setDropLocationIndex",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setInvalid",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setQuestion",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.DragAndDropQuestion"
        ]
      },
      {
        "name": "setSubmittedAnswer",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.DragAndDropSubmittedAnswer"
        ]
      },
      {
        "name": "getDragItem",
        "parameterTypes": []
      },
      {
        "name": "getDragItemIndex",
        "parameterTypes": []
      },
      {
        "name": "getDropLocation",
        "parameterTypes": []
      },
      {
        "name": "getDropLocationIndex",
        "parameterTypes": []
      },
      {
        "name": "isInvalid",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DragAndDropMapping$HibernateAccessOptimizer$dkaPcSxz",
    "fields": [
      {
        "name": "invocationTarget$6ko79e0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DragAndDropMapping$HibernateInstantiator$GUkBOAuu",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DragAndDropMapping_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "dragItem"
      },
      {
        "name": "dragItemIndex"
      },
      {
        "name": "dropLocation"
      },
      {
        "name": "dropLocationIndex"
      },
      {
        "name": "invalid"
      },
      {
        "name": "question"
      },
      {
        "name": "submittedAnswer"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DragAndDropQuestion",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setBackgroundFilePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCorrectMappings",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDragItems",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDropLocations",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "addCorrectMapping",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.DragAndDropMapping"
        ]
      },
      {
        "name": "addDragItem",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.DragItem"
        ]
      },
      {
        "name": "addDropLocation",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.DropLocation"
        ]
      },
      {
        "name": "afterCreate",
        "parameterTypes": []
      },
      {
        "name": "copyQuestionId",
        "parameterTypes": []
      },
      {
        "name": "filterForStatisticWebsocket",
        "parameterTypes": []
      },
      {
        "name": "filterForStudentsDuringQuiz",
        "parameterTypes": []
      },
      {
        "name": "findDragItemById",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findDropLocationById",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getBackgroundFilePath",
        "parameterTypes": []
      },
      {
        "name": "getCorrectDragItemsForDropLocation",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.DropLocation"
        ]
      },
      {
        "name": "getCorrectMappings",
        "parameterTypes": []
      },
      {
        "name": "getDragItems",
        "parameterTypes": []
      },
      {
        "name": "getDropLocations",
        "parameterTypes": []
      },
      {
        "name": "initializeStatistic",
        "parameterTypes": []
      },
      {
        "name": "isUpdateOfResultsAndStatisticsNecessary",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.QuizQuestion"
        ]
      },
      {
        "name": "isValid",
        "parameterTypes": []
      },
      {
        "name": "makeScoringStrategy",
        "parameterTypes": []
      },
      {
        "name": "onDelete",
        "parameterTypes": []
      },
      {
        "name": "removeCorrectMapping",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.DragAndDropMapping"
        ]
      },
      {
        "name": "removeDragItem",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.DragItem"
        ]
      },
      {
        "name": "removeDropLocation",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.DropLocation"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "undoUnallowedChanges",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.QuizQuestion"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DragAndDropQuestion$HibernateAccessOptimizer$6DeWNG79",
    "fields": [
      {
        "name": "invocationTarget$cv8b360"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DragAndDropQuestion$HibernateInstantiator$ONS4t6kM",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DragAndDropQuestionStatistic",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setDropLocationCounters",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "getDropLocationCounters",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DragAndDropQuestionStatistic$HibernateAccessOptimizer$AJu8xfza",
    "fields": [
      {
        "name": "invocationTarget$h15cel0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DragAndDropQuestionStatistic$HibernateInstantiator$C5k6B0KI",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DragAndDropQuestionStatistic_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "dropLocationCounters"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DragAndDropQuestion_",
    "fields": [
      {
        "name": "backgroundFilePath"
      },
      {
        "name": "class_"
      },
      {
        "name": "correctMappings"
      },
      {
        "name": "dragItems"
      },
      {
        "name": "dropLocations"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DragAndDropSubmittedAnswer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setMappings",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "getMappings",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DragAndDropSubmittedAnswer$HibernateAccessOptimizer$vjOKP8bP",
    "fields": [
      {
        "name": "invocationTarget$lhvlqu1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DragAndDropSubmittedAnswer$HibernateInstantiator$ESRkaarJ",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DragAndDropSubmittedAnswer_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "mappings"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DragItem",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setInvalid",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setMappings",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setPictureFilePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQuestion",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.DragAndDropQuestion"
        ]
      },
      {
        "name": "setText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "afterCreate",
        "parameterTypes": []
      },
      {
        "name": "getPictureFilePath",
        "parameterTypes": []
      },
      {
        "name": "getText",
        "parameterTypes": []
      },
      {
        "name": "isInvalid",
        "parameterTypes": []
      },
      {
        "name": "onDelete",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DragItem$HibernateAccessOptimizer$yFfsqEAE",
    "fields": [
      {
        "name": "invocationTarget$egc6gn1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DragItem$HibernateInstantiator$cDY2eZfJ",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DragItem_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "invalid"
      },
      {
        "name": "mappings"
      },
      {
        "name": "pictureFilePath"
      },
      {
        "name": "question"
      },
      {
        "name": "text"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DropLocation",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setHeight",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setInvalid",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setMappings",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setPosX",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setPosY",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setQuestion",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.DragAndDropQuestion"
        ]
      },
      {
        "name": "setWidth",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "getHeight",
        "parameterTypes": []
      },
      {
        "name": "getPosX",
        "parameterTypes": []
      },
      {
        "name": "getPosY",
        "parameterTypes": []
      },
      {
        "name": "getWidth",
        "parameterTypes": []
      },
      {
        "name": "isInvalid",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DropLocation$HibernateAccessOptimizer$JLwYF8LC",
    "fields": [
      {
        "name": "invocationTarget$ir8pnj1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DropLocation$HibernateInstantiator$jAKcuQmK",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DropLocationCounter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setDragAndDropQuestionStatistic",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.DragAndDropQuestionStatistic"
        ]
      },
      {
        "name": "setDropLocation",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.DropLocation"
        ]
      },
      {
        "name": "getDropLocation",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DropLocationCounter$HibernateAccessOptimizer$e2GZBkzW",
    "fields": [
      {
        "name": "invocationTarget$8du6eg0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DropLocationCounter$HibernateInstantiator$9eRIVgRl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DropLocationCounter_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "dragAndDropQuestionStatistic"
      },
      {
        "name": "dropLocation"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DropLocation_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "height"
      },
      {
        "name": "invalid"
      },
      {
        "name": "mappings"
      },
      {
        "name": "posX"
      },
      {
        "name": "posY"
      },
      {
        "name": "question"
      },
      {
        "name": "width"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.MultipleChoiceQuestion",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setAnswerOptions",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSingleChoice",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAnswerOptions",
        "parameterTypes": []
      },
      {
        "name": "isSingleChoice",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.MultipleChoiceQuestion$HibernateAccessOptimizer$HVcObUAB",
    "fields": [
      {
        "name": "invocationTarget$5j0vhl0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.MultipleChoiceQuestion$HibernateInstantiator$vIk63shv",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.MultipleChoiceQuestionStatistic",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setAnswerCounters",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "getAnswerCounters",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.MultipleChoiceQuestionStatistic$HibernateAccessOptimizer$T62viyPK",
    "fields": [
      {
        "name": "invocationTarget$apjdme0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.MultipleChoiceQuestionStatistic$HibernateInstantiator$ixcjDUu2",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.MultipleChoiceQuestionStatistic_",
    "fields": [
      {
        "name": "answerCounters"
      },
      {
        "name": "class_"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.MultipleChoiceQuestion_",
    "fields": [
      {
        "name": "answerOptions"
      },
      {
        "name": "class_"
      },
      {
        "name": "singleChoice"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.MultipleChoiceSubmittedAnswer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setSelectedOptions",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "getSelectedOptions",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.MultipleChoiceSubmittedAnswer$HibernateAccessOptimizer$SoYMqqIx",
    "fields": [
      {
        "name": "invocationTarget$6kobqv0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.MultipleChoiceSubmittedAnswer$HibernateInstantiator$11dXm82A",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.MultipleChoiceSubmittedAnswer_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "selectedOptions"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.PointCounter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setPoints",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setQuizPointStatistic",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.QuizPointStatistic"
        ]
      },
      {
        "name": "getPoints",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.PointCounter$HibernateAccessOptimizer$LBdyxWoP",
    "fields": [
      {
        "name": "invocationTarget$nk06ju0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.PointCounter$HibernateInstantiator$ZyrjI0ST",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.PointCounter_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "points"
      },
      {
        "name": "quizPointStatistic"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizAction"
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizBatch",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCreator",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQuizExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.QuizExercise"
        ]
      },
      {
        "name": "setStartTime",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getStartTime",
        "parameterTypes": []
      },
      {
        "name": "isEnded",
        "parameterTypes": []
      },
      {
        "name": "isStarted",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizBatch$HibernateAccessOptimizer$VqcktHmc",
    "fields": [
      {
        "name": "invocationTarget$becgge0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizBatch$HibernateInstantiator$is6mQe6W",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizBatch_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "creator"
      },
      {
        "name": "password"
      },
      {
        "name": "quizExercise"
      },
      {
        "name": "startTime"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setSecondCorrectionEnabled",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizExercise",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setAllowedNumberOfAttempts",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setDuration",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setIsOpenForPractice",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setQuizBatches",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setQuizMode",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.QuizMode"
        ]
      },
      {
        "name": "setQuizPointStatistic",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.QuizPointStatistic"
        ]
      },
      {
        "name": "setQuizQuestions",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRandomizeQuestionOrder",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSecondCorrectionEnabled",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getAllowedNumberOfAttempts",
        "parameterTypes": []
      },
      {
        "name": "getDuration",
        "parameterTypes": []
      },
      {
        "name": "getExerciseType",
        "parameterTypes": []
      },
      {
        "name": "getMaxPoints",
        "parameterTypes": []
      },
      {
        "name": "getQuizBatches",
        "parameterTypes": []
      },
      {
        "name": "getQuizMode",
        "parameterTypes": []
      },
      {
        "name": "getQuizPointStatistic",
        "parameterTypes": []
      },
      {
        "name": "getQuizQuestions",
        "parameterTypes": []
      },
      {
        "name": "getRemainingNumberOfAttempts",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "isIsOpenForPractice",
        "parameterTypes": []
      },
      {
        "name": "isQuizEnded",
        "parameterTypes": []
      },
      {
        "name": "isQuizStarted",
        "parameterTypes": []
      },
      {
        "name": "isRandomizeQuestionOrder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizExercise$HibernateAccessOptimizer$jPe1OR0s",
    "fields": [
      {
        "name": "invocationTarget$sbqq4j1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizExercise$HibernateInstantiator$Tf1gvJAi",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizExercise_",
    "fields": [
      {
        "name": "allowedNumberOfAttempts"
      },
      {
        "name": "class_"
      },
      {
        "name": "duration"
      },
      {
        "name": "isOpenForPractice"
      },
      {
        "name": "quizBatches"
      },
      {
        "name": "quizMode"
      },
      {
        "name": "quizPointStatistic"
      },
      {
        "name": "quizQuestions"
      },
      {
        "name": "randomizeQuestionOrder"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizMode",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizMode.SYNCHRONIZED"
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizPointStatistic",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setPointCounters",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setQuiz",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.QuizExercise"
        ]
      },
      {
        "name": "getPointCounters",
        "parameterTypes": []
      },
      {
        "name": "addPointCounters",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.PointCounter"
        ]
      },
      {
        "name": "addResult",
        "parameterTypes": [
          "java.lang.Double",
          "java.lang.Boolean"
        ]
      },
      {
        "name": "addScore",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "getQuiz",
        "parameterTypes": []
      },
      {
        "name": "removeOldResult",
        "parameterTypes": [
          "java.lang.Double",
          "java.lang.Boolean"
        ]
      },
      {
        "name": "removePointCounters",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.PointCounter"
        ]
      },
      {
        "name": "resetStatistic",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizPointStatistic$HibernateAccessOptimizer$lf9wsxvE",
    "fields": [
      {
        "name": "invocationTarget$r5gcs20"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizPointStatistic$HibernateInstantiator$2U9mYDYv",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizPointStatistic_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "pointCounters"
      },
      {
        "name": "quiz"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizQuestion",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.QuizExercise"
        ]
      },
      {
        "name": "setExplanation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHint",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInvalid",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setPoints",
        "parameterTypes": [
          "double"
        ]
      },
      {
        "name": "setQuizQuestionStatistic",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.QuizQuestionStatistic"
        ]
      },
      {
        "name": "setRandomizeOrder",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setScoringType",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.ScoringType"
        ]
      },
      {
        "name": "setText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getExercise",
        "parameterTypes": []
      },
      {
        "name": "getExerciseId",
        "parameterTypes": []
      },
      {
        "name": "getExplanation",
        "parameterTypes": []
      },
      {
        "name": "getHint",
        "parameterTypes": []
      },
      {
        "name": "getPoints",
        "parameterTypes": []
      },
      {
        "name": "getQuizQuestionStatistic",
        "parameterTypes": []
      },
      {
        "name": "getScoringType",
        "parameterTypes": []
      },
      {
        "name": "getText",
        "parameterTypes": []
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "isAnswerCorrect",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.SubmittedAnswer"
        ]
      },
      {
        "name": "isInvalid",
        "parameterTypes": []
      },
      {
        "name": "isRandomizeOrder",
        "parameterTypes": []
      },
      {
        "name": "score",
        "parameterTypes": [
          "double"
        ]
      },
      {
        "name": "scoreForAnswer",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.SubmittedAnswer"
        ]
      },
      {
        "name": "text",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "title",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizQuestion$HibernateAccessOptimizer$ndHFuyhY",
    "fields": [
      {
        "name": "invocationTarget$dsq4p60"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizQuestionComponent",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizQuestionProgress",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setLastModified",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setProgress",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.QuizQuestionProgressData"
        ]
      },
      {
        "name": "setQuizQuestionId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizQuestionProgress$HibernateAccessOptimizer$yo1vxy2F",
    "fields": [
      {
        "name": "invocationTarget$hjgh4d1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizQuestionProgress$HibernateInstantiator$0Lbw3uX4",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizQuestionProgressData"
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizQuestionProgress_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "lastModified"
      },
      {
        "name": "progress"
      },
      {
        "name": "quizQuestionId"
      },
      {
        "name": "userId"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizQuestionStatistic",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setQuizQuestion",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.QuizQuestion"
        ]
      },
      {
        "name": "setRatedCorrectCounter",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setUnRatedCorrectCounter",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getRatedCorrectCounter",
        "parameterTypes": []
      },
      {
        "name": "getUnRatedCorrectCounter",
        "parameterTypes": []
      },
      {
        "name": "addResult",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.SubmittedAnswer",
          "boolean"
        ]
      },
      {
        "name": "changeStatisticBasedOnResult",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.SubmittedAnswer",
          "boolean",
          "int"
        ]
      },
      {
        "name": "getQuizQuestion",
        "parameterTypes": []
      },
      {
        "name": "removeOldResult",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.SubmittedAnswer",
          "boolean"
        ]
      },
      {
        "name": "resetStatistic",
        "parameterTypes": []
      },
      {
        "name": "setQuestion",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.QuizQuestion"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizQuestionStatistic$HibernateAccessOptimizer$bB2mKmNd",
    "fields": [
      {
        "name": "invocationTarget$qbuguv1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizQuestionStatisticComponent",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizQuestionStatistic_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "quizQuestion"
      },
      {
        "name": "ratedCorrectCounter"
      },
      {
        "name": "unRatedCorrectCounter"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizQuestion_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "exercise"
      },
      {
        "name": "explanation"
      },
      {
        "name": "hint"
      },
      {
        "name": "invalid"
      },
      {
        "name": "points"
      },
      {
        "name": "quizQuestionStatistic"
      },
      {
        "name": "randomizeOrder"
      },
      {
        "name": "scoringType"
      },
      {
        "name": "text"
      },
      {
        "name": "title"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizStatistic",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setParticipantsRated",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setParticipantsUnrated",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getParticipantsRated",
        "parameterTypes": []
      },
      {
        "name": "getParticipantsUnrated",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizStatistic$HibernateAccessOptimizer$mK5nJf8x",
    "fields": [
      {
        "name": "invocationTarget$smpe011"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizStatisticCounter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setRatedCounter",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setUnRatedCounter",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getRatedCounter",
        "parameterTypes": []
      },
      {
        "name": "getUnRatedCounter",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizStatisticCounter$HibernateAccessOptimizer$qXCzH9So",
    "fields": [
      {
        "name": "invocationTarget$63l8mb1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizStatisticCounter_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "ratedCounter"
      },
      {
        "name": "unRatedCounter"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizStatistic_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "participantsRated"
      },
      {
        "name": "participantsUnrated"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizSubmission",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setQuizBatch",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setVersions",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "getQuizBatch",
        "parameterTypes": []
      },
      {
        "name": "getSubmissionExerciseType",
        "parameterTypes": []
      },
      {
        "name": "getSubmittedAnswers",
        "parameterTypes": []
      },
      {
        "name": "isSubmittedAnswers",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizSubmission$HibernateAccessOptimizer$nH67Mf0Z",
    "fields": [
      {
        "name": "invocationTarget$b02rs21"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizSubmission$HibernateInstantiator$Yk1amQNj",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizSubmission_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "quizBatch"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizSubmittedAnswerCount",
    "queryAllDeclaredConstructors": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ScoringType",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setInvalid",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setQuestion",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerQuestion"
        ]
      },
      {
        "name": "setShortAnswerSolutionIndex",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setShortAnswerSpotIndex",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSolution",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSolution"
        ]
      },
      {
        "name": "setSpot",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSpot"
        ]
      },
      {
        "name": "getShortAnswerSolutionIndex",
        "parameterTypes": []
      },
      {
        "name": "getShortAnswerSpotIndex",
        "parameterTypes": []
      },
      {
        "name": "getSolution",
        "parameterTypes": []
      },
      {
        "name": "getSpot",
        "parameterTypes": []
      },
      {
        "name": "isInvalid",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerMapping$HibernateAccessOptimizer$xDNFkRgv",
    "fields": [
      {
        "name": "invocationTarget$au9usc0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerMapping$HibernateInstantiator$aZsUewW0",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerMapping_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "invalid"
      },
      {
        "name": "question"
      },
      {
        "name": "shortAnswerSolutionIndex"
      },
      {
        "name": "shortAnswerSpotIndex"
      },
      {
        "name": "solution"
      },
      {
        "name": "spot"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerQuestion",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCorrectMappings",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setMatchLetterCase",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSimilarityValue",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSolutions",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSpots",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "addCorrectMapping",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerMapping"
        ]
      },
      {
        "name": "addSolution",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSolution"
        ]
      },
      {
        "name": "copyQuestionId",
        "parameterTypes": []
      },
      {
        "name": "filterForStatisticWebsocket",
        "parameterTypes": []
      },
      {
        "name": "filterForStudentsDuringQuiz",
        "parameterTypes": []
      },
      {
        "name": "findSolutionById",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findSpotById",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getCorrectMappings",
        "parameterTypes": []
      },
      {
        "name": "getCorrectSolutionForSpot",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSpot"
        ]
      },
      {
        "name": "getMatchLetterCase",
        "parameterTypes": []
      },
      {
        "name": "getSimilarityValue",
        "parameterTypes": []
      },
      {
        "name": "getSolutions",
        "parameterTypes": []
      },
      {
        "name": "getSpots",
        "parameterTypes": []
      },
      {
        "name": "initializeStatistic",
        "parameterTypes": []
      },
      {
        "name": "isUpdateOfResultsAndStatisticsNecessary",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.QuizQuestion"
        ]
      },
      {
        "name": "isValid",
        "parameterTypes": []
      },
      {
        "name": "makeScoringStrategy",
        "parameterTypes": []
      },
      {
        "name": "removeCorrectMapping",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerMapping"
        ]
      },
      {
        "name": "removeSolution",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSolution"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "undoUnallowedChanges",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.QuizQuestion"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerQuestion$HibernateAccessOptimizer$8H77rkuX",
    "fields": [
      {
        "name": "invocationTarget$agriqb0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerQuestion$HibernateInstantiator$f9lV1Q5c",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerQuestionStatistic",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setShortAnswerSpotCounters",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "getShortAnswerSpotCounters",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerQuestionStatistic$HibernateAccessOptimizer$MzlHEPGx",
    "fields": [
      {
        "name": "invocationTarget$ctpmjk0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerQuestionStatistic$HibernateInstantiator$21g32YQz",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerQuestionStatistic_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "shortAnswerSpotCounters"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerQuestion_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "correctMappings"
      },
      {
        "name": "matchLetterCase"
      },
      {
        "name": "similarityValue"
      },
      {
        "name": "solutions"
      },
      {
        "name": "spots"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSolution",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setInvalid",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setMappings",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setQuestion",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerQuestion"
        ]
      },
      {
        "name": "setText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getText",
        "parameterTypes": []
      },
      {
        "name": "isInvalid",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSolution$HibernateAccessOptimizer$6VjgKeGQ",
    "fields": [
      {
        "name": "invocationTarget$o6bd6j1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSolution$HibernateInstantiator$VZzgRAkV",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSolution_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "invalid"
      },
      {
        "name": "mappings"
      },
      {
        "name": "question"
      },
      {
        "name": "text"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSpot",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setInvalid",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setMappings",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setQuestion",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerQuestion"
        ]
      },
      {
        "name": "setSpotNr",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setWidth",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getSpotNr",
        "parameterTypes": []
      },
      {
        "name": "getWidth",
        "parameterTypes": []
      },
      {
        "name": "isInvalid",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSpot$HibernateAccessOptimizer$oeUjACOg",
    "fields": [
      {
        "name": "invocationTarget$0lthfr1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSpot$HibernateInstantiator$18VbYoy7",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSpotCounter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setShortAnswerQuestionStatistic",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerQuestionStatistic"
        ]
      },
      {
        "name": "setSpot",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSpot"
        ]
      },
      {
        "name": "getSpot",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSpotCounter$HibernateAccessOptimizer$u9QaqwdS",
    "fields": [
      {
        "name": "invocationTarget$pqp4rp0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSpotCounter$HibernateInstantiator$b1bH7hoD",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSpotCounter_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "shortAnswerQuestionStatistic"
      },
      {
        "name": "spot"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSpot_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "invalid"
      },
      {
        "name": "mappings"
      },
      {
        "name": "question"
      },
      {
        "name": "spotNr"
      },
      {
        "name": "width"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSubmittedAnswer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setSubmittedTexts",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "getSubmittedTexts",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSubmittedAnswer$HibernateAccessOptimizer$hciV8nuk",
    "fields": [
      {
        "name": "invocationTarget$l2vb6f1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSubmittedAnswer$HibernateInstantiator$YoH1KTV6",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSubmittedAnswer_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "submittedTexts"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSubmittedText",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setIsCorrect",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSpot",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSpot"
        ]
      },
      {
        "name": "setSubmittedAnswer",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSubmittedAnswer"
        ]
      },
      {
        "name": "setText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSpot",
        "parameterTypes": []
      },
      {
        "name": "getText",
        "parameterTypes": []
      },
      {
        "name": "isIsCorrect",
        "parameterTypes": []
      }
    ],
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSubmittedText$HibernateAccessOptimizer$h582XDot",
    "fields": [
      {
        "name": "invocationTarget$7758da0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSubmittedText$HibernateInstantiator$frA0yH9D",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSubmittedText_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "isCorrect"
      },
      {
        "name": "spot"
      },
      {
        "name": "submittedAnswer"
      },
      {
        "name": "text"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.SubmittedAnswer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setQuizQuestion",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.QuizQuestion"
        ]
      },
      {
        "name": "setScoreInPoints",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setSubmission",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.AbstractQuizSubmission"
        ]
      },
      {
        "name": "getQuizQuestion",
        "parameterTypes": []
      },
      {
        "name": "getScoreInPoints",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.SubmittedAnswer$HibernateAccessOptimizer$R65iARoI",
    "fields": [
      {
        "name": "invocationTarget$qk61dc0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.SubmittedAnswer_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "quizQuestion"
      },
      {
        "name": "scoreInPoints"
      },
      {
        "name": "submission"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.TempIdObject",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getTempID",
        "parameterTypes": []
      },
      {
        "name": "setTempID",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.package-info"
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.dto.QuizBatchJoinDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.repository.DragAndDropMappingRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.repository.DragItemRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.repository.QuizBatchRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.repository.QuizExerciseRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "findByIdWithBatchesElseThrow",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findByIdWithQuestionsAndCompetenciesElseThrow",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findByIdWithQuestionsAndStatisticsAndCompetenciesAndBatchesAndGradingCriteriaElseThrow",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findByIdWithQuestionsAndStatisticsElseThrow",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findByIdWithQuestionsElseThrow",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findWithEagerBatchesByIdOrElseThrow",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.repository.QuizPointStatisticRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.repository.QuizQuestionProgressRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.repository.QuizQuestionRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "findDnDQuestionByIdOrElseThrow",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.repository.QuizQuestionStatisticRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.repository.QuizSubmissionRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.repository.ShortAnswerMappingRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.repository.SubmittedAnswerRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "loadQuizSubmissionsSubmittedAnswers",
        "parameterTypes": [
          "java.util.Collection"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.service.AbstractQuizSubmissionService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "save",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.QuizExercise",
          "de.tum.cit.aet.artemis.quiz.domain.AbstractQuizSubmission",
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "saveSubmissionForExamMode",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.QuizExercise",
          "de.tum.cit.aet.artemis.quiz.domain.AbstractQuizSubmission",
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.service.DragAndDropQuizAnswerConversionService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.service.DragAndDropQuizAnswerConversionService$DropLocationCoordinates"
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.service.QuizBatchService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.repository.QuizBatchRepository",
          "de.tum.cit.aet.artemis.quiz.repository.QuizSubmissionRepository",
          "de.tum.cit.aet.artemis.exercise.repository.ParticipationRepository",
          "de.tum.cit.aet.artemis.exercise.service.ParticipationService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.service.QuizExerciseImportService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.service.QuizExerciseService",
          "de.tum.cit.aet.artemis.assessment.repository.ExampleSubmissionRepository",
          "de.tum.cit.aet.artemis.exercise.repository.SubmissionRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ResultRepository",
          "de.tum.cit.aet.artemis.communication.service.conversation.ChannelService",
          "de.tum.cit.aet.artemis.assessment.service.FeedbackService",
          "java.util.Optional"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.service.QuizExerciseService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.repository.QuizExerciseRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ResultRepository",
          "de.tum.cit.aet.artemis.quiz.repository.QuizSubmissionRepository",
          "de.tum.cit.aet.artemis.core.service.messaging.InstanceMessageSendService",
          "de.tum.cit.aet.artemis.quiz.service.QuizStatisticService",
          "de.tum.cit.aet.artemis.quiz.service.QuizBatchService",
          "de.tum.cit.aet.artemis.exercise.service.ExerciseSpecificationService",
          "de.tum.cit.aet.artemis.quiz.repository.DragAndDropMappingRepository",
          "de.tum.cit.aet.artemis.quiz.repository.ShortAnswerMappingRepository",
          "de.tum.cit.aet.artemis.exercise.service.ExerciseService"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.QuizConfiguration"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.service.QuizExerciseWithSubmissionsExportService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.repository.QuizExerciseRepository",
          "org.springframework.http.converter.json.MappingJackson2HttpMessageConverter",
          "de.tum.cit.aet.artemis.core.service.export.DataExportQuizExerciseCreationService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.service.QuizMessagingService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.http.converter.json.MappingJackson2HttpMessageConverter",
          "de.tum.cit.aet.artemis.communication.service.notifications.GroupNotificationService",
          "de.tum.cit.aet.artemis.communication.service.WebsocketMessagingService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.service.QuizQuestionProgressService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.repository.QuizQuestionProgressRepository",
          "de.tum.cit.aet.artemis.quiz.repository.QuizQuestionRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.service.QuizResultService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.repository.QuizExerciseRepository",
          "de.tum.cit.aet.artemis.quiz.service.QuizStatisticService",
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository",
          "de.tum.cit.aet.artemis.quiz.repository.SubmittedAnswerRepository",
          "de.tum.cit.aet.artemis.exercise.repository.SubmissionRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ResultRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.service.QuizScheduleService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.service.QuizMessagingService",
          "de.tum.cit.aet.artemis.quiz.repository.QuizExerciseRepository",
          "de.tum.cit.aet.artemis.quiz.repository.QuizBatchRepository",
          "de.tum.cit.aet.artemis.core.service.ScheduleService",
          "org.springframework.scheduling.TaskScheduler",
          "de.tum.cit.aet.artemis.core.service.ProfileService",
          "de.tum.cit.aet.artemis.quiz.service.QuizSubmissionService"
        ]
      },
      {
        "name": "applicationReady",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.service.QuizService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "save",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.QuizConfiguration"
        ]
      },
      {
        "name": "saveAndFlush",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.QuizConfiguration"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.service.QuizStatisticService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ResultRepository",
          "de.tum.cit.aet.artemis.communication.service.WebsocketMessagingService",
          "de.tum.cit.aet.artemis.quiz.repository.QuizPointStatisticRepository",
          "de.tum.cit.aet.artemis.quiz.repository.QuizQuestionStatisticRepository",
          "de.tum.cit.aet.artemis.quiz.repository.QuizSubmissionRepository",
          "java.util.Optional"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.service.QuizSubmissionService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.repository.QuizSubmissionRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ResultRepository",
          "de.tum.cit.aet.artemis.exercise.service.SubmissionVersionService",
          "de.tum.cit.aet.artemis.quiz.repository.QuizExerciseRepository",
          "de.tum.cit.aet.artemis.exercise.service.ParticipationService",
          "de.tum.cit.aet.artemis.quiz.service.QuizBatchService",
          "de.tum.cit.aet.artemis.quiz.service.QuizStatisticService",
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository",
          "de.tum.cit.aet.artemis.communication.service.WebsocketMessagingService",
          "de.tum.cit.aet.artemis.quiz.service.QuizQuestionProgressService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.service.QuizTrainingService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.web.QuizExerciseResource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.service.QuizExerciseService",
          "de.tum.cit.aet.artemis.quiz.service.QuizMessagingService",
          "de.tum.cit.aet.artemis.quiz.repository.QuizExerciseRepository",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.core.service.course.CourseService",
          "de.tum.cit.aet.artemis.exercise.service.ExerciseService",
          "de.tum.cit.aet.artemis.exercise.service.ExerciseDeletionService",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.core.service.messaging.InstanceMessageSendService",
          "de.tum.cit.aet.artemis.quiz.service.QuizStatisticService",
          "de.tum.cit.aet.artemis.quiz.service.QuizExerciseImportService",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.communication.service.notifications.GroupNotificationService",
          "de.tum.cit.aet.artemis.communication.service.notifications.GroupNotificationScheduleService",
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository",
          "de.tum.cit.aet.artemis.quiz.service.QuizBatchService",
          "de.tum.cit.aet.artemis.quiz.repository.QuizBatchRepository",
          "de.tum.cit.aet.artemis.communication.service.conversation.ChannelService",
          "de.tum.cit.aet.artemis.communication.repository.conversation.ChannelRepository",
          "de.tum.cit.aet.artemis.quiz.service.QuizSubmissionService",
          "de.tum.cit.aet.artemis.quiz.service.QuizResultService",
          "java.util.Optional",
          "java.util.Optional"
        ]
      },
      {
        "name": "getQuizExercisesForCourse",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "initBinder",
        "parameterTypes": [
          "org.springframework.web.bind.WebDataBinder"
        ]
      },
      {
        "name": "addBatch",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "createQuizExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.QuizExercise",
          "java.util.List"
        ]
      },
      {
        "name": "deleteQuizExercise",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getAllExercisesOnPage",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.dto.pageablesearch.SearchTermPageableSearchDTO",
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "getQuizExercise",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getQuizExerciseForStudent",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "importExercise",
        "parameterTypes": [
          "long",
          "de.tum.cit.aet.artemis.quiz.domain.QuizExercise",
          "java.util.List"
        ]
      },
      {
        "name": "joinBatch",
        "parameterTypes": [
          "java.lang.Long",
          "de.tum.cit.aet.artemis.quiz.dto.QuizBatchJoinDTO"
        ]
      },
      {
        "name": "performActionForQuizExercise",
        "parameterTypes": [
          "java.lang.Long",
          "de.tum.cit.aet.artemis.quiz.domain.QuizAction"
        ]
      },
      {
        "name": "startBatch",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.web.QuizExerciseResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.web.QuizParticipationResource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.repository.QuizExerciseRepository",
          "de.tum.cit.aet.artemis.exercise.service.ParticipationService",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ResultRepository",
          "de.tum.cit.aet.artemis.quiz.repository.QuizSubmissionRepository",
          "de.tum.cit.aet.artemis.quiz.service.QuizBatchService"
        ]
      },
      {
        "name": "startParticipation",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.web.QuizSubmissionResource",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.repository.QuizExerciseRepository",
          "de.tum.cit.aet.artemis.quiz.service.QuizSubmissionService",
          "de.tum.cit.aet.artemis.exercise.service.ParticipationService",
          "de.tum.cit.aet.artemis.assessment.web.ResultWebsocketService",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository"
        ]
      },
      {
        "name": "saveOrSubmitForLiveMode",
        "parameterTypes": [
          "java.lang.Long",
          "de.tum.cit.aet.artemis.quiz.domain.QuizSubmission",
          "boolean"
        ]
      },
      {
        "name": "submitQuizForExam",
        "parameterTypes": [
          "java.lang.Long",
          "de.tum.cit.aet.artemis.quiz.domain.QuizSubmission"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.web.QuizTrainingResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.text.api.AbstractTextApi",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.text.api.TextApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.text.service.TextExerciseService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.api.TextExerciseImportApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.text.repository.TextExerciseRepository",
          "de.tum.cit.aet.artemis.text.service.TextExerciseImportService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.api.TextFeedbackApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.text.service.TextExerciseFeedbackService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.api.TextRepositoryApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.text.repository.TextExerciseRepository",
          "de.tum.cit.aet.artemis.assessment.repository.TextBlockRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.api.TextSubmissionApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.text.repository.TextSubmissionRepository",
          "de.tum.cit.aet.artemis.text.service.TextSubmissionService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.api.TextSubmissionExportApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.text.service.TextSubmissionExportService",
          "de.tum.cit.aet.artemis.text.service.TextExerciseWithSubmissionsExportService",
          "de.tum.cit.aet.artemis.text.repository.TextSubmissionRepository",
          "de.tum.cit.aet.artemis.text.service.TextBlockService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.api.TextSubmissionImportApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.text.repository.TextSubmissionRepository",
          "de.tum.cit.aet.artemis.text.service.TextExerciseImportService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.config.TextApiNotPresentException"
  },
  {
    "name": "de.tum.cit.aet.artemis.text.domain.TextAssessmentEvent",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCourseId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setEventType",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.text.dto.TextAssessmentEventType"
        ]
      },
      {
        "name": "setFeedbackType",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.FeedbackType"
        ]
      },
      {
        "name": "setParticipationId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setSegmentType",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.text.domain.TextBlockType"
        ]
      },
      {
        "name": "setSubmissionId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setTextExerciseId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setTimestamp",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.domain.TextAssessmentEvent$HibernateAccessOptimizer$Lh4kT7Ji",
    "fields": [
      {
        "name": "invocationTarget$f28kog0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.domain.TextAssessmentEvent$HibernateInstantiator$oW5Mu1fU",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.domain.TextAssessmentEvent_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "courseId"
      },
      {
        "name": "eventType"
      },
      {
        "name": "feedbackType"
      },
      {
        "name": "participationId"
      },
      {
        "name": "segmentType"
      },
      {
        "name": "submissionId"
      },
      {
        "name": "textExerciseId"
      },
      {
        "name": "timestamp"
      },
      {
        "name": "userId"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.domain.TextBlock",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setEndIndex",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setFeedback",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.Feedback"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStartIndex",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setSubmission",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.text.domain.TextSubmission"
        ]
      },
      {
        "name": "setText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.text.domain.TextBlockType"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.domain.TextBlock$HibernateAccessOptimizer$RKmSaunE",
    "fields": [
      {
        "name": "invocationTarget$re769v1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.domain.TextBlock$HibernateInstantiator$8KR198nr",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.domain.TextBlockType",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.text.domain.TextBlock_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "endIndex"
      },
      {
        "name": "feedback"
      },
      {
        "name": "id"
      },
      {
        "name": "startIndex"
      },
      {
        "name": "submission"
      },
      {
        "name": "text"
      },
      {
        "name": "type"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.domain.TextExercise",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getExampleSolution",
        "parameterTypes": []
      },
      {
        "name": "getExerciseType",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "setExampleSolution",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSecondCorrectionEnabled",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.domain.TextExercise$HibernateAccessOptimizer$czkHwp0O",
    "fields": [
      {
        "name": "invocationTarget$04a7jt0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.domain.TextExercise$HibernateInstantiator$OJN8b05l",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.domain.TextExercise_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "exampleSolution"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.domain.TextSubmission",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getBlocks",
        "parameterTypes": []
      },
      {
        "name": "getLanguage",
        "parameterTypes": []
      },
      {
        "name": "getSubmissionExerciseType",
        "parameterTypes": []
      },
      {
        "name": "getText",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "setBlocks",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setLanguage",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.Language"
        ]
      },
      {
        "name": "setText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersions",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.domain.TextSubmission$HibernateAccessOptimizer$TNKFxnz6",
    "fields": [
      {
        "name": "invocationTarget$3jm79q0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.domain.TextSubmission$HibernateInstantiator$O0nGZfIQ",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.domain.TextSubmission_",
    "fields": [
      {
        "name": "blocks"
      },
      {
        "name": "class_"
      },
      {
        "name": "language"
      },
      {
        "name": "text"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.domain.package-info"
  },
  {
    "name": "de.tum.cit.aet.artemis.text.dto.TextAssessmentEventType"
  },
  {
    "name": "de.tum.cit.aet.artemis.text.repository.TextExerciseRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "findByIdWithExampleSubmissionsAndResultsElseThrow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findWithEagerCompetenciesAndCategoriesByIdElseThrow",
        "parameterTypes": [
          "long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.repository.TextSubmissionRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "findByIdWithEagerResultsAndFeedbackAndTextBlocksElseThrow",
        "parameterTypes": [
          "long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.service.TextAssessmentService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.assessment.service.ComplaintResponseService",
          "de.tum.cit.aet.artemis.assessment.repository.ComplaintRepository",
          "de.tum.cit.aet.artemis.assessment.repository.FeedbackRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ResultRepository",
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository",
          "de.tum.cit.aet.artemis.assessment.service.ResultService",
          "de.tum.cit.aet.artemis.exercise.repository.SubmissionRepository",
          "de.tum.cit.aet.artemis.text.service.TextBlockService",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.exercise.service.SubmissionService",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.communication.service.notifications.SingleUserNotificationService",
          "de.tum.cit.aet.artemis.assessment.web.ResultWebsocketService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.service.TextBlockService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.repository.TextBlockRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.service.TextExerciseFeedbackService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.Optional",
          "de.tum.cit.aet.artemis.exercise.service.SubmissionService",
          "de.tum.cit.aet.artemis.assessment.service.ResultService",
          "de.tum.cit.aet.artemis.assessment.repository.ResultRepository",
          "de.tum.cit.aet.artemis.assessment.web.ResultWebsocketService",
          "de.tum.cit.aet.artemis.exercise.service.ParticipationService",
          "de.tum.cit.aet.artemis.text.service.TextBlockService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.service.TextExerciseImportService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.text.repository.TextExerciseRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ExampleSubmissionRepository",
          "de.tum.cit.aet.artemis.exercise.repository.SubmissionRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ResultRepository",
          "de.tum.cit.aet.artemis.assessment.repository.TextBlockRepository",
          "de.tum.cit.aet.artemis.assessment.repository.FeedbackRepository",
          "de.tum.cit.aet.artemis.text.repository.TextSubmissionRepository",
          "de.tum.cit.aet.artemis.communication.service.conversation.ChannelService",
          "de.tum.cit.aet.artemis.assessment.service.FeedbackService",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.exercise.service.ExerciseService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.service.TextExerciseService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.text.repository.TextExerciseRepository",
          "de.tum.cit.aet.artemis.exercise.service.ExerciseSpecificationService",
          "de.tum.cit.aet.artemis.core.service.messaging.InstanceMessageSendService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.service.TextExerciseWithSubmissionsExportService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.service.FileService",
          "de.tum.cit.aet.artemis.text.service.TextSubmissionExportService",
          "org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.service.TextSubmissionExportService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.repository.ExerciseRepository",
          "de.tum.cit.aet.artemis.core.service.ZipFileService",
          "de.tum.cit.aet.artemis.core.service.FileService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.service.TextSubmissionService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.text.repository.TextSubmissionRepository",
          "de.tum.cit.aet.artemis.exercise.repository.SubmissionRepository",
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository",
          "de.tum.cit.aet.artemis.exercise.service.ParticipationService",
          "de.tum.cit.aet.artemis.assessment.repository.ResultRepository",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.exercise.service.SubmissionVersionService",
          "de.tum.cit.aet.artemis.assessment.repository.FeedbackRepository",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.exercise.service.ExerciseDateService",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "de.tum.cit.aet.artemis.exercise.repository.ParticipationRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ComplaintRepository",
          "de.tum.cit.aet.artemis.assessment.service.FeedbackService",
          "java.util.Optional"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.web.TextAssessmentEventResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.text.web.TextAssessmentResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.text.web.TextExerciseResource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.text.repository.TextExerciseRepository",
          "de.tum.cit.aet.artemis.text.service.TextExerciseService",
          "de.tum.cit.aet.artemis.assessment.repository.FeedbackRepository",
          "de.tum.cit.aet.artemis.exercise.service.ExerciseDeletionService",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.core.service.course.CourseService",
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository",
          "de.tum.cit.aet.artemis.exercise.repository.ParticipationRepository",
          "de.tum.cit.aet.artemis.assessment.repository.ResultRepository",
          "de.tum.cit.aet.artemis.text.service.TextExerciseImportService",
          "de.tum.cit.aet.artemis.text.service.TextSubmissionExportService",
          "de.tum.cit.aet.artemis.assessment.repository.ExampleSubmissionRepository",
          "de.tum.cit.aet.artemis.exercise.service.ExerciseService",
          "de.tum.cit.aet.artemis.assessment.repository.GradingCriterionRepository",
          "de.tum.cit.aet.artemis.assessment.repository.TextBlockRepository",
          "de.tum.cit.aet.artemis.communication.service.notifications.GroupNotificationScheduleService",
          "de.tum.cit.aet.artemis.core.service.messaging.InstanceMessageSendService",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.core.repository.CourseRepository",
          "de.tum.cit.aet.artemis.communication.service.conversation.ChannelService",
          "de.tum.cit.aet.artemis.communication.repository.conversation.ChannelRepository",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional"
        ]
      },
      {
        "name": "getTextExercisesForCourse",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "createTextExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.text.domain.TextExercise"
        ]
      },
      {
        "name": "deleteTextExercise",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getAllExercisesOnPage",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.dto.pageablesearch.SearchTermPageableSearchDTO",
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "getDataForTextEditor",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getTextExercise",
        "parameterTypes": [
          "java.lang.Long",
          "boolean"
        ]
      },
      {
        "name": "importExercise",
        "parameterTypes": [
          "long",
          "de.tum.cit.aet.artemis.text.domain.TextExercise"
        ]
      },
      {
        "name": "updateTextExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.text.domain.TextExercise",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.web.TextExerciseResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.web.TextSubmissionResource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.repository.SubmissionRepository",
          "de.tum.cit.aet.artemis.text.repository.TextSubmissionRepository",
          "de.tum.cit.aet.artemis.exercise.repository.ExerciseRepository",
          "de.tum.cit.aet.artemis.text.repository.TextExerciseRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.text.service.TextSubmissionService",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.exercise.repository.StudentParticipationRepository",
          "de.tum.cit.aet.artemis.assessment.repository.GradingCriterionRepository",
          "de.tum.cit.aet.artemis.text.service.TextAssessmentService",
          "java.util.Optional",
          "java.util.Optional",
          "de.tum.cit.aet.artemis.exercise.service.ExerciseDateService"
        ]
      },
      {
        "name": "createTextSubmission",
        "parameterTypes": [
          "java.lang.Long",
          "de.tum.cit.aet.artemis.text.domain.TextSubmission"
        ]
      },
      {
        "name": "getAllTextSubmissions",
        "parameterTypes": [
          "java.lang.Long",
          "boolean",
          "boolean",
          "int"
        ]
      },
      {
        "name": "getTextSubmissionWithoutAssessment",
        "parameterTypes": [
          "java.lang.Long",
          "boolean",
          "boolean",
          "int"
        ]
      },
      {
        "name": "updateTextSubmission",
        "parameterTypes": [
          "long",
          "de.tum.cit.aet.artemis.text.domain.TextSubmission"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.web.admin.AdminTextAssessmentEventResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.api.AbstractTutorialGroupApi",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.api.TutorialGroupApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.tutorialgroup.repository.TutorialGroupRepository",
          "de.tum.cit.aet.artemis.tutorialgroup.service.TutorialGroupService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.api.TutorialGroupChannelManagementApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.tutorialgroup.service.TutorialGroupChannelManagementService",
          "de.tum.cit.aet.artemis.tutorialgroup.service.TutorialGroupsConfigurationService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.api.TutorialGroupCommunicationApi",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.tutorialgroup.repository.TutorialGroupRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.api.TutorialGroupRegistrationApi",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorParticipationStatus",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroup",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setAdditionalInformation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCampus",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCapacity",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setCourse",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.Course"
        ]
      },
      {
        "name": "setIsOnline",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setLanguage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRegistrations",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setTeachingAssistant",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTutorialGroupChannel",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.domain.conversation.Channel"
        ]
      },
      {
        "name": "setTutorialGroupSchedule",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupSchedule"
        ]
      },
      {
        "name": "setTutorialGroupSessions",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroup$HibernateAccessOptimizer$9cfesosc",
    "fields": [
      {
        "name": "invocationTarget$pcr8181"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroup$HibernateInstantiator$Jv8F1EXD",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupFreePeriod",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setEnd",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setReason",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStart",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setTutorialGroupsConfiguration",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupsConfiguration"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupFreePeriod$HibernateAccessOptimizer$JUk5roQf",
    "fields": [
      {
        "name": "invocationTarget$9nf1o30"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupFreePeriod$HibernateInstantiator$axbv8xKo",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupFreePeriod_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "end"
      },
      {
        "name": "reason"
      },
      {
        "name": "start"
      },
      {
        "name": "tutorialGroupsConfiguration"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupRegistration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setStudent",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "setTutorialGroup",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroup"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupRegistrationType"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupRegistration$HibernateAccessOptimizer$jI5JaXq6",
    "fields": [
      {
        "name": "invocationTarget$q2rkl80"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupRegistration$HibernateInstantiator$P6ILrEAu",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupRegistrationType",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupRegistration_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "student"
      },
      {
        "name": "tutorialGroup"
      },
      {
        "name": "type"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupSchedule",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setDayOfWeek",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setEndTime",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRepetitionFrequency",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setStartTime",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTutorialGroup",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroup"
        ]
      },
      {
        "name": "setTutorialGroupSessions",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setValidFromInclusive",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValidToInclusive",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupSchedule$HibernateAccessOptimizer$2OSYlsnI",
    "fields": [
      {
        "name": "invocationTarget$qp5gre0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupSchedule$HibernateInstantiator$m5fUhc4J",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupSchedule_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "dayOfWeek"
      },
      {
        "name": "endTime"
      },
      {
        "name": "location"
      },
      {
        "name": "repetitionFrequency"
      },
      {
        "name": "startTime"
      },
      {
        "name": "tutorialGroup"
      },
      {
        "name": "tutorialGroupSessions"
      },
      {
        "name": "validFromInclusive"
      },
      {
        "name": "validToInclusive"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupSession",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setAttendanceCount",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setEnd",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStart",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupSessionStatus"
        ]
      },
      {
        "name": "setStatusExplanation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTutorialGroup",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroup"
        ]
      },
      {
        "name": "setTutorialGroupFreePeriod",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupFreePeriod"
        ]
      },
      {
        "name": "setTutorialGroupSchedule",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupSchedule"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupSession$HibernateAccessOptimizer$hw8mTGOg",
    "fields": [
      {
        "name": "invocationTarget$mgve0a0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupSession$HibernateInstantiator$L1LoOtrN",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupSessionStatus",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupSession_",
    "fields": [
      {
        "name": "attendanceCount"
      },
      {
        "name": "class_"
      },
      {
        "name": "end"
      },
      {
        "name": "location"
      },
      {
        "name": "start"
      },
      {
        "name": "status"
      },
      {
        "name": "statusExplanation"
      },
      {
        "name": "tutorialGroup"
      },
      {
        "name": "tutorialGroupFreePeriod"
      },
      {
        "name": "tutorialGroupSchedule"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroup_",
    "fields": [
      {
        "name": "additionalInformation"
      },
      {
        "name": "campus"
      },
      {
        "name": "capacity"
      },
      {
        "name": "class_"
      },
      {
        "name": "course"
      },
      {
        "name": "isOnline"
      },
      {
        "name": "language"
      },
      {
        "name": "registrations"
      },
      {
        "name": "teachingAssistant"
      },
      {
        "name": "title"
      },
      {
        "name": "tutorialGroupChannel"
      },
      {
        "name": "tutorialGroupSchedule"
      },
      {
        "name": "tutorialGroupSessions"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupsConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCourse",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.Course"
        ]
      },
      {
        "name": "setTutorialGroupFreePeriods",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setTutorialPeriodEndInclusive",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTutorialPeriodStartInclusive",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsePublicTutorialGroupChannels",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setUseTutorialGroupChannels",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupsConfiguration$HibernateAccessOptimizer$wol3LnO2",
    "fields": [
      {
        "name": "invocationTarget$f61u5k1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupsConfiguration$HibernateInstantiator$dFtneHhu",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupsConfiguration_",
    "fields": [
      {
        "name": "class_"
      },
      {
        "name": "course"
      },
      {
        "name": "tutorialGroupFreePeriods"
      },
      {
        "name": "tutorialPeriodEndInclusive"
      },
      {
        "name": "tutorialPeriodStartInclusive"
      },
      {
        "name": "usePublicTutorialGroupChannels"
      },
      {
        "name": "useTutorialGroupChannels"
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.package-info"
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.repository.TutorialGroupFreePeriodRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.repository.TutorialGroupRegistrationRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.repository.TutorialGroupRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "countByCourse",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.Course"
        ]
      },
      {
        "name": "findByTutorialGroupChannelId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findAllByCourseId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.repository.TutorialGroupScheduleRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.repository.TutorialGroupSessionRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.repository.TutorialGroupsConfigurationRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.service.TutorialGroupChannelManagementService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.service.conversation.ChannelService",
          "de.tum.cit.aet.artemis.communication.service.conversation.ConversationService",
          "de.tum.cit.aet.artemis.tutorialgroup.repository.TutorialGroupRepository",
          "de.tum.cit.aet.artemis.tutorialgroup.repository.TutorialGroupRegistrationRepository",
          "de.tum.cit.aet.artemis.communication.repository.conversation.ChannelRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.service.TutorialGroupFreePeriodService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.tutorialgroup.repository.TutorialGroupSessionRepository",
          "de.tum.cit.aet.artemis.tutorialgroup.repository.TutorialGroupFreePeriodRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.service.TutorialGroupScheduleService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.tutorialgroup.repository.TutorialGroupSessionRepository",
          "de.tum.cit.aet.artemis.tutorialgroup.repository.TutorialGroupScheduleRepository",
          "de.tum.cit.aet.artemis.tutorialgroup.service.TutorialGroupFreePeriodService",
          "de.tum.cit.aet.artemis.tutorialgroup.repository.TutorialGroupRepository"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.service.TutorialGroupService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.tutorialgroup.repository.TutorialGroupRegistrationRepository",
          "de.tum.cit.aet.artemis.tutorialgroup.repository.TutorialGroupRepository",
          "de.tum.cit.aet.artemis.core.repository.UserRepository",
          "de.tum.cit.aet.artemis.core.service.AuthorizationCheckService",
          "de.tum.cit.aet.artemis.tutorialgroup.repository.TutorialGroupSessionRepository",
          "de.tum.cit.aet.artemis.tutorialgroup.service.TutorialGroupChannelManagementService",
          "de.tum.cit.aet.artemis.communication.service.conversation.ConversationDTOService",
          "de.tum.cit.aet.artemis.communication.service.CourseNotificationService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.service.TutorialGroupService$ScheduleField"
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.service.TutorialGroupService$StudentExportDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.service.TutorialGroupService$StudentField"
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.service.TutorialGroupsConfigurationService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.tutorialgroup.repository.TutorialGroupSessionRepository",
          "de.tum.cit.aet.artemis.tutorialgroup.repository.TutorialGroupFreePeriodRepository",
          "de.tum.cit.aet.artemis.tutorialgroup.repository.TutorialGroupScheduleRepository",
          "de.tum.cit.aet.artemis.tutorialgroup.service.TutorialGroupScheduleService"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.service.TutorialGroupsConfigurationService$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.web.TutorialGroupFreePeriodResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.web.TutorialGroupResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.web.TutorialGroupResource$TutorialGroupRegistrationImportDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.web.TutorialGroupSessionResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.web.TutorialGroupsConfigurationResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.helios.HeliosClient",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "destroy",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.helios.HeliosEndpoint"
  },
  {
    "name": "de.tum.cit.aet.helios.HeliosStatusProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "boolean",
          "java.lang.String",
          "java.util.List",
          "java.time.Duration"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.helios.autoconfig.BootLifecycleListener",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.helios.autoconfig.HeartbeatScheduler",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "configureTasks",
        "parameterTypes": [
          "org.springframework.scheduling.config.ScheduledTaskRegistrar"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.helios.autoconfig.HeliosStatusAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.helios.HeliosStatusProperties"
        ]
      },
      {
        "name": "logStatus",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.helios.status.LifecycleState"
  },
  {
    "name": "de.tum.cit.aet.helios.status.PushStatusPayload"
  },
  {
    "name": "double",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "gc.conversationParticipants"
  },
  {
    "name": "inet.ipaddr.Address",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "inet.ipaddr.AddressComponent",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "inet.ipaddr.AddressSegmentSeries",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "inet.ipaddr.IPAddress",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "inet.ipaddr.IPAddressSegmentSeries",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "inet.ipaddr.format.AddressComponentRange",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "inet.ipaddr.format.AddressDivisionSeries",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "inet.ipaddr.format.AddressItem",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "inet.ipaddr.format.AddressItemRange",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "inet.ipaddr.format.IPAddressDivisionSeries",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "inet.ipaddr.format.IPAddressRange",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "inet.ipaddr.format.string.AddressStringDivisionSeries",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "inet.ipaddr.format.string.IPAddressStringDivisionSeries",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.dropwizard.metrics5.MetricRegistry"
  },
  {
    "name": "io.jsonwebtoken.Claims",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.jsonwebtoken.impl.DefaultClaimsBuilder$Supplier",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.jsonwebtoken.impl.DefaultJwtBuilder$Supplier",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.jsonwebtoken.impl.DefaultJwtHeaderBuilder$Supplier",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.jsonwebtoken.impl.DefaultJwtParserBuilder$Supplier",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.jsonwebtoken.impl.io.StandardCompressionAlgorithms",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.jsonwebtoken.impl.security.DefaultKeyOperationBuilder$Supplier",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.jsonwebtoken.impl.security.DefaultKeyOperationPolicyBuilder$Supplier",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.jsonwebtoken.impl.security.KeysBridge"
  },
  {
    "name": "io.jsonwebtoken.impl.security.StandardEncryptionAlgorithms",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.jsonwebtoken.impl.security.StandardKeyAlgorithms",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.jsonwebtoken.impl.security.StandardKeyOperations",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.jsonwebtoken.impl.security.StandardSecureDigestAlgorithms",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.jsonwebtoken.jackson.io.JacksonDeserializer"
  },
  {
    "name": "io.micrometer.common.KeyValues"
  },
  {
    "name": "io.micrometer.common.lang.NonNullApi",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.common.lang.NonNullFields",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.common.lang.Nullable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.context.ContextSnapshot"
  },
  {
    "name": "io.micrometer.core.annotation.Incubating"
  },
  {
    "name": "io.micrometer.core.instrument.Clock",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.Clock$1",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "monotonicTime",
        "parameterTypes": []
      },
      {
        "name": "wallTime",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.Counter"
  },
  {
    "name": "io.micrometer.core.instrument.Counter$Builder"
  },
  {
    "name": "io.micrometer.core.instrument.DistributionSummary"
  },
  {
    "name": "io.micrometer.core.instrument.FunctionCounter"
  },
  {
    "name": "io.micrometer.core.instrument.FunctionTimer"
  },
  {
    "name": "io.micrometer.core.instrument.Gauge"
  },
  {
    "name": "io.micrometer.core.instrument.HighCardinalityTagsDetector"
  },
  {
    "name": "io.micrometer.core.instrument.LongTaskTimer"
  },
  {
    "name": "io.micrometer.core.instrument.Meter"
  },
  {
    "name": "io.micrometer.core.instrument.Meter$Id"
  },
  {
    "name": "io.micrometer.core.instrument.Meter$Type"
  },
  {
    "name": "io.micrometer.core.instrument.MeterRegistry",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "config",
        "parameterTypes": []
      },
      {
        "name": "counter",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable"
        ]
      },
      {
        "name": "counter",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String[]"
        ]
      },
      {
        "name": "find",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "forEachMeter",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "gauge",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable",
          "java.lang.Number"
        ]
      },
      {
        "name": "gauge",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable",
          "java.lang.Object",
          "java.util.function.ToDoubleFunction"
        ]
      },
      {
        "name": "gauge",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Number"
        ]
      },
      {
        "name": "gauge",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.util.function.ToDoubleFunction"
        ]
      },
      {
        "name": "gaugeCollectionSize",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable",
          "java.util.Collection"
        ]
      },
      {
        "name": "gaugeMapSize",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable",
          "java.util.Map"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMeters",
        "parameterTypes": []
      },
      {
        "name": "isClosed",
        "parameterTypes": []
      },
      {
        "name": "more",
        "parameterTypes": []
      },
      {
        "name": "remove",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter$Id"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter"
        ]
      },
      {
        "name": "removeByPreFilterId",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter$Id"
        ]
      },
      {
        "name": "summary",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable"
        ]
      },
      {
        "name": "summary",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String[]"
        ]
      },
      {
        "name": "timer",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable"
        ]
      },
      {
        "name": "timer",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.MeterRegistry$Config"
  },
  {
    "name": "io.micrometer.core.instrument.MeterRegistry$More"
  },
  {
    "name": "io.micrometer.core.instrument.MultiGauge"
  },
  {
    "name": "io.micrometer.core.instrument.MultiGauge$Row"
  },
  {
    "name": "io.micrometer.core.instrument.Tag"
  },
  {
    "name": "io.micrometer.core.instrument.Tags"
  },
  {
    "name": "io.micrometer.core.instrument.TimeGauge"
  },
  {
    "name": "io.micrometer.core.instrument.Timer"
  },
  {
    "name": "io.micrometer.core.instrument.binder.MeterBinder",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmCompilationMetrics",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmGcMetrics",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmHeapPressureMetrics",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmInfoMetrics",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.logging.LogbackMetrics",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.system.FileDescriptorMetrics",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.system.ProcessorMetrics",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.system.UptimeMetrics",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.config.MeterFilter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "map",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter$Id"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.config.MeterFilter$9",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "accept",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter$Id"
        ]
      },
      {
        "name": "configure",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter$Id",
          "io.micrometer.core.instrument.distribution.DistributionStatisticConfig"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.config.MeterFilterReply"
  },
  {
    "name": "io.micrometer.core.instrument.config.MeterRegistryConfig",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "requireValid",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.config.NamingConvention"
  },
  {
    "name": "io.micrometer.core.instrument.config.validate.Validated"
  },
  {
    "name": "io.micrometer.core.instrument.config.validate.ValidationException"
  },
  {
    "name": "io.micrometer.core.instrument.distribution.AbstractTimeWindowHistogram",
    "fields": [
      {
        "name": "rotating"
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.distribution.DistributionStatisticConfig"
  },
  {
    "name": "io.micrometer.core.instrument.distribution.HistogramSupport"
  },
  {
    "name": "io.micrometer.core.instrument.distribution.TimeWindowMax",
    "fields": [
      {
        "name": "rotating"
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.distribution.TimeWindowSum",
    "fields": [
      {
        "name": "rotating"
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.distribution.pause.PauseDetector"
  },
  {
    "name": "io.micrometer.core.instrument.observation.DefaultMeterObservationHandler",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "onEvent",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Event",
          "io.micrometer.observation.Observation$Context"
        ]
      },
      {
        "name": "onStart",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      },
      {
        "name": "onStop",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.observation.DefaultMeterObservationHandler$IgnoredMeters"
  },
  {
    "name": "io.micrometer.core.instrument.observation.MeterObservationHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "supportsContext",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.search.RequiredSearch"
  },
  {
    "name": "io.micrometer.core.instrument.search.Search"
  },
  {
    "name": "io.micrometer.observation.Observation"
  },
  {
    "name": "io.micrometer.observation.Observation$Context"
  },
  {
    "name": "io.micrometer.observation.Observation$Event"
  },
  {
    "name": "io.micrometer.observation.Observation$Scope"
  },
  {
    "name": "io.micrometer.observation.ObservationFilter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.observation.ObservationHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "onError",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      },
      {
        "name": "onScopeClosed",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      },
      {
        "name": "onScopeOpened",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      },
      {
        "name": "onScopeReset",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.observation.ObservationPredicate",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.observation.ObservationRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.observation.ObservationRegistry$ObservationConfig"
  },
  {
    "name": "io.micrometer.observation.SimpleObservationRegistry",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getCurrentObservation",
        "parameterTypes": []
      },
      {
        "name": "getCurrentObservationScope",
        "parameterTypes": []
      },
      {
        "name": "isNoop",
        "parameterTypes": []
      },
      {
        "name": "observationConfig",
        "parameterTypes": []
      },
      {
        "name": "setCurrentObservationScope",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Scope"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.prometheusmetrics.MicrometerCollector"
  },
  {
    "name": "io.micrometer.prometheusmetrics.MicrometerCollector$Family"
  },
  {
    "name": "io.micrometer.prometheusmetrics.PrometheusConfig",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "validate",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.micrometer.prometheusmetrics.PrometheusCounter"
  },
  {
    "name": "io.micrometer.prometheusmetrics.PrometheusDistributionSummary"
  },
  {
    "name": "io.micrometer.prometheusmetrics.PrometheusMeterRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.prometheusmetrics.PrometheusTimer"
  },
  {
    "name": "io.micrometer.tracing.Tracer"
  },
  {
    "name": "io.micrometer.tracing.otel.bridge.OtelTracer"
  },
  {
    "name": "io.opentelemetry.context.ContextStorage"
  },
  {
    "name": "io.prometheus.metrics.expositionformats.internal.PrometheusProtobufWriterImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.prometheus.metrics.model.registry.Collector"
  },
  {
    "name": "io.prometheus.metrics.model.registry.MultiCollector"
  },
  {
    "name": "io.prometheus.metrics.model.registry.PrometheusRegistry",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.prometheus.metrics.model.registry.PrometheusScrapeRequest"
  },
  {
    "name": "io.prometheus.metrics.model.snapshots.DataPointSnapshot"
  },
  {
    "name": "io.prometheus.metrics.model.snapshots.Exemplar"
  },
  {
    "name": "io.prometheus.metrics.model.snapshots.Exemplars"
  },
  {
    "name": "io.prometheus.metrics.model.snapshots.Labels"
  },
  {
    "name": "io.prometheus.metrics.model.snapshots.MetricMetadata"
  },
  {
    "name": "io.prometheus.metrics.model.snapshots.MetricSnapshot"
  },
  {
    "name": "io.prometheus.metrics.model.snapshots.MetricSnapshots"
  },
  {
    "name": "io.reactivex.rxjava3.core.Flowable"
  },
  {
    "name": "io.sentry.logback.SentryAppender",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.sentry.opentelemetry.OtelSpanFactory"
  },
  {
    "name": "io.sentry.spring.boot.jakarta.SentrySpringVersionChecker",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.smallrye.mutiny.Multi"
  },
  {
    "name": "io.undertow.websockets.jsr.ServerWebSocketContainer"
  },
  {
    "name": "io.vavr.control.Option"
  },
  {
    "name": "io.vavr.control.Try"
  },
  {
    "name": "jakarta.activation.FileTypeMap"
  },
  {
    "name": "jakarta.annotation.Nullable",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.annotation.PostConstruct",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.annotation.PreDestroy",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.ejb.Asynchronous"
  },
  {
    "name": "jakarta.ejb.EJB"
  },
  {
    "name": "jakarta.ejb.TransactionAttribute"
  },
  {
    "name": "jakarta.enterprise.concurrent.Asynchronous"
  },
  {
    "name": "jakarta.faces.context.FacesContext"
  },
  {
    "name": "jakarta.inject.Provider"
  },
  {
    "name": "jakarta.inject.Qualifier"
  },
  {
    "name": "jakarta.json.bind.Jsonb"
  },
  {
    "name": "jakarta.mail.MessagingException"
  },
  {
    "name": "jakarta.mail.NoSuchProviderException"
  },
  {
    "name": "jakarta.mail.Session"
  },
  {
    "name": "jakarta.mail.Transport"
  },
  {
    "name": "jakarta.mail.internet.MimeMessage"
  },
  {
    "name": "jakarta.persistence.AttributeConverter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "jakarta.persistence.Cache"
  },
  {
    "name": "jakarta.persistence.CacheRetrieveMode"
  },
  {
    "name": "jakarta.persistence.CacheStoreMode"
  },
  {
    "name": "jakarta.persistence.CollectionTable",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.Column",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.Convert",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.Converter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.persistence.DiscriminatorColumn",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.DiscriminatorValue",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.ElementCollection",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.Embeddable",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.EmbeddedId",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.Entity",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.EntityGraph"
  },
  {
    "name": "jakarta.persistence.EntityListeners",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.EntityManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "jdk.proxy2.$Proxy255"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "createEntityGraph",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "createEntityGraph",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNamedQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNamedQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "createNamedStoredProcedureQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNativeQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNativeQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "createNativeQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaDelete"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaQuery"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaUpdate"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "createStoredProcedureQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createStoredProcedureQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "createStoredProcedureQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String[]"
        ]
      },
      {
        "name": "detach",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "find",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object"
        ]
      },
      {
        "name": "find",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object",
          "jakarta.persistence.LockModeType"
        ]
      },
      {
        "name": "find",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object",
          "jakarta.persistence.LockModeType",
          "java.util.Map"
        ]
      },
      {
        "name": "find",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object",
          "java.util.Map"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": []
      },
      {
        "name": "from",
        "parameterTypes": [
          "jdk.proxy2.$Proxy255"
        ]
      },
      {
        "name": "getCriteriaBuilder",
        "parameterTypes": []
      },
      {
        "name": "getDelegate",
        "parameterTypes": []
      },
      {
        "name": "getEntityGraph",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEntityGraphs",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getEntityManagerFactory",
        "parameterTypes": []
      },
      {
        "name": "getFlushMode",
        "parameterTypes": []
      },
      {
        "name": "getLockMode",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getMetamodel",
        "parameterTypes": []
      },
      {
        "name": "getProperties",
        "parameterTypes": []
      },
      {
        "name": "getReference",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object"
        ]
      },
      {
        "name": "getTransaction",
        "parameterTypes": []
      },
      {
        "name": "isJoinedToTransaction",
        "parameterTypes": []
      },
      {
        "name": "isOpen",
        "parameterTypes": []
      },
      {
        "name": "joinTransaction",
        "parameterTypes": []
      },
      {
        "name": "lock",
        "parameterTypes": [
          "java.lang.Object",
          "jakarta.persistence.LockModeType"
        ]
      },
      {
        "name": "lock",
        "parameterTypes": [
          "java.lang.Object",
          "jakarta.persistence.LockModeType",
          "java.util.Map"
        ]
      },
      {
        "name": "merge",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "jdk.proxy2.$Proxy255"
        ]
      },
      {
        "name": "persist",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "refresh",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "refresh",
        "parameterTypes": [
          "java.lang.Object",
          "jakarta.persistence.LockModeType"
        ]
      },
      {
        "name": "refresh",
        "parameterTypes": [
          "java.lang.Object",
          "jakarta.persistence.LockModeType",
          "java.util.Map"
        ]
      },
      {
        "name": "refresh",
        "parameterTypes": [
          "java.lang.Object",
          "java.util.Map"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setFlushMode",
        "parameterTypes": [
          "jakarta.persistence.FlushModeType"
        ]
      },
      {
        "name": "setProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "unwrap",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "jdk.proxy2.$Proxy255"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "jdk.proxy2.$Proxy262"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "jdk.proxy2.$Proxy262"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "jdk.proxy2.$Proxy262"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "jdk.proxy2.$Proxy262"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "jdk.proxy2.$Proxy261"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "jdk.proxy2.$Proxy261"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "jdk.proxy2.$Proxy261"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "jdk.proxy2.$Proxy261"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "jdk.proxy2.$Proxy257"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "jdk.proxy2.$Proxy257"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "jdk.proxy2.$Proxy257"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "jdk.proxy2.$Proxy257"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "jdk.proxy2.$Proxy256"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "jdk.proxy2.$Proxy256"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "jdk.proxy2.$Proxy256"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "jdk.proxy2.$Proxy256"
        ]
      }
    ]
  },
  {
    "name": "jakarta.persistence.EntityManagerFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "jdk.proxy2.$Proxy254"
        ]
      },
      {
        "name": "addNamedEntityGraph",
        "parameterTypes": [
          "java.lang.String",
          "jakarta.persistence.EntityGraph"
        ]
      },
      {
        "name": "addNamedQuery",
        "parameterTypes": [
          "java.lang.String",
          "jakarta.persistence.Query"
        ]
      },
      {
        "name": "createEntityManager",
        "parameterTypes": []
      },
      {
        "name": "createEntityManager",
        "parameterTypes": [
          "jakarta.persistence.SynchronizationType"
        ]
      },
      {
        "name": "createEntityManager",
        "parameterTypes": [
          "jakarta.persistence.SynchronizationType",
          "java.util.Map"
        ]
      },
      {
        "name": "createEntityManager",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "jdk.proxy2.$Proxy254"
        ]
      },
      {
        "name": "getCriteriaBuilder",
        "parameterTypes": []
      },
      {
        "name": "getMetamodel",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceUnitUtil",
        "parameterTypes": []
      },
      {
        "name": "getProperties",
        "parameterTypes": []
      },
      {
        "name": "isOpen",
        "parameterTypes": []
      },
      {
        "name": "of",
        "parameterTypes": [
          "jdk.proxy2.$Proxy254"
        ]
      },
      {
        "name": "unwrap",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "jdk.proxy2.$Proxy254"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "jdk.proxy2.$Proxy261"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "jdk.proxy2.$Proxy261"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "jdk.proxy2.$Proxy261"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "jdk.proxy2.$Proxy261"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "jdk.proxy2.$Proxy260"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "jdk.proxy2.$Proxy260"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "jdk.proxy2.$Proxy260"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "jdk.proxy2.$Proxy260"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "jdk.proxy2.$Proxy256"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "jdk.proxy2.$Proxy256"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "jdk.proxy2.$Proxy256"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "jdk.proxy2.$Proxy256"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "jdk.proxy2.$Proxy255"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "jdk.proxy2.$Proxy255"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "jdk.proxy2.$Proxy255"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "jdk.proxy2.$Proxy255"
        ]
      }
    ]
  },
  {
    "name": "jakarta.persistence.Enumerated",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.FlushModeType"
  },
  {
    "name": "jakarta.persistence.ForeignKey",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.persistence.GeneratedValue",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.Id",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.IdClass",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.Index",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.persistence.Inheritance",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.JoinColumn",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.JoinTable",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.LockModeType"
  },
  {
    "name": "jakarta.persistence.ManyToMany",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.ManyToOne",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.MapKeyColumn",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.MappedSuperclass",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.MapsId",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.OneToMany",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.OneToOne",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.OrderBy",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.OrderColumn",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.Persistence",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceUtil",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.PersistenceContext",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.persistence.PersistenceException"
  },
  {
    "name": "jakarta.persistence.PersistenceProperty",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.persistence.PersistenceUnitUtil"
  },
  {
    "name": "jakarta.persistence.PostPersist",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.persistence.PostRemove",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.persistence.PostUpdate",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.persistence.PrePersist",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.persistence.PreRemove",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.persistence.PreUpdate",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.persistence.PrimaryKeyJoinColumn",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.persistence.Query",
    "methods": [
      {
        "name": "getParameters",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.SecondaryTable",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.SharedCacheMode"
  },
  {
    "name": "jakarta.persistence.SynchronizationType"
  },
  {
    "name": "jakarta.persistence.Table",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.Transient",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "jakarta.persistence.TypedQuery"
  },
  {
    "name": "jakarta.persistence.UniqueConstraint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.persistence.ValidationMode"
  },
  {
    "name": "jakarta.persistence.criteria.CriteriaBuilder"
  },
  {
    "name": "jakarta.persistence.criteria.CriteriaDelete"
  },
  {
    "name": "jakarta.persistence.criteria.CriteriaQuery"
  },
  {
    "name": "jakarta.persistence.criteria.CriteriaUpdate"
  },
  {
    "name": "jakarta.persistence.criteria.Predicate"
  },
  {
    "name": "jakarta.persistence.criteria.Root"
  },
  {
    "name": "jakarta.persistence.metamodel.Metamodel"
  },
  {
    "name": "jakarta.persistence.spi.PersistenceProvider"
  },
  {
    "name": "jakarta.persistence.spi.PersistenceUnitInfo"
  },
  {
    "name": "jakarta.servlet.DispatcherType"
  },
  {
    "name": "jakarta.servlet.Filter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.web.FilterChainProxy"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.web.filter.ServletRequestPathFilter"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.web.servlet.handler.HandlerMappingIntrospector$$Lambda/0x00007acde9619b88"
        ]
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.security.web.FilterChainProxy"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.web.filter.ServletRequestPathFilter"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.web.servlet.handler.HandlerMappingIntrospector$$Lambda/0x00007acde9619b88"
        ]
      },
      {
        "name": "init",
        "parameterTypes": [
          "jakarta.servlet.FilterConfig"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.security.web.FilterChainProxy"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.web.filter.ServletRequestPathFilter"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.web.servlet.handler.HandlerMappingIntrospector$$Lambda/0x00007acde9619b88"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.security.web.FilterChainProxy"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.web.filter.ServletRequestPathFilter"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.web.servlet.handler.HandlerMappingIntrospector$$Lambda/0x00007acde9619b88"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.web.servlet.handler.HandlerMappingIntrospector$$Lambda/0x00007759f55e37b0"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.web.servlet.handler.HandlerMappingIntrospector$$Lambda/0x00007759f55e37b0"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.web.servlet.handler.HandlerMappingIntrospector$$Lambda/0x00007759f55e37b0"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.web.servlet.handler.HandlerMappingIntrospector$$Lambda/0x00007759f55e37b0"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.web.servlet.handler.HandlerMappingIntrospector$$Lambda/0x00007acc055dfc00"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.web.servlet.handler.HandlerMappingIntrospector$$Lambda/0x00007acc055dfc00"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.web.servlet.handler.HandlerMappingIntrospector$$Lambda/0x00007acc055dfc00"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.web.servlet.handler.HandlerMappingIntrospector$$Lambda/0x00007acc055dfc00"
        ]
      }
    ]
  },
  {
    "name": "jakarta.servlet.FilterChain"
  },
  {
    "name": "jakarta.servlet.FilterConfig"
  },
  {
    "name": "jakarta.servlet.FilterRegistration$Dynamic"
  },
  {
    "name": "jakarta.servlet.GenericFilter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.servlet.GenericServlet",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getInitParameter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getInitParameterNames",
        "parameterTypes": []
      },
      {
        "name": "getServletConfig",
        "parameterTypes": []
      },
      {
        "name": "getServletContext",
        "parameterTypes": []
      },
      {
        "name": "getServletInfo",
        "parameterTypes": []
      },
      {
        "name": "getServletName",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "log",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "log",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "jakarta.servlet.MultipartConfigElement",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.servlet.Registration$Dynamic"
  },
  {
    "name": "jakarta.servlet.RequestDispatcher"
  },
  {
    "name": "jakarta.servlet.Servlet",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "init",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.servlet.ServletConfig",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "init",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.servlet.ServletContext",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "jakarta.servlet.ServletException"
  },
  {
    "name": "jakarta.servlet.ServletRegistration$Dynamic"
  },
  {
    "name": "jakarta.servlet.ServletRequest"
  },
  {
    "name": "jakarta.servlet.ServletResponse"
  },
  {
    "name": "jakarta.servlet.http.HttpServlet",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "init",
        "parameterTypes": [
          "jakarta.servlet.ServletConfig"
        ]
      },
      {
        "name": "service",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse"
        ]
      }
    ]
  },
  {
    "name": "jakarta.servlet.http.HttpServletRequest"
  },
  {
    "name": "jakarta.servlet.http.HttpServletResponse"
  },
  {
    "name": "jakarta.servlet.http.HttpSession"
  },
  {
    "name": "jakarta.servlet.jsp.jstl.core.Config"
  },
  {
    "name": "jakarta.transaction.Transactional"
  },
  {
    "name": "jakarta.validation.ClockProvider"
  },
  {
    "name": "jakarta.validation.Configuration"
  },
  {
    "name": "jakarta.validation.Constraint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.validation.ConstraintValidatorFactory"
  },
  {
    "name": "jakarta.validation.ConstraintViolation"
  },
  {
    "name": "jakarta.validation.MessageInterpolator"
  },
  {
    "name": "jakarta.validation.ParameterNameProvider"
  },
  {
    "name": "jakarta.validation.TraversableResolver"
  },
  {
    "name": "jakarta.validation.Valid",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.validation.ValidationProviderResolver"
  },
  {
    "name": "jakarta.validation.Validator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "jakarta.validation.ValidatorContext"
  },
  {
    "name": "jakarta.validation.ValidatorFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "jakarta.validation.bootstrap.GenericBootstrap"
  },
  {
    "name": "jakarta.validation.constraints.Email",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.validation.constraints.Max",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.validation.constraints.Min",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.validation.constraints.NotBlank",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.validation.constraints.NotNull",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      },
      {
        "name": "groups",
        "parameterTypes": []
      },
      {
        "name": "message",
        "parameterTypes": []
      },
      {
        "name": "payload",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.validation.constraints.Pattern",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.validation.constraints.Size",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      },
      {
        "name": "groups",
        "parameterTypes": []
      },
      {
        "name": "max",
        "parameterTypes": []
      },
      {
        "name": "message",
        "parameterTypes": []
      },
      {
        "name": "min",
        "parameterTypes": []
      },
      {
        "name": "payload",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.validation.executable.ExecutableValidator"
  },
  {
    "name": "jakarta.validation.metadata.BeanDescriptor"
  },
  {
    "name": "jakarta.validation.metadata.ConstraintDescriptor"
  },
  {
    "name": "jakarta.websocket.Endpoint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.xml.bind.Binder"
  },
  {
    "name": "jakarta.xml.ws.WebServiceRef"
  },
  {
    "name": "java.awt.Dimension"
  },
  {
    "name": "java.awt.Graphics2D"
  },
  {
    "name": "java.awt.image.BufferedImage"
  },
  {
    "name": "java.beans.Introspector"
  },
  {
    "name": "java.io.ByteArrayOutputStream"
  },
  {
    "name": "java.io.Closeable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "java.io.Console",
    "methods": [
      {
        "name": "charset",
        "parameterTypes": []
      },
      {
        "name": "isTerminal",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.io.DataInput"
  },
  {
    "name": "java.io.DataOutput"
  },
  {
    "name": "java.io.File"
  },
  {
    "name": "java.io.FileNotFoundException",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.io.IOException",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.io.InputStream"
  },
  {
    "name": "java.io.ObjectInputStream"
  },
  {
    "name": "java.io.ObjectStreamException"
  },
  {
    "name": "java.io.OutputStream"
  },
  {
    "name": "java.io.PrintWriter"
  },
  {
    "name": "java.io.Reader",
    "methods": [
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      }
    ]
  },
  {
    "name": "java.io.Serializable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "setAuthenticationMechanism",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.AuthenticationMechanism"
        ]
      },
      {
        "name": "setBuildPlanAccessSecret",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCompetencyId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setCompetencyId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setCompetencyJols",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setCourse",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setCourseNotification",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setCourseNotificationType",
        "parameterTypes": [
          "java.lang.Short"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreatedDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setDeepLink",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeploymentId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEmail",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExercise",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.programming.domain.ProgrammingExercise"
        ]
      },
      {
        "name": "setExerciseId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setExternalLLMUsageAccepted",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setGroup",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyExerciseLink$CompetencyExerciseId"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyLectureUnitLink$CompetencyLectureUnitId"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyProgress$CompetencyUserId"
        ]
      },
      {
        "name": "setIpAddress",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIrisFaqIngestionSubSettings",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.domain.settings.IrisFaqIngestionSubSettings"
        ]
      },
      {
        "name": "setIrisTutorSuggestionSubSettings",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.iris.domain.settings.IrisTutorSuggestionSubSettings"
        ]
      },
      {
        "name": "setIss",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastModified",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setLastModifiedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastModifiedDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setLectureUnitId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setLectureUnitId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOnlineCourseConfigurations",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setParamKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setParamValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setParticipation",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.participation.Participation"
        ]
      },
      {
        "name": "setProgrammingExercises",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setProgress",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.quiz.domain.QuizQuestionProgressData"
        ]
      },
      {
        "name": "setProjectKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResourceLinkId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSavedPosts",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setStarted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setStartedDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setStudent",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "setTeam",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.Team"
        ]
      },
      {
        "name": "setTimestamp",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.text.domain.TextBlockType"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setUserIdeMappings",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setVersions",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "split",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "allDeclaredFields": true
  },
  {
    "name": "java.io.UncheckedIOException"
  },
  {
    "name": "java.io.Writer"
  },
  {
    "name": "java.lang.AutoCloseable",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.Boolean",
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "TYPE"
      }
    ],
    "methods": [
      {
        "name": "toboolean",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.Byte",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.CharSequence",
    "methods": [
      {
        "name": "split",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.Character",
    "fields": [
      {
        "name": "TYPE"
      }
    ],
    "methods": [
      {
        "name": "tochar",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.Class",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "accessFlags",
        "parameterTypes": []
      },
      {
        "name": "from",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAnnotatedInterfaces",
        "parameterTypes": []
      },
      {
        "name": "getAnnotatedSuperclass",
        "parameterTypes": []
      },
      {
        "name": "getDeclaredMethod",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "getMethod",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "getModule",
        "parameterTypes": []
      },
      {
        "name": "getNestHost",
        "parameterTypes": []
      },
      {
        "name": "getNestMembers",
        "parameterTypes": []
      },
      {
        "name": "getPermittedSubclasses",
        "parameterTypes": []
      },
      {
        "name": "getRecordComponents",
        "parameterTypes": []
      },
      {
        "name": "isNestmateOf",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "isRecord",
        "parameterTypes": []
      },
      {
        "name": "isSealed",
        "parameterTypes": []
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDeclaredField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDeclaredFields"
      },
      {
        "name": "getField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFields"
      }
    ]
  },
  {
    "name": "java.lang.ClassLoader",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "defineClass",
        "parameterTypes": [
          "java.lang.String",
          "byte[]",
          "int",
          "int",
          "java.security.ProtectionDomain"
        ]
      },
      {
        "name": "getUnnamedModule",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.ClassNotFoundException"
  },
  {
    "name": "java.lang.CloneNotSupportedException"
  },
  {
    "name": "java.lang.Cloneable",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "java.lang.Comparable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "compareTo",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setLastModifiedDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setVersions",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "split",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "allDeclaredFields": true
  },
  {
    "name": "java.lang.Deprecated",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.Double",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.Enum"
  },
  {
    "name": "java.lang.Exception",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.Float",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.FunctionalInterface"
  },
  {
    "name": "java.lang.IllegalArgumentException"
  },
  {
    "name": "java.lang.IllegalStateException"
  },
  {
    "name": "java.lang.Integer",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.InterruptedException"
  },
  {
    "name": "java.lang.Iterable",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "forEach",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "spliterator",
        "parameterTypes": []
      }
    ],
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "java.lang.LinkageError"
  },
  {
    "name": "java.lang.Long",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.Module",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addExports",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Module"
        ]
      },
      {
        "name": "canRead",
        "parameterTypes": [
          "java.lang.Module"
        ]
      },
      {
        "name": "getClassLoader",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPackages",
        "parameterTypes": []
      },
      {
        "name": "getResourceAsStream",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isExported",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isExported",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Module"
        ]
      },
      {
        "name": "isNamed",
        "parameterTypes": []
      },
      {
        "name": "isOpen",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Module"
        ]
      }
    ]
  },
  {
    "name": "java.lang.ModuleLayer",
    "methods": [
      {
        "name": "boot",
        "parameterTypes": []
      },
      {
        "name": "modules",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.Number",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.Object",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.repository.CustomPostRepositoryImpl$$SpringCGLIB$$0"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.repository.CustomPostRepositoryImpl$$SpringCGLIB$$0"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "of",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.repository.CustomPostRepositoryImpl$$SpringCGLIB$$0"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.communication.repository.CustomPostRepositoryImpl$$SpringCGLIB$$0"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "clone",
        "parameterTypes": []
      },
      {
        "name": "from",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.Record",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "java.lang.Runnable",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.Runtime",
    "methods": [
      {
        "name": "version",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.Runtime$Version",
    "methods": [
      {
        "name": "feature",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.RuntimeException",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.SafeVarargs"
  },
  {
    "name": "java.lang.SecurityManager",
    "methods": [
      {
        "name": "checkPermission",
        "parameterTypes": [
          "java.security.Permission"
        ]
      }
    ]
  },
  {
    "name": "java.lang.Short",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.StackTraceElement",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.String",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "fields": [
      {
        "name": "TYPE"
      }
    ],
    "methods": [
      {
        "name": "split",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "java.io.Serializable"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Comparable"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.constant.Constable"
        ]
      }
    ]
  },
  {
    "name": "java.lang.StringBuilder"
  },
  {
    "name": "java.lang.System",
    "methods": [
      {
        "name": "getSecurityManager",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.Thread",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "ofVirtual",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.Thread$Builder",
    "methods": [
      {
        "name": "name",
        "parameterTypes": [
          "java.lang.String",
          "long"
        ]
      },
      {
        "name": "start",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      }
    ]
  },
  {
    "name": "java.lang.Thread$State"
  },
  {
    "name": "java.lang.ThreadGroup"
  },
  {
    "name": "java.lang.Throwable",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.UnsupportedOperationException"
  },
  {
    "name": "java.lang.Void",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.WrongThreadException"
  },
  {
    "name": "java.lang.annotation.Annotation"
  },
  {
    "name": "java.lang.annotation.Documented"
  },
  {
    "name": "java.lang.annotation.Inherited"
  },
  {
    "name": "java.lang.annotation.Repeatable"
  },
  {
    "name": "java.lang.annotation.Retention",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "java.lang.annotation.Target",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "java.lang.constant.Constable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "split",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.lang.constant.ConstantDesc",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "split",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.lang.invoke.MethodHandles",
    "methods": [
      {
        "name": "privateLookupIn",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.invoke.MethodHandles$Lookup"
        ]
      }
    ]
  },
  {
    "name": "java.lang.invoke.MethodHandles$Lookup",
    "methods": [
      {
        "name": "defineClass",
        "parameterTypes": [
          "byte[]"
        ]
      },
      {
        "name": "lookupClass",
        "parameterTypes": []
      },
      {
        "name": "lookupModes",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.invoke.SerializedLambda"
  },
  {
    "name": "java.lang.invoke.TypeDescriptor$OfField",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.BufferPoolMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.ClassLoadingMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.CompilationMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.LockInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.ManagementPermission",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.lang.management.MemoryMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.MemoryManagerMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.MemoryPoolMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.MemoryUsage",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "from",
        "parameterTypes": [
          "javax.management.openmbean.CompositeData"
        ]
      }
    ]
  },
  {
    "name": "java.lang.management.MonitorInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.OperatingSystemMXBean"
  },
  {
    "name": "java.lang.management.PlatformLoggingMXBean",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getLoggerLevel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLoggerNames",
        "parameterTypes": []
      },
      {
        "name": "getParentLoggerName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLoggerLevel",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.lang.management.RuntimeMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.ThreadInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.ThreadMXBean"
  },
  {
    "name": "java.lang.reflect.AnnotatedArrayType",
    "methods": [
      {
        "name": "getAnnotatedGenericComponentType",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.reflect.AnnotatedElement",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.reflect.AnnotatedParameterizedType",
    "methods": [
      {
        "name": "getAnnotatedActualTypeArguments",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.reflect.AnnotatedType",
    "methods": [
      {
        "name": "getType",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.reflect.AnnotatedTypeVariable",
    "methods": [
      {
        "name": "getAnnotatedBounds",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.reflect.Constructor"
  },
  {
    "name": "java.lang.reflect.Executable",
    "methods": [
      {
        "name": "getAnnotatedExceptionTypes",
        "parameterTypes": []
      },
      {
        "name": "getAnnotatedParameterTypes",
        "parameterTypes": []
      },
      {
        "name": "getAnnotatedReceiverType",
        "parameterTypes": []
      },
      {
        "name": "getParameterCount",
        "parameterTypes": []
      },
      {
        "name": "getParameters",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.reflect.Field"
  },
  {
    "name": "java.lang.reflect.GenericArrayType",
    "methods": [
      {
        "name": "getGenericComponentType",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.reflect.GenericDeclaration",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.reflect.Method",
    "methods": [
      {
        "name": "getAnnotatedReturnType",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.reflect.Parameter",
    "methods": [
      {
        "name": "getModifiers",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "isNamePresent",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.reflect.ParameterizedType",
    "methods": [
      {
        "name": "getActualTypeArguments",
        "parameterTypes": []
      },
      {
        "name": "getOwnerType",
        "parameterTypes": []
      },
      {
        "name": "getRawType",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.reflect.Proxy",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.reflect.RecordComponent",
    "methods": [
      {
        "name": "getAccessor",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.reflect.Type",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.reflect.TypeVariable",
    "methods": [
      {
        "name": "getAnnotatedBounds",
        "parameterTypes": []
      },
      {
        "name": "getBounds",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.reflect.WildcardType",
    "methods": [
      {
        "name": "getLowerBounds",
        "parameterTypes": []
      },
      {
        "name": "getUpperBounds",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.math.BigDecimal"
  },
  {
    "name": "java.math.BigInteger"
  },
  {
    "name": "java.net.InetAddress"
  },
  {
    "name": "java.net.URI",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.net.URISyntaxException"
  },
  {
    "name": "java.net.URL",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.net.URLClassLoader",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.net.UnixDomainSocketAddress",
    "methods": [
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.net.http.HttpClient"
  },
  {
    "name": "java.nio.channels.Channel",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "java.nio.channels.ServerSocketChannel",
    "methods": [
      {
        "name": "open",
        "parameterTypes": [
          "java.net.ProtocolFamily"
        ]
      }
    ]
  },
  {
    "name": "java.nio.channels.SocketChannel",
    "methods": [
      {
        "name": "open",
        "parameterTypes": [
          "java.net.ProtocolFamily"
        ]
      }
    ]
  },
  {
    "name": "java.nio.charset.Charset",
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.nio.file.FileAlreadyExistsException"
  },
  {
    "name": "java.nio.file.InvalidPathException"
  },
  {
    "name": "java.nio.file.Path",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.security.AccessController",
    "methods": [
      {
        "name": "doPrivileged",
        "parameterTypes": [
          "java.security.PrivilegedExceptionAction"
        ]
      }
    ]
  },
  {
    "name": "java.security.AlgorithmParametersSpi"
  },
  {
    "name": "java.security.GeneralSecurityException"
  },
  {
    "name": "java.security.KeyStoreSpi"
  },
  {
    "name": "java.security.NoSuchAlgorithmException"
  },
  {
    "name": "java.security.Principal"
  },
  {
    "name": "java.security.SecureClassLoader",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.security.SecureRandom"
  },
  {
    "name": "java.security.SecureRandomParameters"
  },
  {
    "name": "java.security.interfaces.EdECKey",
    "methods": [
      {
        "name": "getParams",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.security.interfaces.XECKey",
    "methods": [
      {
        "name": "getParams",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.security.spec.NamedParameterSpec",
    "methods": [
      {
        "name": "getName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.sql.Connection",
    "methods": [
      {
        "name": "getMetaData",
        "parameterTypes": []
      },
      {
        "name": "isValid",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "java.sql.ConnectionBuilder"
  },
  {
    "name": "java.sql.Date"
  },
  {
    "name": "java.sql.Driver"
  },
  {
    "name": "java.sql.DriverManager"
  },
  {
    "name": "java.sql.SQLException",
    "fields": [
      {
        "name": "next"
      }
    ]
  },
  {
    "name": "java.sql.SQLFeatureNotSupportedException"
  },
  {
    "name": "java.sql.ShardingKeyBuilder"
  },
  {
    "name": "java.sql.Timestamp"
  },
  {
    "name": "java.sql.Types",
    "allPublicFields": true
  },
  {
    "name": "java.sql.Wrapper",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "java.text.CompactNumberFormat"
  },
  {
    "name": "java.text.DateFormat"
  },
  {
    "name": "java.text.ListFormat"
  },
  {
    "name": "java.text.MessageFormat"
  },
  {
    "name": "java.text.NumberFormat",
    "methods": [
      {
        "name": "isStrict",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.time.Clock"
  },
  {
    "name": "java.time.Duration",
    "methods": [
      {
        "name": "isPositive",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.time.Instant"
  },
  {
    "name": "java.time.Ser",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "java.time.ZonedDateTime",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "java.time.temporal.TemporalAccessor"
  },
  {
    "name": "java.util.AbstractCollection",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "java.util.AbstractList",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.util.AbstractMap",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.util.ArrayList",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.util.Arrays$ArrayList",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "java.util.CollSer"
  },
  {
    "name": "java.util.Collection",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "java.util.Collections$SingletonList",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "java.util.Collections$UnmodifiableCollection",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.util.Collections$UnmodifiableList",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.util.Collections$UnmodifiableRandomAccessList",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "java.util.Comparator"
  },
  {
    "name": "java.util.Date"
  },
  {
    "name": "java.util.EnumMap"
  },
  {
    "name": "java.util.EnumMap$Values",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.util.EnumSet"
  },
  {
    "name": "java.util.Enumeration"
  },
  {
    "name": "java.util.EventListener",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "java.util.HashMap",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.util.HashSet",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "java.util.ImmutableCollections$AbstractImmutableCollection",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.util.ImmutableCollections$AbstractImmutableList",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.util.ImmutableCollections$AbstractImmutableMap",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.util.ImmutableCollections$AbstractImmutableSet",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.util.ImmutableCollections$ListN",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.util.ImmutableCollections$MapN",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.util.ImmutableCollections$SetN",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.util.Iterator"
  },
  {
    "name": "java.util.LinkedHashMap",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.util.List",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.util.Locale"
  },
  {
    "name": "java.util.Map",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.util.Map$Entry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "fields": [
      {
        "name": "hashCode"
      }
    ]
  },
  {
    "name": "java.util.MissingResourceException"
  },
  {
    "name": "java.util.NavigableSet"
  },
  {
    "name": "java.util.NoSuchElementException"
  },
  {
    "name": "java.util.Optional"
  },
  {
    "name": "java.util.Properties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.util.PropertyPermission",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.util.RandomAccess",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.util.ResourceBundle"
  },
  {
    "name": "java.util.SequencedCollection"
  },
  {
    "name": "java.util.SequencedMap",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.util.ServiceLoader"
  },
  {
    "name": "java.util.Set",
    "queryAllDeclaredMethods": true,
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "java.util.SortedMap"
  },
  {
    "name": "java.util.SortedSet",
    "methods": [
      {
        "name": "getFirst",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.util.Spliterator"
  },
  {
    "name": "java.util.TimeZone"
  },
  {
    "name": "java.util.UUID"
  },
  {
    "name": "java.util.concurrent.AbstractExecutorService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.util.concurrent.BlockingQueue"
  },
  {
    "name": "java.util.concurrent.Callable",
    "methods": [
      {
        "name": "call",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.util.concurrent.CompletableFuture"
  },
  {
    "name": "java.util.concurrent.ConcurrentMap"
  },
  {
    "name": "java.util.concurrent.CountDownLatch"
  },
  {
    "name": "java.util.concurrent.Executor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "java.util.concurrent.ExecutorService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.util.concurrent.ForkJoinTask",
    "fields": [
      {
        "name": "aux"
      },
      {
        "name": "status"
      }
    ]
  },
  {
    "name": "java.util.concurrent.Future",
    "methods": [
      {
        "name": "state",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.util.concurrent.RejectedExecutionHandler"
  },
  {
    "name": "java.util.concurrent.RunnableScheduledFuture"
  },
  {
    "name": "java.util.concurrent.ScheduledExecutorService"
  },
  {
    "name": "java.util.concurrent.ScheduledFuture"
  },
  {
    "name": "java.util.concurrent.ScheduledThreadPoolExecutor"
  },
  {
    "name": "java.util.concurrent.ThreadFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "java.util.concurrent.ThreadPoolExecutor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.util.concurrent.TimeUnit"
  },
  {
    "name": "java.util.concurrent.atomic.AtomicBoolean",
    "fields": [
      {
        "name": "value"
      }
    ]
  },
  {
    "name": "java.util.concurrent.atomic.AtomicInteger"
  },
  {
    "name": "java.util.concurrent.atomic.AtomicLong"
  },
  {
    "name": "java.util.concurrent.atomic.AtomicMarkableReference",
    "fields": [
      {
        "name": "pair"
      }
    ]
  },
  {
    "name": "java.util.concurrent.atomic.AtomicReference",
    "fields": [
      {
        "name": "value"
      }
    ]
  },
  {
    "name": "java.util.concurrent.atomic.Striped64",
    "fields": [
      {
        "name": "base"
      },
      {
        "name": "cellsBusy"
      }
    ]
  },
  {
    "name": "java.util.concurrent.atomic.Striped64$Cell",
    "fields": [
      {
        "name": "value"
      }
    ]
  },
  {
    "name": "java.util.concurrent.locks.ReentrantLock"
  },
  {
    "name": "java.util.function.BiConsumer"
  },
  {
    "name": "java.util.function.BiFunction"
  },
  {
    "name": "java.util.function.BiPredicate",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "and",
        "parameterTypes": [
          "java.util.function.BiPredicate"
        ]
      },
      {
        "name": "negate",
        "parameterTypes": []
      },
      {
        "name": "or",
        "parameterTypes": [
          "java.util.function.BiPredicate"
        ]
      }
    ]
  },
  {
    "name": "java.util.function.Consumer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.util.function.Function"
  },
  {
    "name": "java.util.function.ObjIntConsumer"
  },
  {
    "name": "java.util.function.Predicate"
  },
  {
    "name": "java.util.function.Supplier",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "java.util.function.ToDoubleFunction"
  },
  {
    "name": "java.util.function.ToLongFunction"
  },
  {
    "name": "java.util.logging.LogManager",
    "methods": [
      {
        "name": "getLoggingMXBean",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.util.logging.Logger"
  },
  {
    "name": "java.util.logging.LoggingMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.util.logging.SimpleFormatter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.util.regex.MatchResult"
  },
  {
    "name": "java.util.regex.Matcher"
  },
  {
    "name": "java.util.regex.Pattern",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "java.util.stream.Collector"
  },
  {
    "name": "java.util.stream.DoubleStream"
  },
  {
    "name": "java.util.stream.Stream"
  },
  {
    "name": "java.util.zip.ZipEntry"
  },
  {
    "name": "java.util.zip.ZipOutputStream"
  },
  {
    "name": "javafx.beans.value.ObservableValue"
  },
  {
    "name": "javax.annotation.CheckForNull",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "javax.annotation.Nonnull",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "javax.annotation.Nullable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "javax.annotation.meta.TypeQualifier",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "javax.annotation.meta.TypeQualifierDefault",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "javax.annotation.meta.TypeQualifierNickname"
  },
  {
    "name": "javax.cache.Caching"
  },
  {
    "name": "javax.crypto.SecretKey"
  },
  {
    "name": "javax.inject.Qualifier"
  },
  {
    "name": "javax.management.MBeanNotificationInfo"
  },
  {
    "name": "javax.management.MBeanOperationInfo",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getSignature",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "javax.management.MBeanServerBuilder",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "javax.management.Notification"
  },
  {
    "name": "javax.management.NotificationEmitter"
  },
  {
    "name": "javax.management.NotificationListener"
  },
  {
    "name": "javax.management.ObjectName"
  },
  {
    "name": "javax.management.StandardEmitterMBean",
    "methods": [
      {
        "name": "cacheMBeanInfo",
        "parameterTypes": [
          "javax.management.MBeanInfo"
        ]
      },
      {
        "name": "getCachedMBeanInfo",
        "parameterTypes": []
      },
      {
        "name": "getMBeanInfo",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "javax.management.openmbean.CompositeData"
  },
  {
    "name": "javax.management.openmbean.OpenMBeanOperationInfoSupport"
  },
  {
    "name": "javax.management.openmbean.TabularData"
  },
  {
    "name": "javax.money.MonetaryAmount"
  },
  {
    "name": "javax.naming.InitialContext"
  },
  {
    "name": "javax.naming.NamingException"
  },
  {
    "name": "javax.naming.Reference"
  },
  {
    "name": "javax.naming.Referenceable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getReference",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "javax.security.auth.Subject",
    "methods": [
      {
        "name": "callAs",
        "parameterTypes": [
          "javax.security.auth.Subject",
          "java.util.concurrent.Callable"
        ]
      }
    ]
  },
  {
    "name": "javax.security.auth.x500.X500Principal",
    "fields": [
      {
        "name": "thisX500Name"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "sun.security.x509.X500Name"
        ]
      }
    ]
  },
  {
    "name": "javax.sql.CommonDataSource",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "createShardingKeyBuilder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "javax.sql.DataSource",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "createConnectionBuilder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jdk.crac.management.CRaCMXBean"
  },
  {
    "name": "jdk.internal.ValueBased",
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jdk.internal.loader.ClassLoaders$AppClassLoader",
    "methods": [
      {
        "name": "clearCache",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jdk.internal.loader.ClassLoaders$PlatformClassLoader",
    "methods": [
      {
        "name": "clearCache",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jdk.internal.misc.Unsafe"
  },
  {
    "name": "jdk.internal.vm.annotation.IntrinsicCandidate"
  },
  {
    "name": "jdk.management.jfr.ConfigurationInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "jdk.management.jfr.EventTypeInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "jdk.management.jfr.FlightRecorderMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "jdk.management.jfr.FlightRecorderMXBeanImpl",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "cacheMBeanInfo",
        "parameterTypes": [
          "javax.management.MBeanInfo"
        ]
      },
      {
        "name": "getCachedMBeanInfo",
        "parameterTypes": []
      },
      {
        "name": "getMBeanInfo",
        "parameterTypes": []
      },
      {
        "name": "getNotificationInfo",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jdk.management.jfr.RecordingInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "jdk.management.jfr.SettingDescriptorInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "jdk.net.ExtendedSocketOptions",
    "fields": [
      {
        "name": "TCP_KEEPCOUNT"
      },
      {
        "name": "TCP_KEEPIDLE"
      },
      {
        "name": "TCP_KEEPINTERVAL"
      }
    ]
  },
  {
    "name": "kotlin.Metadata"
  },
  {
    "name": "kotlin.coroutines.Continuation"
  },
  {
    "name": "kotlinx.coroutines.flow.Flow"
  },
  {
    "name": "kotlinx.coroutines.reactor.MonoKt"
  },
  {
    "name": "kotlinx.serialization.cbor.Cbor"
  },
  {
    "name": "kotlinx.serialization.json.Json"
  },
  {
    "name": "kotlinx.serialization.protobuf.ProtoBuf"
  },
  {
    "name": "net.bytebuddy.asm.Advice$AllArguments",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.asm.Advice$Argument",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "optional",
        "parameterTypes": []
      },
      {
        "name": "readOnly",
        "parameterTypes": []
      },
      {
        "name": "typing",
        "parameterTypes": []
      },
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "net.bytebuddy.asm.Advice$DynamicConstant",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.asm.Advice$Enter",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.asm.Advice$Exit",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.asm.Advice$FieldGetterHandle",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.asm.Advice$FieldSetterHandle",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.asm.Advice$FieldValue",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "declaringType",
        "parameterTypes": []
      },
      {
        "name": "readOnly",
        "parameterTypes": []
      },
      {
        "name": "typing",
        "parameterTypes": []
      },
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "net.bytebuddy.asm.Advice$Handle",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.asm.Advice$Local",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.asm.Advice$OnMethodEnter",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "inline",
        "parameterTypes": []
      },
      {
        "name": "prependLineNumber",
        "parameterTypes": []
      },
      {
        "name": "skipOn",
        "parameterTypes": []
      },
      {
        "name": "skipOnIndex",
        "parameterTypes": []
      },
      {
        "name": "suppress",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "net.bytebuddy.asm.Advice$OnMethodExit",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "backupArguments",
        "parameterTypes": []
      },
      {
        "name": "inline",
        "parameterTypes": []
      },
      {
        "name": "onThrowable",
        "parameterTypes": []
      },
      {
        "name": "repeatOn",
        "parameterTypes": []
      },
      {
        "name": "repeatOnIndex",
        "parameterTypes": []
      },
      {
        "name": "suppress",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "net.bytebuddy.asm.Advice$Origin",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.asm.Advice$Return",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "readOnly",
        "parameterTypes": []
      },
      {
        "name": "typing",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "net.bytebuddy.asm.Advice$SelfCallHandle",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.asm.Advice$This",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "optional",
        "parameterTypes": []
      },
      {
        "name": "readOnly",
        "parameterTypes": []
      },
      {
        "name": "typing",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "net.bytebuddy.asm.Advice$Thrown",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.description.method.MethodDescription$InDefinedShape$AbstractBase$Executable",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.description.method.ParameterDescription$ForLoadedParameter$Parameter",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.description.method.ParameterList$ForLoadedExecutable$Executable",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.description.type.TypeDefinition",
    "methods": [
      {
        "name": "asErasure",
        "parameterTypes": []
      },
      {
        "name": "asGenericType",
        "parameterTypes": []
      },
      {
        "name": "isPrimitive",
        "parameterTypes": []
      },
      {
        "name": "represents",
        "parameterTypes": [
          "java.lang.reflect.Type"
        ]
      }
    ]
  },
  {
    "name": "net.bytebuddy.description.type.TypeDefinition$Sort$AnnotatedType",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.description.type.TypeDescription$ForLoadedType$Dispatcher",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedExecutableExceptionType$Dispatcher",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedExecutableParameterType$Dispatcher",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedMethodReturnType$Dispatcher",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForComponentType$AnnotatedParameterizedType",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForTypeArgument$AnnotatedParameterizedType",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForTypeVariableBoundType$AnnotatedTypeVariable",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForTypeVariableBoundType$OfFormalTypeVariable$FormalTypeVariable",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.dynamic.loading.ClassInjector$UsingLookup$MethodHandles",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.dynamic.loading.ClassInjector$UsingLookup$MethodHandles$Lookup",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.AllArguments",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "includeSelf",
        "parameterTypes": []
      },
      {
        "name": "nullIfEmpty",
        "parameterTypes": []
      },
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.Argument",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.BindingPriority",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.Default",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.DefaultCall",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.DefaultCallHandle",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.DefaultMethod",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.DefaultMethodHandle",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.DynamicConstant",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.FieldGetterHandle",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.FieldSetterHandle",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.FieldValue",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "declaringType",
        "parameterTypes": []
      },
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.Handle",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.Origin",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "cache",
        "parameterTypes": []
      },
      {
        "name": "privileged",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.StubValue",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.Super",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.SuperCall",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.SuperCallHandle",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.SuperMethod",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.SuperMethodHandle",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.This",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "optional",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "net.bytebuddy.utility.Invoker",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.utility.Invoker$Dispatcher",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "net.bytebuddy.utility.JavaModule$Module",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.utility.JavaModule$Resolver",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.sf.jsqlparser.parser.JSqlParser"
  },
  {
    "name": "org.aopalliance.aop.Advice",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.aopalliance.intercept.Interceptor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.aopalliance.intercept.MethodInterceptor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.apache.catalina.Context"
  },
  {
    "name": "org.apache.catalina.Engine"
  },
  {
    "name": "org.apache.catalina.Host"
  },
  {
    "name": "org.apache.catalina.LifecycleEvent"
  },
  {
    "name": "org.apache.catalina.LifecycleListener"
  },
  {
    "name": "org.apache.catalina.Manager"
  },
  {
    "name": "org.apache.catalina.Valve"
  },
  {
    "name": "org.apache.catalina.WebResourceRoot"
  },
  {
    "name": "org.apache.catalina.connector.Connector"
  },
  {
    "name": "org.apache.catalina.core.ApplicationContextFacade",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addFilter",
        "parameterTypes": [
          "java.lang.String",
          "jakarta.servlet.Filter"
        ]
      },
      {
        "name": "addFilter",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "addFilter",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "addJspFile",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "addListener",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "addListener",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "addListener",
        "parameterTypes": [
          "java.util.EventListener"
        ]
      },
      {
        "name": "addServlet",
        "parameterTypes": [
          "java.lang.String",
          "jakarta.servlet.Servlet"
        ]
      },
      {
        "name": "addServlet",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "addServlet",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "createFilter",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "createListener",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "createServlet",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "declareRoles",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "getAttribute",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAttributeNames",
        "parameterTypes": []
      },
      {
        "name": "getClassLoader",
        "parameterTypes": []
      },
      {
        "name": "getContext",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getContextPath",
        "parameterTypes": []
      },
      {
        "name": "getDefaultSessionTrackingModes",
        "parameterTypes": []
      },
      {
        "name": "getEffectiveMajorVersion",
        "parameterTypes": []
      },
      {
        "name": "getEffectiveMinorVersion",
        "parameterTypes": []
      },
      {
        "name": "getEffectiveSessionTrackingModes",
        "parameterTypes": []
      },
      {
        "name": "getFilterRegistration",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFilterRegistrations",
        "parameterTypes": []
      },
      {
        "name": "getInitParameter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getInitParameterNames",
        "parameterTypes": []
      },
      {
        "name": "getJspConfigDescriptor",
        "parameterTypes": []
      },
      {
        "name": "getMajorVersion",
        "parameterTypes": []
      },
      {
        "name": "getMimeType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMinorVersion",
        "parameterTypes": []
      },
      {
        "name": "getNamedDispatcher",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRealPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRequestCharacterEncoding",
        "parameterTypes": []
      },
      {
        "name": "getRequestDispatcher",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getResourceAsStream",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getResourcePaths",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getResponseCharacterEncoding",
        "parameterTypes": []
      },
      {
        "name": "getServerInfo",
        "parameterTypes": []
      },
      {
        "name": "getServletContextName",
        "parameterTypes": []
      },
      {
        "name": "getServletRegistration",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getServletRegistrations",
        "parameterTypes": []
      },
      {
        "name": "getSessionCookieConfig",
        "parameterTypes": []
      },
      {
        "name": "getSessionTimeout",
        "parameterTypes": []
      },
      {
        "name": "getVirtualServerName",
        "parameterTypes": []
      },
      {
        "name": "log",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "log",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "removeAttribute",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAttribute",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setInitParameter",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "setRequestCharacterEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResponseCharacterEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSessionTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setSessionTrackingModes",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "org.apache.catalina.loader.JdbcLeakPrevention",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "clearJdbcDriverRegistrations",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.catalina.startup.Tomcat"
  },
  {
    "name": "org.apache.catalina.util.CharsetMapper",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.commons.compress.archivers.tar.TarArchiveEntry"
  },
  {
    "name": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream"
  },
  {
    "name": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream"
  },
  {
    "name": "org.apache.commons.csv.CSVPrinter"
  },
  {
    "name": "org.apache.commons.lang3.mutable.MutableInt"
  },
  {
    "name": "org.apache.commons.logging.Log"
  },
  {
    "name": "org.apache.commons.logging.LogFactory"
  },
  {
    "name": "org.apache.commons.logging.impl.SLF4JLogFactory"
  },
  {
    "name": "org.apache.commons.logging.impl.WeakHashtable",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.coyote.AbstractProtocol",
    "methods": [
      {
        "name": "getAddress",
        "parameterTypes": []
      },
      {
        "name": "getLocalPort",
        "parameterTypes": []
      },
      {
        "name": "getProperty",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.coyote.ProtocolHandler"
  },
  {
    "name": "org.apache.coyote.http11.AbstractHttp11Protocol",
    "methods": [
      {
        "name": "isSSLEnabled",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.coyote.http11.Http11NioProtocol",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.apache.hc.client5.http.classic.HttpClient"
  },
  {
    "name": "org.apache.hc.client5.http.impl.classic.HttpClients"
  },
  {
    "name": "org.apache.jasper.servlet.JspServlet"
  },
  {
    "name": "org.apache.logging.log4j.core.impl.Log4jContextFactory"
  },
  {
    "name": "org.apache.maven.model.Dependency"
  },
  {
    "name": "org.apache.maven.model.Model"
  },
  {
    "name": "org.apache.maven.model.Plugin"
  },
  {
    "name": "org.apache.pdfbox.pdmodel.PDDocument"
  },
  {
    "name": "org.apache.pdfbox.rendering.PDFRenderer"
  },
  {
    "name": "org.apache.pdfbox.text.PDFTextStripperByArea"
  },
  {
    "name": "org.apache.sshd.common.AttributeRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.apache.sshd.common.AttributeStore",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.apache.sshd.common.Closeable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "isOpen",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.sshd.common.FactoryManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getAgentForwardingFilter",
        "parameterTypes": []
      },
      {
        "name": "getTcpForwardingFilter",
        "parameterTypes": []
      },
      {
        "name": "getX11ForwardingFilter",
        "parameterTypes": []
      },
      {
        "name": "resolveAttribute",
        "parameterTypes": [
          "org.apache.sshd.common.AttributeRepository$AttributeKey"
        ]
      }
    ]
  },
  {
    "name": "org.apache.sshd.common.PropertyResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getBoolean",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBooleanProperty",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getCharset",
        "parameterTypes": [
          "java.lang.String",
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "getIntProperty",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "getInteger",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLong",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLongProperty",
        "parameterTypes": [
          "java.lang.String",
          "long"
        ]
      },
      {
        "name": "getObject",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getString",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getStringProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.sshd.common.auth.UserAuthFactoriesManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getUserAuthFactoriesNameList",
        "parameterTypes": []
      },
      {
        "name": "getUserAuthFactoriesNames",
        "parameterTypes": []
      },
      {
        "name": "setUserAuthFactoriesNameList",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserAuthFactoriesNames",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.apache.sshd.common.channel.ChannelListenerManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.apache.sshd.common.channel.throttle.ChannelStreamWriterResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.apache.sshd.common.channel.throttle.ChannelStreamWriterResolverManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "resolveChannelStreamWriter",
        "parameterTypes": [
          "org.apache.sshd.common.channel.Channel",
          "byte"
        ]
      },
      {
        "name": "resolveChannelStreamWriterResolver",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.sshd.common.config.keys.AuthorizedKeyEntry"
  },
  {
    "name": "org.apache.sshd.common.forward.PortForwardingEventListenerManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.apache.sshd.common.helpers.AbstractFactoryManager",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addChannelListener",
        "parameterTypes": [
          "org.apache.sshd.common.channel.ChannelListener"
        ]
      },
      {
        "name": "addPortForwardingEventListener",
        "parameterTypes": [
          "org.apache.sshd.common.forward.PortForwardingEventListener"
        ]
      },
      {
        "name": "addSessionListener",
        "parameterTypes": [
          "org.apache.sshd.common.session.SessionListener"
        ]
      },
      {
        "name": "attributeKeys",
        "parameterTypes": []
      },
      {
        "name": "clearAttributes",
        "parameterTypes": []
      },
      {
        "name": "computeAttributeIfAbsent",
        "parameterTypes": [
          "org.apache.sshd.common.AttributeRepository$AttributeKey",
          "java.util.function.Function"
        ]
      },
      {
        "name": "getAgentFactory",
        "parameterTypes": []
      },
      {
        "name": "getAttribute",
        "parameterTypes": [
          "org.apache.sshd.common.AttributeRepository$AttributeKey"
        ]
      },
      {
        "name": "getAttributesCount",
        "parameterTypes": []
      },
      {
        "name": "getChannelFactories",
        "parameterTypes": []
      },
      {
        "name": "getChannelListenerProxy",
        "parameterTypes": []
      },
      {
        "name": "getChannelStreamWriterResolver",
        "parameterTypes": []
      },
      {
        "name": "getFileSystemFactory",
        "parameterTypes": []
      },
      {
        "name": "getForwarderFactory",
        "parameterTypes": []
      },
      {
        "name": "getForwardingFilter",
        "parameterTypes": []
      },
      {
        "name": "getGlobalRequestHandlers",
        "parameterTypes": []
      },
      {
        "name": "getIoServiceEventListener",
        "parameterTypes": []
      },
      {
        "name": "getIoServiceFactory",
        "parameterTypes": []
      },
      {
        "name": "getIoServiceFactoryFactory",
        "parameterTypes": []
      },
      {
        "name": "getNioWorkers",
        "parameterTypes": []
      },
      {
        "name": "getParentPropertyResolver",
        "parameterTypes": []
      },
      {
        "name": "getPortForwardingEventListenerProxy",
        "parameterTypes": []
      },
      {
        "name": "getProperties",
        "parameterTypes": []
      },
      {
        "name": "getRandomFactory",
        "parameterTypes": []
      },
      {
        "name": "getReservedSessionMessagesHandler",
        "parameterTypes": []
      },
      {
        "name": "getScheduledExecutorService",
        "parameterTypes": []
      },
      {
        "name": "getServiceFactories",
        "parameterTypes": []
      },
      {
        "name": "getSessionDisconnectHandler",
        "parameterTypes": []
      },
      {
        "name": "getSessionListenerProxy",
        "parameterTypes": []
      },
      {
        "name": "getUnknownChannelReferenceHandler",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "removeAttribute",
        "parameterTypes": [
          "org.apache.sshd.common.AttributeRepository$AttributeKey"
        ]
      },
      {
        "name": "removeChannelListener",
        "parameterTypes": [
          "org.apache.sshd.common.channel.ChannelListener"
        ]
      },
      {
        "name": "removePortForwardingEventListener",
        "parameterTypes": [
          "org.apache.sshd.common.forward.PortForwardingEventListener"
        ]
      },
      {
        "name": "removeSessionListener",
        "parameterTypes": [
          "org.apache.sshd.common.session.SessionListener"
        ]
      },
      {
        "name": "resolveUnknownChannelReferenceHandler",
        "parameterTypes": []
      },
      {
        "name": "setAgentFactory",
        "parameterTypes": [
          "org.apache.sshd.agent.SshAgentFactory"
        ]
      },
      {
        "name": "setAttribute",
        "parameterTypes": [
          "org.apache.sshd.common.AttributeRepository$AttributeKey",
          "java.lang.Object"
        ]
      },
      {
        "name": "setChannelFactories",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setChannelStreamWriterResolver",
        "parameterTypes": [
          "org.apache.sshd.common.channel.throttle.ChannelStreamWriterResolver"
        ]
      },
      {
        "name": "setFileSystemFactory",
        "parameterTypes": [
          "org.apache.sshd.common.file.FileSystemFactory"
        ]
      },
      {
        "name": "setForwarderFactory",
        "parameterTypes": [
          "org.apache.sshd.common.forward.ForwarderFactory"
        ]
      },
      {
        "name": "setForwardingFilter",
        "parameterTypes": [
          "org.apache.sshd.server.forward.ForwardingFilter"
        ]
      },
      {
        "name": "setGlobalRequestHandlers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setIoServiceEventListener",
        "parameterTypes": [
          "org.apache.sshd.common.io.IoServiceEventListener"
        ]
      },
      {
        "name": "setIoServiceFactoryFactory",
        "parameterTypes": [
          "org.apache.sshd.common.io.IoServiceFactoryFactory"
        ]
      },
      {
        "name": "setNioWorkers",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setParentPropertyResolver",
        "parameterTypes": [
          "org.apache.sshd.common.PropertyResolver"
        ]
      },
      {
        "name": "setRandomFactory",
        "parameterTypes": [
          "org.apache.sshd.common.Factory"
        ]
      },
      {
        "name": "setReservedSessionMessagesHandler",
        "parameterTypes": [
          "org.apache.sshd.common.session.ReservedSessionMessagesHandler"
        ]
      },
      {
        "name": "setScheduledExecutorService",
        "parameterTypes": [
          "java.util.concurrent.ScheduledExecutorService"
        ]
      },
      {
        "name": "setScheduledExecutorService",
        "parameterTypes": [
          "java.util.concurrent.ScheduledExecutorService",
          "boolean"
        ]
      },
      {
        "name": "setServiceFactories",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSessionDisconnectHandler",
        "parameterTypes": [
          "org.apache.sshd.common.session.SessionDisconnectHandler"
        ]
      },
      {
        "name": "setUnknownChannelReferenceHandler",
        "parameterTypes": [
          "org.apache.sshd.common.session.UnknownChannelReferenceHandler"
        ]
      }
    ]
  },
  {
    "name": "org.apache.sshd.common.io.IoServiceEventListenerManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.apache.sshd.common.kex.AbstractKexFactoryManager",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getCipherFactories",
        "parameterTypes": []
      },
      {
        "name": "getCompressionFactories",
        "parameterTypes": []
      },
      {
        "name": "getKexExtensionHandler",
        "parameterTypes": []
      },
      {
        "name": "getKeyExchangeFactories",
        "parameterTypes": []
      },
      {
        "name": "getMacFactories",
        "parameterTypes": []
      },
      {
        "name": "getSignatureFactories",
        "parameterTypes": []
      },
      {
        "name": "setCipherFactories",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setCompressionFactories",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setKexExtensionHandler",
        "parameterTypes": [
          "org.apache.sshd.common.kex.extension.KexExtensionHandler"
        ]
      },
      {
        "name": "setKeyExchangeFactories",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setMacFactories",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSignatureFactories",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.apache.sshd.common.kex.KexFactoryManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getCipherFactoriesNameList",
        "parameterTypes": []
      },
      {
        "name": "getCipherFactoriesNames",
        "parameterTypes": []
      },
      {
        "name": "getCompressionFactoriesNameList",
        "parameterTypes": []
      },
      {
        "name": "getCompressionFactoriesNames",
        "parameterTypes": []
      },
      {
        "name": "getMacFactoriesNameList",
        "parameterTypes": []
      },
      {
        "name": "getMacFactoriesNames",
        "parameterTypes": []
      },
      {
        "name": "setCipherFactoriesNameList",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCipherFactoriesNames",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "setCipherFactoriesNames",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setCompressionFactoriesNameList",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCompressionFactoriesNames",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "setCompressionFactoriesNames",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setMacFactoriesNameList",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMacFactoriesNames",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "setMacFactoriesNames",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.apache.sshd.common.kex.extension.KexExtensionHandlerManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.apache.sshd.common.keyprovider.KeyPairProviderHolder",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.apache.sshd.common.session.ReservedSessionMessagesManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.apache.sshd.common.session.SessionDisconnectHandlerManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.apache.sshd.common.session.SessionHeartbeatController",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "disableSessionHeartbeat",
        "parameterTypes": []
      },
      {
        "name": "getSessionHeartbeatInterval",
        "parameterTypes": []
      },
      {
        "name": "getSessionHeartbeatType",
        "parameterTypes": []
      },
      {
        "name": "setSessionHeartbeat",
        "parameterTypes": [
          "org.apache.sshd.common.session.SessionHeartbeatController$HeartbeatType",
          "java.time.Duration"
        ]
      },
      {
        "name": "setSessionHeartbeat",
        "parameterTypes": [
          "org.apache.sshd.common.session.SessionHeartbeatController$HeartbeatType",
          "java.util.concurrent.TimeUnit",
          "long"
        ]
      }
    ]
  },
  {
    "name": "org.apache.sshd.common.session.SessionListenerManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.apache.sshd.common.session.UnknownChannelReferenceHandlerManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.apache.sshd.common.signature.SignatureFactoriesHolder",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getSignatureFactoriesNameList",
        "parameterTypes": []
      },
      {
        "name": "getSignatureFactoriesNames",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.sshd.common.signature.SignatureFactoriesManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "setSignatureFactoriesNameList",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSignatureFactoriesNames",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "setSignatureFactoriesNames",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.apache.sshd.common.util.closeable.AbstractCloseable",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addCloseFutureListener",
        "parameterTypes": [
          "org.apache.sshd.common.future.SshFutureListener"
        ]
      },
      {
        "name": "close",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getFutureLock",
        "parameterTypes": []
      },
      {
        "name": "isClosed",
        "parameterTypes": []
      },
      {
        "name": "isClosing",
        "parameterTypes": []
      },
      {
        "name": "removeCloseFutureListener",
        "parameterTypes": [
          "org.apache.sshd.common.future.SshFutureListener"
        ]
      }
    ]
  },
  {
    "name": "org.apache.sshd.common.util.closeable.AbstractInnerCloseable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.apache.sshd.common.util.closeable.IoBaseCloseable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.apache.sshd.common.util.logging.AbstractLoggingBean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.apache.sshd.common.util.threads.ExecutorServiceProvider",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "resolveExecutorService",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.sshd.git.AbstractGitCommandFactory",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getCommandPrefix",
        "parameterTypes": []
      },
      {
        "name": "getExecutorServiceProvider",
        "parameterTypes": []
      },
      {
        "name": "getGitLocationResolver",
        "parameterTypes": []
      },
      {
        "name": "isSupportedCommand",
        "parameterTypes": [
          "org.apache.sshd.server.channel.ChannelSession",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.apache.sshd.git.GitLocationResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.apache.sshd.git.GitLocationResolverCarrier",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.apache.sshd.git.pack.GitPackCommandFactory",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "withDelegate",
        "parameterTypes": [
          "org.apache.sshd.server.command.CommandFactory"
        ]
      },
      {
        "name": "withExecutorServiceProvider",
        "parameterTypes": [
          "java.util.function.Supplier"
        ]
      },
      {
        "name": "withGitLocationResolver",
        "parameterTypes": [
          "org.apache.sshd.git.GitLocationResolver"
        ]
      },
      {
        "name": "withGitPackConfiguration",
        "parameterTypes": [
          "org.apache.sshd.git.pack.GitPackConfiguration"
        ]
      }
    ]
  },
  {
    "name": "org.apache.sshd.server.ServerAuthenticationManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "setUserAuthFactoriesNames",
        "parameterTypes": [
          "java.util.Collection"
        ]
      }
    ]
  },
  {
    "name": "org.apache.sshd.server.ServerFactoryManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.apache.sshd.server.SshServer",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getCommandFactory",
        "parameterTypes": []
      },
      {
        "name": "getGSSAuthenticator",
        "parameterTypes": []
      },
      {
        "name": "getHostBasedAuthenticator",
        "parameterTypes": []
      },
      {
        "name": "getHostKeyCertificateProvider",
        "parameterTypes": []
      },
      {
        "name": "getKeyPairProvider",
        "parameterTypes": []
      },
      {
        "name": "getKeyboardInteractiveAuthenticator",
        "parameterTypes": []
      },
      {
        "name": "getPasswordAuthenticator",
        "parameterTypes": []
      },
      {
        "name": "getPublickeyAuthenticator",
        "parameterTypes": []
      },
      {
        "name": "getServerProxyAcceptor",
        "parameterTypes": []
      },
      {
        "name": "getShellFactory",
        "parameterTypes": []
      },
      {
        "name": "getSubsystemFactories",
        "parameterTypes": []
      },
      {
        "name": "getUserAuthFactories",
        "parameterTypes": []
      },
      {
        "name": "setGSSAuthenticator",
        "parameterTypes": [
          "org.apache.sshd.server.auth.gss.GSSAuthenticator"
        ]
      },
      {
        "name": "setHostBasedAuthenticator",
        "parameterTypes": [
          "org.apache.sshd.server.auth.hostbased.HostBasedAuthenticator"
        ]
      },
      {
        "name": "setHostKeyCertificateProvider",
        "parameterTypes": [
          "org.apache.sshd.common.keyprovider.HostKeyCertificateProvider"
        ]
      },
      {
        "name": "setKeyPairProvider",
        "parameterTypes": [
          "org.apache.sshd.common.keyprovider.KeyPairProvider"
        ]
      },
      {
        "name": "setKeyboardInteractiveAuthenticator",
        "parameterTypes": [
          "org.apache.sshd.server.auth.keyboard.KeyboardInteractiveAuthenticator"
        ]
      },
      {
        "name": "setPasswordAuthenticator",
        "parameterTypes": [
          "org.apache.sshd.server.auth.password.PasswordAuthenticator"
        ]
      },
      {
        "name": "setPublickeyAuthenticator",
        "parameterTypes": [
          "org.apache.sshd.server.auth.pubkey.PublickeyAuthenticator"
        ]
      },
      {
        "name": "setServerProxyAcceptor",
        "parameterTypes": [
          "org.apache.sshd.server.session.ServerProxyAcceptor"
        ]
      },
      {
        "name": "setUserAuthFactories",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.apache.sshd.server.auth.pubkey.PublickeyAuthenticator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.apache.sshd.server.command.AbstractDelegatingCommandFactory",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "createCommand",
        "parameterTypes": [
          "org.apache.sshd.server.channel.ChannelSession",
          "java.lang.String"
        ]
      },
      {
        "name": "getDelegateCommandFactory",
        "parameterTypes": []
      },
      {
        "name": "setDelegateCommandFactory",
        "parameterTypes": [
          "org.apache.sshd.server.command.CommandFactory"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.sshd.server.command.CommandFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.apache.sshd.server.session.ServerProxyAcceptorHolder",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.apache.sshd.server.session.ServerSession"
  },
  {
    "name": "org.apache.tomcat.util.net.AbstractEndpoint",
    "methods": [
      {
        "name": "setBindOnInit",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.apache.tomcat.util.net.NioEndpoint",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.apache.tomcat.websocket.WsFrameBase",
    "fields": [
      {
        "name": "readState"
      }
    ]
  },
  {
    "name": "org.apache.tomcat.websocket.server.DefaultServerEndpointConfigurator"
  },
  {
    "name": "org.apache.tomcat.websocket.server.WsFilter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.apache.tomcat.websocket.server.WsHttpUpgradeHandler",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apiguardian.api.API",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.aspectj.internal.lang.annotation.ajcDeclareParents",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.aspectj.lang.annotation.AfterReturning",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.aspectj.lang.annotation.Around",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.aspectj.lang.annotation.Aspect",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.aspectj.lang.annotation.Before",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.aspectj.lang.annotation.Pointcut",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.aspectj.lang.annotation.SuppressAjWarnings",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.aspectj.weaver.reflect.Java15AnnotationFinder",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.aspectj.weaver.reflect.Java15GenericSignatureInformationProvider",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.aspectj.weaver.World"
        ]
      }
    ]
  },
  {
    "name": "org.aspectj.weaver.reflect.Java15ReflectionBasedReferenceTypeDelegate",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.aspectj.weaver.reflect.ReflectionBasedReferenceTypeDelegate",
    "fields": [
      {
        "name": "myClass"
      }
    ]
  },
  {
    "name": "org.aspectj.weaver.reflect.ReflectionVar",
    "fields": [
      {
        "name": "varType"
      }
    ]
  },
  {
    "name": "org.aspectj.weaver.reflect.ShadowMatchImpl",
    "fields": [
      {
        "name": "residualTest"
      }
    ]
  },
  {
    "name": "org.aspectj.weaver.tools.Jdk14TraceFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.asn1.ASN1Sequence"
  },
  {
    "name": "org.brotli.dec.BrotliInputStream"
  },
  {
    "name": "org.codehaus.plexus.util.xml.pull.XmlPullParserException"
  },
  {
    "name": "org.commonmark.renderer.html.AttributeProvider"
  },
  {
    "name": "org.commonmark.renderer.html.AttributeProviderContext"
  },
  {
    "name": "org.crac.Core"
  },
  {
    "name": "org.eclipse.collections.api.list.ImmutableList"
  },
  {
    "name": "org.eclipse.core.runtime.FileLocator"
  },
  {
    "name": "org.eclipse.jetty.client.HttpClient"
  },
  {
    "name": "org.eclipse.jetty.ee10.websocket.server.JettyWebSocketServerContainer"
  },
  {
    "name": "org.eclipse.jgit.api.CloneCommand"
  },
  {
    "name": "org.eclipse.jgit.api.CommitCommand"
  },
  {
    "name": "org.eclipse.jgit.api.FetchCommand"
  },
  {
    "name": "org.eclipse.jgit.api.Git"
  },
  {
    "name": "org.eclipse.jgit.api.GitCommand"
  },
  {
    "name": "org.eclipse.jgit.api.LsRemoteCommand"
  },
  {
    "name": "org.eclipse.jgit.api.MergeCommand$FastForwardMode$Merge",
    "methods": [
      {
        "name": "values",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.eclipse.jgit.api.PullCommand"
  },
  {
    "name": "org.eclipse.jgit.api.PullResult"
  },
  {
    "name": "org.eclipse.jgit.api.PushCommand"
  },
  {
    "name": "org.eclipse.jgit.api.TransportCommand"
  },
  {
    "name": "org.eclipse.jgit.api.errors.CanceledException"
  },
  {
    "name": "org.eclipse.jgit.api.errors.GitAPIException"
  },
  {
    "name": "org.eclipse.jgit.api.errors.InvalidRefNameException"
  },
  {
    "name": "org.eclipse.jgit.dircache.DirCache$DirCacheVersion",
    "methods": [
      {
        "name": "values",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.eclipse.jgit.errors.RepositoryNotFoundException"
  },
  {
    "name": "org.eclipse.jgit.http.server.GitServlet",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addReceivePackFilter",
        "parameterTypes": [
          "jakarta.servlet.Filter"
        ]
      },
      {
        "name": "addUploadPackFilter",
        "parameterTypes": [
          "jakarta.servlet.Filter"
        ]
      },
      {
        "name": "init",
        "parameterTypes": [
          "jakarta.servlet.ServletConfig"
        ]
      },
      {
        "name": "setAsIsFileService",
        "parameterTypes": [
          "org.eclipse.jgit.http.server.resolver.AsIsFileService"
        ]
      },
      {
        "name": "setReceivePackErrorHandler",
        "parameterTypes": [
          "org.eclipse.jgit.http.server.ReceivePackErrorHandler"
        ]
      },
      {
        "name": "setReceivePackFactory",
        "parameterTypes": [
          "org.eclipse.jgit.transport.resolver.ReceivePackFactory"
        ]
      },
      {
        "name": "setRepositoryResolver",
        "parameterTypes": [
          "org.eclipse.jgit.transport.resolver.RepositoryResolver"
        ]
      },
      {
        "name": "setUploadPackErrorHandler",
        "parameterTypes": [
          "org.eclipse.jgit.http.server.UploadPackErrorHandler"
        ]
      },
      {
        "name": "setUploadPackFactory",
        "parameterTypes": [
          "org.eclipse.jgit.transport.resolver.UploadPackFactory"
        ]
      }
    ]
  },
  {
    "name": "org.eclipse.jgit.http.server.ReceivePackErrorHandler"
  },
  {
    "name": "org.eclipse.jgit.http.server.UploadPackErrorHandler"
  },
  {
    "name": "org.eclipse.jgit.http.server.glue.MetaFilter"
  },
  {
    "name": "org.eclipse.jgit.http.server.glue.MetaServlet",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "serve",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "serveRegex",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.eclipse.jgit.http.server.glue.ServletBinder"
  },
  {
    "name": "org.eclipse.jgit.http.server.resolver.AsIsFileService"
  },
  {
    "name": "org.eclipse.jgit.internal.JGitText",
    "allPublicFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.eclipse.jgit.lib.BranchConfig$BranchRebaseMode",
    "methods": [
      {
        "name": "values",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.eclipse.jgit.lib.CoreConfig$AutoCRLF",
    "methods": [
      {
        "name": "values",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.eclipse.jgit.lib.CoreConfig$CheckStat",
    "methods": [
      {
        "name": "values",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.eclipse.jgit.lib.CoreConfig$EOL",
    "methods": [
      {
        "name": "values",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.eclipse.jgit.lib.CoreConfig$HideDotFiles",
    "methods": [
      {
        "name": "values",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.eclipse.jgit.lib.CoreConfig$LogRefUpdates",
    "methods": [
      {
        "name": "values",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.eclipse.jgit.lib.CoreConfig$SymLinks",
    "methods": [
      {
        "name": "values",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.eclipse.jgit.lib.CoreConfig$TrustStat",
    "methods": [
      {
        "name": "values",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.eclipse.jgit.lib.GpgConfig$GpgFormat",
    "methods": [
      {
        "name": "values",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.eclipse.jgit.lib.ObjectId"
  },
  {
    "name": "org.eclipse.jgit.lib.ObjectInserter"
  },
  {
    "name": "org.eclipse.jgit.lib.PersonIdent"
  },
  {
    "name": "org.eclipse.jgit.lib.Repository"
  },
  {
    "name": "org.eclipse.jgit.revwalk.RevCommit"
  },
  {
    "name": "org.eclipse.jgit.revwalk.RevTree"
  },
  {
    "name": "org.eclipse.jgit.transport.CredentialsProvider"
  },
  {
    "name": "org.eclipse.jgit.transport.HttpConfig$HttpRedirectMode",
    "methods": [
      {
        "name": "values",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.eclipse.jgit.transport.ReceivePack"
  },
  {
    "name": "org.eclipse.jgit.transport.ServiceMayNotContinueException"
  },
  {
    "name": "org.eclipse.jgit.transport.SshConfigStore"
  },
  {
    "name": "org.eclipse.jgit.transport.Transport"
  },
  {
    "name": "org.eclipse.jgit.transport.UploadPack"
  },
  {
    "name": "org.eclipse.jgit.transport.resolver.ReceivePackFactory"
  },
  {
    "name": "org.eclipse.jgit.transport.resolver.RepositoryResolver"
  },
  {
    "name": "org.eclipse.jgit.transport.resolver.ServiceNotAuthorizedException"
  },
  {
    "name": "org.eclipse.jgit.transport.resolver.ServiceNotEnabledException"
  },
  {
    "name": "org.eclipse.jgit.transport.resolver.UploadPackFactory"
  },
  {
    "name": "org.eclipse.jgit.transport.sshd.KeyPasswordProvider"
  },
  {
    "name": "org.eclipse.jgit.transport.sshd.SshdSessionFactoryBuilder"
  },
  {
    "name": "org.eclipse.jgit.util.sha1.SHA1$Sha1Implementation",
    "methods": [
      {
        "name": "values",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.eclipse.persistence.internal.jpa.metamodel.MetamodelImpl"
  },
  {
    "name": "org.eclipse.persistence.jpa.JpaEntityManagerFactory"
  },
  {
    "name": "org.glassfish.tyrus.servlet.TyrusHttpUpgradeHandler"
  },
  {
    "name": "org.graalvm.nativeimage.ImageInfo",
    "methods": [
      {
        "name": "inImageCode",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.h2.Driver"
  },
  {
    "name": "org.hibernate.Cache"
  },
  {
    "name": "org.hibernate.CacheMode"
  },
  {
    "name": "org.hibernate.Filter"
  },
  {
    "name": "org.hibernate.FlushMode"
  },
  {
    "name": "org.hibernate.HibernateException"
  },
  {
    "name": "org.hibernate.IdentifierLoadAccess"
  },
  {
    "name": "org.hibernate.Incubating",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.hibernate.Internal",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.hibernate.LobHelper"
  },
  {
    "name": "org.hibernate.LockMode"
  },
  {
    "name": "org.hibernate.LockOptions"
  },
  {
    "name": "org.hibernate.MultiIdentifierLoadAccess"
  },
  {
    "name": "org.hibernate.NaturalIdLoadAccess"
  },
  {
    "name": "org.hibernate.NaturalIdMultiLoadAccess"
  },
  {
    "name": "org.hibernate.NonUniqueResultException"
  },
  {
    "name": "org.hibernate.ReplicationMode"
  },
  {
    "name": "org.hibernate.Session",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "createEntityGraph",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "createEntityGraph",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNamedQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNamedQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaDelete"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaQuery"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaUpdate"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "detach",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "disableFilter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "enableFilter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": []
      },
      {
        "name": "getEnabledFilter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEntityGraph",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEntityGraphs",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getFlushMode",
        "parameterTypes": []
      },
      {
        "name": "getReference",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object"
        ]
      },
      {
        "name": "merge",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "persist",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "refresh",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setFlushMode",
        "parameterTypes": [
          "jakarta.persistence.FlushModeType"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.Session$LockRequest"
  },
  {
    "name": "org.hibernate.SessionBuilder"
  },
  {
    "name": "org.hibernate.SessionEventListener"
  },
  {
    "name": "org.hibernate.SessionFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getCache",
        "parameterTypes": []
      },
      {
        "name": "getCriteriaBuilder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.SharedSessionBuilder"
  },
  {
    "name": "org.hibernate.SharedSessionContract",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "beginTransaction",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "createEntityGraph",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String"
        ]
      },
      {
        "name": "createNamedStoredProcedureQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createStoredProcedureCall",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createStoredProcedureCall",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "createStoredProcedureCall",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String[]"
        ]
      },
      {
        "name": "createStoredProcedureQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createStoredProcedureQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "createStoredProcedureQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String[]"
        ]
      },
      {
        "name": "doReturningWork",
        "parameterTypes": [
          "org.hibernate.jdbc.ReturningWork"
        ]
      },
      {
        "name": "doWork",
        "parameterTypes": [
          "org.hibernate.jdbc.Work"
        ]
      },
      {
        "name": "getCriteriaBuilder",
        "parameterTypes": []
      },
      {
        "name": "getFactory",
        "parameterTypes": []
      },
      {
        "name": "getJdbcBatchSize",
        "parameterTypes": []
      },
      {
        "name": "getNamedProcedureCall",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTenantIdentifier",
        "parameterTypes": []
      },
      {
        "name": "getTenantIdentifierValue",
        "parameterTypes": []
      },
      {
        "name": "getTransaction",
        "parameterTypes": []
      },
      {
        "name": "isConnected",
        "parameterTypes": []
      },
      {
        "name": "isJoinedToTransaction",
        "parameterTypes": []
      },
      {
        "name": "isOpen",
        "parameterTypes": []
      },
      {
        "name": "joinTransaction",
        "parameterTypes": []
      },
      {
        "name": "setJdbcBatchSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.SimpleNaturalIdLoadAccess"
  },
  {
    "name": "org.hibernate.StatelessSession"
  },
  {
    "name": "org.hibernate.StatelessSessionBuilder"
  },
  {
    "name": "org.hibernate.Transaction"
  },
  {
    "name": "org.hibernate.UnknownProfileException"
  },
  {
    "name": "org.hibernate.annotations.AttributeBinderType",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.hibernate.annotations.BatchSize",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.annotations.Cache",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.annotations.Check",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.annotations.JdbcTypeCode",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.annotations.OnDelete",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.annotations.TypeBinderType",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.hibernate.binder.internal.BatchSizeBinder",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.boot.archive.scan.internal.DisabledScanner",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.hibernate.boot.archive.spi.ArchiveDescriptorFactory"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.boot.cfgxml.internal.CfgXmlAccessServiceImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.boot.internal.DefaultSessionFactoryBuilderService",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.boot.model.naming.ImplicitNamingStrategy"
  },
  {
    "name": "org.hibernate.boot.model.naming.PhysicalNamingStrategy"
  },
  {
    "name": "org.hibernate.boot.model.relational.ColumnOrderingStrategyStandard",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.boot.spi.SessionFactoryOptions"
  },
  {
    "name": "org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$AreFieldsDirty",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$AreFieldsDirtyWithoutCollections",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$ClearDirtyAttributes",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$ClearDirtyAttributesWithoutCollections",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$ClearOwner",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$GetCollectionTrackerWithoutCollections",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$GetDirtyAttributes",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$GetDirtyAttributesWithoutCollections",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$InitializeLazyAttributeLoadingInterceptor",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$SetOwner",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$SuspendDirtyTracking",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$TrackChange",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.bytecode.enhance.spi.EnhancementInfo",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.bytecode.internal.javassist.FieldHandler"
  },
  {
    "name": "org.hibernate.bytecode.spi.ReflectionOptimizer$AccessOptimizer",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.bytecode.spi.ReflectionOptimizer$InstantiationOptimizer",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.cache.internal.EnabledCaching",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.cache.spi.entry.CacheEntry"
  },
  {
    "name": "org.hibernate.collection.spi.AbstractPersistentCollection",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.hibernate.collection.spi.LazyInitializable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.hibernate.collection.spi.PersistentBag",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.collection.spi.PersistentCollection",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.hibernate.collection.spi.PersistentList",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.collection.spi.PersistentSet",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.dialect.DialectLogging_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.dialect.DialectLogging_$logger_en"
  },
  {
    "name": "org.hibernate.dialect.DialectLogging_$logger_en_US"
  },
  {
    "name": "org.hibernate.dialect.PostgreSQL95Dialect"
  },
  {
    "name": "org.hibernate.dialect.PostgreSQLDialect",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.hibernate.engine.jdbc.dialect.spi.DialectResolutionInfo"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.dialect.PostgreSQLInetJdbcType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.dialect.PostgreSQLJsonPGObjectJsonbType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.dialect.PostgreSQLStructPGObjectJdbcType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.engine.config.internal.ConfigurationServiceImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.jdbc.batch.JdbcBatchLogging_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.engine.jdbc.batch.JdbcBatchLogging_$logger_en"
  },
  {
    "name": "org.hibernate.engine.jdbc.batch.JdbcBatchLogging_$logger_en_US"
  },
  {
    "name": "org.hibernate.engine.jdbc.batch.internal.BatchBuilderImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "setJndiService",
        "parameterTypes": [
          "org.hibernate.engine.jndi.spi.JndiService"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.jdbc.dialect.internal.DialectResolverSet",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.jdbc.env.internal.LobCreationLogging_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.engine.jdbc.env.internal.LobCreationLogging_$logger_en"
  },
  {
    "name": "org.hibernate.engine.jdbc.env.internal.LobCreationLogging_$logger_en_US"
  },
  {
    "name": "org.hibernate.engine.jdbc.internal.JdbcServicesImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.jdbc.mutation.internal.StandardMutationExecutorService",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.jdbc.spi.SqlStatementLogger",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.jndi.internal.JndiServiceImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.query.internal.NativeQueryInterpreterStandardImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.spi.CompositeOwner",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "fields": [
      {
        "name": "asCompositeOwner"
      }
    ]
  },
  {
    "name": "org.hibernate.engine.spi.CompositeTracker",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "fields": [
      {
        "name": "asCompositeTracker"
      }
    ]
  },
  {
    "name": "org.hibernate.engine.spi.ExtendedSelfDirtinessTracker",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "compareTo",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.engine.spi.FilterDefinition"
  },
  {
    "name": "org.hibernate.engine.spi.Managed",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "asManaged"
      }
    ],
    "methods": [
      {
        "name": "compareTo",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.engine.spi.ManagedComposite",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "fields": [
      {
        "name": "asManagedComposite"
      }
    ]
  },
  {
    "name": "org.hibernate.engine.spi.ManagedEntity",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "asManagedEntity"
      }
    ],
    "methods": [
      {
        "name": "compareTo",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.engine.spi.ManagedMappedSuperclass",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "asManagedMappedSuperclass"
      }
    ]
  },
  {
    "name": "org.hibernate.engine.spi.PersistentAttributeInterceptable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "asPersistentAttributeInterceptable"
      }
    ],
    "methods": [
      {
        "name": "compareTo",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.engine.spi.PrimeAmongSecondarySupertypes",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "asCompositeOwner"
      },
      {
        "name": "asCompositeTracker"
      },
      {
        "name": "asHibernateProxy"
      },
      {
        "name": "asManagedComposite"
      },
      {
        "name": "asManagedEntity"
      },
      {
        "name": "asManagedMappedSuperclass"
      },
      {
        "name": "asProxyConfiguration"
      },
      {
        "name": "asSelfDirtinessTracker"
      }
    ],
    "methods": [
      {
        "name": "compareTo",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.engine.spi.SelfDirtinessTracker",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "asSelfDirtinessTracker"
      }
    ],
    "methods": [
      {
        "name": "compareTo",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.envers.DefaultRevisionEntity",
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "id"
      },
      {
        "name": "timestamp"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setTimestamp",
        "parameterTypes": [
          "long"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.envers.boot.internal.AdditionalMappingContributorImpl"
  },
  {
    "name": "org.hibernate.envers.boot.internal.AuditStrategyRegistrationProvider"
  },
  {
    "name": "org.hibernate.envers.boot.internal.EnversIntegrator"
  },
  {
    "name": "org.hibernate.envers.boot.internal.EnversServiceContributor"
  },
  {
    "name": "org.hibernate.envers.boot.internal.EnversServiceImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.envers.boot.internal.FunctionContributorImpl"
  },
  {
    "name": "org.hibernate.envers.boot.internal.LegacyModifiedColumnNamingStrategy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.envers.boot.internal.ModifiedColumnNamingStrategyRegistrationProvider"
  },
  {
    "name": "org.hibernate.envers.boot.internal.TypeContributorImpl"
  },
  {
    "name": "org.hibernate.envers.internal.EnversMessageLogger_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.envers.internal.EnversMessageLogger_$logger_en"
  },
  {
    "name": "org.hibernate.envers.internal.EnversMessageLogger_$logger_en_US"
  },
  {
    "name": "org.hibernate.envers.strategy.DefaultAuditStrategy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.event.spi.EventType",
    "allDeclaredFields": true
  },
  {
    "name": "org.hibernate.event.spi.PostActionEventListener",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.event.spi.PostDeleteEventListener",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.event.spi.PostUpdateEventListener",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.graph.RootGraph"
  },
  {
    "name": "org.hibernate.id.Assigned",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.id.ForeignGenerator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.id.IdentityGenerator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.id.factory.internal.StandardIdentifierGeneratorFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.internal.CoreMessageLogger_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.internal.CoreMessageLogger_$logger_en"
  },
  {
    "name": "org.hibernate.internal.CoreMessageLogger_$logger_en_US"
  },
  {
    "name": "org.hibernate.internal.EntityManagerMessageLogger_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.internal.EntityManagerMessageLogger_$logger_en"
  },
  {
    "name": "org.hibernate.internal.EntityManagerMessageLogger_$logger_en_US"
  },
  {
    "name": "org.hibernate.internal.log.DeprecationLogger_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.internal.log.DeprecationLogger_$logger_en"
  },
  {
    "name": "org.hibernate.internal.log.DeprecationLogger_$logger_en_US"
  },
  {
    "name": "org.hibernate.jdbc.ReturningWork"
  },
  {
    "name": "org.hibernate.jdbc.Work"
  },
  {
    "name": "org.hibernate.jpa.HibernatePersistenceProvider"
  },
  {
    "name": "org.hibernate.loader.ast.internal.StandardBatchLoaderFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.metamodel.mapping.MappingModelCreationLogging_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.metamodel.mapping.MappingModelCreationLogging_$logger_en"
  },
  {
    "name": "org.hibernate.metamodel.mapping.MappingModelCreationLogging_$logger_en_US"
  },
  {
    "name": "org.hibernate.metamodel.model.domain.JpaMetamodel"
  },
  {
    "name": "org.hibernate.persister.collection.BasicCollectionPersister",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.hibernate.mapping.Collection",
          "org.hibernate.cache.spi.access.CollectionDataAccess",
          "org.hibernate.metamodel.spi.RuntimeModelCreationContext"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.persister.collection.OneToManyPersister",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.hibernate.mapping.Collection",
          "org.hibernate.cache.spi.access.CollectionDataAccess",
          "org.hibernate.metamodel.spi.RuntimeModelCreationContext"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.persister.entity.JoinedSubclassEntityPersister",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.hibernate.mapping.PersistentClass",
          "org.hibernate.cache.spi.access.EntityDataAccess",
          "org.hibernate.cache.spi.access.NaturalIdDataAccess",
          "org.hibernate.metamodel.spi.RuntimeModelCreationContext"
        ]
      }
    ],
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.persister.entity.SingleTableEntityPersister",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.hibernate.mapping.PersistentClass",
          "org.hibernate.cache.spi.access.EntityDataAccess",
          "org.hibernate.cache.spi.access.NaturalIdDataAccess",
          "org.hibernate.metamodel.spi.RuntimeModelCreationContext"
        ]
      }
    ],
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.persister.internal.PersisterFactoryImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.persister.internal.StandardPersisterClassResolver",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.procedure.ProcedureCall"
  },
  {
    "name": "org.hibernate.property.access.internal.PropertyAccessStrategyResolverStandardImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.proxy.HibernateProxy",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getHibernateLazyInitializer",
        "parameterTypes": []
      },
      {
        "name": "writeReplace",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.proxy.ProxyConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.proxy.ProxyConfiguration$InterceptorDispatcher",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.query.MutationQuery"
  },
  {
    "name": "org.hibernate.query.NativeQuery"
  },
  {
    "name": "org.hibernate.query.Query",
    "methods": [
      {
        "name": "getResultList",
        "parameterTypes": []
      },
      {
        "name": "getSingleResult",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.query.QueryLogging_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.query.QueryLogging_$logger_en"
  },
  {
    "name": "org.hibernate.query.QueryLogging_$logger_en_US"
  },
  {
    "name": "org.hibernate.query.QueryProducer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "createMutationQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaDelete"
        ]
      },
      {
        "name": "createMutationQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaUpdate"
        ]
      },
      {
        "name": "createMutationQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createMutationQuery",
        "parameterTypes": [
          "org.hibernate.query.criteria.JpaCriteriaInsert"
        ]
      },
      {
        "name": "createMutationQuery",
        "parameterTypes": [
          "org.hibernate.query.criteria.JpaCriteriaInsertSelect"
        ]
      },
      {
        "name": "createNamedMutationQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNamedSelectionQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNamedSelectionQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "createNativeMutationQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNativeQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNativeQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "createNativeQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.lang.String"
        ]
      },
      {
        "name": "createNativeQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "createNativeQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "createSelectionQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaQuery"
        ]
      },
      {
        "name": "createSelectionQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createSelectionQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "getNamedNativeQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getNamedNativeQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getNamedQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.query.SelectionQuery",
    "methods": [
      {
        "name": "getMaxResults",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.query.TypedParameterValue"
  },
  {
    "name": "org.hibernate.query.criteria.HibernateCriteriaBuilder"
  },
  {
    "name": "org.hibernate.query.criteria.JpaCriteriaInsert"
  },
  {
    "name": "org.hibernate.query.criteria.JpaCriteriaInsertSelect"
  },
  {
    "name": "org.hibernate.query.hql.HqlLogging_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.query.hql.HqlLogging_$logger_en"
  },
  {
    "name": "org.hibernate.query.hql.HqlLogging_$logger_en_US"
  },
  {
    "name": "org.hibernate.query.hql.spi.SqmQueryImplementor",
    "methods": [
      {
        "name": "setFirstResult",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setHint",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setMaxResults",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.query.sqm.mutation.internal.SqmMultiTableMutationStrategyProviderStandard",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.relational.SchemaManager"
  },
  {
    "name": "org.hibernate.resource.beans.container.spi.BeanContainer"
  },
  {
    "name": "org.hibernate.resource.beans.internal.ManagedBeanRegistryImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.service.internal.SessionFactoryServiceRegistryFactoryImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.sql.ast.internal.ParameterMarkerStrategyStandard",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.sql.ast.tree.SqlAstTreeLogger_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.sql.ast.tree.SqlAstTreeLogger_$logger_en"
  },
  {
    "name": "org.hibernate.sql.ast.tree.SqlAstTreeLogger_$logger_en_US"
  },
  {
    "name": "org.hibernate.sql.exec.SqlExecLogger_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.sql.exec.SqlExecLogger_$logger_en"
  },
  {
    "name": "org.hibernate.sql.exec.SqlExecLogger_$logger_en_US"
  },
  {
    "name": "org.hibernate.sql.results.LoadingLogger_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.sql.results.LoadingLogger_$logger_en"
  },
  {
    "name": "org.hibernate.sql.results.LoadingLogger_$logger_en_US"
  },
  {
    "name": "org.hibernate.sql.results.ResultsLogger_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.sql.results.ResultsLogger_$logger_en"
  },
  {
    "name": "org.hibernate.sql.results.ResultsLogger_$logger_en_US"
  },
  {
    "name": "org.hibernate.sql.results.jdbc.internal.JdbcValuesMappingProducerProviderStandard",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.stat.SessionStatistics"
  },
  {
    "name": "org.hibernate.stat.Statistics"
  },
  {
    "name": "org.hibernate.stat.internal.StatisticsImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.type.SqlTypes",
    "allPublicFields": true
  },
  {
    "name": "org.hibernate.validator.internal.engine.AbstractConfigurationImpl",
    "methods": [
      {
        "name": "externalClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.validator.internal.engine.ConfigurationImpl"
  },
  {
    "name": "org.hibernate.validator.internal.engine.resolver.JPATraversableResolver",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.validator.internal.util.logging.Log_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.validator.internal.util.logging.Log_$logger_en"
  },
  {
    "name": "org.hibernate.validator.internal.util.logging.Log_$logger_en_US"
  },
  {
    "name": "org.hibernate.validator.internal.util.logging.Messages_$bundle",
    "fields": [
      {
        "name": "INSTANCE"
      }
    ]
  },
  {
    "name": "org.hibernate.validator.internal.util.logging.Messages_$bundle_en"
  },
  {
    "name": "org.hibernate.validator.internal.util.logging.Messages_$bundle_en_US"
  },
  {
    "name": "org.jboss.logging.Logger"
  },
  {
    "name": "org.jmolecules.ddd.annotation.Identity"
  },
  {
    "name": "org.jmolecules.ddd.types.Association"
  },
  {
    "name": "org.joda.time.ReadableInstant"
  },
  {
    "name": "org.postgresql.Driver",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.postgresql.core.QueryExecutorCloseAction",
    "fields": [
      {
        "name": "pgStream"
      }
    ]
  },
  {
    "name": "org.postgresql.jdbc.PgStatement",
    "fields": [
      {
        "name": "cancelTimerTask"
      },
      {
        "name": "isClosed"
      },
      {
        "name": "statementState"
      }
    ]
  },
  {
    "name": "org.postgresql.util.PGobject"
  },
  {
    "name": "org.reactivestreams.Publisher"
  },
  {
    "name": "org.slf4j.bridge.SLF4JBridgeHandler"
  },
  {
    "name": "org.slf4j.spi.LocationAwareLogger",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "log",
        "parameterTypes": [
          "org.slf4j.Marker",
          "java.lang.String",
          "int",
          "java.lang.String",
          "java.lang.Object[]",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.customizers.OpenApiCustomizer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.aop.Advisor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "isPerInstance",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.aop.IntroductionAdvisor"
  },
  {
    "name": "org.springframework.aop.PointcutAdvisor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.aop.SpringProxy",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.aop.TargetClassAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getTargetClass",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.aop.TargetSource",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.aop.target.LazyInitTargetSource"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.aop.target.LazyInitTargetSource"
        ]
      },
      {
        "name": "isStatic",
        "parameterTypes": []
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.aop.target.LazyInitTargetSource"
        ]
      },
      {
        "name": "releaseTarget",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.aop.target.LazyInitTargetSource"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterSingletonsInstantiated",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.AbstractAdvisingBeanPostProcessor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "determineBeanType",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "setBeforeExistingAdvisors",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.Advised",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "addAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "getTargetSource",
        "parameterTypes": []
      },
      {
        "name": "isFrozen",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.AdvisedSupport",
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "toProxyConfigString"
      },
      {
        "name": "toString"
      }
    ],
    "methods": [
      {
        "name": "addAdvice",
        "parameterTypes": [
          "int",
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "addAdvice",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "addAdvisor",
        "parameterTypes": [
          "int",
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "addAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "addAdvisors",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "addAdvisors",
        "parameterTypes": [
          "org.springframework.aop.Advisor[]"
        ]
      },
      {
        "name": "addInterface",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "adviceIncluded",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "countAdvicesOfType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getAdvisorChainFactory",
        "parameterTypes": []
      },
      {
        "name": "getAdvisorCount",
        "parameterTypes": []
      },
      {
        "name": "getAdvisors",
        "parameterTypes": []
      },
      {
        "name": "getInterceptorsAndDynamicInterceptionAdvice",
        "parameterTypes": [
          "java.lang.reflect.Method",
          "java.lang.Class"
        ]
      },
      {
        "name": "getProxiedInterfaces",
        "parameterTypes": []
      },
      {
        "name": "getTargetClass",
        "parameterTypes": []
      },
      {
        "name": "getTargetSource",
        "parameterTypes": []
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "isInterfaceProxied",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "isPreFiltered",
        "parameterTypes": []
      },
      {
        "name": "removeAdvice",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "removeAdvisor",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "removeAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "removeInterface",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "replaceAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor",
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "setAdvisorChainFactory",
        "parameterTypes": [
          "org.springframework.aop.framework.AdvisorChainFactory"
        ]
      },
      {
        "name": "setInterfaces",
        "parameterTypes": [
          "java.lang.Class[]"
        ]
      },
      {
        "name": "setPreFiltered",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTarget",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setTargetClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setTargetSource",
        "parameterTypes": [
          "org.springframework.aop.TargetSource"
        ]
      },
      {
        "name": "toProxyConfigString",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.AdvisedSupportListener"
  },
  {
    "name": "org.springframework.aop.framework.AdvisorChainFactory"
  },
  {
    "name": "org.springframework.aop.framework.AopConfigException"
  },
  {
    "name": "org.springframework.aop.framework.AopInfrastructureBean",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.aop.framework.AopProxy"
  },
  {
    "name": "org.springframework.aop.framework.AopProxyFactory"
  },
  {
    "name": "org.springframework.aop.framework.ProxyConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "copyFrom",
        "parameterTypes": [
          "org.springframework.aop.framework.ProxyConfig"
        ]
      },
      {
        "name": "isExposeProxy",
        "parameterTypes": []
      },
      {
        "name": "isFrozen",
        "parameterTypes": []
      },
      {
        "name": "isOpaque",
        "parameterTypes": []
      },
      {
        "name": "isOptimize",
        "parameterTypes": []
      },
      {
        "name": "isProxyTargetClass",
        "parameterTypes": []
      },
      {
        "name": "setExposeProxy",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setFrozen",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOpaque",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOptimize",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setProxyTargetClass",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.ProxyCreatorSupport",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addListener",
        "parameterTypes": [
          "org.springframework.aop.framework.AdvisedSupportListener"
        ]
      },
      {
        "name": "getAopProxyFactory",
        "parameterTypes": []
      },
      {
        "name": "removeListener",
        "parameterTypes": [
          "org.springframework.aop.framework.AdvisedSupportListener"
        ]
      },
      {
        "name": "setAopProxyFactory",
        "parameterTypes": [
          "org.springframework.aop.framework.AopProxyFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.ProxyFactoryBean",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "getObjectType",
        "parameterTypes": []
      },
      {
        "name": "isSingleton",
        "parameterTypes": []
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setFrozen",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.ProxyProcessorSupport",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setProxyClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.adapter.AdvisorAdapterRegistry"
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "determineBeanType",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String"
        ]
      },
      {
        "name": "determineCandidateConstructors",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String"
        ]
      },
      {
        "name": "getEarlyBeanReference",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "isFrozen",
        "parameterTypes": []
      },
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessBeforeInstantiation",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessProperties",
        "parameterTypes": [
          "org.springframework.beans.PropertyValues",
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "predictBeanType",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String"
        ]
      },
      {
        "name": "setAdvisorAdapterRegistry",
        "parameterTypes": [
          "org.springframework.aop.framework.adapter.AdvisorAdapterRegistry"
        ]
      },
      {
        "name": "setApplyCommonInterceptorsFirst",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCustomTargetSourceCreators",
        "parameterTypes": [
          "org.springframework.aop.framework.autoproxy.TargetSourceCreator[]"
        ]
      },
      {
        "name": "setFrozen",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setInterceptorNames",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.AbstractBeanFactoryAwareAdvisingPostProcessor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.aop.interceptor.AsyncUncaughtExceptionHandler"
  },
  {
    "name": "org.springframework.aop.scope.ScopedObject"
  },
  {
    "name": "org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getAdvice",
        "parameterTypes": []
      },
      {
        "name": "getAdviceBeanName",
        "parameterTypes": []
      },
      {
        "name": "setAdvice",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "setAdviceBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.aop.support.AbstractPointcutAdvisor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.target.AbstractBeanFactoryBasedTargetSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getBeanFactory",
        "parameterTypes": []
      },
      {
        "name": "getTargetBeanName",
        "parameterTypes": []
      },
      {
        "name": "getTargetClass",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setTargetBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTargetClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.aop.target.LazyInitTargetSource",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getTarget",
        "parameterTypes": []
      },
      {
        "name": "toTargetSource",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.aot.hint.RuntimeHints"
  },
  {
    "name": "org.springframework.aot.hint.annotation.Reflective",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.aot.hint.annotation.RegisterReflection",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.aot.hint.annotation.RegisterReflectionForBinding",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.BeanWrapper"
  },
  {
    "name": "org.springframework.beans.BeansException"
  },
  {
    "name": "org.springframework.beans.TypeConverter"
  },
  {
    "name": "org.springframework.beans.factory.Aware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanClassLoaderAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanFactory"
  },
  {
    "name": "org.springframework.beans.factory.BeanFactoryAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanNameAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.DisposableBean",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.FactoryBean",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "isSingleton",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.InitializingBean",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.ListableBeanFactory"
  },
  {
    "name": "org.springframework.beans.factory.ObjectFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean$TargetBeanObjectFactory"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean$TargetBeanObjectFactory"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean$TargetBeanObjectFactory"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean$TargetBeanObjectFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.ObjectProvider"
  },
  {
    "name": "org.springframework.beans.factory.SmartInitializingSingleton",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.annotation.Autowired",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.annotation.Configurable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.annotation.Qualifier",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.annotation.Value",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.aspectj.AbstractDependencyInjectionAspect",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "ajc$afterReturning$org_springframework_beans_factory_aspectj_AbstractDependencyInjectionAspect$2$1ea6722c",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "ajc$afterReturning$org_springframework_beans_factory_aspectj_AbstractDependencyInjectionAspect$3$6aa27052",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "ajc$before$org_springframework_beans_factory_aspectj_AbstractDependencyInjectionAspect$1$e854fa65",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "ajc$pointcut$$beanConstruction$85c",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "ajc$pointcut$$beanDeserialization$8eb",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "ajc$pointcut$$inConfigurableBean$961",
        "parameterTypes": []
      },
      {
        "name": "ajc$pointcut$$leastSpecificSuperTypeConstruction$593",
        "parameterTypes": []
      },
      {
        "name": "ajc$pointcut$$mostSpecificSubTypeConstruction$676",
        "parameterTypes": []
      },
      {
        "name": "ajc$pointcut$$preConstructionConfiguration$7c2",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.aspectj.AbstractInterfaceDrivenDependencyInjectionAspect",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "ajc$pointcut$$beanConstruction$e18",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "ajc$pointcut$$beanDeserialization$efb",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "ajc$pointcut$$leastSpecificSuperTypeConstruction$f86",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.aspectj.AbstractInterfaceDrivenDependencyInjectionAspect$ConfigurableDeserializationSupport"
  },
  {
    "name": "org.springframework.beans.factory.aspectj.AnnotationBeanConfigurerAspect",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "configureBean",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.aspectj.ConfigurableObject",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.AbstractFactoryBean",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "isSingleton",
        "parameterTypes": []
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setSingleton",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.config.AutowireCapableBeanFactory"
  },
  {
    "name": "org.springframework.beans.factory.config.BeanDefinition"
  },
  {
    "name": "org.springframework.beans.factory.config.BeanFactoryPostProcessor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.BeanPostProcessor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessBeforeInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.config.ConfigurableBeanFactory"
  },
  {
    "name": "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
  },
  {
    "name": "org.springframework.beans.factory.config.CustomScopeConfigurer"
  },
  {
    "name": "org.springframework.beans.factory.config.DestructionAwareBeanPostProcessor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "postProcessAfterInstantiation",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessBeforeInstantiation",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessProperties",
        "parameterTypes": [
          "org.springframework.beans.PropertyValues",
          "java.lang.Object",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getObjectType",
        "parameterTypes": []
      },
      {
        "name": "setTargetBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean$TargetBeanObjectFactory",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "toObjectFactory",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "determineCandidateConstructors",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String"
        ]
      },
      {
        "name": "getEarlyBeanReference",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "predictBeanType",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.support.BeanDefinitionRegistry"
  },
  {
    "name": "org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.support.MergedBeanDefinitionPostProcessor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "resetBeanDefinition",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.support.NullBean",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.ApplicationArguments"
  },
  {
    "name": "org.springframework.boot.ApplicationProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setAllowBeanDefinitionOverriding",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAllowCircularReferences",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLazyInitialization",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.ApplicationRunner",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.ClearCachesApplicationListener",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.LazyInitializationExcludeFilter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.Runner",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.SpringBootConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.audit.AuditEvent"
  },
  {
    "name": "org.springframework.boot.actuate.audit.AuditEventRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.audit.AuditAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.availability.AvailabilityProbesAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.availability.AvailabilityProbesHealthEndpointGroups",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAdditionalPaths",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.EndpointId",
          "org.springframework.boot.actuate.endpoint.web.WebServerNamespace"
        ]
      },
      {
        "name": "getNames",
        "parameterTypes": []
      },
      {
        "name": "getPrimary",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.availability.AvailabilityProbesHealthEndpointGroupsPostProcessor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcessHealthEndpointGroups",
        "parameterTypes": [
          "org.springframework.boot.actuate.health.HealthEndpointGroups"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.PropertiesEndpointAccessResolver",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "accessFor",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.EndpointId",
          "org.springframework.boot.actuate.endpoint.Access"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.condition.ConditionalOnAvailableEndpoint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.expose.IncludeExcludeEndpointFilter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "match",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.ExposableEndpoint"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.MappingWebEndpointPathMapper",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getRootPath",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.EndpointId"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getExposure",
        "parameterTypes": []
      },
      {
        "name": "setBasePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Discovery"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Exposure",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getInclude",
        "parameterTypes": []
      },
      {
        "name": "setInclude",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration$EndpointObjectMapperWebMvcConfigurer",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "configureMessageConverters",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.hazelcast.HazelcastHealthContributorAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.AbstractCompositeHealthContributorConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredHealthContributorRegistry",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "registerContributor",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredHealthEndpointGroups",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAdditionalPaths",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.EndpointId",
          "org.springframework.boot.actuate.endpoint.web.WebServerNamespace"
        ]
      },
      {
        "name": "getNames",
        "parameterTypes": []
      },
      {
        "name": "getPrimary",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.CompositeHealthContributorConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.ConditionalOnEnabledHealthIndicator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration$HealthEndpointGroupMembershipValidator",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterSingletonsInstantiated",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration$HealthEndpointGroupsBeanPostProcessor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getShowDetails",
        "parameterTypes": []
      },
      {
        "name": "setShowDetails",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.Show"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties$Group"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties$Logging"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration$MvcAdditionalHealthEndpointPathsConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getRoles",
        "parameterTypes": []
      },
      {
        "name": "getShowComponents",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "setRoles",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setShowComponents",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.Show"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthProperties$Status"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.ReactiveHealthEndpointConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.ConditionalOnEnabledInfoContributor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getGit",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties$Git",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setMode",
        "parameterTypes": [
          "org.springframework.boot.actuate.info.InfoPropertiesInfoContributor$Mode"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.InfoEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthContributorAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.logging.LoggersEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.management.ThreadDumpEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryCustomizer"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryPostProcessor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterSingletonsInstantiated",
        "parameterTypes": []
      },
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration$MeterRegistryCloser",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getDistribution",
        "parameterTypes": []
      },
      {
        "name": "getEnable",
        "parameterTypes": []
      },
      {
        "name": "getTags",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Data"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Distribution",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getPercentilesHistogram",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$System"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.PropertiesMeterFilter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "accept",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter$Id"
        ]
      },
      {
        "name": "configure",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter$Id",
          "io.micrometer.core.instrument.distribution.DistributionStatisticConfig"
        ]
      },
      {
        "name": "map",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter$Id"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.ServiceLevelObjectiveBoundary"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMeterBinderProvidersConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMeterBinderProvidersConfiguration$HazelcastCacheMeterBinderProviderConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMetricsAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMetricsRegistrarConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.ConditionalOnEnabledMetricsExport",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusMetricsExportAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusMetricsExportAutoConfiguration$PrometheusScrapeEndpointConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setStep",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties$Pushgateway"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusPropertiesConfigAdapter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "descriptions",
        "parameterTypes": []
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prefix",
        "parameterTypes": []
      },
      {
        "name": "prometheusProperties",
        "parameterTypes": []
      },
      {
        "name": "step",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.properties.PropertiesConfigAdapter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration$OnlyMetricsMeterObservationHandlerConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$OnlyMetricsConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationHandlerGrouping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getHttp",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$Http",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getServer",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$Http$Server",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getRequests",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$Http$Server$ServerRequests",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$LongTaskTimer"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationRegistryConfigurer"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationRegistryPostProcessor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.PropertiesObservationFilterPredicate",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "map",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      },
      {
        "name": "test",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration$MeterFilterConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.client.RestClientObservationConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.client.RestTemplateObservationConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration$MeterFilterConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksObservabilityAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksObservabilityAutoConfiguration$ObservabilitySchedulingConfigurer",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "configureTasks",
        "parameterTypes": [
          "org.springframework.scheduling.config.ScheduledTaskRegistrar"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.security.servlet.SecurityRequestMatchersManagementContextConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.security.servlet.SecurityRequestMatchersManagementContextConfiguration$MvcRequestMatcherConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.ssl.SslHealthContributorAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.ssl.SslHealthIndicatorProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.ssl.SslMeterBinder",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.ssl.SslObservabilityAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.tracing.LogCorrelationEnvironmentPostProcessor",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.tracing.OpenTelemetryEventPublisherBeansApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.ManagementContextConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ConditionalOnManagementPort",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.EnableManagementContext",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      },
      {
        "name": "afterSingletonsInstantiated",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.availability.AvailabilityStateHealthIndicator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.availability.AvailabilityStateHealthIndicator$StatusMappings"
  },
  {
    "name": "org.springframework.boot.actuate.availability.LivenessStateHealthIndicator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.availability.ReadinessStateHealthIndicator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint$ConfigurationPropertiesBeanDescriptor"
  },
  {
    "name": "org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint$ConfigurationPropertiesDescriptor"
  },
  {
    "name": "org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint$ContextConfigurationPropertiesDescriptor"
  },
  {
    "name": "org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpointWebExtension",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.Access"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.ApiVersion"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.EndpointAccessResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.EndpointFilter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.EndpointId"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.EndpointsSupplier",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.ExposableEndpoint"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.Operation"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.OperationFilter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.OperationResponseBody",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.OperationResponseBodyMap",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.OperationType"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.SecurityContext"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.Show"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.ShowEditor"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.DiscoveredOperationMethod"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.DiscoveredOperationsFactory"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.Endpoint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.EndpointConverter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "createOperationKey",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.Operation"
        ]
      },
      {
        "name": "getEndpoints",
        "parameterTypes": []
      },
      {
        "name": "isInvocable",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.ExposableEndpoint"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$ExtensionBean"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.EndpointExtension",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.FilteredEndpoint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.ReadOperation",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.Selector",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.WriteOperation",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.invoke.OperationInvoker"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.invoke.OperationInvokerAdvisor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.invoke.OperationParameter"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.invoke.OperationParameters"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.invoke.ParameterMappingException"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.invoke.convert.ConversionServiceParameterValueMapper",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "mapParameterValue",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.invoke.OperationParameter",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "apply",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.EndpointId",
          "org.springframework.boot.actuate.endpoint.OperationType",
          "org.springframework.boot.actuate.endpoint.invoke.OperationParameters",
          "org.springframework.boot.actuate.endpoint.invoke.OperationInvoker"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.jackson.EndpointObjectMapper",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.AdditionalPathsMapper",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.ExposableServletEndpoint"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.ExposableWebEndpoint"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.PathMappedEndpoint"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.PathMapper",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "onStartup",
        "parameterTypes": [
          "jakarta.servlet.ServletContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.WebEndpointResponse"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.WebOperation"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.WebOperationRequestPredicate"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.WebServerNamespace"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.EndpointWebExtension",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.ExposableControllerEndpoint"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointDiscoverer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpoint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointFilter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getEndpoints",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$LinksHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "handle",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$ServletWebOperation"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.servlet.AdditionalHealthEndpointPathsWebMvcHandlerMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.servlet.ControllerEndpointHandlerMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping$WebMvcLinksHandler",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.env.EnvironmentEndpoint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.env.EnvironmentEndpoint$EnvironmentDescriptor"
  },
  {
    "name": "org.springframework.boot.actuate.env.EnvironmentEndpoint$EnvironmentEntryDescriptor"
  },
  {
    "name": "org.springframework.boot.actuate.env.EnvironmentEndpoint$PropertySourceDescriptor"
  },
  {
    "name": "org.springframework.boot.actuate.env.EnvironmentEndpoint$PropertySummaryDescriptor"
  },
  {
    "name": "org.springframework.boot.actuate.env.EnvironmentEndpoint$PropertyValueDescriptor"
  },
  {
    "name": "org.springframework.boot.actuate.env.EnvironmentEndpointWebExtension",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.AbstractHealthIndicator",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "health",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.AdditionalHealthEndpointPath"
  },
  {
    "name": "org.springframework.boot.actuate.health.CompositeHealth",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getComponents",
        "parameterTypes": []
      },
      {
        "name": "getDetails",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.CompositeHealthContributor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.ContributorRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.DefaultContributorRegistry",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "registerContributor",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.DefaultHealthContributorRegistry",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getContributor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "registerContributor",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "unregisterContributor",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.Health",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDetails",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.Health$Builder"
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthComponent",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthContributor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthContributorRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthEndpoint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthEndpointGroup"
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthEndpointGroups",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "get",
        "parameterTypes": [
          "org.springframework.boot.actuate.health.AdditionalHealthEndpointPath"
        ]
      },
      {
        "name": "getAllWithAdditionalPath",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.web.WebServerNamespace"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthEndpointGroupsPostProcessor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthEndpointSupport",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getHealth",
        "parameterTypes": [
          "java.lang.Object",
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthEndpointSupport$HealthResult"
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthEndpointWebExtension",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "health",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.ApiVersion",
          "org.springframework.boot.actuate.endpoint.web.WebServerNamespace",
          "org.springframework.boot.actuate.endpoint.SecurityContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthIndicator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getHealth",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.HttpCodeStatusMapper",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.NamedContributor"
  },
  {
    "name": "org.springframework.boot.actuate.health.NamedContributors",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "stream",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.PingHealthIndicator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.SimpleHttpCodeStatusMapper",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getStatusCode",
        "parameterTypes": [
          "org.springframework.boot.actuate.health.Status"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.SimpleStatusAggregator",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getAggregateStatus",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.Status",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getCode",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.StatusAggregator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getAggregateStatus",
        "parameterTypes": [
          "org.springframework.boot.actuate.health.Status[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.info.BuildInfoContributor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "contribute",
        "parameterTypes": [
          "org.springframework.boot.actuate.info.Info$Builder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.info.EnvironmentInfoContributor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "contribute",
        "parameterTypes": [
          "org.springframework.boot.actuate.info.Info$Builder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.info.GitInfoContributor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "contribute",
        "parameterTypes": [
          "org.springframework.boot.actuate.info.Info$Builder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.info.Info$Builder"
  },
  {
    "name": "org.springframework.boot.actuate.info.InfoContributor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.info.InfoEndpoint",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "info",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.info.InfoPropertiesInfoContributor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.info.InfoPropertiesInfoContributor$Mode"
  },
  {
    "name": "org.springframework.boot.actuate.info.InfoPropertiesInfoContributor$ModeEditor"
  },
  {
    "name": "org.springframework.boot.actuate.info.JavaInfoContributor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "contribute",
        "parameterTypes": [
          "org.springframework.boot.actuate.info.Info$Builder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.info.OsInfoContributor"
  },
  {
    "name": "org.springframework.boot.actuate.info.ProcessInfoContributor"
  },
  {
    "name": "org.springframework.boot.actuate.info.SslInfoContributor"
  },
  {
    "name": "org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.logging.LoggersEndpoint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.logging.LoggersEndpoint$LoggerLevelsDescriptor"
  },
  {
    "name": "org.springframework.boot.actuate.logging.LoggersEndpoint$LoggersDescriptor"
  },
  {
    "name": "org.springframework.boot.actuate.management.ThreadDumpEndpoint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.management.ThreadDumpEndpoint$ThreadDumpDescriptor"
  },
  {
    "name": "org.springframework.boot.actuate.metrics.export.prometheus.PrometheusOutputFormat"
  },
  {
    "name": "org.springframework.boot.actuate.metrics.export.prometheus.PrometheusScrapeEndpoint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.metrics.system.DiskSpaceMetricsBinder",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.metrics.web.client.ObservationRestClientCustomizer",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.web.client.RestClient$Builder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.ssl.SslHealthIndicator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.system.DiskSpaceHealthIndicator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.ansi.AnsiOutput$EnabledEditor"
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackage",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigureAfter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigureBefore",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigureOrder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.BackgroundPreinitializer",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.EnableAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.SpringBootApplication",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnBean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnBooleanProperty",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnClass",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnNotWarDeployment",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnProperty",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnThreading",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.LifecycleProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setTimeoutPerShutdownPhase",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.MessageSourceProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getBasename",
        "parameterTypes": []
      },
      {
        "name": "setBasename",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.ldap.LdapRepositoriesAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties$Pageable"
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties$Sort"
  },
  {
    "name": "org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.hazelcast.HazelcastAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.hazelcast.HazelcastJpaDependencyAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.ConditionalOnPreferredJsonMapper",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConverters",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "iterator",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2XmlHttpMessageConverterConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.JsonbHttpMessageConvertersConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.client.AbstractHttpClientProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getConnectTimeout",
        "parameterTypes": []
      },
      {
        "name": "getReadTimeout",
        "parameterTypes": []
      },
      {
        "name": "getRedirects",
        "parameterTypes": []
      },
      {
        "name": "getSsl",
        "parameterTypes": []
      },
      {
        "name": "setConnectTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setReadTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setRedirects",
        "parameterTypes": [
          "org.springframework.boot.http.client.HttpRedirects"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.client.AbstractHttpClientProperties$Ssl"
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.client.AbstractHttpRequestFactoryProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getFactory",
        "parameterTypes": []
      },
      {
        "name": "setFactory",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.http.client.AbstractHttpRequestFactoryProperties$Factory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.client.AbstractHttpRequestFactoryProperties$Factory"
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.client.ClientHttpRequestFactoryBuilderCustomizer"
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.client.HttpClientAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.boot.autoconfigure.http.client.HttpClientProperties"
        ]
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.client.HttpClientProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.client.reactive.ClientHttpConnectorAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.info.ProjectInfoProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Build"
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Git"
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationPropertiesEnvironmentPostProcessor",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonProperties$ConstructorDetectorStrategy"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonProperties$Datatype"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$Xa"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.HikariJdbcConnectionDetailsBeanPostProcessor"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcClientAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.PropertiesJdbcConnectionDetails",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getDriverClassName",
        "parameterTypes": []
      },
      {
        "name": "getJdbcUrl",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "getXaDataSourceClassName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.ldap.LdapAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.mail.MailProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setHost",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.mail.MailProperties$Ssl"
  },
  {
    "name": "org.springframework.boot.autoconfigure.mail.MailSenderAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.netty.NettyProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.netty.NettyProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.netty.NettyProperties$LeakDetection"
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.EntityManagerFactoryBuilderCustomizer"
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "javax.sql.DataSource",
          "org.springframework.boot.autoconfigure.orm.jpa.JpaProperties",
          "org.springframework.beans.factory.config.ConfigurableListableBeanFactory",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getNaming",
        "parameterTypes": []
      },
      {
        "name": "setDdlAuto",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties$Naming",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setImplicitStrategy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPhysicalStrategy",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernatePropertiesCustomizer"
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateSettings"
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "entityManagerFactory",
        "parameterTypes": [
          "org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder",
          "org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes"
        ]
      },
      {
        "name": "entityManagerFactoryBuilder",
        "parameterTypes": [
          "org.springframework.orm.jpa.JpaVendorAdapter",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "jpaVendorAdapter",
        "parameterTypes": []
      },
      {
        "name": "transactionManager",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$PersistenceManagedTypesConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.JpaProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getProperties",
        "parameterTypes": []
      },
      {
        "name": "setDatabase",
        "parameterTypes": [
          "org.springframework.orm.jpa.vendor.Database"
        ]
      },
      {
        "name": "setOpenInView",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setProperties",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setShowSql",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.reactor.ReactorProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.reactor.ReactorProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.reactor.ReactorProperties$ContextPropagationMode"
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.SecurityDataConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.SecurityProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.SecurityProperties$Filter"
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.SecurityProperties$User"
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.oauth2.resource.ConditionalOnIssuerLocationJwtDecoder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.oauth2.resource.ConditionalOnPublicKeyJwtDecoder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerJwtConfiguration$JwtDecoderConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerOpaqueTokenConfiguration$OpaqueTokenIntrospectionClientConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.Oauth2ResourceServerConfiguration$JwtConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.Oauth2ResourceServerConfiguration$OpaqueTokenConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.saml2.Saml2RelyingPartyAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.service.connection.ConnectionDetails",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.BundleContentProperty"
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.FileWatcher",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader",
          "org.springframework.boot.autoconfigure.ssl.SslProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslBundleProperties"
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslBundleRegistrar",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslProperties$Bundles"
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "registerBundles",
        "parameterTypes": [
          "org.springframework.boot.ssl.SslBundleRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar$Bundle"
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.ScheduledBeanLazyInitializationExcludeFilter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "isExcluded",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.beans.factory.config.BeanDefinition",
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getPool",
        "parameterTypes": []
      },
      {
        "name": "setThreadNamePrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Mode"
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setCoreSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setQueueCapacity",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Shutdown"
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Simple"
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$BootstrapExecutorConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.TemplateEngineConfigurations$DefaultTemplateEngineConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties",
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setCache",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMode",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Reactive"
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Servlet"
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.ExecutionListenersTransactionManagerCustomizer",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.transaction.TransactionManager"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.transaction.TransactionManager"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.validation.ValidatorAdapter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "unwrap",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.validation.Errors"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.validation.Errors",
          "java.lang.Object[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ConditionalOnEnabledResourceChain",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ErrorProperties"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getCompression",
        "parameterTypes": []
      },
      {
        "name": "getServlet",
        "parameterTypes": []
      },
      {
        "name": "setForwardHeadersStrategy",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties$ForwardHeadersStrategy"
        ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setShutdown",
        "parameterTypes": [
          "org.springframework.boot.web.server.Shutdown"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$ForwardHeadersStrategy"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$ForwardHeadersStrategyEditor"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Netty"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Reactive"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Servlet",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getSession",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Resource"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$UseApr"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$LocaleResolver"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.AutoConfiguredRestClientSsl"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.web.client.RestClient$Builder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.TomcatVirtualThreadsWebServerFactoryCustomizer",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.boot.web.server.WebServerFactory"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.boot.web.server.WebServerFactory"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.format.DateTimeFormatters"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.format.WebConversionService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ConditionalOnMissingFilterBean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getPrefix",
        "parameterTypes": []
      },
      {
        "name": "getRelativePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getServletUrlMapping",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addUrlMappings",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "getPath",
        "parameterTypes": []
      },
      {
        "name": "setUrlMappings",
        "parameterTypes": [
          "java.util.Collection"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.boot.web.server.WebServerFactory"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setMaxFileSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxRequestSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.boot.web.server.WebServerFactory"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.boot.web.server.WebServerFactory"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
          "org.springframework.boot.autoconfigure.web.WebProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ListableBeanFactory"
        ]
      },
      {
        "name": "flashMapManager",
        "parameterTypes": []
      },
      {
        "name": "localeResolver",
        "parameterTypes": []
      },
      {
        "name": "mvcContentNegotiationManager",
        "parameterTypes": []
      },
      {
        "name": "mvcConversionService",
        "parameterTypes": []
      },
      {
        "name": "mvcValidator",
        "parameterTypes": []
      },
      {
        "name": "setResourceLoader",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader"
        ]
      },
      {
        "name": "themeResolver",
        "parameterTypes": []
      },
      {
        "name": "viewNameTranslator",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$ResourceChainCustomizerConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$ResourceChainResourceHandlerRegistrationCustomizer",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$ResourceHandlerRegistrationCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.WebProperties",
          "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
          "org.springframework.beans.factory.ListableBeanFactory",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "addFormatters",
        "parameterTypes": [
          "org.springframework.format.FormatterRegistry"
        ]
      },
      {
        "name": "addResourceHandlers",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry"
        ]
      },
      {
        "name": "configureAsyncSupport",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer"
        ]
      },
      {
        "name": "configureContentNegotiation",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer"
        ]
      },
      {
        "name": "configureMessageConverters",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "configurePathMatch",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.PathMatchConfigurer"
        ]
      },
      {
        "name": "getMessageCodesResolver",
        "parameterTypes": []
      },
      {
        "name": "setServletContext",
        "parameterTypes": [
          "jakarta.servlet.ServletContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WelcomePageHandlerMappingFactory"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Async"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Contentnegotiation"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Format"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Pathmatch"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Problemdetails"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Servlet"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$View"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WelcomePage"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WelcomePageNotAcceptableHandlerMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "registerErrorPages",
        "parameterTypes": [
          "org.springframework.boot.web.server.ErrorPageRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$PreserveErrorControllerTargetClassPostProcessor"
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.boot.web.server.WebServerFactory"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketMessagingAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketMessagingAutoConfiguration$WebSocketMessageConverterConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.ObjectMapper",
          "java.util.Map"
        ]
      },
      {
        "name": "configureClientInboundChannel",
        "parameterTypes": [
          "org.springframework.messaging.simp.config.ChannelRegistration"
        ]
      },
      {
        "name": "configureClientOutboundChannel",
        "parameterTypes": [
          "org.springframework.messaging.simp.config.ChannelRegistration"
        ]
      },
      {
        "name": "configureMessageConverters",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.availability.ApplicationAvailability",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getLivenessState",
        "parameterTypes": []
      },
      {
        "name": "getReadinessState",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.availability.ApplicationAvailabilityBean",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getLastChangeEvent",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getState",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getState",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.boot.availability.AvailabilityState"
        ]
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.availability.AvailabilityChangeEvent"
  },
  {
    "name": "org.springframework.boot.availability.AvailabilityState"
  },
  {
    "name": "org.springframework.boot.availability.LivenessState"
  },
  {
    "name": "org.springframework.boot.availability.ReadinessState"
  },
  {
    "name": "org.springframework.boot.builder.ParentContextCloserApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.logging.DeferredLogFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.ContextIdApplicationContextInitializer",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.FileEncodingApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.AnsiOutputApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.logging.DeferredLogFactory",
          "org.springframework.boot.ConfigurableBootstrapContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataNotFoundAction",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataProperties",
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "this$0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLoader",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLocationResolver",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.logging.DeferredLogFactory",
          "org.springframework.boot.context.properties.bind.Binder",
          "org.springframework.core.io.ResourceLoader"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.SystemEnvironmentConfigDataLoader",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.SystemEnvironmentConfigDataLocationResolver",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.event.ApplicationReadyEvent"
  },
  {
    "name": "org.springframework.boot.context.event.EventPublishingRunListener",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.SpringApplication",
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.logging.LoggingApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.BoundConfigurationProperties",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBindHandlerAdvisor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBinder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "postProcessBeforeInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.EnableConfigurationProperties",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.bind.BindHandler"
  },
  {
    "name": "org.springframework.boot.context.properties.bind.Binder"
  },
  {
    "name": "org.springframework.boot.context.properties.bind.Name",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.source.ConfigurationProperty"
  },
  {
    "name": "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
  },
  {
    "name": "org.springframework.boot.convert.DurationUnit",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.env.PropertiesPropertySourceLoader",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.logging.DeferredLogFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.env.YamlPropertySourceLoader",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.http.client.AbstractClientHttpRequestFactoryBuilder",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "build",
        "parameterTypes": [
          "org.springframework.boot.http.client.ClientHttpRequestFactorySettings"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.http.client.ClientHttpRequestFactoryBuilder",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "build",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.http.client.ClientHttpRequestFactorySettings",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.http.client.ClientHttpRequestFactorySettings$Redirects"
  },
  {
    "name": "org.springframework.boot.http.client.HttpClientSettings"
  },
  {
    "name": "org.springframework.boot.http.client.HttpComponentsClientHttpRequestFactoryBuilder",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "withCustomizer",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "withCustomizers",
        "parameterTypes": [
          "java.util.Collection"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.http.client.HttpRedirects"
  },
  {
    "name": "org.springframework.boot.http.client.JdkClientHttpRequestFactoryBuilder"
  },
  {
    "name": "org.springframework.boot.http.client.JettyClientHttpRequestFactoryBuilder"
  },
  {
    "name": "org.springframework.boot.http.client.ReactorClientHttpRequestFactoryBuilder"
  },
  {
    "name": "org.springframework.boot.http.client.SimpleClientHttpRequestFactoryBuilder"
  },
  {
    "name": "org.springframework.boot.info.BuildProperties",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.info.GitProperties",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.info.GitProperties$Coercer"
  },
  {
    "name": "org.springframework.boot.info.InfoProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getInstant",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "toPropertySource",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.info.JavaInfo",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getJvm",
        "parameterTypes": []
      },
      {
        "name": "getRuntime",
        "parameterTypes": []
      },
      {
        "name": "getVendor",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.info.JavaInfo$JavaRuntimeEnvironmentInfo",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.info.JavaInfo$JavaVendorInfo",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.info.JavaInfo$JavaVirtualMachineInfo",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getVendor",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.info.SslInfo",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.info.SslInfo$BundleInfo"
  },
  {
    "name": "org.springframework.boot.info.SslInfo$CertificateChainInfo"
  },
  {
    "name": "org.springframework.boot.info.SslInfo$CertificateInfo"
  },
  {
    "name": "org.springframework.boot.io.Base64ProtocolResolver",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.io.ClassPathResourceFilePathResolver",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.io.ProtocolResolverApplicationContextInitializer",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.jackson.JsonComponent$Scope"
  },
  {
    "name": "org.springframework.boot.jackson.JsonComponentModule",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.jackson.JsonMixinModule",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.jackson.JsonMixinModuleEntries",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.jackson.JsonMixinModuleEntries$Builder"
  },
  {
    "name": "org.springframework.boot.jdbc.DataSourceBuilder"
  },
  {
    "name": "org.springframework.boot.jdbc.EmbeddedDatabaseConnection"
  },
  {
    "name": "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.jdbc.metadata.DataSourcePoolMetadata"
  },
  {
    "name": "org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.loader.launch.LaunchedClassLoader",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "clearCache",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.loader.net.protocol.jar.JarUrlClassLoader",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.logging.LogLevel"
  },
  {
    "name": "org.springframework.boot.logging.LogLevelEditor"
  },
  {
    "name": "org.springframework.boot.logging.LoggerGroup"
  },
  {
    "name": "org.springframework.boot.logging.LoggingSystem"
  },
  {
    "name": "org.springframework.boot.logging.java.JavaLoggingSystem$Factory",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem$Factory",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.logback.ColorConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.logback.EnclosedInSquareBracketsConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.logback.LogbackLoggingSystem$Factory",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder$Builder"
  },
  {
    "name": "org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.reactor.ReactorEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "initializeDatabase",
        "parameterTypes": []
      },
      {
        "name": "setResourceLoader",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer$ScriptLocationResolver"
  },
  {
    "name": "org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer$Scripts"
  },
  {
    "name": "org.springframework.boot.sql.init.DatabaseInitializationMode"
  },
  {
    "name": "org.springframework.boot.sql.init.DatabaseInitializationSettings"
  },
  {
    "name": "org.springframework.boot.ssl.DefaultSslBundleRegistry",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addBundleRegisterHandler",
        "parameterTypes": [
          "java.util.function.BiConsumer"
        ]
      },
      {
        "name": "addBundleUpdateHandler",
        "parameterTypes": [
          "java.lang.String",
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "getBundle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBundleNames",
        "parameterTypes": []
      },
      {
        "name": "registerBundle",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.boot.ssl.SslBundle"
        ]
      },
      {
        "name": "updateBundle",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.boot.ssl.SslBundle"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.ssl.DefaultSslBundleRegistry$RegisteredSslBundle"
  },
  {
    "name": "org.springframework.boot.ssl.NoSuchSslBundleException"
  },
  {
    "name": "org.springframework.boot.ssl.SslBundle"
  },
  {
    "name": "org.springframework.boot.ssl.SslBundleRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.ssl.SslBundles",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.client.RestClientCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.context.WebServerInitializedEvent"
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer"
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.TomcatConnectorCustomizer"
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.TomcatContextCustomizer"
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedContext"
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.TomcatProtocolHandlerCustomizer"
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addConnectorCustomizers",
        "parameterTypes": [
          "org.springframework.boot.web.embedded.tomcat.TomcatConnectorCustomizer[]"
        ]
      },
      {
        "name": "addContextCustomizers",
        "parameterTypes": [
          "org.springframework.boot.web.embedded.tomcat.TomcatContextCustomizer[]"
        ]
      },
      {
        "name": "addEngineValves",
        "parameterTypes": [
          "org.apache.catalina.Valve[]"
        ]
      },
      {
        "name": "addProtocolHandlerCustomizers",
        "parameterTypes": [
          "org.springframework.boot.web.embedded.tomcat.TomcatProtocolHandlerCustomizer[]"
        ]
      },
      {
        "name": "getWebServer",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.ServletContextInitializer[]"
        ]
      },
      {
        "name": "setBackgroundProcessorDelay",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setBaseDirectory",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "setResourceLoader",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader"
        ]
      },
      {
        "name": "setUriEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.TomcatWebServer"
  },
  {
    "name": "org.springframework.boot.web.error.ErrorAttributeOptions"
  },
  {
    "name": "org.springframework.boot.web.reactive.context.FilteredReactiveWebContextResourceFilePathResolver",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContextFactory",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addErrorPages",
        "parameterTypes": [
          "org.springframework.boot.web.server.ErrorPage[]"
        ]
      },
      {
        "name": "getAddress",
        "parameterTypes": []
      },
      {
        "name": "getCompression",
        "parameterTypes": []
      },
      {
        "name": "getErrorPages",
        "parameterTypes": []
      },
      {
        "name": "getHttp2",
        "parameterTypes": []
      },
      {
        "name": "getPort",
        "parameterTypes": []
      },
      {
        "name": "getServerHeader",
        "parameterTypes": []
      },
      {
        "name": "getShutdown",
        "parameterTypes": []
      },
      {
        "name": "getSsl",
        "parameterTypes": []
      },
      {
        "name": "getSslBundles",
        "parameterTypes": []
      },
      {
        "name": "setAddress",
        "parameterTypes": [
          "java.net.InetAddress"
        ]
      },
      {
        "name": "setCompression",
        "parameterTypes": [
          "org.springframework.boot.web.server.Compression"
        ]
      },
      {
        "name": "setErrorPages",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setHttp2",
        "parameterTypes": [
          "org.springframework.boot.web.server.Http2"
        ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setServerHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setShutdown",
        "parameterTypes": [
          "org.springframework.boot.web.server.Shutdown"
        ]
      },
      {
        "name": "setSsl",
        "parameterTypes": [
          "org.springframework.boot.web.server.Ssl"
        ]
      },
      {
        "name": "setSslBundles",
        "parameterTypes": [
          "org.springframework.boot.ssl.SslBundles"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.Compression",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMimeTypes",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setMinResponseSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.ConfigurableWebServerFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.Cookie",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setHttpOnly",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.ErrorPage"
  },
  {
    "name": "org.springframework.boot.web.server.ErrorPageRegistrar",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.ErrorPageRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.Http2"
  },
  {
    "name": "org.springframework.boot.web.server.MimeMappings"
  },
  {
    "name": "org.springframework.boot.web.server.MimeMappings$Mapping"
  },
  {
    "name": "org.springframework.boot.web.server.Shutdown"
  },
  {
    "name": "org.springframework.boot.web.server.ShutdownEditor"
  },
  {
    "name": "org.springframework.boot.web.server.Ssl"
  },
  {
    "name": "org.springframework.boot.web.server.Ssl$ServerNameSslBundle"
  },
  {
    "name": "org.springframework.boot.web.server.WebServer"
  },
  {
    "name": "org.springframework.boot.web.server.WebServerFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.WebServerFactoryCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.AbstractFilterRegistrationBean",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addServletNames",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "addServletRegistrationBeans",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.ServletRegistrationBean[]"
        ]
      },
      {
        "name": "addUrlPatterns",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "determineDispatcherTypes",
        "parameterTypes": []
      },
      {
        "name": "getFilterName",
        "parameterTypes": []
      },
      {
        "name": "getServletNames",
        "parameterTypes": []
      },
      {
        "name": "getServletRegistrationBeans",
        "parameterTypes": []
      },
      {
        "name": "getUrlPatterns",
        "parameterTypes": []
      },
      {
        "name": "isMatchAfter",
        "parameterTypes": []
      },
      {
        "name": "setDispatcherTypes",
        "parameterTypes": [
          "jakarta.servlet.DispatcherType",
          "jakarta.servlet.DispatcherType[]"
        ]
      },
      {
        "name": "setDispatcherTypes",
        "parameterTypes": [
          "java.util.EnumSet"
        ]
      },
      {
        "name": "setMatchAfter",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setServletNames",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "setServletRegistrationBeans",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "setUrlPatterns",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getFilter",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean$1",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.DispatcherType"
  },
  {
    "name": "org.springframework.boot.web.servlet.DynamicRegistrationBean",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addInitParameter",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "configure",
        "parameterTypes": [
          "jakarta.servlet.Registration$Dynamic"
        ]
      },
      {
        "name": "getInitParameters",
        "parameterTypes": []
      },
      {
        "name": "isAsyncSupported",
        "parameterTypes": []
      },
      {
        "name": "setAsyncSupported",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIgnoreRegistrationFailure",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setInitParameters",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.FilterRegistrationBean",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getFilter",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.RegistrationBean",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      },
      {
        "name": "onStartup",
        "parameterTypes": [
          "jakarta.servlet.ServletContext"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.ServletContextInitializer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.ServletRegistrationBean",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getMultipartConfig",
        "parameterTypes": []
      },
      {
        "name": "getServlet",
        "parameterTypes": []
      },
      {
        "name": "getServletName",
        "parameterTypes": []
      },
      {
        "name": "getUrlMappings",
        "parameterTypes": []
      },
      {
        "name": "setLoadOnStartup",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMultipartConfig",
        "parameterTypes": [
          "jakarta.servlet.MultipartConfigElement"
        ]
      },
      {
        "name": "setServlet",
        "parameterTypes": [
          "jakarta.servlet.Servlet"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.WebListenerRegistrar"
  },
  {
    "name": "org.springframework.boot.web.servlet.WebListenerRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.context.ServletContextResourceFilePathResolver",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContextFactory",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.error.DefaultErrorAttributes",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getError",
        "parameterTypes": [
          "org.springframework.web.context.request.WebRequest"
        ]
      },
      {
        "name": "getErrorAttributes",
        "parameterTypes": [
          "org.springframework.web.context.request.WebRequest",
          "org.springframework.boot.web.error.ErrorAttributeOptions"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "resolveException",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object",
          "java.lang.Exception"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.error.ErrorAttributes",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.error.ErrorController",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getOrder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.filter.OrderedFilter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.filter.OrderedFormContentFilter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getOrder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.filter.OrderedHiddenHttpMethodFilter"
  },
  {
    "name": "org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getOrder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addCookieSameSiteSuppliers",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.server.CookieSameSiteSupplier[]"
        ]
      },
      {
        "name": "addInitializers",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.ServletContextInitializer[]"
        ]
      },
      {
        "name": "addMimeMappings",
        "parameterTypes": [
          "org.springframework.boot.web.server.MimeMappings"
        ]
      },
      {
        "name": "addWebListeners",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "getContextPath",
        "parameterTypes": []
      },
      {
        "name": "getCookieSameSiteSuppliers",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getDocumentRoot",
        "parameterTypes": []
      },
      {
        "name": "getInitParameters",
        "parameterTypes": []
      },
      {
        "name": "getJsp",
        "parameterTypes": []
      },
      {
        "name": "getLocaleCharsetMappings",
        "parameterTypes": []
      },
      {
        "name": "getMimeMappings",
        "parameterTypes": []
      },
      {
        "name": "getSession",
        "parameterTypes": []
      },
      {
        "name": "isRegisterDefaultServlet",
        "parameterTypes": []
      },
      {
        "name": "setContextPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCookieSameSiteSuppliers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDocumentRoot",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "setInitParameters",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setInitializers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setJsp",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.server.Jsp"
        ]
      },
      {
        "name": "setLocaleCharsetMappings",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setMimeMappings",
        "parameterTypes": [
          "org.springframework.boot.web.server.MimeMappings"
        ]
      },
      {
        "name": "setRegisterDefaultServlet",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSession",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.server.Session"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.server.CookieSameSiteSupplier"
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Encoding",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Jsp"
  },
  {
    "name": "org.springframework.boot.web.servlet.server.ServletWebServerFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Session",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getCookie",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Session$Cookie",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cache.Cache"
  },
  {
    "name": "org.springframework.cache.Cache$ValueWrapper"
  },
  {
    "name": "org.springframework.cache.CacheManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.cache.annotation.AbstractCachingConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setImportMetadata",
        "parameterTypes": [
          "org.springframework.core.type.AnnotationMetadata"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cache.annotation.AbstractCachingConfiguration$CachingConfigurerSupplier"
  },
  {
    "name": "org.springframework.cache.annotation.AnnotationCacheOperationSource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isCandidateClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cache.annotation.AnnotationCacheOperationSource$CacheOperationProvider"
  },
  {
    "name": "org.springframework.cache.annotation.CacheAnnotationParser"
  },
  {
    "name": "org.springframework.cache.annotation.CacheConfig",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cache.annotation.CacheEvict",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cache.annotation.Cacheable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cache.annotation.Caching",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cache.annotation.CachingConfigurer"
  },
  {
    "name": "org.springframework.cache.annotation.EnableCaching",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cache.annotation.ProxyCachingConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cache.interceptor.AbstractCacheInvoker",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getErrorHandler",
        "parameterTypes": []
      },
      {
        "name": "setErrorHandler",
        "parameterTypes": [
          "org.springframework.cache.interceptor.CacheErrorHandler"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cache.interceptor.AbstractFallbackCacheOperationSource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getCacheOperations",
        "parameterTypes": [
          "java.lang.reflect.Method",
          "java.lang.Class"
        ]
      },
      {
        "name": "hasCacheOperations",
        "parameterTypes": [
          "java.lang.reflect.Method",
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cache.interceptor.BeanFactoryCacheOperationSourceAdvisor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getPointcut",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cache.interceptor.CacheAspectSupport",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "afterSingletonsInstantiated",
        "parameterTypes": []
      },
      {
        "name": "configure",
        "parameterTypes": [
          "java.util.function.Supplier",
          "java.util.function.Supplier",
          "java.util.function.Supplier",
          "java.util.function.Supplier"
        ]
      },
      {
        "name": "getCacheOperationSource",
        "parameterTypes": []
      },
      {
        "name": "getCacheResolver",
        "parameterTypes": []
      },
      {
        "name": "getKeyGenerator",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setCacheManager",
        "parameterTypes": [
          "org.springframework.cache.CacheManager"
        ]
      },
      {
        "name": "setCacheOperationSource",
        "parameterTypes": [
          "org.springframework.cache.interceptor.CacheOperationSource"
        ]
      },
      {
        "name": "setCacheOperationSources",
        "parameterTypes": [
          "org.springframework.cache.interceptor.CacheOperationSource[]"
        ]
      },
      {
        "name": "setCacheResolver",
        "parameterTypes": [
          "org.springframework.cache.interceptor.CacheResolver"
        ]
      },
      {
        "name": "setKeyGenerator",
        "parameterTypes": [
          "org.springframework.cache.interceptor.KeyGenerator"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cache.interceptor.CacheInterceptor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "invoke",
        "parameterTypes": [
          "org.aopalliance.intercept.MethodInvocation"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cache.interceptor.CacheOperationSource",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.cache.interceptor.KeyGenerator"
  },
  {
    "name": "org.springframework.cglib.proxy.Factory",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterSingletonsInstantiated",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.autoconfigure.PauseResumeEndpointsConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration$RefreshEndpointConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.autoconfigure.RestartEndpointWithoutIntegrationConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.bootstrap.BootstrapApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.bootstrap.BootstrapConfigFileApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.bootstrap.LoggingSystemShutdownListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.bootstrap.RefreshBootstrapRegistryInitializer",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.bootstrap.TextEncryptorConfigBootstrapper",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.bootstrap.encrypt.DecryptEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.bootstrap.encrypt.KeyProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.bootstrap.encrypt.KeyProperties$KeyStore",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.bootstrap.encrypt.RsaProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.bootstrap.marker.Marker"
  },
  {
    "name": "org.springframework.cloud.client.CommonsClientAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.CommonsClientAutoConfiguration$ActuatorConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.ConditionalOnBlockingDiscoveryEnabled",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.ConditionalOnDiscoveryEnabled",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.ConditionalOnDiscoveryHealthIndicatorEnabled",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.DefaultServiceInstance"
  },
  {
    "name": "org.springframework.cloud.client.HostInfoEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.ReactiveCommonsClientAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.ServiceInstance"
  },
  {
    "name": "org.springframework.cloud.client.actuator.HasFeatures"
  },
  {
    "name": "org.springframework.cloud.client.discovery.DiscoveryClient",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "probe",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "description",
        "parameterTypes": []
      },
      {
        "name": "getInstances",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getServices",
        "parameterTypes": []
      },
      {
        "name": "probe",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.discovery.event.InstanceRegisteredEvent"
  },
  {
    "name": "org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicator",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "health",
        "parameterTypes": []
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.discovery.health.DiscoveryCompositeHealthContributor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getContributor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "iterator",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.discovery.health.DiscoveryHealthIndicator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "description",
        "parameterTypes": []
      },
      {
        "name": "getInstances",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "getServices",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.AbstractLoadBalancerBlockingBuilderBeanPostProcessor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcessBeforeInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.BlockingLoadBalancerInterceptor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.DefaultRequest"
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.DefaultResponse"
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalanced",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancedRetryFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "createBackOffPolicy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createRetryListeners",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancedRetryPolicy"
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerClient",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerEagerLoadProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerLifecycle"
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getHealthCheck",
        "parameterTypes": []
      },
      {
        "name": "getHint",
        "parameterTypes": []
      },
      {
        "name": "getHintHeaderName",
        "parameterTypes": []
      },
      {
        "name": "getRetry",
        "parameterTypes": []
      },
      {
        "name": "getStats",
        "parameterTypes": []
      },
      {
        "name": "getStickySession",
        "parameterTypes": []
      },
      {
        "name": "getSubset",
        "parameterTypes": []
      },
      {
        "name": "getXForwarded",
        "parameterTypes": []
      },
      {
        "name": "isCallGetWithRequestOnDelegates",
        "parameterTypes": []
      },
      {
        "name": "setCallGetWithRequestOnDelegates",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setHealthCheck",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$HealthCheck"
        ]
      },
      {
        "name": "setHint",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setHintHeaderName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRetry",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$Retry"
        ]
      },
      {
        "name": "setStats",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$Stats"
        ]
      },
      {
        "name": "setStickySession",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$StickySession"
        ]
      },
      {
        "name": "setSubset",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$Subset"
        ]
      },
      {
        "name": "setxForwarded",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$XForwarded"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$HealthCheck"
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$Retry"
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$Stats"
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$StickySession"
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$Subset"
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$XForwarded"
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerRequest"
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerRequestAdapter"
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerRequestTransformer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerRestClientBuilderBeanPostProcessor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerRestTemplateBuilderBeanPostProcessor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.Request"
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.Response"
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.RestTemplateCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "intercept",
        "parameterTypes": [
          "org.springframework.http.HttpRequest",
          "byte[]",
          "org.springframework.http.client.ClientHttpRequestExecution"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.ServiceInstanceChooser",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.TimedRequestContext"
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.reactive.ReactiveLoadBalancer"
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.reactive.ReactiveLoadBalancer$Factory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "apply",
        "parameterTypes": [
          "org.springframework.boot.context.properties.bind.BindHandler"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor$MappingsProvider",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x00007acde87becd0"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x00007acde87becd0"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x00007acde87becd0"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x00007acde87becd0"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x000075b8a87e5df0"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x000075b8a87e5df0"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x000075b8a87e5df0"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x000075b8a87e5df0"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x00007bbfec7e0000"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x00007bbfec7e0000"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x00007bbfec7e0000"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x00007bbfec7e0000"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x00007759f47c67e0"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x00007759f47c67e0"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x00007759f47c67e0"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x00007759f47c67e0"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x00007acc047c2240"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x00007acc047c2240"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x00007acc047c2240"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x00007acc047c2240"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.commons.security.ResourceServerTokenRelayAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.commons.security.ResourceServerTokenRelayAutoConfiguration$ResourceServerTokenRelayRegistrationAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addInterceptors",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.InterceptorRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.commons.util.InetUtils",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.commons.util.InetUtils$HostInfo"
  },
  {
    "name": "org.springframework.cloud.commons.util.InetUtilsProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.commons.util.UtilAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.config.client.ConfigClientAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.config.client.ConfigClientRetryBootstrapper",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.config.client.ConfigServerConfigDataLoader",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.logging.DeferredLogFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.config.client.ConfigServerConfigDataLocationResolver",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.logging.DeferredLogFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.config.client.ConfigServerConfigDataMissingEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.config.client.ConfigServerInstanceProvider"
  },
  {
    "name": "org.springframework.cloud.configuration.CompatibilityVerifierAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.context.environment.EnvironmentChangeEvent"
  },
  {
    "name": "org.springframework.cloud.context.environment.EnvironmentManager",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.context.named.NamedContextFactory",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "buildContext",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createContext",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getAnnotatedInstance",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.core.ResolvableType",
          "java.lang.Class"
        ]
      },
      {
        "name": "getConfigurations",
        "parameterTypes": []
      },
      {
        "name": "getContextNames",
        "parameterTypes": []
      },
      {
        "name": "getInstance",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "getInstance",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "getInstance",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.core.ResolvableType"
        ]
      },
      {
        "name": "getInstances",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "getLazyProvider",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "getParent",
        "parameterTypes": []
      },
      {
        "name": "getProvider",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "registerBeans",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.context.support.GenericApplicationContext"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setConfigurations",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.context.named.NamedContextFactory$Specification",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.context.properties.ConfigurationPropertiesBeans",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessBeforeInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.context.properties.ConfigurationPropertiesRebinder",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.context.restart.RestartListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.health.RefreshScopeHealthIndicator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.loadbalancer.annotation.LoadBalancerClient",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getConfiguration",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.loadbalancer.annotation.LoadBalancerClients",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.loadbalancer.aot.LoadBalancerChildContextInitializer"
  },
  {
    "name": "org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "transformRequest",
        "parameterTypes": [
          "org.springframework.http.HttpRequest",
          "org.springframework.cloud.client.ServiceInstance"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "choose",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "choose",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.cloud.client.loadbalancer.Request"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.cloud.client.ServiceInstance",
          "org.springframework.cloud.client.loadbalancer.LoadBalancerRequest"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.cloud.client.loadbalancer.LoadBalancerRequest"
        ]
      },
      {
        "name": "reconstructURI",
        "parameterTypes": [
          "org.springframework.cloud.client.ServiceInstance",
          "java.net.URI"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "createRetryPolicy",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.cloud.client.loadbalancer.ServiceInstanceChooser"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$FastClass$$0",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$FastClass$$1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$DefaultLoadBalancerCacheManagerConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCacheManagerWarnConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.loadbalancer.config.LoadBalancerZoneConfig"
  },
  {
    "name": "org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "transformRequest",
        "parameterTypes": [
          "org.springframework.http.HttpRequest",
          "org.springframework.cloud.client.ServiceInstance"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getInstance",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getProperties",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.loadbalancer.support.LoadBalancerEagerContextInitializer",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration$RestTemplateConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.netflix.eureka.config.EurekaConfigServerBootstrapper",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.util.random.CachedRandomPropertySourceEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.ApplicationContext"
  },
  {
    "name": "org.springframework.context.ApplicationContextAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationContextException"
  },
  {
    "name": "org.springframework.context.ApplicationContextInitializer"
  },
  {
    "name": "org.springframework.context.ApplicationEvent"
  },
  {
    "name": "org.springframework.context.ApplicationEventPublisher"
  },
  {
    "name": "org.springframework.context.ApplicationEventPublisherAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationListener",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "supportsAsyncExecution",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.ConfigurableApplicationContext"
  },
  {
    "name": "org.springframework.context.EmbeddedValueResolverAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.EnvironmentAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.HierarchicalMessageSource",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.Lifecycle",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.LifecycleProcessor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.MessageSource",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.MessageSourceAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.MessageSourceResolvable"
  },
  {
    "name": "org.springframework.context.NoSuchMessageException"
  },
  {
    "name": "org.springframework.context.PayloadApplicationEvent"
  },
  {
    "name": "org.springframework.context.Phased",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.ResourceLoaderAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.SmartLifecycle",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "isAutoStartup",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.context.annotation.Bean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ComponentScan",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ComponentScan$Filter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Conditional",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Configuration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ConfigurationClassEnhancer$EnhancedConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "disablePackedGitMMap",
        "parameterTypes": []
      },
      {
        "name": "onApplicationReady",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.annotation.DependsOn",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.EnableAspectJAutoProxy",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Import",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ImportAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ImportAwareAotBeanPostProcessor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "postProcessBeforeInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.context.annotation.ImportRuntimeHints",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Lazy",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Primary",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Profile",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.PropertySource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.PropertySources",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Role",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Scope",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.event.ContextClosedEvent"
  },
  {
    "name": "org.springframework.context.event.ContextRefreshedEvent"
  },
  {
    "name": "org.springframework.context.event.DefaultEventListenerFactory",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "createApplicationListener",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.lang.reflect.Method"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "supportsMethod",
        "parameterTypes": [
          "java.lang.reflect.Method"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.context.event.EventListener",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.event.EventListenerFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.event.EventListenerMethodProcessor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterSingletonsInstantiated",
        "parameterTypes": []
      },
      {
        "name": "postProcessBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.context.event.SmartApplicationListener",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getListenerId",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "supportsSourceType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.context.i18n.LocaleContext"
  },
  {
    "name": "org.springframework.context.support.AbstractMessageSource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getMessage",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "java.lang.String",
          "java.util.Locale"
        ]
      },
      {
        "name": "getMessage",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "java.util.Locale"
        ]
      },
      {
        "name": "getMessage",
        "parameterTypes": [
          "org.springframework.context.MessageSourceResolvable",
          "java.util.Locale"
        ]
      },
      {
        "name": "getParentMessageSource",
        "parameterTypes": []
      },
      {
        "name": "setCommonMessages",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setParentMessageSource",
        "parameterTypes": [
          "org.springframework.context.MessageSource"
        ]
      },
      {
        "name": "setUseCodeAsDefaultMessage",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.context.support.AbstractResourceBasedMessageSource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addBasenames",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "getBasenameSet",
        "parameterTypes": []
      },
      {
        "name": "setBasename",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBasenames",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setCacheMillis",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setCacheSeconds",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setDefaultEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDefaultLocale",
        "parameterTypes": [
          "java.util.Locale"
        ]
      },
      {
        "name": "setFallbackToSystemLocale",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.context.support.ApplicationObjectSupport",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.context.support.DefaultLifecycleProcessor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "isRunning",
        "parameterTypes": []
      },
      {
        "name": "onClose",
        "parameterTypes": []
      },
      {
        "name": "onRefresh",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup"
  },
  {
    "name": "org.springframework.context.support.GenericApplicationContext"
  },
  {
    "name": "org.springframework.context.support.MessageSourceAccessor"
  },
  {
    "name": "org.springframework.context.support.MessageSourceSupport",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setAlwaysUseMessageFormat",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.context.support.ResourceBundleMessageSource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.weaving.LoadTimeWeaverAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.DecoratingProxy",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.MethodParameter"
  },
  {
    "name": "org.springframework.core.Ordered",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.ParameterNameDiscoverer"
  },
  {
    "name": "org.springframework.core.ParameterizedTypeReference"
  },
  {
    "name": "org.springframework.core.PriorityOrdered",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.ReactiveAdapterRegistry"
  },
  {
    "name": "org.springframework.core.ResolvableType"
  },
  {
    "name": "org.springframework.core.annotation.AliasFor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.annotation.MergedAnnotation"
  },
  {
    "name": "org.springframework.core.annotation.Order",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.convert.ConversionService",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.core.convert.TypeDescriptor"
  },
  {
    "name": "org.springframework.core.convert.converter.Converter"
  },
  {
    "name": "org.springframework.core.convert.converter.ConverterFactory"
  },
  {
    "name": "org.springframework.core.convert.converter.ConverterRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.convert.converter.GenericConverter"
  },
  {
    "name": "org.springframework.core.convert.support.ConfigurableConversionService",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.convert.support.GenericConversionService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addConverter",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class",
          "org.springframework.core.convert.converter.Converter"
        ]
      },
      {
        "name": "addConverter",
        "parameterTypes": [
          "org.springframework.core.convert.converter.Converter"
        ]
      },
      {
        "name": "addConverter",
        "parameterTypes": [
          "org.springframework.core.convert.converter.GenericConverter"
        ]
      },
      {
        "name": "addConverterFactory",
        "parameterTypes": [
          "org.springframework.core.convert.converter.ConverterFactory"
        ]
      },
      {
        "name": "canBypassConvert",
        "parameterTypes": [
          "org.springframework.core.convert.TypeDescriptor",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      },
      {
        "name": "canConvert",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "canConvert",
        "parameterTypes": [
          "org.springframework.core.convert.TypeDescriptor",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      },
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Class"
        ]
      },
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.core.convert.TypeDescriptor",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      },
      {
        "name": "removeConvertible",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.core.env.ConfigurableEnvironment"
  },
  {
    "name": "org.springframework.core.env.EnumerablePropertySource"
  },
  {
    "name": "org.springframework.core.env.Environment"
  },
  {
    "name": "org.springframework.core.env.EnvironmentCapable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.env.MutablePropertySources"
  },
  {
    "name": "org.springframework.core.env.PropertyResolver"
  },
  {
    "name": "org.springframework.core.env.PropertySource"
  },
  {
    "name": "org.springframework.core.io.FileSystemResource"
  },
  {
    "name": "org.springframework.core.io.Resource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.core.io.ResourceLoader"
  },
  {
    "name": "org.springframework.core.io.support.PropertiesLoaderSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setFileEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIgnoreResourceNotFound",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLocalOverride",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "org.springframework.core.io.Resource"
        ]
      },
      {
        "name": "setLocations",
        "parameterTypes": [
          "org.springframework.core.io.Resource[]"
        ]
      },
      {
        "name": "setProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setPropertiesArray",
        "parameterTypes": [
          "java.util.Properties[]"
        ]
      },
      {
        "name": "setPropertiesPersister",
        "parameterTypes": [
          "org.springframework.util.PropertiesPersister"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.core.task.AsyncListenableTaskExecutor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.task.AsyncTaskExecutor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.Runnable",
          "long"
        ]
      },
      {
        "name": "submitCompletable",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "submitCompletable",
        "parameterTypes": [
          "java.util.concurrent.Callable"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.core.task.TaskDecorator"
  },
  {
    "name": "org.springframework.core.task.TaskExecutor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.type.AnnotationMetadata"
  },
  {
    "name": "org.springframework.dao.DataAccessException"
  },
  {
    "name": "org.springframework.dao.support.PersistenceExceptionTranslator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.annotation.CreatedBy",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.annotation.CreatedDate",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.annotation.LastModifiedBy",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.annotation.LastModifiedDate",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.annotation.QueryAnnotation",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.auditing.AuditableBeanWrapper"
  },
  {
    "name": "org.springframework.data.auditing.AuditingHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "setAuditorAware",
        "parameterTypes": [
          "org.springframework.data.domain.AuditorAware"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.auditing.AuditingHandlerSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setDateTimeForNow",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDateTimeProvider",
        "parameterTypes": [
          "org.springframework.data.auditing.DateTimeProvider"
        ]
      },
      {
        "name": "setModifyOnCreation",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.auditing.Auditor"
  },
  {
    "name": "org.springframework.data.auditing.CurrentDateTimeProvider",
    "methods": [
      {
        "name": "toDateTimeProvider",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.auditing.DateTimeProvider",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.data.auditing.CurrentDateTimeProvider"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.data.auditing.CurrentDateTimeProvider"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.data.auditing.CurrentDateTimeProvider"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.data.auditing.CurrentDateTimeProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.domain.AuditorAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "jdk.proxy2.$Proxy376"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "jdk.proxy2.$Proxy376"
        ]
      },
      {
        "name": "getCurrentAuditor",
        "parameterTypes": []
      },
      {
        "name": "of",
        "parameterTypes": [
          "jdk.proxy2.$Proxy376"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "jdk.proxy2.$Proxy376"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "jdk.proxy2.$Proxy382"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "jdk.proxy2.$Proxy382"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "jdk.proxy2.$Proxy382"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "jdk.proxy2.$Proxy382"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "jdk.proxy2.$Proxy381"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "jdk.proxy2.$Proxy381"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "jdk.proxy2.$Proxy381"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "jdk.proxy2.$Proxy381"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "jdk.proxy2.$Proxy377"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "jdk.proxy2.$Proxy377"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "jdk.proxy2.$Proxy377"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "jdk.proxy2.$Proxy377"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.domain.Example"
  },
  {
    "name": "org.springframework.data.domain.ManagedTypes"
  },
  {
    "name": "org.springframework.data.domain.Page"
  },
  {
    "name": "org.springframework.data.domain.PageImpl"
  },
  {
    "name": "org.springframework.data.domain.PageRequest"
  },
  {
    "name": "org.springframework.data.domain.Pageable"
  },
  {
    "name": "org.springframework.data.domain.Slice"
  },
  {
    "name": "org.springframework.data.domain.Sort"
  },
  {
    "name": "org.springframework.data.domain.Unpaged"
  },
  {
    "name": "org.springframework.data.geo.GeoModule",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.domain.Specification"
  },
  {
    "name": "org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcessBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.domain.support.AuditingEntityListener",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setAuditingHandler",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectFactory"
        ]
      },
      {
        "name": "touchForCreate",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "touchForUpdate",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.mapping.JpaMetamodelMappingContext",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "findPersistentPropertyPaths",
        "parameterTypes": [
          "java.lang.Class",
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "hasPersistentEntityFor",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "toMappingContext",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.mapping.JpaPersistentEntityImpl"
  },
  {
    "name": "org.springframework.data.jpa.mapping.JpaPersistentProperty"
  },
  {
    "name": "org.springframework.data.jpa.repository.EntityGraph",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.JpaRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deleteAllByIdInBatch",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteAllInBatch",
        "parameterTypes": []
      },
      {
        "name": "deleteAllInBatch",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteInBatch",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": []
      },
      {
        "name": "getById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getOne",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getReferenceById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "saveAllAndFlush",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "saveAndFlush",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.JpaSpecificationExecutor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "count",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification",
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification",
          "org.springframework.data.jpa.domain.Specification",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findBy",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification",
          "java.util.function.Function"
        ]
      },
      {
        "name": "findOne",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.Modifying",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.Query",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.config.EnableJpaAuditing",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.config.EnableJpaRepositories",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.config.JpaMetamodelMappingContextFactoryBean",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getObjectType",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.query.JpaQueryMethodFactory"
  },
  {
    "name": "org.springframework.data.jpa.repository.support.CrudMethodMetadata",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getEntityGraph",
        "parameterTypes": []
      },
      {
        "name": "getLockModeType",
        "parameterTypes": []
      },
      {
        "name": "getQueryHints",
        "parameterTypes": []
      },
      {
        "name": "getQueryHintsForCount",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "char"
        ]
      },
      {
        "name": "getExtensionId",
        "parameterTypes": []
      },
      {
        "name": "getRootObject",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension$JpaRootObject",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.support.JpaRepositoryConfigurationAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "setEntityManager",
        "parameterTypes": [
          "jakarta.persistence.EntityManager"
        ]
      },
      {
        "name": "setEscapeCharacter",
        "parameterTypes": [
          "char"
        ]
      },
      {
        "name": "setMappingContext",
        "parameterTypes": [
          "org.springframework.data.mapping.context.MappingContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.support.JpaRepositoryImplementation",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Sort"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.support.SimpleJpaRepository",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "count",
        "parameterTypes": []
      },
      {
        "name": "count",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "count",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification"
        ]
      },
      {
        "name": "deleteAll",
        "parameterTypes": []
      },
      {
        "name": "deleteAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteAllById",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteAllByIdInBatch",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteAllInBatch",
        "parameterTypes": []
      },
      {
        "name": "deleteAllInBatch",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification"
        ]
      },
      {
        "name": "existsById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": []
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification",
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification",
          "org.springframework.data.jpa.domain.Specification",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAllById",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "findBy",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "java.util.function.Function"
        ]
      },
      {
        "name": "findBy",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification",
          "java.util.function.Function"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findOne",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "findOne",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": []
      },
      {
        "name": "getById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getOne",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getReferenceById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "saveAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "saveAllAndFlush",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "saveAndFlush",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setEscapeCharacter",
        "parameterTypes": [
          "org.springframework.data.jpa.repository.query.EscapeCharacter"
        ]
      },
      {
        "name": "setProjectionFactory",
        "parameterTypes": [
          "org.springframework.data.projection.ProjectionFactory"
        ]
      },
      {
        "name": "setRepositoryMethodMetadata",
        "parameterTypes": [
          "org.springframework.data.jpa.repository.support.CrudMethodMetadata"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.util.HibernateProxyDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.ldap.core.mapping.BasicLdapPersistentEntity"
  },
  {
    "name": "org.springframework.data.ldap.core.mapping.LdapMappingContext",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.ldap.core.mapping.LdapPersistentProperty"
  },
  {
    "name": "org.springframework.data.mapping.MappingException"
  },
  {
    "name": "org.springframework.data.mapping.PersistentEntity"
  },
  {
    "name": "org.springframework.data.mapping.PersistentProperty"
  },
  {
    "name": "org.springframework.data.mapping.PersistentPropertyAccessor"
  },
  {
    "name": "org.springframework.data.mapping.PersistentPropertyPath"
  },
  {
    "name": "org.springframework.data.mapping.PersistentPropertyPaths"
  },
  {
    "name": "org.springframework.data.mapping.PropertyPath"
  },
  {
    "name": "org.springframework.data.mapping.context.AbstractMappingContext",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "createPersistentProperty",
        "parameterTypes": [
          "org.springframework.data.mapping.model.Property",
          "org.springframework.data.mapping.model.MutablePersistentEntity",
          "org.springframework.data.mapping.model.SimpleTypeHolder"
        ]
      },
      {
        "name": "findPersistentPropertyPaths",
        "parameterTypes": [
          "java.lang.Class",
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "getManagedTypes",
        "parameterTypes": []
      },
      {
        "name": "getPersistentEntities",
        "parameterTypes": []
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.mapping.PersistentProperty"
        ]
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.util.TypeInformation"
        ]
      },
      {
        "name": "getPersistentPropertyPath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "getPersistentPropertyPath",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.data.util.TypeInformation"
        ]
      },
      {
        "name": "getPersistentPropertyPath",
        "parameterTypes": [
          "org.springframework.data.mapping.PropertyPath"
        ]
      },
      {
        "name": "hasPersistentEntityFor",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "initialize",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setEnvironment",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      },
      {
        "name": "setInitialEntitySet",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setManagedTypes",
        "parameterTypes": [
          "org.springframework.data.domain.ManagedTypes"
        ]
      },
      {
        "name": "setSimpleTypeHolder",
        "parameterTypes": [
          "org.springframework.data.mapping.model.SimpleTypeHolder"
        ]
      },
      {
        "name": "setStrict",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.mapping.context.MappingContext",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.data.jpa.mapping.JpaMetamodelMappingContext"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.data.jpa.mapping.JpaMetamodelMappingContext"
        ]
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.util.TypeInformation"
        ]
      },
      {
        "name": "getRequiredPersistentEntity",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getRequiredPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.mapping.PersistentProperty"
        ]
      },
      {
        "name": "getRequiredPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.util.TypeInformation"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.data.jpa.mapping.JpaMetamodelMappingContext"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.data.jpa.mapping.JpaMetamodelMappingContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.mapping.model.MutablePersistentEntity"
  },
  {
    "name": "org.springframework.data.mapping.model.Property"
  },
  {
    "name": "org.springframework.data.mapping.model.SimpleTypeHolder"
  },
  {
    "name": "org.springframework.data.querydsl.EntityPathResolver"
  },
  {
    "name": "org.springframework.data.querydsl.QuerydslPredicateExecutor"
  },
  {
    "name": "org.springframework.data.querydsl.ReactiveQuerydslPredicateExecutor"
  },
  {
    "name": "org.springframework.data.repository.CrudRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "count",
        "parameterTypes": []
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deleteAll",
        "parameterTypes": []
      },
      {
        "name": "deleteAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteAllById",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "existsById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.ListCrudRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": []
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAllById",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "saveAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.ListPagingAndSortingRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Sort"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.NoRepositoryBean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.repository.PagingAndSortingRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.Repository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Sort"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "getObjectType",
        "parameterTypes": []
      },
      {
        "name": "isSingleton",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.EntityInformation"
  },
  {
    "name": "org.springframework.data.repository.core.NamedQueries",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.PropertiesBasedNamedQueries"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.PropertiesBasedNamedQueries"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.PropertiesBasedNamedQueries"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.PropertiesBasedNamedQueries"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.RepositoryInformation"
  },
  {
    "name": "org.springframework.data.repository.core.support.MethodLookup"
  },
  {
    "name": "org.springframework.data.repository.core.support.MethodLookup$InvokedMethod"
  },
  {
    "name": "org.springframework.data.repository.core.support.MethodLookup$MethodPredicate"
  },
  {
    "name": "org.springframework.data.repository.core.support.PropertiesBasedNamedQueries",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toNamedQueries",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addRepositoryFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.RepositoryFactoryCustomizer"
        ]
      },
      {
        "name": "getEntityInformation",
        "parameterTypes": []
      },
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "getObjectType",
        "parameterTypes": []
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": []
      },
      {
        "name": "getQueryMethods",
        "parameterTypes": []
      },
      {
        "name": "getRepositoryInformation",
        "parameterTypes": []
      },
      {
        "name": "isSingleton",
        "parameterTypes": []
      },
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setCustomImplementation",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setEnvironment",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      },
      {
        "name": "setEvaluationContextProvider",
        "parameterTypes": [
          "org.springframework.data.repository.query.QueryMethodEvaluationContextProvider"
        ]
      },
      {
        "name": "setEvaluationContextProvider",
        "parameterTypes": [
          "org.springframework.data.spel.EvaluationContextProvider"
        ]
      },
      {
        "name": "setExposeMetadata",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLazyInit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNamedQueries",
        "parameterTypes": [
          "org.springframework.data.repository.core.NamedQueries"
        ]
      },
      {
        "name": "setQueryLookupStrategyKey",
        "parameterTypes": [
          "org.springframework.data.repository.query.QueryLookupStrategy$Key"
        ]
      },
      {
        "name": "setRepositoryBaseClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setRepositoryFragments",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFactoryCustomizer"
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFactoryInformation",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFactorySupport"
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFragment",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "hasMethod",
        "parameterTypes": [
          "java.lang.reflect.Method"
        ]
      },
      {
        "name": "methods",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFragment$ImplementedRepositoryFragment",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getImplementation",
        "parameterTypes": []
      },
      {
        "name": "getSignatureContributor",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "withImplementation",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "getObjectType",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryInvocationMulticaster"
  },
  {
    "name": "org.springframework.data.repository.core.support.TransactionalRepositoryFactoryBeanSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setEnableDefaultTransactions",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTransactionManager",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.query.Param"
  },
  {
    "name": "org.springframework.data.repository.query.QueryByExampleExecutor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "count",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findBy",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "java.util.function.Function"
        ]
      },
      {
        "name": "findOne",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.query.QueryLookupStrategy$Key",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.repository.query.QueryMethodEvaluationContextProvider"
  },
  {
    "name": "org.springframework.data.repository.query.ReactiveQueryByExampleExecutor"
  },
  {
    "name": "org.springframework.data.spel.EvaluationContextProvider"
  },
  {
    "name": "org.springframework.data.spel.spi.EvaluationContextExtension",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getFunctions",
        "parameterTypes": []
      },
      {
        "name": "getProperties",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.spel.spi.ExtensionIdAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.util.CustomCollections$EclipseCollections",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.util.CustomCollections$VavrCollections",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.util.CustomCollections.EclipseCollections"
  },
  {
    "name": "org.springframework.data.util.CustomCollections.VavrCollections"
  },
  {
    "name": "org.springframework.data.util.KotlinBeanInfoFactory",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.util.Pair"
  },
  {
    "name": "org.springframework.data.util.Streamable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "and",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "and",
        "parameterTypes": [
          "java.util.function.Supplier"
        ]
      },
      {
        "name": "and",
        "parameterTypes": [
          "org.springframework.data.util.Streamable"
        ]
      },
      {
        "name": "and",
        "parameterTypes": [
          "java.lang.Object[]"
        ]
      },
      {
        "name": "filter",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "flatMap",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "get",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "map",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "stream",
        "parameterTypes": []
      },
      {
        "name": "toList",
        "parameterTypes": []
      },
      {
        "name": "toSet",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.util.TypeInformation"
  },
  {
    "name": "org.springframework.data.web.OffsetScrollPositionHandlerMethodArgumentResolver"
  },
  {
    "name": "org.springframework.data.web.PageableArgumentResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.PageableHandlerMethodArgumentResolver",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "resolveArgument",
        "parameterTypes": [
          "org.springframework.core.MethodParameter",
          "org.springframework.web.method.support.ModelAndViewContainer",
          "org.springframework.web.context.request.NativeWebRequest",
          "org.springframework.web.bind.support.WebDataBinderFactory"
        ]
      },
      {
        "name": "supportsParameter",
        "parameterTypes": [
          "org.springframework.core.MethodParameter"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.web.PageableHandlerMethodArgumentResolverSupport",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "isFallbackPageable",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "setFallbackPageable",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "setMaxPageSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setOneIndexedParameters",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPageParameterName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQualifierDelimiter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSizeParameterName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.web.SortArgumentResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.SortDefault$SortDefaults",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.SortHandlerMethodArgumentResolver",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "resolveArgument",
        "parameterTypes": [
          "org.springframework.core.MethodParameter",
          "org.springframework.web.method.support.ModelAndViewContainer",
          "org.springframework.web.context.request.NativeWebRequest",
          "org.springframework.web.bind.support.WebDataBinderFactory"
        ]
      },
      {
        "name": "supportsParameter",
        "parameterTypes": [
          "org.springframework.core.MethodParameter"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.web.SortHandlerMethodArgumentResolverSupport",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getPropertyDelimiter",
        "parameterTypes": []
      },
      {
        "name": "setFallbackSort",
        "parameterTypes": [
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "setPropertyDelimiter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQualifierDelimiter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSortParameter",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.web.config.EnableSpringDataWebSupport",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.config.EnableSpringDataWebSupport$PageSerializationMode"
  },
  {
    "name": "org.springframework.data.web.config.OffsetScrollPositionHandlerMethodArgumentResolverCustomizer"
  },
  {
    "name": "org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.config.ProjectingArgumentResolverRegistrar",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessBeforeInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.config.SpringDataJacksonConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.config.SpringDataJacksonConfiguration$PageModule",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.config.SpringDataJacksonModules",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.config.SpringDataWebConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.beans.factory.ObjectFactory"
        ]
      },
      {
        "name": "addArgumentResolvers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "addFormatters",
        "parameterTypes": [
          "org.springframework.format.FormatterRegistry"
        ]
      },
      {
        "name": "extendMessageConverters",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.web.config.SpringDataWebSettings",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.format.AnnotationFormatterFactory"
  },
  {
    "name": "org.springframework.format.Formatter"
  },
  {
    "name": "org.springframework.format.FormatterRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.format.Parser"
  },
  {
    "name": "org.springframework.format.Printer"
  },
  {
    "name": "org.springframework.format.support.DefaultFormattingConversionService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.format.support.FormattingConversionService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addFormatter",
        "parameterTypes": [
          "org.springframework.format.Formatter"
        ]
      },
      {
        "name": "addFormatterForFieldAnnotation",
        "parameterTypes": [
          "org.springframework.format.AnnotationFormatterFactory"
        ]
      },
      {
        "name": "addFormatterForFieldType",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.format.Formatter"
        ]
      },
      {
        "name": "addFormatterForFieldType",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.format.Printer",
          "org.springframework.format.Parser"
        ]
      },
      {
        "name": "addParser",
        "parameterTypes": [
          "org.springframework.format.Parser"
        ]
      },
      {
        "name": "addPrinter",
        "parameterTypes": [
          "org.springframework.format.Printer"
        ]
      },
      {
        "name": "setEmbeddedValueResolver",
        "parameterTypes": [
          "org.springframework.util.StringValueResolver"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter"
  },
  {
    "name": "org.springframework.http.CacheControl"
  },
  {
    "name": "org.springframework.http.HttpEntity"
  },
  {
    "name": "org.springframework.http.HttpHeaders"
  },
  {
    "name": "org.springframework.http.HttpInputMessage"
  },
  {
    "name": "org.springframework.http.HttpMethod"
  },
  {
    "name": "org.springframework.http.HttpOutputMessage"
  },
  {
    "name": "org.springframework.http.HttpRequest"
  },
  {
    "name": "org.springframework.http.MediaType"
  },
  {
    "name": "org.springframework.http.RequestEntity"
  },
  {
    "name": "org.springframework.http.ResponseCookie"
  },
  {
    "name": "org.springframework.http.ResponseEntity"
  },
  {
    "name": "org.springframework.http.client.ClientHttpRequest"
  },
  {
    "name": "org.springframework.http.client.ClientHttpRequestExecution"
  },
  {
    "name": "org.springframework.http.client.ClientHttpRequestFactory"
  },
  {
    "name": "org.springframework.http.client.ClientHttpRequestInitializer"
  },
  {
    "name": "org.springframework.http.client.ClientHttpRequestInterceptor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.http.client.ClientHttpResponse"
  },
  {
    "name": "org.springframework.http.client.HttpComponentsClientHttpRequestFactory"
  },
  {
    "name": "org.springframework.http.client.observation.ClientRequestObservationContext"
  },
  {
    "name": "org.springframework.http.client.observation.ClientRequestObservationConvention"
  },
  {
    "name": "org.springframework.http.client.support.HttpAccessor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getClientHttpRequestInitializers",
        "parameterTypes": []
      },
      {
        "name": "setClientHttpRequestInitializers",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.client.support.InterceptingHttpAccessor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getInterceptors",
        "parameterTypes": []
      },
      {
        "name": "getRequestFactory",
        "parameterTypes": []
      },
      {
        "name": "setInterceptors",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRequestFactory",
        "parameterTypes": [
          "org.springframework.http.client.ClientHttpRequestFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.converter.AbstractGenericHttpMessageConverter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "canWrite",
        "parameterTypes": [
          "java.lang.reflect.Type",
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Type",
          "org.springframework.http.MediaType",
          "org.springframework.http.HttpOutputMessage"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.converter.AbstractHttpMessageConverter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addDefaultHeaders",
        "parameterTypes": [
          "org.springframework.http.HttpHeaders",
          "java.lang.Object",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "canRead",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "canWrite",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "getContentLength",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "getDefaultCharset",
        "parameterTypes": []
      },
      {
        "name": "getSupportedMediaTypes",
        "parameterTypes": []
      },
      {
        "name": "read",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.http.HttpInputMessage"
        ]
      },
      {
        "name": "setDefaultCharset",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setSupportedMediaTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "supportsRepeatableWrites",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.http.MediaType",
          "org.springframework.http.HttpOutputMessage"
        ]
      },
      {
        "name": "writeInternal",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.http.HttpOutputMessage"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.converter.FormHttpMessageConverter"
  },
  {
    "name": "org.springframework.http.converter.GenericHttpMessageConverter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.http.converter.HttpMessageConverter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getSupportedMediaTypes",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.converter.HttpMessageNotReadableException"
  },
  {
    "name": "org.springframework.http.converter.HttpMessageNotWritableException"
  },
  {
    "name": "org.springframework.http.converter.StringHttpMessageConverter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "canRead",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "canRead",
        "parameterTypes": [
          "java.lang.reflect.Type",
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "canWrite",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "getObjectMapper",
        "parameterTypes": []
      },
      {
        "name": "getObjectMappersForType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getSupportedMediaTypes",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "java.lang.reflect.Type",
          "java.lang.Class",
          "org.springframework.http.HttpInputMessage"
        ]
      },
      {
        "name": "registerObjectMappersForType",
        "parameterTypes": [
          "java.lang.Class",
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "setObjectMapper",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.ObjectMapper"
        ]
      },
      {
        "name": "setPrettyPrint",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSupportedMediaTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.converter.json.GsonHttpMessageConverter"
  },
  {
    "name": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.converter.json.MappingJackson2HttpMessageConverter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.converter.json.MappingJacksonValue"
  },
  {
    "name": "org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter"
  },
  {
    "name": "org.springframework.http.converter.xml.MappingJackson2XmlHttpMessageConverter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setObjectMapper",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.ObjectMapper"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.server.PathContainer"
  },
  {
    "name": "org.springframework.http.server.RequestPath"
  },
  {
    "name": "org.springframework.http.server.ServerHttpRequest"
  },
  {
    "name": "org.springframework.http.server.ServerHttpResponse"
  },
  {
    "name": "org.springframework.http.server.observation.ServerRequestObservationContext"
  },
  {
    "name": "org.springframework.http.server.observation.ServerRequestObservationConvention"
  },
  {
    "name": "org.springframework.instrument.InstrumentationSavingAgent"
  },
  {
    "name": "org.springframework.instrument.classloading.LoadTimeWeaver"
  },
  {
    "name": "org.springframework.jdbc.datasource.DelegatingDataSource"
  },
  {
    "name": "org.springframework.jdbc.datasource.init.ResourceDatabasePopulator"
  },
  {
    "name": "org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource"
  },
  {
    "name": "org.springframework.jmx.export.annotation.ManagedAttribute",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.jmx.export.annotation.ManagedOperation",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.jmx.export.annotation.ManagedResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.jndi.JndiObjectFactoryBean"
  },
  {
    "name": "org.springframework.lang.NonNull"
  },
  {
    "name": "org.springframework.lang.NonNullApi"
  },
  {
    "name": "org.springframework.lang.Nullable"
  },
  {
    "name": "org.springframework.mail.MailException"
  },
  {
    "name": "org.springframework.mail.MailSender",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "send",
        "parameterTypes": [
          "org.springframework.mail.SimpleMailMessage"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.mail.SimpleMailMessage"
  },
  {
    "name": "org.springframework.mail.javamail.JavaMailSender",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "send",
        "parameterTypes": [
          "jakarta.mail.internet.MimeMessage"
        ]
      },
      {
        "name": "send",
        "parameterTypes": [
          "org.springframework.mail.javamail.MimeMessagePreparator"
        ]
      },
      {
        "name": "send",
        "parameterTypes": [
          "org.springframework.mail.javamail.MimeMessagePreparator[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.mail.javamail.JavaMailSenderImpl",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "createMimeMessage",
        "parameterTypes": []
      },
      {
        "name": "createMimeMessage",
        "parameterTypes": [
          "java.io.InputStream"
        ]
      },
      {
        "name": "send",
        "parameterTypes": [
          "jakarta.mail.internet.MimeMessage[]"
        ]
      },
      {
        "name": "send",
        "parameterTypes": [
          "org.springframework.mail.SimpleMailMessage[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.mail.javamail.MimeMessagePreparator"
  },
  {
    "name": "org.springframework.messaging.Message"
  },
  {
    "name": "org.springframework.messaging.MessageChannel",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.messaging.MessageHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.messaging.MessageHeaders"
  },
  {
    "name": "org.springframework.messaging.MessagingException"
  },
  {
    "name": "org.springframework.messaging.SubscribableChannel",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.messaging.converter.CompositeMessageConverter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "fromMessage",
        "parameterTypes": [
          "org.springframework.messaging.Message",
          "java.lang.Class"
        ]
      },
      {
        "name": "fromMessage",
        "parameterTypes": [
          "org.springframework.messaging.Message",
          "java.lang.Class",
          "java.lang.Object"
        ]
      },
      {
        "name": "toMessage",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.messaging.MessageHeaders"
        ]
      },
      {
        "name": "toMessage",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.messaging.MessageHeaders",
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.messaging.converter.MappingJackson2MessageConverter"
  },
  {
    "name": "org.springframework.messaging.converter.MessageConverter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.messaging.converter.SmartMessageConverter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.messaging.core.AbstractMessageSendingTemplate",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.util.Map"
        ]
      },
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.util.Map",
          "org.springframework.messaging.core.MessagePostProcessor"
        ]
      },
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "org.springframework.messaging.core.MessagePostProcessor"
        ]
      },
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.messaging.core.MessagePostProcessor"
        ]
      },
      {
        "name": "doSend",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "getDefaultDestination",
        "parameterTypes": []
      },
      {
        "name": "getMessageConverter",
        "parameterTypes": []
      },
      {
        "name": "send",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "setDefaultDestination",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setMessageConverter",
        "parameterTypes": [
          "org.springframework.messaging.converter.MessageConverter"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.messaging.core.MessagePostProcessor"
  },
  {
    "name": "org.springframework.messaging.core.MessageSendingOperations",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.messaging.handler.HandlerMethod"
  },
  {
    "name": "org.springframework.messaging.handler.MessagingAdviceBean"
  },
  {
    "name": "org.springframework.messaging.handler.annotation.MessageMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.messaging.handler.invocation.AbstractExceptionHandlerMethodResolver",
    "methods": [
      {
        "name": "noMatchingExceptionHandler",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getApplicationContext",
        "parameterTypes": []
      },
      {
        "name": "getArgumentResolvers",
        "parameterTypes": []
      },
      {
        "name": "getCustomArgumentResolvers",
        "parameterTypes": []
      },
      {
        "name": "getCustomReturnValueHandlers",
        "parameterTypes": []
      },
      {
        "name": "getDestinationPrefixes",
        "parameterTypes": []
      },
      {
        "name": "getDirectLookupDestinations",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getHandlerMethods",
        "parameterTypes": []
      },
      {
        "name": "getMatchingMapping",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "getReturnValueHandlers",
        "parameterTypes": []
      },
      {
        "name": "handleMatch",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.messaging.handler.HandlerMethod",
          "java.lang.String",
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "handleMessage",
        "parameterTypes": [
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setArgumentResolvers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setCustomArgumentResolvers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setCustomReturnValueHandlers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setReturnValueHandlers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.messaging.handler.invocation.InvocableHandlerMethod"
  },
  {
    "name": "org.springframework.messaging.simp.SimpMessageHeaderAccessor"
  },
  {
    "name": "org.springframework.messaging.simp.SimpMessageMappingInfo"
  },
  {
    "name": "org.springframework.messaging.simp.SimpMessageSendingOperations",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.messaging.simp.SimpMessageType"
  },
  {
    "name": "org.springframework.messaging.simp.SimpMessagingTemplate",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "convertAndSendToUser",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "convertAndSendToUser",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "java.util.Map"
        ]
      },
      {
        "name": "convertAndSendToUser",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "java.util.Map",
          "org.springframework.messaging.core.MessagePostProcessor"
        ]
      },
      {
        "name": "convertAndSendToUser",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "org.springframework.messaging.core.MessagePostProcessor"
        ]
      },
      {
        "name": "send",
        "parameterTypes": [
          "org.springframework.messaging.Message"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.messaging.simp.annotation.SubscribeMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getConversionService",
        "parameterTypes": []
      },
      {
        "name": "getHeaderInitializer",
        "parameterTypes": []
      },
      {
        "name": "getMessageConverter",
        "parameterTypes": []
      },
      {
        "name": "getPathMatcher",
        "parameterTypes": []
      },
      {
        "name": "getPhase",
        "parameterTypes": []
      },
      {
        "name": "getValidator",
        "parameterTypes": []
      },
      {
        "name": "isRunning",
        "parameterTypes": []
      },
      {
        "name": "setConversionService",
        "parameterTypes": [
          "org.springframework.core.convert.ConversionService"
        ]
      },
      {
        "name": "setDestinationPrefixes",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "setEmbeddedValueResolver",
        "parameterTypes": [
          "org.springframework.util.StringValueResolver"
        ]
      },
      {
        "name": "setHeaderInitializer",
        "parameterTypes": [
          "org.springframework.messaging.support.MessageHeaderInitializer"
        ]
      },
      {
        "name": "setMessageConverter",
        "parameterTypes": [
          "org.springframework.messaging.converter.MessageConverter"
        ]
      },
      {
        "name": "setPathMatcher",
        "parameterTypes": [
          "org.springframework.util.PathMatcher"
        ]
      },
      {
        "name": "setPhase",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setValidator",
        "parameterTypes": [
          "org.springframework.validation.Validator"
        ]
      },
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getApplicationEventPublisher",
        "parameterTypes": []
      },
      {
        "name": "getBrokerChannel",
        "parameterTypes": []
      },
      {
        "name": "getClientInboundChannel",
        "parameterTypes": []
      },
      {
        "name": "getClientOutboundChannel",
        "parameterTypes": []
      },
      {
        "name": "getDestinationPrefixes",
        "parameterTypes": []
      },
      {
        "name": "getPhase",
        "parameterTypes": []
      },
      {
        "name": "handleMessage",
        "parameterTypes": [
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "isAutoStartup",
        "parameterTypes": []
      },
      {
        "name": "isBrokerAvailable",
        "parameterTypes": []
      },
      {
        "name": "isPreservePublishOrder",
        "parameterTypes": []
      },
      {
        "name": "isRunning",
        "parameterTypes": []
      },
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      },
      {
        "name": "setAutoStartup",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPhase",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPreservePublishOrder",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUserDestinationPredicate",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.messaging.simp.broker.BrokerAvailabilityEvent"
  },
  {
    "name": "org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.messaging.simp.broker.SubscriptionRegistry"
  },
  {
    "name": "org.springframework.messaging.simp.config.AbstractMessageBrokerConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "brokerChannel",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "java.util.concurrent.Executor"
        ]
      },
      {
        "name": "brokerChannelExecutor",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel"
        ]
      },
      {
        "name": "brokerMessageConverter",
        "parameterTypes": []
      },
      {
        "name": "brokerMessagingTemplate",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.converter.CompositeMessageConverter"
        ]
      },
      {
        "name": "clientInboundChannel",
        "parameterTypes": [
          "java.util.concurrent.Executor"
        ]
      },
      {
        "name": "clientInboundChannelExecutor",
        "parameterTypes": []
      },
      {
        "name": "clientOutboundChannel",
        "parameterTypes": [
          "java.util.concurrent.Executor"
        ]
      },
      {
        "name": "clientOutboundChannelExecutor",
        "parameterTypes": []
      },
      {
        "name": "getApplicationContext",
        "parameterTypes": []
      },
      {
        "name": "getValidator",
        "parameterTypes": []
      },
      {
        "name": "messageBrokerTaskScheduler",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "simpAnnotationMethodMessageHandler",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.simp.SimpMessagingTemplate",
          "org.springframework.messaging.converter.CompositeMessageConverter"
        ]
      },
      {
        "name": "simpleBrokerMessageHandler",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.simp.user.UserDestinationResolver"
        ]
      },
      {
        "name": "stompBrokerRelayMessageHandler",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.simp.user.UserDestinationMessageHandler",
          "org.springframework.messaging.MessageHandler",
          "org.springframework.messaging.simp.user.UserDestinationResolver"
        ]
      },
      {
        "name": "userDestinationMessageHandler",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.simp.user.UserDestinationResolver"
        ]
      },
      {
        "name": "userDestinationResolver",
        "parameterTypes": [
          "org.springframework.messaging.simp.user.SimpUserRegistry",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel"
        ]
      },
      {
        "name": "userRegistry",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel"
        ]
      },
      {
        "name": "userRegistryMessageHandler",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.simp.user.SimpUserRegistry",
          "org.springframework.messaging.simp.SimpMessagingTemplate",
          "org.springframework.scheduling.TaskScheduler"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.messaging.simp.config.AbstractMessageBrokerConfiguration$$SpringCGLIB$$FastClass$$0",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.messaging.simp.config.ChannelRegistration"
  },
  {
    "name": "org.springframework.messaging.simp.config.MessageBrokerRegistry"
  },
  {
    "name": "org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler"
  },
  {
    "name": "org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler$Stats"
  },
  {
    "name": "org.springframework.messaging.simp.stomp.StompHeaderAccessor"
  },
  {
    "name": "org.springframework.messaging.simp.user.DefaultUserDestinationResolver",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "resolveDestination",
        "parameterTypes": [
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.messaging.simp.user.DefaultUserDestinationResolver$ParseResult"
  },
  {
    "name": "org.springframework.messaging.simp.user.SimpSession"
  },
  {
    "name": "org.springframework.messaging.simp.user.SimpSubscription"
  },
  {
    "name": "org.springframework.messaging.simp.user.SimpSubscriptionMatcher"
  },
  {
    "name": "org.springframework.messaging.simp.user.SimpUser"
  },
  {
    "name": "org.springframework.messaging.simp.user.SimpUserRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.messaging.simp.user.UserDestinationMessageHandler",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getPhase",
        "parameterTypes": []
      },
      {
        "name": "handleMessage",
        "parameterTypes": [
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "isRunning",
        "parameterTypes": []
      },
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.messaging.simp.user.UserDestinationResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.messaging.simp.user.UserDestinationResult"
  },
  {
    "name": "org.springframework.messaging.support.AbstractMessageChannel",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getBeanName",
        "parameterTypes": []
      },
      {
        "name": "getInterceptors",
        "parameterTypes": []
      },
      {
        "name": "getLogger",
        "parameterTypes": []
      },
      {
        "name": "removeInterceptor",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "removeInterceptor",
        "parameterTypes": [
          "org.springframework.messaging.support.ChannelInterceptor"
        ]
      },
      {
        "name": "send",
        "parameterTypes": [
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "send",
        "parameterTypes": [
          "org.springframework.messaging.Message",
          "long"
        ]
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLogger",
        "parameterTypes": [
          "org.apache.commons.logging.Log"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.messaging.support.AbstractSubscribableChannel",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getSubscribers",
        "parameterTypes": []
      },
      {
        "name": "hasSubscription",
        "parameterTypes": [
          "org.springframework.messaging.MessageHandler"
        ]
      },
      {
        "name": "subscribe",
        "parameterTypes": [
          "org.springframework.messaging.MessageHandler"
        ]
      },
      {
        "name": "unsubscribe",
        "parameterTypes": [
          "org.springframework.messaging.MessageHandler"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.messaging.support.ChannelInterceptor"
  },
  {
    "name": "org.springframework.messaging.support.ExecutorSubscribableChannel",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addInterceptor",
        "parameterTypes": [
          "int",
          "org.springframework.messaging.support.ChannelInterceptor"
        ]
      },
      {
        "name": "addInterceptor",
        "parameterTypes": [
          "org.springframework.messaging.support.ChannelInterceptor"
        ]
      },
      {
        "name": "setInterceptors",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.messaging.support.InterceptableChannel",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.messaging.support.MessageHeaderInitializer"
  },
  {
    "name": "org.springframework.messaging.tcp.reactor.ReactorNettyTcpClient"
  },
  {
    "name": "org.springframework.orm.jpa.AbstractEntityManagerFactoryBean",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterSingletonsInstantiated",
        "parameterTypes": []
      },
      {
        "name": "createNativeEntityManager",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getBeanClassLoader",
        "parameterTypes": []
      },
      {
        "name": "getBootstrapExecutor",
        "parameterTypes": []
      },
      {
        "name": "getEntityManagerInterface",
        "parameterTypes": []
      },
      {
        "name": "getJpaDialect",
        "parameterTypes": []
      },
      {
        "name": "getJpaPropertyMap",
        "parameterTypes": []
      },
      {
        "name": "getJpaVendorAdapter",
        "parameterTypes": []
      },
      {
        "name": "getNativeEntityManagerFactory",
        "parameterTypes": []
      },
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "getObjectType",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceProvider",
        "parameterTypes": []
      },
      {
        "name": "isSingleton",
        "parameterTypes": []
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBootstrapExecutor",
        "parameterTypes": [
          "org.springframework.core.task.AsyncTaskExecutor"
        ]
      },
      {
        "name": "setEntityManagerFactoryInterface",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setEntityManagerInitializer",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "setEntityManagerInterface",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setJpaDialect",
        "parameterTypes": [
          "org.springframework.orm.jpa.JpaDialect"
        ]
      },
      {
        "name": "setJpaProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setJpaPropertyMap",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setJpaVendorAdapter",
        "parameterTypes": [
          "org.springframework.orm.jpa.JpaVendorAdapter"
        ]
      },
      {
        "name": "setPersistenceProvider",
        "parameterTypes": [
          "jakarta.persistence.spi.PersistenceProvider"
        ]
      },
      {
        "name": "setPersistenceProviderClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "translateExceptionIfPossible",
        "parameterTypes": [
          "java.lang.RuntimeException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.EntityManagerFactoryInfo",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "createNativeEntityManager",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "getBeanClassLoader",
        "parameterTypes": []
      },
      {
        "name": "getDataSource",
        "parameterTypes": []
      },
      {
        "name": "getEntityManagerInterface",
        "parameterTypes": []
      },
      {
        "name": "getJpaDialect",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.EntityManagerProxy",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.orm.jpa.JpaDialect"
  },
  {
    "name": "org.springframework.orm.jpa.JpaTransactionManager",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getResourceFactory",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.JpaTransactionManager$JpaTransactionObject"
  },
  {
    "name": "org.springframework.orm.jpa.JpaVendorAdapter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getDataSource",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceUnitInfo",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceUnitName",
        "parameterTypes": []
      },
      {
        "name": "setLoadTimeWeaver",
        "parameterTypes": [
          "org.springframework.instrument.classloading.LoadTimeWeaver"
        ]
      },
      {
        "name": "setPersistenceUnitName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResourceLoader",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.SharedEntityManagerCreator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.orm.jpa.persistenceunit.ManagedClassNameFilter"
  },
  {
    "name": "org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.orm.jpa.persistenceunit.PersistenceUnitManager"
  },
  {
    "name": "org.springframework.orm.jpa.persistenceunit.PersistenceUnitPostProcessor"
  },
  {
    "name": "org.springframework.orm.jpa.persistenceunit.SimplePersistenceManagedTypes",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getManagedClassNames",
        "parameterTypes": []
      },
      {
        "name": "getManagedPackages",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceUnitRootUrl",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.vendor.AbstractJpaVendorAdapter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcessEntityManager",
        "parameterTypes": [
          "jakarta.persistence.EntityManager"
        ]
      },
      {
        "name": "postProcessEntityManagerFactory",
        "parameterTypes": [
          "jakarta.persistence.EntityManagerFactory"
        ]
      },
      {
        "name": "setDatabase",
        "parameterTypes": [
          "org.springframework.orm.jpa.vendor.Database"
        ]
      },
      {
        "name": "setDatabasePlatform",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGenerateDdl",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setShowSql",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.vendor.Database"
  },
  {
    "name": "org.springframework.orm.jpa.vendor.DatabaseEditor"
  },
  {
    "name": "org.springframework.orm.jpa.vendor.HibernateJpaDialect"
  },
  {
    "name": "org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getEntityManagerFactoryInterface",
        "parameterTypes": []
      },
      {
        "name": "getEntityManagerInterface",
        "parameterTypes": []
      },
      {
        "name": "getJpaDialect",
        "parameterTypes": []
      },
      {
        "name": "getJpaPropertyMap",
        "parameterTypes": []
      },
      {
        "name": "getJpaPropertyMap",
        "parameterTypes": [
          "jakarta.persistence.spi.PersistenceUnitInfo"
        ]
      },
      {
        "name": "getPersistenceProvider",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceProviderRootPackage",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.retry.RetryContext"
  },
  {
    "name": "org.springframework.retry.RetryListener"
  },
  {
    "name": "org.springframework.retry.annotation.Retryable"
  },
  {
    "name": "org.springframework.retry.backoff.BackOffPolicy"
  },
  {
    "name": "org.springframework.retry.support.RetryTemplate"
  },
  {
    "name": "org.springframework.scheduling.SchedulingTaskExecutor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "prefersShortLivedTasks",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.TaskScheduler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "schedule",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.util.Date"
        ]
      },
      {
        "name": "scheduleAtFixedRate",
        "parameterTypes": [
          "java.lang.Runnable",
          "long"
        ]
      },
      {
        "name": "scheduleAtFixedRate",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.util.Date",
          "long"
        ]
      },
      {
        "name": "scheduleWithFixedDelay",
        "parameterTypes": [
          "java.lang.Runnable",
          "long"
        ]
      },
      {
        "name": "scheduleWithFixedDelay",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.util.Date",
          "long"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.Trigger"
  },
  {
    "name": "org.springframework.scheduling.annotation.AbstractAsyncConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setImportMetadata",
        "parameterTypes": [
          "org.springframework.core.type.AnnotationMetadata"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.annotation.Async",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.annotation.AsyncAnnotationBeanPostProcessor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.annotation.AsyncConfigurer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.scheduling.annotation.EnableAsync",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.annotation.EnableScheduling",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.annotation.ProxyAsyncConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.annotation.Scheduled",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterSingletonsInstantiated",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "getScheduledTasks",
        "parameterTypes": []
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      },
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessBeforeDestruction",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessBeforeInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessMergedBeanDefinition",
        "parameterTypes": [
          "org.springframework.beans.factory.support.RootBeanDefinition",
          "java.lang.Class",
          "java.lang.String"
        ]
      },
      {
        "name": "requiresDestruction",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEmbeddedValueResolver",
        "parameterTypes": [
          "org.springframework.util.StringValueResolver"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.annotation.Schedules",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.annotation.SchedulingConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.annotation.SchedulingConfigurer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.scheduling.concurrent.CustomizableThreadFactory",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "newThread",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.concurrent.ExecutorConfigurationSupport",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getPhase",
        "parameterTypes": []
      },
      {
        "name": "initialize",
        "parameterTypes": []
      },
      {
        "name": "initiateShutdown",
        "parameterTypes": []
      },
      {
        "name": "isRunning",
        "parameterTypes": []
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.event.ContextClosedEvent"
        ]
      },
      {
        "name": "setAcceptTasksAfterContextClose",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setAwaitTerminationMillis",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setAwaitTerminationSeconds",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPhase",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setRejectedExecutionHandler",
        "parameterTypes": [
          "java.util.concurrent.RejectedExecutionHandler"
        ]
      },
      {
        "name": "setThreadFactory",
        "parameterTypes": [
          "java.util.concurrent.ThreadFactory"
        ]
      },
      {
        "name": "setThreadNamePrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVirtualThreads",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setWaitForTasksToCompleteOnShutdown",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "submit",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "submit",
        "parameterTypes": [
          "java.util.concurrent.Callable"
        ]
      },
      {
        "name": "submitListenable",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "submitListenable",
        "parameterTypes": [
          "java.util.concurrent.Callable"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "getClock",
        "parameterTypes": []
      },
      {
        "name": "schedule",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.time.Instant"
        ]
      },
      {
        "name": "schedule",
        "parameterTypes": [
          "java.lang.Runnable",
          "org.springframework.scheduling.Trigger"
        ]
      },
      {
        "name": "scheduleAtFixedRate",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.time.Duration"
        ]
      },
      {
        "name": "scheduleAtFixedRate",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.time.Instant",
          "java.time.Duration"
        ]
      },
      {
        "name": "scheduleWithFixedDelay",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.time.Duration"
        ]
      },
      {
        "name": "scheduleWithFixedDelay",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.time.Instant",
          "java.time.Duration"
        ]
      },
      {
        "name": "submit",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "submit",
        "parameterTypes": [
          "java.util.concurrent.Callable"
        ]
      },
      {
        "name": "submitListenable",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "submitListenable",
        "parameterTypes": [
          "java.util.concurrent.Callable"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.config.ScheduledTaskHolder",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.scheduling.config.ScheduledTaskRegistrar"
  },
  {
    "name": "org.springframework.security.access.AccessDeniedException"
  },
  {
    "name": "org.springframework.security.access.PermissionEvaluator"
  },
  {
    "name": "org.springframework.security.access.expression.SecurityExpressionHandler"
  },
  {
    "name": "org.springframework.security.access.expression.SecurityExpressionOperations",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "hasRole",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "permitAll",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.access.expression.SecurityExpressionRoot",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler"
  },
  {
    "name": "org.springframework.security.access.expression.method.MethodSecurityExpressionRoot",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.access.hierarchicalroles.RoleHierarchy",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getReachableGrantedAuthorities",
        "parameterTypes": [
          "java.util.Collection"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl$Builder"
  },
  {
    "name": "org.springframework.security.access.prepost.PreAuthorize",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.aot.hint.AuthorizeReturnObjectCoreHintsRegistrar",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "registerHints",
        "parameterTypes": [
          "org.springframework.aot.hint.RuntimeHints",
          "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.aot.hint.PrePostAuthorizeHintsRegistrar",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "registerHints",
        "parameterTypes": [
          "org.springframework.aot.hint.RuntimeHints",
          "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.aot.hint.SecurityHintsRegistrar",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.authentication.AnonymousAuthenticationProvider",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "authenticate",
        "parameterTypes": [
          "org.springframework.security.core.Authentication"
        ]
      },
      {
        "name": "setMessageSource",
        "parameterTypes": [
          "org.springframework.context.MessageSource"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.AuthenticationEventPublisher",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.authentication.AuthenticationManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.authentication.AuthenticationProvider",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.authentication.AuthenticationTrustResolver"
  },
  {
    "name": "org.springframework.security.authentication.DefaultAuthenticationEventPublisher",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "publishAuthenticationFailure",
        "parameterTypes": [
          "org.springframework.security.core.AuthenticationException",
          "org.springframework.security.core.Authentication"
        ]
      },
      {
        "name": "publishAuthenticationSuccess",
        "parameterTypes": [
          "org.springframework.security.core.Authentication"
        ]
      },
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.ProviderManager",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "authenticate",
        "parameterTypes": [
          "org.springframework.security.core.Authentication"
        ]
      },
      {
        "name": "setMessageSource",
        "parameterTypes": [
          "org.springframework.context.MessageSource"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.UsernamePasswordAuthenticationToken"
  },
  {
    "name": "org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "authenticate",
        "parameterTypes": [
          "org.springframework.security.core.Authentication"
        ]
      },
      {
        "name": "getUserCache",
        "parameterTypes": []
      },
      {
        "name": "isForcePrincipalAsString",
        "parameterTypes": []
      },
      {
        "name": "isHideUserNotFoundExceptions",
        "parameterTypes": []
      },
      {
        "name": "setAuthoritiesMapper",
        "parameterTypes": [
          "org.springframework.security.core.authority.mapping.GrantedAuthoritiesMapper"
        ]
      },
      {
        "name": "setForcePrincipalAsString",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setHideUserNotFoundExceptions",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMessageSource",
        "parameterTypes": [
          "org.springframework.context.MessageSource"
        ]
      },
      {
        "name": "setPostAuthenticationChecks",
        "parameterTypes": [
          "org.springframework.security.core.userdetails.UserDetailsChecker"
        ]
      },
      {
        "name": "setPreAuthenticationChecks",
        "parameterTypes": [
          "org.springframework.security.core.userdetails.UserDetailsChecker"
        ]
      },
      {
        "name": "setUserCache",
        "parameterTypes": [
          "org.springframework.security.core.userdetails.UserCache"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.dao.DaoAuthenticationProvider",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureBadCredentialsEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureCredentialsExpiredEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureDisabledEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureExpiredEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureLockedEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureProviderNotFoundEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureProxyUntrustedEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureServiceExceptionEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.password.CompromisedPasswordChecker"
  },
  {
    "name": "org.springframework.security.authorization.AuthorizationDecision"
  },
  {
    "name": "org.springframework.security.authorization.AuthorizationEventPublisher"
  },
  {
    "name": "org.springframework.security.authorization.AuthorizationManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "authorize",
        "parameterTypes": [
          "java.util.function.Supplier",
          "java.lang.Object"
        ]
      },
      {
        "name": "verify",
        "parameterTypes": [
          "java.util.function.Supplier",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authorization.AuthorizationProxyFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.authorization.AuthorizationResult"
  },
  {
    "name": "org.springframework.security.authorization.method.AuthorizationAdvisor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.authorization.method.AuthorizeReturnObjectMethodInterceptor"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.security.authorization.method.AuthorizeReturnObjectMethodInterceptor"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.security.authorization.method.AuthorizeReturnObjectMethodInterceptor"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.security.authorization.method.AuthorizeReturnObjectMethodInterceptor"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authorization.method.AuthorizationAdvisorProxyFactory",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterSingletonsInstantiated",
        "parameterTypes": []
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "proxy",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authorization.method.AuthorizationAdvisorProxyFactory$TargetVisitor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.authorization.method.AuthorizationProxy",
    "methods": [
      {
        "name": "toAuthorizedTarget",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.authorization.method.AuthorizeReturnObjectMethodInterceptor",
    "methods": [
      {
        "name": "toAuthorizationAdvisor",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.config.Customizer"
  },
  {
    "name": "org.springframework.security.config.ObjectPostProcessor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "apply",
        "parameterTypes": [
          "org.springframework.security.config.annotation.SecurityConfigurer"
        ]
      },
      {
        "name": "apply",
        "parameterTypes": [
          "org.springframework.security.config.annotation.SecurityConfigurerAdapter"
        ]
      },
      {
        "name": "getConfigurer",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getConfigurers",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getOrBuild",
        "parameterTypes": []
      },
      {
        "name": "getSharedObject",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getSharedObjects",
        "parameterTypes": []
      },
      {
        "name": "objectPostProcessor",
        "parameterTypes": [
          "org.springframework.security.config.ObjectPostProcessor"
        ]
      },
      {
        "name": "removeConfigurer",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "removeConfigurers",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setSharedObject",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object"
        ]
      },
      {
        "name": "with",
        "parameterTypes": [
          "org.springframework.security.config.annotation.SecurityConfigurerAdapter",
          "org.springframework.security.config.Customizer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.AbstractSecurityBuilder",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "build",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.SecurityBuilder",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.SecurityConfigurer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "init",
        "parameterTypes": [
          "org.springframework.security.config.annotation.SecurityBuilder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.SecurityConfigurerAdapter"
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.ProviderManagerBuilder",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "authenticationEventPublisher",
        "parameterTypes": [
          "org.springframework.security.authentication.AuthenticationEventPublisher"
        ]
      },
      {
        "name": "authenticationProvider",
        "parameterTypes": [
          "org.springframework.security.authentication.AuthenticationProvider"
        ]
      },
      {
        "name": "eraseCredentials",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDefaultUserDetailsService",
        "parameterTypes": []
      },
      {
        "name": "isConfigured",
        "parameterTypes": []
      },
      {
        "name": "ldapAuthentication",
        "parameterTypes": []
      },
      {
        "name": "parentAuthenticationManager",
        "parameterTypes": [
          "org.springframework.security.authentication.AuthenticationManager"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$DefaultPasswordEncoderAuthenticationManagerBuilder",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "inMemoryAuthentication",
        "parameterTypes": []
      },
      {
        "name": "jdbcAuthentication",
        "parameterTypes": []
      },
      {
        "name": "userDetailsService",
        "parameterTypes": [
          "org.springframework.security.core.userdetails.UserDetailsService"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$EnableGlobalAuthenticationAutowiredConfigurer",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "init",
        "parameterTypes": [
          "org.springframework.security.config.annotation.SecurityBuilder"
        ]
      },
      {
        "name": "init",
        "parameterTypes": [
          "org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.EnableGlobalAuthentication",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.GlobalAuthenticationConfigurerAdapter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "configure",
        "parameterTypes": [
          "org.springframework.security.config.annotation.SecurityBuilder"
        ]
      },
      {
        "name": "configure",
        "parameterTypes": [
          "org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"
        ]
      },
      {
        "name": "init",
        "parameterTypes": [
          "org.springframework.security.config.annotation.SecurityBuilder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.InitializeAuthenticationProviderBeanManagerConfigurer",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "init",
        "parameterTypes": [
          "org.springframework.security.config.annotation.SecurityBuilder"
        ]
      },
      {
        "name": "init",
        "parameterTypes": [
          "org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "init",
        "parameterTypes": [
          "org.springframework.security.config.annotation.SecurityBuilder"
        ]
      },
      {
        "name": "init",
        "parameterTypes": [
          "org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configurers.ldap.LdapAuthenticationProviderConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configurers.provisioning.InMemoryUserDetailsManagerConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configurers.provisioning.JdbcUserDetailsManagerConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configurers.userdetails.DaoAuthenticationConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configurers.userdetails.UserDetailsAwareConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterSingletonsInstantiated",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "postProcess",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.method.configuration.AuthorizationProxyConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.method.configuration.AuthorizationProxyDataConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.method.configuration.AuthorizationProxyWebConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.method.configuration.AuthorizationProxyWebConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.method.configuration.AuthorizationProxyWebConfiguration$$SpringCGLIB$$FastClass$$0",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.method.configuration.AuthorizationProxyWebConfiguration$$SpringCGLIB$$FastClass$$1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.method.configuration.AuthorizationProxyWebConfiguration$WebTargetVisitor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "visit",
        "parameterTypes": [
          "org.springframework.security.authorization.method.AuthorizationAdvisorProxyFactory",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor",
    "methods": [
      {
        "name": "toAuthorizationAdvisor",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.method.configuration.EnableMethodSecurity",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.method.configuration.MethodObservationConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.method.configuration.MethodObservationConfiguration$1",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcess",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.method.configuration.MethodObservationConfiguration$2",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcess",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.method.configuration.MethodSecurityAdvisorRegistrar$AdvisorWrapper",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.method.configuration.PrePostMethodSecurityConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setImportMetadata",
        "parameterTypes": [
          "org.springframework.core.type.AnnotationMetadata"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.method.configuration.SecuredMethodSecurityConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "setImportMetadata",
        "parameterTypes": [
          "org.springframework.core.type.AnnotationMetadata"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.HttpSecurityBuilder",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.builders.HttpSecurity",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addFilter",
        "parameterTypes": [
          "jakarta.servlet.Filter"
        ]
      },
      {
        "name": "addFilterAfter",
        "parameterTypes": [
          "jakarta.servlet.Filter",
          "java.lang.Class"
        ]
      },
      {
        "name": "addFilterBefore",
        "parameterTypes": [
          "jakarta.servlet.Filter",
          "java.lang.Class"
        ]
      },
      {
        "name": "authenticationProvider",
        "parameterTypes": [
          "org.springframework.security.authentication.AuthenticationProvider"
        ]
      },
      {
        "name": "setSharedObject",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object"
        ]
      },
      {
        "name": "userDetailsService",
        "parameterTypes": [
          "org.springframework.security.core.userdetails.UserDetailsService"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.builders.HttpSecurity$RequestMatcherConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.builders.WebSecurity",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setServletContext",
        "parameterTypes": [
          "jakarta.servlet.ServletContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.builders.WebSecurity$IgnoredRequestConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.EnableWebSecurity",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.OAuth2ClientConfiguration$OAuth2AuthorizedClientManagerConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.OAuth2ClientConfiguration$OAuth2AuthorizedClientManagerRegistrar",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcessBeanDefinitionRegistry",
        "parameterTypes": [
          "org.springframework.beans.factory.support.BeanDefinitionRegistry"
        ]
      },
      {
        "name": "postProcessBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
        ]
      },
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.OAuth2ClientConfiguration$OAuth2ClientWebMvcSecurityConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.security.config.annotation.web.configuration.OAuth2ClientConfiguration$OAuth2AuthorizedClientManagerRegistrar"
        ]
      },
      {
        "name": "addArgumentResolvers",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.ObservationConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.ObservationConfiguration$1",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcess",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.ObservationConfiguration$2",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcess",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.ObservationConfiguration$3",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcess",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addArgumentResolvers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$1",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcessBeanDefinitionRegistry",
        "parameterTypes": [
          "org.springframework.beans.factory.support.BeanDefinitionRegistry"
        ]
      },
      {
        "name": "postProcessBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "doFilter",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse",
          "jakarta.servlet.FilterChain"
        ]
      },
      {
        "name": "getFilterChains",
        "parameterTypes": []
      },
      {
        "name": "getFilters",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFilterChainDecorator",
        "parameterTypes": [
          "org.springframework.security.web.FilterChainProxy$FilterChainDecorator"
        ]
      },
      {
        "name": "setFilterChainValidator",
        "parameterTypes": [
          "org.springframework.security.web.FilterChainProxy$FilterChainValidator"
        ]
      },
      {
        "name": "setFirewall",
        "parameterTypes": [
          "org.springframework.security.web.firewall.HttpFirewall"
        ]
      },
      {
        "name": "setRequestRejectedHandler",
        "parameterTypes": [
          "org.springframework.security.web.firewall.RequestRejectedHandler"
        ]
      },
      {
        "name": "setSecurityContextHolderStrategy",
        "parameterTypes": [
          "org.springframework.security.core.context.SecurityContextHolderStrategy"
        ]
      },
      {
        "name": "toFilter",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$HandlerMappingIntrospectorCacheFilterFactoryBean",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "getObjectType",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setImportMetadata",
        "parameterTypes": [
          "org.springframework.core.type.AnnotationMetadata"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$1",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcessBeanDefinitionRegistry",
        "parameterTypes": [
          "org.springframework.beans.factory.support.BeanDefinitionRegistry"
        ]
      },
      {
        "name": "postProcessBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "doFilter",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse",
          "jakarta.servlet.FilterChain"
        ]
      },
      {
        "name": "getFilterChains",
        "parameterTypes": []
      },
      {
        "name": "getFilters",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFilterChainDecorator",
        "parameterTypes": [
          "org.springframework.security.web.FilterChainProxy$FilterChainDecorator"
        ]
      },
      {
        "name": "setFilterChainValidator",
        "parameterTypes": [
          "org.springframework.security.web.FilterChainProxy$FilterChainValidator"
        ]
      },
      {
        "name": "setFirewall",
        "parameterTypes": [
          "org.springframework.security.web.firewall.HttpFirewall"
        ]
      },
      {
        "name": "setRequestRejectedHandler",
        "parameterTypes": [
          "org.springframework.security.web.firewall.RequestRejectedHandler"
        ]
      },
      {
        "name": "setSecurityContextHolderStrategy",
        "parameterTypes": [
          "org.springframework.security.core.context.SecurityContextHolderStrategy"
        ]
      },
      {
        "name": "toFilter",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.AnonymousConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.ChannelSecurityConfigurer$ChannelRequestMatcherRegistry"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.CorsConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.CsrfConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.ExceptionHandlingConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.FormLoginConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.HeadersConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.HeadersConfigurer$ContentSecurityPolicyConfig"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.HeadersConfigurer$PermissionsPolicyConfig"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.HeadersConfigurer$ReferrerPolicyConfig"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.HttpBasicConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.JeeConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.LogoutConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.PortMapperConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.RememberMeConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.RequestCacheConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.SecurityContextConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.ServletApiConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.SessionManagementConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.WebAuthnConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.X509Configurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.oauth2.client.OAuth2ClientConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.oauth2.client.OAuth2LoginConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.oauth2.client.OidcLogoutConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.oauth2.server.resource.OAuth2ResourceServerConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.saml2.Saml2LoginConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.saml2.Saml2LogoutConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.saml2.Saml2MetadataConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.socket.EnableWebSocketSecurity",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.socket.MessageMatcherAuthorizationManagerConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.socket.WebSocketMessageBrokerSecurityConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "addArgumentResolvers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "afterSingletonsInstantiated",
        "parameterTypes": []
      },
      {
        "name": "configureClientInboundChannel",
        "parameterTypes": [
          "org.springframework.messaging.simp.config.ChannelRegistration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.socket.WebSocketObservationConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.socket.WebSocketObservationConfiguration$1",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcess",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.observation.SecurityObservationSettings"
  },
  {
    "name": "org.springframework.security.context.DelegatingApplicationListener",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.core.Authentication"
  },
  {
    "name": "org.springframework.security.core.AuthenticationException"
  },
  {
    "name": "org.springframework.security.core.annotation.AnnotationTemplateExpressionDefaults"
  },
  {
    "name": "org.springframework.security.core.authority.mapping.GrantedAuthoritiesMapper"
  },
  {
    "name": "org.springframework.security.core.context.SecurityContextHolderStrategy"
  },
  {
    "name": "org.springframework.security.core.userdetails.User"
  },
  {
    "name": "org.springframework.security.core.userdetails.UserCache"
  },
  {
    "name": "org.springframework.security.core.userdetails.UserDetails"
  },
  {
    "name": "org.springframework.security.core.userdetails.UserDetailsChecker"
  },
  {
    "name": "org.springframework.security.core.userdetails.UserDetailsPasswordService"
  },
  {
    "name": "org.springframework.security.core.userdetails.UserDetailsService",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.core.userdetails.UsernameNotFoundException"
  },
  {
    "name": "org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "encode",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      },
      {
        "name": "matches",
        "parameterTypes": [
          "java.lang.CharSequence",
          "java.lang.String"
        ]
      },
      {
        "name": "upgradeEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.crypto.encrypt.RsaAlgorithm",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.crypto.encrypt.RsaSecretEncryptor"
  },
  {
    "name": "org.springframework.security.crypto.encrypt.TextEncryptor"
  },
  {
    "name": "org.springframework.security.crypto.password.PasswordEncoder",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.data.aot.hint.AuthorizeReturnObjectDataHintsRegistrar",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "registerHints",
        "parameterTypes": [
          "org.springframework.aot.hint.RuntimeHints",
          "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.data.repository.query.SecurityEvaluationContextExtension",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getExtensionId",
        "parameterTypes": []
      },
      {
        "name": "getRootObject",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.messaging.access.intercept.MessageAuthorizationContext"
  },
  {
    "name": "org.springframework.security.messaging.access.intercept.MessageMatcherDelegatingAuthorizationManager",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "check",
        "parameterTypes": [
          "java.util.function.Supplier",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.messaging.access.intercept.MessageMatcherDelegatingAuthorizationManager$Builder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.messaging.access.intercept.MessageMatcherDelegatingAuthorizationManager$Builder$Constraint"
  },
  {
    "name": "org.springframework.security.messaging.util.matcher.MessageMatcher"
  },
  {
    "name": "org.springframework.security.oauth2.client.OAuth2AuthorizedClientManager"
  },
  {
    "name": "org.springframework.security.web.AuthenticationEntryPoint",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.DefaultSecurityFilterChain",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getFilters",
        "parameterTypes": []
      },
      {
        "name": "matches",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.web.FilterChainProxy",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "doFilter",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse",
          "jakarta.servlet.FilterChain"
        ]
      },
      {
        "name": "toFilter",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.web.FilterChainProxy$FilterChainDecorator"
  },
  {
    "name": "org.springframework.security.web.FilterChainProxy$FilterChainValidator"
  },
  {
    "name": "org.springframework.security.web.SecurityFilterChain",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.access.AccessDeniedHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.access.AuthorizationManagerWebInvocationPrivilegeEvaluator$HttpServletRequestTransformer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluator"
  },
  {
    "name": "org.springframework.security.web.access.ExceptionTranslationFilter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "doFilter",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse",
          "jakarta.servlet.FilterChain"
        ]
      },
      {
        "name": "setMessageSource",
        "parameterTypes": [
          "org.springframework.context.MessageSource"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.web.access.HandlerMappingIntrospectorRequestTransformer",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.web.servlet.handler.HandlerMappingIntrospector"
        ]
      },
      {
        "name": "transform",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.web.access.WebInvocationPrivilegeEvaluator"
  },
  {
    "name": "org.springframework.security.web.access.intercept.AuthorizationFilter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "doFilter",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse",
          "jakarta.servlet.FilterChain"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.web.access.intercept.RequestAuthorizationContext"
  },
  {
    "name": "org.springframework.security.web.access.intercept.RequestMatcherDelegatingAuthorizationManager",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "check",
        "parameterTypes": [
          "java.util.function.Supplier",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.web.access.intercept.RequestMatcherDelegatingAuthorizationManager$Builder"
  },
  {
    "name": "org.springframework.security.web.authentication.AuthenticationFailureHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.authentication.logout.LogoutFilter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "doFilter",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse",
          "jakarta.servlet.FilterChain"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.web.authentication.logout.LogoutHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.authentication.logout.LogoutSuccessEventPublishingLogoutHandler",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "logout",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "org.springframework.security.core.Authentication"
        ]
      },
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.web.authentication.session.AbstractSessionFixationProtectionStrategy",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "onAuthentication",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      },
      {
        "name": "setAlwaysCreateSession",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.web.authentication.session.ChangeSessionIdAuthenticationStrategy",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "onAuthentication",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.web.authentication.session.SessionAuthenticationException"
  },
  {
    "name": "org.springframework.security.web.authentication.session.SessionAuthenticationStrategy",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.context.SecurityContextHolderFilter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "doFilter",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse",
          "jakarta.servlet.FilterChain"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.web.context.SecurityContextRepository"
  },
  {
    "name": "org.springframework.security.web.firewall.FirewalledRequest"
  },
  {
    "name": "org.springframework.security.web.firewall.HttpFirewall"
  },
  {
    "name": "org.springframework.security.web.firewall.RequestRejectedHandler"
  },
  {
    "name": "org.springframework.security.web.header.HeaderWriterFilter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.savedrequest.RequestCacheAwareFilter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "doFilter",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse",
          "jakarta.servlet.FilterChain"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.web.servlet.util.matcher.MvcRequestMatcher",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "extractUriTemplateVariables",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "matcher",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "matches",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.web.servletapi.HttpServletRequestFactory"
  },
  {
    "name": "org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "doFilter",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse",
          "jakarta.servlet.FilterChain"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.web.session.InvalidSessionStrategy"
  },
  {
    "name": "org.springframework.security.web.session.SessionManagementFilter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "doFilter",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse",
          "jakarta.servlet.FilterChain"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.web.util.ThrowableAnalyzer"
  },
  {
    "name": "org.springframework.security.web.util.matcher.RequestMatcher",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.util.matcher.RequestMatcher$MatchResult"
  },
  {
    "name": "org.springframework.security.web.util.matcher.RequestVariablesExtractor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.webauthn.api.AuthenticatorTransport"
  },
  {
    "name": "org.springframework.security.web.webauthn.api.Bytes"
  },
  {
    "name": "org.springframework.security.web.webauthn.api.CredentialRecord"
  },
  {
    "name": "org.springframework.security.web.webauthn.api.PublicKeyCose"
  },
  {
    "name": "org.springframework.security.web.webauthn.api.PublicKeyCredentialCreationOptions"
  },
  {
    "name": "org.springframework.security.web.webauthn.api.PublicKeyCredentialRequestOptions"
  },
  {
    "name": "org.springframework.security.web.webauthn.api.PublicKeyCredentialUserEntity"
  },
  {
    "name": "org.springframework.security.web.webauthn.authentication.PublicKeyCredentialRequestOptionsRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "init",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.web.webauthn.management.PublicKeyCredentialUserEntityRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.webauthn.management.UserCredentialRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.webauthn.registration.PublicKeyCredentialCreationOptionsRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "init",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.stereotype.Component",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.stereotype.Controller",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.stereotype.Indexed",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.stereotype.Repository",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.stereotype.Service",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.ConfigurableTransactionManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "addListener",
        "parameterTypes": [
          "org.springframework.transaction.TransactionExecutionListener"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.PlatformTransactionManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.TransactionDefinition"
  },
  {
    "name": "org.springframework.transaction.TransactionException"
  },
  {
    "name": "org.springframework.transaction.TransactionExecutionListener"
  },
  {
    "name": "org.springframework.transaction.TransactionManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.TransactionStatus"
  },
  {
    "name": "org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setImportMetadata",
        "parameterTypes": [
          "org.springframework.core.type.AnnotationMetadata"
        ]
      },
      {
        "name": "transactionAttributeSource",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.transaction.annotation.AnnotationTransactionAttributeSource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isCandidateClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.annotation.EnableTransactionManagement",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.annotation.Transactional",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.event.TransactionalEventListenerFactory",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "createApplicationListener",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.lang.reflect.Method"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "supportsMethod",
        "parameterTypes": [
          "java.lang.reflect.Method"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getTransactionAttribute",
        "parameterTypes": [
          "java.lang.reflect.Method",
          "java.lang.Class"
        ]
      },
      {
        "name": "hasTransactionAttribute",
        "parameterTypes": [
          "java.lang.reflect.Method",
          "java.lang.Class"
        ]
      },
      {
        "name": "setEmbeddedValueResolver",
        "parameterTypes": [
          "org.springframework.util.StringValueResolver"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getPointcut",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.transaction.interceptor.RollbackRuleAttribute"
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionAspectSupport",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getTransactionAttributeSource",
        "parameterTypes": []
      },
      {
        "name": "getTransactionManager",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setTransactionAttributeSource",
        "parameterTypes": [
          "org.springframework.transaction.interceptor.TransactionAttributeSource"
        ]
      },
      {
        "name": "setTransactionAttributeSources",
        "parameterTypes": [
          "org.springframework.transaction.interceptor.TransactionAttributeSource[]"
        ]
      },
      {
        "name": "setTransactionAttributes",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setTransactionManager",
        "parameterTypes": [
          "org.springframework.transaction.TransactionManager"
        ]
      },
      {
        "name": "setTransactionManagerBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionAttribute"
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionAttributeSource",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionInterceptor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "invoke",
        "parameterTypes": [
          "org.aopalliance.intercept.MethodInvocation"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionalProxy",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.jta.JtaTransactionManager"
  },
  {
    "name": "org.springframework.transaction.support.AbstractPlatformTransactionManager",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "commit",
        "parameterTypes": [
          "org.springframework.transaction.TransactionStatus"
        ]
      },
      {
        "name": "getTransaction",
        "parameterTypes": [
          "org.springframework.transaction.TransactionDefinition"
        ]
      },
      {
        "name": "getTransactionExecutionListeners",
        "parameterTypes": []
      },
      {
        "name": "rollback",
        "parameterTypes": [
          "org.springframework.transaction.TransactionStatus"
        ]
      },
      {
        "name": "setTransactionExecutionListeners",
        "parameterTypes": [
          "java.util.Collection"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.support.AbstractPlatformTransactionManager$SuspendedResourcesHolder"
  },
  {
    "name": "org.springframework.transaction.support.DefaultTransactionStatus"
  },
  {
    "name": "org.springframework.transaction.support.ResourceTransactionManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.ui.context.ThemeSource"
  },
  {
    "name": "org.springframework.util.Assert"
  },
  {
    "name": "org.springframework.util.CustomizableThreadCreator",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "createThread",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "getThreadGroup",
        "parameterTypes": []
      },
      {
        "name": "getThreadNamePrefix",
        "parameterTypes": []
      },
      {
        "name": "getThreadPriority",
        "parameterTypes": []
      },
      {
        "name": "isDaemon",
        "parameterTypes": []
      },
      {
        "name": "setDaemon",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setThreadGroup",
        "parameterTypes": [
          "java.lang.ThreadGroup"
        ]
      },
      {
        "name": "setThreadGroupName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setThreadPriority",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.util.ErrorHandler"
  },
  {
    "name": "org.springframework.util.MimeType"
  },
  {
    "name": "org.springframework.util.MultiValueMap"
  },
  {
    "name": "org.springframework.util.PathMatcher"
  },
  {
    "name": "org.springframework.util.PropertiesPersister"
  },
  {
    "name": "org.springframework.util.StringValueResolver"
  },
  {
    "name": "org.springframework.util.concurrent.ListenableFuture"
  },
  {
    "name": "org.springframework.util.concurrent.ListenableFutureTask"
  },
  {
    "name": "org.springframework.util.function.ThrowingBiFunction"
  },
  {
    "name": "org.springframework.util.unit.DataSize"
  },
  {
    "name": "org.springframework.util.unit.DataSizeEditor"
  },
  {
    "name": "org.springframework.validation.BindingResult"
  },
  {
    "name": "org.springframework.validation.DefaultMessageCodesResolver$Format"
  },
  {
    "name": "org.springframework.validation.Errors"
  },
  {
    "name": "org.springframework.validation.MessageCodesResolver"
  },
  {
    "name": "org.springframework.validation.SmartValidator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "validateValue",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String",
          "java.lang.Object",
          "org.springframework.validation.Errors",
          "java.lang.Object[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.validation.Validator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "validateObject",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.validation.annotation.Validated",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.validation.beanvalidation.LocalValidatorFactoryBean",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getClockProvider",
        "parameterTypes": []
      },
      {
        "name": "getConstraintValidatorFactory",
        "parameterTypes": []
      },
      {
        "name": "getMessageInterpolator",
        "parameterTypes": []
      },
      {
        "name": "getParameterNameProvider",
        "parameterTypes": []
      },
      {
        "name": "getTraversableResolver",
        "parameterTypes": []
      },
      {
        "name": "getValidator",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "unwrap",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "usingContext",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.validation.beanvalidation.SpringValidatorAdapter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "forExecutables",
        "parameterTypes": []
      },
      {
        "name": "getConstraintsForClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.validation.Errors"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.validation.Errors",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "validateProperty",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "validateValue",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String",
          "java.lang.Object",
          "org.springframework.validation.Errors",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "validateValue",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Class[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.validation.method.MethodValidationResult"
  },
  {
    "name": "org.springframework.web.HttpMediaTypeNotAcceptableException"
  },
  {
    "name": "org.springframework.web.accept.ContentNegotiationManager",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getAllFileExtensions",
        "parameterTypes": []
      },
      {
        "name": "resolveFileExtensions",
        "parameterTypes": [
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "resolveMediaTypes",
        "parameterTypes": [
          "org.springframework.web.context.request.NativeWebRequest"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.accept.ContentNegotiationStrategy",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.accept.MediaTypeFileExtensionResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.bind.WebDataBinder"
  },
  {
    "name": "org.springframework.web.bind.annotation.ControllerAdvice",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.CrossOrigin"
  },
  {
    "name": "org.springframework.web.bind.annotation.DeleteMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.ExceptionHandler",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.GetMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.InitBinder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.Mapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.ModelAttribute",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.PatchMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.PathVariable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.PostMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.PutMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestBody",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestHeader",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestMethod"
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestParam",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestPart",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.ResponseBody",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.ResponseStatus",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RestController",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.support.ConfigurableWebBindingInitializer"
  },
  {
    "name": "org.springframework.web.bind.support.SessionAttributeStore"
  },
  {
    "name": "org.springframework.web.bind.support.WebBindingInitializer"
  },
  {
    "name": "org.springframework.web.bind.support.WebDataBinderFactory"
  },
  {
    "name": "org.springframework.web.client.DefaultRestClientBuilder",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "apply",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "baseUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "baseUrl",
        "parameterTypes": [
          "java.net.URI"
        ]
      },
      {
        "name": "build",
        "parameterTypes": []
      },
      {
        "name": "clone",
        "parameterTypes": []
      },
      {
        "name": "defaultCookie",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String[]"
        ]
      },
      {
        "name": "defaultCookies",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "defaultHeader",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String[]"
        ]
      },
      {
        "name": "defaultHeaders",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "defaultRequest",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "defaultStatusHandler",
        "parameterTypes": [
          "java.util.function.Predicate",
          "org.springframework.web.client.RestClient$ResponseSpec$ErrorHandler"
        ]
      },
      {
        "name": "defaultStatusHandler",
        "parameterTypes": [
          "org.springframework.web.client.ResponseErrorHandler"
        ]
      },
      {
        "name": "defaultUriVariables",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "messageConverters",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "messageConverters",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "observationConvention",
        "parameterTypes": [
          "org.springframework.http.client.observation.ClientRequestObservationConvention"
        ]
      },
      {
        "name": "observationRegistry",
        "parameterTypes": [
          "io.micrometer.observation.ObservationRegistry"
        ]
      },
      {
        "name": "requestFactory",
        "parameterTypes": [
          "org.springframework.http.client.ClientHttpRequestFactory"
        ]
      },
      {
        "name": "requestInitializer",
        "parameterTypes": [
          "org.springframework.http.client.ClientHttpRequestInitializer"
        ]
      },
      {
        "name": "requestInitializers",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "requestInterceptor",
        "parameterTypes": [
          "org.springframework.http.client.ClientHttpRequestInterceptor"
        ]
      },
      {
        "name": "requestInterceptors",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "uriBuilderFactory",
        "parameterTypes": [
          "org.springframework.web.util.UriBuilderFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.client.HttpStatusCodeException"
  },
  {
    "name": "org.springframework.web.client.RequestCallback"
  },
  {
    "name": "org.springframework.web.client.ResourceAccessException"
  },
  {
    "name": "org.springframework.web.client.ResponseErrorHandler"
  },
  {
    "name": "org.springframework.web.client.ResponseExtractor"
  },
  {
    "name": "org.springframework.web.client.RestClient"
  },
  {
    "name": "org.springframework.web.client.RestClient$Builder",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.client.RestClient$ResponseSpec$ErrorHandler"
  },
  {
    "name": "org.springframework.web.client.RestClientException"
  },
  {
    "name": "org.springframework.web.client.RestOperations",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.client.RestTemplate",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.net.URI"
        ]
      },
      {
        "name": "exchange",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.http.HttpMethod",
          "org.springframework.http.HttpEntity",
          "java.lang.Class",
          "java.util.Map"
        ]
      },
      {
        "name": "exchange",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.http.HttpMethod",
          "org.springframework.http.HttpEntity",
          "java.lang.Class",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "exchange",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.http.HttpMethod",
          "org.springframework.http.HttpEntity",
          "org.springframework.core.ParameterizedTypeReference",
          "java.util.Map"
        ]
      },
      {
        "name": "exchange",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.http.HttpMethod",
          "org.springframework.http.HttpEntity",
          "org.springframework.core.ParameterizedTypeReference",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "exchange",
        "parameterTypes": [
          "java.net.URI",
          "org.springframework.http.HttpMethod",
          "org.springframework.http.HttpEntity",
          "java.lang.Class"
        ]
      },
      {
        "name": "exchange",
        "parameterTypes": [
          "java.net.URI",
          "org.springframework.http.HttpMethod",
          "org.springframework.http.HttpEntity",
          "org.springframework.core.ParameterizedTypeReference"
        ]
      },
      {
        "name": "exchange",
        "parameterTypes": [
          "org.springframework.http.RequestEntity",
          "java.lang.Class"
        ]
      },
      {
        "name": "exchange",
        "parameterTypes": [
          "org.springframework.http.RequestEntity",
          "org.springframework.core.ParameterizedTypeReference"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.http.HttpMethod",
          "org.springframework.web.client.RequestCallback",
          "org.springframework.web.client.ResponseExtractor",
          "java.util.Map"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.http.HttpMethod",
          "org.springframework.web.client.RequestCallback",
          "org.springframework.web.client.ResponseExtractor",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.net.URI",
          "org.springframework.http.HttpMethod",
          "org.springframework.web.client.RequestCallback",
          "org.springframework.web.client.ResponseExtractor"
        ]
      },
      {
        "name": "getForEntity",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.util.Map"
        ]
      },
      {
        "name": "getForEntity",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "getForEntity",
        "parameterTypes": [
          "java.net.URI",
          "java.lang.Class"
        ]
      },
      {
        "name": "getForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.util.Map"
        ]
      },
      {
        "name": "getForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "getForObject",
        "parameterTypes": [
          "java.net.URI",
          "java.lang.Class"
        ]
      },
      {
        "name": "headForHeaders",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "headForHeaders",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "headForHeaders",
        "parameterTypes": [
          "java.net.URI"
        ]
      },
      {
        "name": "optionsForAllow",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "optionsForAllow",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "optionsForAllow",
        "parameterTypes": [
          "java.net.URI"
        ]
      },
      {
        "name": "patchForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Class",
          "java.util.Map"
        ]
      },
      {
        "name": "patchForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Class",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "patchForObject",
        "parameterTypes": [
          "java.net.URI",
          "java.lang.Object",
          "java.lang.Class"
        ]
      },
      {
        "name": "postForEntity",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Class",
          "java.util.Map"
        ]
      },
      {
        "name": "postForEntity",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Class",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "postForEntity",
        "parameterTypes": [
          "java.net.URI",
          "java.lang.Object",
          "java.lang.Class"
        ]
      },
      {
        "name": "postForLocation",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.util.Map"
        ]
      },
      {
        "name": "postForLocation",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "postForLocation",
        "parameterTypes": [
          "java.net.URI",
          "java.lang.Object"
        ]
      },
      {
        "name": "postForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Class",
          "java.util.Map"
        ]
      },
      {
        "name": "postForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Class",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "postForObject",
        "parameterTypes": [
          "java.net.URI",
          "java.lang.Object",
          "java.lang.Class"
        ]
      },
      {
        "name": "put",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.util.Map"
        ]
      },
      {
        "name": "put",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "put",
        "parameterTypes": [
          "java.net.URI",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.client.StatusHandler"
  },
  {
    "name": "org.springframework.web.context.ConfigurableWebApplicationContext"
  },
  {
    "name": "org.springframework.web.context.ServletContextAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.context.WebApplicationContext"
  },
  {
    "name": "org.springframework.web.context.request.NativeWebRequest"
  },
  {
    "name": "org.springframework.web.context.request.RequestAttributes"
  },
  {
    "name": "org.springframework.web.context.request.ServletRequestAttributes"
  },
  {
    "name": "org.springframework.web.context.request.WebRequest"
  },
  {
    "name": "org.springframework.web.context.request.async.WebAsyncManager"
  },
  {
    "name": "org.springframework.web.context.support.ServletContextResource"
  },
  {
    "name": "org.springframework.web.context.support.WebApplicationObjectSupport",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setServletContext",
        "parameterTypes": [
          "jakarta.servlet.ServletContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.cors.CorsConfiguration"
  },
  {
    "name": "org.springframework.web.cors.CorsConfigurationSource",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.cors.CorsProcessor"
  },
  {
    "name": "org.springframework.web.cors.PreFlightRequestHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.filter.CharacterEncodingFilter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getEncoding",
        "parameterTypes": []
      },
      {
        "name": "isForceRequestEncoding",
        "parameterTypes": []
      },
      {
        "name": "isForceResponseEncoding",
        "parameterTypes": []
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setForceEncoding",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setForceRequestEncoding",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setForceResponseEncoding",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.filter.CorsFilter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.filter.DelegatingFilterProxy",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.filter.FormContentFilter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setCharset",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setFormConverter",
        "parameterTypes": [
          "org.springframework.http.converter.FormHttpMessageConverter"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.filter.GenericFilterBean",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getEnvironment",
        "parameterTypes": []
      },
      {
        "name": "getFilterConfig",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": [
          "jakarta.servlet.FilterConfig"
        ]
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnvironment",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      },
      {
        "name": "setServletContext",
        "parameterTypes": [
          "jakarta.servlet.ServletContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.filter.OncePerRequestFilter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "doFilter",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse",
          "jakarta.servlet.FilterChain"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.filter.RequestContextFilter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setThreadContextInheritable",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.filter.ServerHttpObservationFilter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.filter.ServletRequestPathFilter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "doFilter",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse",
          "jakarta.servlet.FilterChain"
        ]
      },
      {
        "name": "toFilter",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.method.ControllerAdviceBean"
  },
  {
    "name": "org.springframework.web.method.HandlerMethod"
  },
  {
    "name": "org.springframework.web.method.annotation.ExceptionHandlerMethodResolver",
    "methods": [
      {
        "name": "noMatchingExceptionHandler",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.method.annotation.InitBinderDataBinderFactory"
  },
  {
    "name": "org.springframework.web.method.annotation.ModelFactory"
  },
  {
    "name": "org.springframework.web.method.annotation.SessionAttributesHandler"
  },
  {
    "name": "org.springframework.web.method.support.CompositeUriComponentsContributor"
  },
  {
    "name": "org.springframework.web.method.support.HandlerMethodArgumentResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.method.support.InvocableHandlerMethod"
  },
  {
    "name": "org.springframework.web.method.support.ModelAndViewContainer"
  },
  {
    "name": "org.springframework.web.multipart.MultipartException"
  },
  {
    "name": "org.springframework.web.multipart.MultipartFile"
  },
  {
    "name": "org.springframework.web.multipart.MultipartHttpServletRequest"
  },
  {
    "name": "org.springframework.web.multipart.MultipartResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.multipart.support.StandardServletMultipartResolver",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "cleanupMultipart",
        "parameterTypes": [
          "org.springframework.web.multipart.MultipartHttpServletRequest"
        ]
      },
      {
        "name": "isMultipart",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "resolveMultipart",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.DispatcherHandler"
  },
  {
    "name": "org.springframework.web.reactive.function.client.WebClientException"
  },
  {
    "name": "org.springframework.web.reactive.result.view.View"
  },
  {
    "name": "org.springframework.web.service.annotation.HttpExchange"
  },
  {
    "name": "org.springframework.web.servlet.DispatcherServlet",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.FlashMap"
  },
  {
    "name": "org.springframework.web.servlet.FlashMapManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.FrameworkServlet",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getContextAttribute",
        "parameterTypes": []
      },
      {
        "name": "getContextClass",
        "parameterTypes": []
      },
      {
        "name": "getContextConfigLocation",
        "parameterTypes": []
      },
      {
        "name": "getContextId",
        "parameterTypes": []
      },
      {
        "name": "getNamespace",
        "parameterTypes": []
      },
      {
        "name": "getServletContextAttributeName",
        "parameterTypes": []
      },
      {
        "name": "isEnableLoggingRequestDetails",
        "parameterTypes": []
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.event.ContextRefreshedEvent"
        ]
      },
      {
        "name": "refresh",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setContextAttribute",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContextClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setContextConfigLocation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContextId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContextInitializerClasses",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContextInitializers",
        "parameterTypes": [
          "org.springframework.context.ApplicationContextInitializer[]"
        ]
      },
      {
        "name": "setDispatchOptionsRequest",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDispatchTraceRequest",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnableLoggingRequestDetails",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNamespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPublishContext",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPublishEvents",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setThreadContextInheritable",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.HandlerAdapter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.HandlerExceptionResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.HandlerExecutionChain"
  },
  {
    "name": "org.springframework.web.servlet.HandlerInterceptor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "afterCompletion",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object",
          "java.lang.Exception"
        ]
      },
      {
        "name": "postHandle",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object",
          "org.springframework.web.servlet.ModelAndView"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.HandlerMapping",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.HttpServletBean",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getEnvironment",
        "parameterTypes": []
      },
      {
        "name": "getServletName",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "setEnvironment",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.LocaleResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.ModelAndView"
  },
  {
    "name": "org.springframework.web.servlet.RequestToViewNameTranslator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.ThemeResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.View",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.ViewResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer"
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer"
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.CorsRegistry"
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.DefaultServletHandlerConfigurer"
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setConfigurers",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.InterceptorRegistry"
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.PathMatchConfigurer"
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.ResourceChainRegistration"
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration"
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry"
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.ViewControllerRegistry"
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.ViewResolverRegistry"
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "beanNameHandlerMapping",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "defaultServletHandlerMapping",
        "parameterTypes": []
      },
      {
        "name": "handlerExceptionResolver",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager"
        ]
      },
      {
        "name": "handlerFunctionAdapter",
        "parameterTypes": []
      },
      {
        "name": "httpRequestHandlerAdapter",
        "parameterTypes": []
      },
      {
        "name": "mvcHandlerMappingIntrospector",
        "parameterTypes": []
      },
      {
        "name": "mvcPathMatcher",
        "parameterTypes": []
      },
      {
        "name": "mvcPatternParser",
        "parameterTypes": []
      },
      {
        "name": "mvcResourceUrlProvider",
        "parameterTypes": []
      },
      {
        "name": "mvcUriComponentsContributor",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
        ]
      },
      {
        "name": "mvcUrlPathHelper",
        "parameterTypes": []
      },
      {
        "name": "mvcViewResolver",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager"
        ]
      },
      {
        "name": "requestMappingHandlerAdapter",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.validation.Validator"
        ]
      },
      {
        "name": "requestMappingHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "resourceHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "routerFunctionMapping",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setServletContext",
        "parameterTypes": [
          "jakarta.servlet.ServletContext"
        ]
      },
      {
        "name": "simpleControllerHandlerAdapter",
        "parameterTypes": []
      },
      {
        "name": "viewControllerHandlerMapping",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.WebMvcConfigurer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "addArgumentResolvers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "addCorsMappings",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.CorsRegistry"
        ]
      },
      {
        "name": "addErrorResponseInterceptors",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "addFormatters",
        "parameterTypes": [
          "org.springframework.format.FormatterRegistry"
        ]
      },
      {
        "name": "addInterceptors",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.InterceptorRegistry"
        ]
      },
      {
        "name": "addResourceHandlers",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry"
        ]
      },
      {
        "name": "addReturnValueHandlers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "addViewControllers",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.ViewControllerRegistry"
        ]
      },
      {
        "name": "configureAsyncSupport",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer"
        ]
      },
      {
        "name": "configureContentNegotiation",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer"
        ]
      },
      {
        "name": "configureDefaultServletHandling",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.DefaultServletHandlerConfigurer"
        ]
      },
      {
        "name": "configureHandlerExceptionResolvers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "configureMessageConverters",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "configurePathMatch",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.PathMatchConfigurer"
        ]
      },
      {
        "name": "configureViewResolvers",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.ViewResolverRegistry"
        ]
      },
      {
        "name": "extendHandlerExceptionResolvers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "extendMessageConverters",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getMessageCodesResolver",
        "parameterTypes": []
      },
      {
        "name": "getValidator",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.function.HandlerFunction"
  },
  {
    "name": "org.springframework.web.servlet.function.RouterFunction"
  },
  {
    "name": "org.springframework.web.servlet.function.ServerRequest"
  },
  {
    "name": "org.springframework.web.servlet.function.ServerResponse"
  },
  {
    "name": "org.springframework.web.servlet.function.support.HandlerFunctionAdapter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getLastModified",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.Object"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "handle",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.function.support.RouterFunctionMapping",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "match",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "initApplicationContext",
        "parameterTypes": []
      },
      {
        "name": "setDetectHandlersInAncestorContexts",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.handler.AbstractHandlerMapping",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getCorsConfigurationSource",
        "parameterTypes": []
      },
      {
        "name": "getCorsProcessor",
        "parameterTypes": []
      },
      {
        "name": "getDefaultHandler",
        "parameterTypes": []
      },
      {
        "name": "getHandler",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "getPathMatcher",
        "parameterTypes": []
      },
      {
        "name": "getPatternParser",
        "parameterTypes": []
      },
      {
        "name": "getUrlPathHelper",
        "parameterTypes": []
      },
      {
        "name": "setAlwaysUseFullPath",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCorsConfigurationSource",
        "parameterTypes": [
          "org.springframework.web.cors.CorsConfigurationSource"
        ]
      },
      {
        "name": "setCorsConfigurations",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setCorsProcessor",
        "parameterTypes": [
          "org.springframework.web.cors.CorsProcessor"
        ]
      },
      {
        "name": "setDefaultHandler",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setInterceptors",
        "parameterTypes": [
          "java.lang.Object[]"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPathMatcher",
        "parameterTypes": [
          "org.springframework.util.PathMatcher"
        ]
      },
      {
        "name": "setPatternParser",
        "parameterTypes": [
          "org.springframework.web.util.pattern.PathPatternParser"
        ]
      },
      {
        "name": "setRemoveSemicolonContent",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUrlDecode",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUrlPathHelper",
        "parameterTypes": [
          "org.springframework.web.util.UrlPathHelper"
        ]
      },
      {
        "name": "usesPathPatterns",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.handler.AbstractHandlerMethodMapping",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getDirectPaths",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getHandlerMethods",
        "parameterTypes": []
      },
      {
        "name": "getHandlerMethodsForMappingName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMappingPathPatterns",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getMatchingMapping",
        "parameterTypes": [
          "java.lang.Object",
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "getNamingStrategy",
        "parameterTypes": []
      },
      {
        "name": "handleMatch",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String",
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "initCorsConfiguration",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Method",
          "java.lang.Object"
        ]
      },
      {
        "name": "registerHandlerMethod",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Method",
          "java.lang.Object"
        ]
      },
      {
        "name": "registerMapping",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.reflect.Method"
        ]
      },
      {
        "name": "setDetectHandlerMethodsInAncestorContexts",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setHandlerMethodMappingNamingStrategy",
        "parameterTypes": [
          "org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy"
        ]
      },
      {
        "name": "setPatternParser",
        "parameterTypes": [
          "org.springframework.web.util.pattern.PathPatternParser"
        ]
      },
      {
        "name": "unregisterMapping",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$EmptyHandler",
    "methods": [
      {
        "name": "handle",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry"
  },
  {
    "name": "org.springframework.web.servlet.handler.AbstractUrlHandlerMapping",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getRootHandler",
        "parameterTypes": []
      },
      {
        "name": "match",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.String"
        ]
      },
      {
        "name": "registerHandler",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "registerHandler",
        "parameterTypes": [
          "java.lang.String[]",
          "java.lang.String"
        ]
      },
      {
        "name": "setLazyInitHandlers",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPatternParser",
        "parameterTypes": [
          "org.springframework.web.util.pattern.PathPatternParser"
        ]
      },
      {
        "name": "setRootHandler",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setUseTrailingSlashMatch",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "unregisterHandler",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "useTrailingSlashMatch",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.handler.HandlerExceptionResolverComposite",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "resolveException",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object",
          "java.lang.Exception"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.handler.HandlerMappingIntrospector",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getCorsConfiguration",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "handlePreFlight",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.handler.HandlerMappingIntrospector$AttributesPreservingRequest"
  },
  {
    "name": "org.springframework.web.servlet.handler.HandlerMappingIntrospector$CachedResult"
  },
  {
    "name": "org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy"
  },
  {
    "name": "org.springframework.web.servlet.handler.MappedInterceptor"
  },
  {
    "name": "org.springframework.web.servlet.handler.MatchableHandlerMapping",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.handler.PathPatternMatchableHandlerMapping"
  },
  {
    "name": "org.springframework.web.servlet.handler.RequestMatchResult"
  },
  {
    "name": "org.springframework.web.servlet.handler.SimpleUrlHandlerMapping",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getUrlMap",
        "parameterTypes": []
      },
      {
        "name": "initApplicationContext",
        "parameterTypes": []
      },
      {
        "name": "setMappings",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setUrlMap",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.i18n.AbstractLocaleResolver",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setDefaultLocale",
        "parameterTypes": [
          "java.util.Locale"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "resolveLocale",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.util.Locale"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getLastModified",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.Object"
        ]
      },
      {
        "name": "handle",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getLastModified",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.Object"
        ]
      },
      {
        "name": "handle",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.mvc.condition.PathPatternsRequestCondition"
  },
  {
    "name": "org.springframework.web.servlet.mvc.condition.PatternsRequestCondition"
  },
  {
    "name": "org.springframework.web.servlet.mvc.condition.RequestCondition"
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getLastModified",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.Object"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "handle",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.RequestMappingInfo"
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.RequestMappingInfo$BuilderConfiguration"
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "initCorsConfiguration",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Method",
          "java.lang.Object"
        ]
      },
      {
        "name": "registerHandlerMethod",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Method",
          "java.lang.Object"
        ]
      },
      {
        "name": "registerMapping",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.reflect.Method"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping$HttpOptionsHandler",
    "methods": [
      {
        "name": "handle",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver"
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getBuilderConfiguration",
        "parameterTypes": []
      },
      {
        "name": "getContentNegotiationManager",
        "parameterTypes": []
      },
      {
        "name": "getFileExtensions",
        "parameterTypes": []
      },
      {
        "name": "getPathPrefixes",
        "parameterTypes": []
      },
      {
        "name": "initCorsConfiguration",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Method",
          "java.lang.Object"
        ]
      },
      {
        "name": "match",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.String"
        ]
      },
      {
        "name": "registerHandlerMethod",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Method",
          "java.lang.Object"
        ]
      },
      {
        "name": "registerMapping",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.reflect.Method"
        ]
      },
      {
        "name": "registerMapping",
        "parameterTypes": [
          "org.springframework.web.servlet.mvc.method.RequestMappingInfo",
          "java.lang.Object",
          "java.lang.reflect.Method"
        ]
      },
      {
        "name": "setContentNegotiationManager",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager"
        ]
      },
      {
        "name": "setEmbeddedValueResolver",
        "parameterTypes": [
          "org.springframework.util.StringValueResolver"
        ]
      },
      {
        "name": "setPathPrefixes",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setPatternParser",
        "parameterTypes": [
          "org.springframework.web.util.pattern.PathPatternParser"
        ]
      },
      {
        "name": "setUseRegisteredSuffixPatternMatch",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseSuffixPatternMatch",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseTrailingSlashMatch",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "useRegisteredSuffixPatternMatch",
        "parameterTypes": []
      },
      {
        "name": "useSuffixPatternMatch",
        "parameterTypes": []
      },
      {
        "name": "useTrailingSlashMatch",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping$AnnotationDescriptor"
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod"
  },
  {
    "name": "org.springframework.web.servlet.resource.ResourceResolver"
  },
  {
    "name": "org.springframework.web.servlet.resource.ResourceUrlEncodingFilter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.resource.ResourceUrlProvider",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.support.AbstractFlashMapManager",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getFlashMapTimeout",
        "parameterTypes": []
      },
      {
        "name": "getUrlPathHelper",
        "parameterTypes": []
      },
      {
        "name": "retrieveAndUpdate",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      },
      {
        "name": "saveOutputFlashMap",
        "parameterTypes": [
          "org.springframework.web.servlet.FlashMap",
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      },
      {
        "name": "setFlashMapTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setUrlPathHelper",
        "parameterTypes": [
          "org.springframework.web.util.UrlPathHelper"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.support.RequestContext"
  },
  {
    "name": "org.springframework.web.servlet.support.RequestDataValueProcessor"
  },
  {
    "name": "org.springframework.web.servlet.support.SessionFlashMapManager",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.support.WebContentGenerator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.theme.AbstractThemeResolver",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getDefaultThemeName",
        "parameterTypes": []
      },
      {
        "name": "setDefaultThemeName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.theme.FixedThemeResolver",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "resolveThemeName",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "setThemeName",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.view.AbstractCachingViewResolver",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "clearCache",
        "parameterTypes": []
      },
      {
        "name": "getCacheFilter",
        "parameterTypes": []
      },
      {
        "name": "getCacheLimit",
        "parameterTypes": []
      },
      {
        "name": "isCache",
        "parameterTypes": []
      },
      {
        "name": "isCacheUnresolved",
        "parameterTypes": []
      },
      {
        "name": "removeFromCache",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Locale"
        ]
      },
      {
        "name": "resolveViewName",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Locale"
        ]
      },
      {
        "name": "setCache",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCacheFilter",
        "parameterTypes": [
          "org.springframework.web.servlet.view.AbstractCachingViewResolver$CacheFilter"
        ]
      },
      {
        "name": "setCacheLimit",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setCacheUnresolved",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.view.AbstractCachingViewResolver$CacheFilter"
  },
  {
    "name": "org.springframework.web.servlet.view.AbstractUrlBasedView",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "checkResource",
        "parameterTypes": [
          "java.util.Locale"
        ]
      },
      {
        "name": "getUrl",
        "parameterTypes": []
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.view.AbstractView",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addStaticAttribute",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "getAttributesMap",
        "parameterTypes": []
      },
      {
        "name": "getBeanName",
        "parameterTypes": []
      },
      {
        "name": "getContentType",
        "parameterTypes": []
      },
      {
        "name": "getRequestContextAttribute",
        "parameterTypes": []
      },
      {
        "name": "getStaticAttributes",
        "parameterTypes": []
      },
      {
        "name": "isExposePathVariables",
        "parameterTypes": []
      },
      {
        "name": "render",
        "parameterTypes": [
          "java.util.Map",
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      },
      {
        "name": "setAttributes",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setAttributesCSV",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAttributesMap",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContentType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExposeContextBeansAsAttributes",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setExposePathVariables",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setExposedContextBeanNames",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setRequestContextAttribute",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.view.BeanNameViewResolver"
  },
  {
    "name": "org.springframework.web.servlet.view.ContentNegotiatingViewResolver",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "resolveViewName",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Locale"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getViewName",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.view.InternalResourceView",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.view.InternalResourceViewResolver",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.view.UrlBasedViewResolver",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getAttributesMap",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "getRedirectHosts",
        "parameterTypes": []
      },
      {
        "name": "setAttributes",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setAttributesMap",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setContentType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExposeContextBeansAsAttributes",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setExposePathVariables",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setExposedContextBeanNames",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRedirectContextRelative",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRedirectHosts",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setRedirectHttp10Compatible",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRequestContextAttribute",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSuffix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setViewClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setViewNames",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.view.ViewResolverComposite",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "resolveViewName",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Locale"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setServletContext",
        "parameterTypes": [
          "jakarta.servlet.ServletContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.socket.CloseStatus"
  },
  {
    "name": "org.springframework.web.socket.SubProtocolCapable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.socket.WebSocketHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.socket.WebSocketMessage"
  },
  {
    "name": "org.springframework.web.socket.WebSocketSession"
  },
  {
    "name": "org.springframework.web.socket.adapter.standard.StandardWebSocketHandlerAdapter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.socket.config.WebSocketMessageBrokerStats",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterSingletonsInstantiated",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.socket.config.annotation.DelegatingWebSocketMessageBrokerConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setConfigurers",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.socket.config.annotation.StompEndpointRegistry"
  },
  {
    "name": "org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurationSupport",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "stompWebSocketHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.socket.WebSocketHandler",
          "org.springframework.scheduling.TaskScheduler",
          "org.springframework.messaging.support.AbstractSubscribableChannel"
        ]
      },
      {
        "name": "subProtocolWebSocketHandler",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel"
        ]
      },
      {
        "name": "webSocketMessageBrokerStats",
        "parameterTypes": [
          "org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler",
          "org.springframework.web.socket.WebSocketHandler",
          "org.springframework.core.task.TaskExecutor",
          "org.springframework.core.task.TaskExecutor",
          "org.springframework.scheduling.TaskScheduler"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurationSupport$$SpringCGLIB$$FastClass$$0",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "addArgumentResolvers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "addReturnValueHandlers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "configureClientOutboundChannel",
        "parameterTypes": [
          "org.springframework.messaging.simp.config.ChannelRegistration"
        ]
      },
      {
        "name": "configureMessageBroker",
        "parameterTypes": [
          "org.springframework.messaging.simp.config.MessageBrokerRegistry"
        ]
      },
      {
        "name": "configureMessageConverters",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "configureWebSocketTransport",
        "parameterTypes": [
          "org.springframework.web.socket.config.annotation.WebSocketTransportRegistration"
        ]
      },
      {
        "name": "getPhase",
        "parameterTypes": []
      },
      {
        "name": "registerStompEndpoints",
        "parameterTypes": [
          "org.springframework.web.socket.config.annotation.StompEndpointRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.socket.config.annotation.WebSocketTransportRegistration"
  },
  {
    "name": "org.springframework.web.socket.messaging.DefaultSimpUserRegistry",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "findSubscriptions",
        "parameterTypes": [
          "org.springframework.messaging.simp.user.SimpSubscriptionMatcher"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "getUser",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUserCount",
        "parameterTypes": []
      },
      {
        "name": "getUsers",
        "parameterTypes": []
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      },
      {
        "name": "supportsEventType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "supportsSourceType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.socket.messaging.SessionDisconnectEvent"
  },
  {
    "name": "org.springframework.web.socket.messaging.SessionUnsubscribeEvent"
  },
  {
    "name": "org.springframework.web.socket.messaging.StompSubProtocolHandler"
  },
  {
    "name": "org.springframework.web.socket.messaging.StompSubProtocolHandler$Stats"
  },
  {
    "name": "org.springframework.web.socket.messaging.SubProtocolHandler"
  },
  {
    "name": "org.springframework.web.socket.messaging.SubProtocolWebSocketHandler",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterConnectionClosed",
        "parameterTypes": [
          "org.springframework.web.socket.WebSocketSession",
          "org.springframework.web.socket.CloseStatus"
        ]
      },
      {
        "name": "afterConnectionEstablished",
        "parameterTypes": [
          "org.springframework.web.socket.WebSocketSession"
        ]
      },
      {
        "name": "getPhase",
        "parameterTypes": []
      },
      {
        "name": "getSubProtocols",
        "parameterTypes": []
      },
      {
        "name": "handleMessage",
        "parameterTypes": [
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "handleMessage",
        "parameterTypes": [
          "org.springframework.web.socket.WebSocketSession",
          "org.springframework.web.socket.WebSocketMessage"
        ]
      },
      {
        "name": "handleTransportError",
        "parameterTypes": [
          "org.springframework.web.socket.WebSocketSession",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "isRunning",
        "parameterTypes": []
      },
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "supportsPartialMessages",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.socket.messaging.SubProtocolWebSocketHandler$Stats"
  },
  {
    "name": "org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.socket.server.HandshakeInterceptor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.socket.server.support.DefaultHandshakeHandler"
  },
  {
    "name": "org.springframework.web.socket.server.support.WebSocketHandlerMapping",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getPhase",
        "parameterTypes": []
      },
      {
        "name": "isRunning",
        "parameterTypes": []
      },
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.socket.server.support.WebSocketHttpRequestHandler"
  },
  {
    "name": "org.springframework.web.socket.sockjs.SockJsService"
  },
  {
    "name": "org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler"
  },
  {
    "name": "org.springframework.web.util.DefaultUriBuilderFactory"
  },
  {
    "name": "org.springframework.web.util.UriBuilderFactory"
  },
  {
    "name": "org.springframework.web.util.UriTemplateHandler"
  },
  {
    "name": "org.springframework.web.util.UrlPathHelper"
  },
  {
    "name": "org.springframework.web.util.pattern.PathPattern"
  },
  {
    "name": "org.springframework.web.util.pattern.PathPatternParser"
  },
  {
    "name": "org.thymeleaf.IEngineConfiguration"
  },
  {
    "name": "org.thymeleaf.ITemplateEngine",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.thymeleaf.IThrottledTemplateProcessor"
  },
  {
    "name": "org.thymeleaf.TemplateEngine",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addDialect",
        "parameterTypes": [
          "java.lang.String",
          "org.thymeleaf.dialect.IDialect"
        ]
      },
      {
        "name": "addDialect",
        "parameterTypes": [
          "org.thymeleaf.dialect.IDialect"
        ]
      },
      {
        "name": "addLinkBuilder",
        "parameterTypes": [
          "org.thymeleaf.linkbuilder.ILinkBuilder"
        ]
      },
      {
        "name": "addMessageResolver",
        "parameterTypes": [
          "org.thymeleaf.messageresolver.IMessageResolver"
        ]
      },
      {
        "name": "addTemplateResolver",
        "parameterTypes": [
          "org.thymeleaf.templateresolver.ITemplateResolver"
        ]
      },
      {
        "name": "clearDialects",
        "parameterTypes": []
      },
      {
        "name": "clearTemplateCache",
        "parameterTypes": []
      },
      {
        "name": "clearTemplateCacheFor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getConfiguration",
        "parameterTypes": []
      },
      {
        "name": "process",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Set",
          "org.thymeleaf.context.IContext"
        ]
      },
      {
        "name": "process",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Set",
          "org.thymeleaf.context.IContext",
          "java.io.Writer"
        ]
      },
      {
        "name": "process",
        "parameterTypes": [
          "java.lang.String",
          "org.thymeleaf.context.IContext"
        ]
      },
      {
        "name": "process",
        "parameterTypes": [
          "java.lang.String",
          "org.thymeleaf.context.IContext",
          "java.io.Writer"
        ]
      },
      {
        "name": "process",
        "parameterTypes": [
          "org.thymeleaf.TemplateSpec",
          "org.thymeleaf.context.IContext"
        ]
      },
      {
        "name": "process",
        "parameterTypes": [
          "org.thymeleaf.TemplateSpec",
          "org.thymeleaf.context.IContext",
          "java.io.Writer"
        ]
      },
      {
        "name": "processThrottled",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Set",
          "org.thymeleaf.context.IContext"
        ]
      },
      {
        "name": "processThrottled",
        "parameterTypes": [
          "java.lang.String",
          "org.thymeleaf.context.IContext"
        ]
      },
      {
        "name": "processThrottled",
        "parameterTypes": [
          "org.thymeleaf.TemplateSpec",
          "org.thymeleaf.context.IContext"
        ]
      },
      {
        "name": "setAdditionalDialects",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setCacheManager",
        "parameterTypes": [
          "org.thymeleaf.cache.ICacheManager"
        ]
      },
      {
        "name": "setDecoupledTemplateLogicResolver",
        "parameterTypes": [
          "org.thymeleaf.templateparser.markup.decoupled.IDecoupledTemplateLogicResolver"
        ]
      },
      {
        "name": "setDialect",
        "parameterTypes": [
          "org.thymeleaf.dialect.IDialect"
        ]
      },
      {
        "name": "setDialects",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setDialectsByPrefix",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setEngineContextFactory",
        "parameterTypes": [
          "org.thymeleaf.context.IEngineContextFactory"
        ]
      },
      {
        "name": "setLinkBuilder",
        "parameterTypes": [
          "org.thymeleaf.linkbuilder.ILinkBuilder"
        ]
      },
      {
        "name": "setLinkBuilders",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setMessageResolver",
        "parameterTypes": [
          "org.thymeleaf.messageresolver.IMessageResolver"
        ]
      },
      {
        "name": "setMessageResolvers",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setTemplateResolver",
        "parameterTypes": [
          "org.thymeleaf.templateresolver.ITemplateResolver"
        ]
      },
      {
        "name": "setTemplateResolvers",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "org.thymeleaf.TemplateSpec"
  },
  {
    "name": "org.thymeleaf.cache.ICacheEntryValidity"
  },
  {
    "name": "org.thymeleaf.cache.ICacheManager"
  },
  {
    "name": "org.thymeleaf.context.Context"
  },
  {
    "name": "org.thymeleaf.context.IContext"
  },
  {
    "name": "org.thymeleaf.context.IEngineContextFactory"
  },
  {
    "name": "org.thymeleaf.dialect.IDialect"
  },
  {
    "name": "org.thymeleaf.linkbuilder.ILinkBuilder"
  },
  {
    "name": "org.thymeleaf.messageresolver.IMessageResolver"
  },
  {
    "name": "org.thymeleaf.spring6.ISpringTemplateEngine",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.thymeleaf.spring6.SpringTemplateEngine",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setMessageSource",
        "parameterTypes": [
          "org.springframework.context.MessageSource"
        ]
      },
      {
        "name": "setTemplateEngineMessageSource",
        "parameterTypes": [
          "org.springframework.context.MessageSource"
        ]
      }
    ]
  },
  {
    "name": "org.thymeleaf.spring6.templateresolver.SpringResourceTemplateResolver",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.thymeleaf.spring6.view.ThymeleafViewResolver",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getOrder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.thymeleaf.templatemode.TemplateMode"
  },
  {
    "name": "org.thymeleaf.templateparser.markup.decoupled.IDecoupledTemplateLogicResolver"
  },
  {
    "name": "org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.thymeleaf.templateresolver.AbstractTemplateResolver",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "resolveTemplate",
        "parameterTypes": [
          "org.thymeleaf.IEngineConfiguration",
          "java.lang.String",
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "setCheckExistence",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setResolvablePatterns",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setUseDecoupledLogic",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.thymeleaf.templateresolver.ITemplateResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.thymeleaf.templateresolver.TemplateResolution"
  },
  {
    "name": "org.thymeleaf.templateresource.ITemplateResource"
  },
  {
    "name": "org.thymeleaf.util.PatternSpec"
  },
  {
    "name": "org.webjars.WebJarAssetLocator"
  },
  {
    "name": "org.webjars.WebJarVersionLocator"
  },
  {
    "name": "org.xmlbeam.XBProjector"
  },
  {
    "name": "org.yaml.snakeyaml.Yaml"
  },
  {
    "name": "org.zalando.problem.jackson.ProblemModule",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getModuleName",
        "parameterTypes": []
      },
      {
        "name": "setupModule",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.Module$SetupContext"
        ]
      },
      {
        "name": "version",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.zalando.problem.spring.common.AdviceTrait",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "createStackTrace",
        "parameterTypes": [
          "java.lang.Throwable"
        ]
      },
      {
        "name": "isCausalChainsEnabled",
        "parameterTypes": []
      },
      {
        "name": "prepare",
        "parameterTypes": [
          "java.lang.Throwable",
          "org.zalando.problem.StatusType",
          "java.net.URI"
        ]
      },
      {
        "name": "process",
        "parameterTypes": [
          "org.springframework.http.ResponseEntity"
        ]
      },
      {
        "name": "resolveResponseStatus",
        "parameterTypes": [
          "java.lang.Throwable"
        ]
      },
      {
        "name": "toProblem",
        "parameterTypes": [
          "java.lang.Throwable"
        ]
      },
      {
        "name": "toProblem",
        "parameterTypes": [
          "java.lang.Throwable",
          "org.zalando.problem.StatusType"
        ]
      },
      {
        "name": "toProblem",
        "parameterTypes": [
          "java.lang.Throwable",
          "org.zalando.problem.StatusType",
          "java.net.URI"
        ]
      }
    ]
  },
  {
    "name": "org.zalando.problem.spring.web.advice.AdviceTrait",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "create",
        "parameterTypes": [
          "java.lang.Throwable",
          "org.springframework.web.context.request.NativeWebRequest"
        ]
      },
      {
        "name": "create",
        "parameterTypes": [
          "java.lang.Throwable",
          "org.zalando.problem.Problem",
          "org.springframework.web.context.request.NativeWebRequest"
        ]
      },
      {
        "name": "create",
        "parameterTypes": [
          "java.lang.Throwable",
          "org.zalando.problem.Problem",
          "org.springframework.web.context.request.NativeWebRequest",
          "org.springframework.http.HttpHeaders"
        ]
      },
      {
        "name": "create",
        "parameterTypes": [
          "org.zalando.problem.StatusType",
          "java.lang.Throwable",
          "org.springframework.web.context.request.NativeWebRequest"
        ]
      },
      {
        "name": "create",
        "parameterTypes": [
          "org.zalando.problem.StatusType",
          "java.lang.Throwable",
          "org.springframework.web.context.request.NativeWebRequest",
          "java.net.URI"
        ]
      },
      {
        "name": "create",
        "parameterTypes": [
          "org.zalando.problem.StatusType",
          "java.lang.Throwable",
          "org.springframework.web.context.request.NativeWebRequest",
          "org.springframework.http.HttpHeaders"
        ]
      },
      {
        "name": "create",
        "parameterTypes": [
          "org.zalando.problem.StatusType",
          "java.lang.Throwable",
          "org.springframework.web.context.request.NativeWebRequest",
          "org.springframework.http.HttpHeaders",
          "java.net.URI"
        ]
      },
      {
        "name": "create",
        "parameterTypes": [
          "org.zalando.problem.ThrowableProblem",
          "org.springframework.web.context.request.NativeWebRequest"
        ]
      },
      {
        "name": "create",
        "parameterTypes": [
          "org.zalando.problem.ThrowableProblem",
          "org.springframework.web.context.request.NativeWebRequest",
          "org.springframework.http.HttpHeaders"
        ]
      },
      {
        "name": "fallback",
        "parameterTypes": [
          "java.lang.Throwable",
          "org.zalando.problem.Problem",
          "org.springframework.web.context.request.NativeWebRequest",
          "org.springframework.http.HttpHeaders"
        ]
      },
      {
        "name": "log",
        "parameterTypes": [
          "java.lang.Throwable",
          "org.zalando.problem.Problem",
          "org.springframework.web.context.request.NativeWebRequest",
          "org.springframework.http.HttpStatus"
        ]
      },
      {
        "name": "negotiate",
        "parameterTypes": [
          "org.springframework.web.context.request.NativeWebRequest"
        ]
      }
    ]
  },
  {
    "name": "org.zalando.problem.spring.web.advice.ProblemHandling",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.zalando.problem.spring.web.advice.general.GeneralAdviceTrait",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.zalando.problem.spring.web.advice.general.ProblemAdviceTrait",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "handleProblem",
        "parameterTypes": [
          "org.zalando.problem.ThrowableProblem",
          "org.springframework.web.context.request.NativeWebRequest"
        ]
      }
    ]
  },
  {
    "name": "org.zalando.problem.spring.web.advice.general.ResponseStatusAdviceTrait",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "handleResponseStatusException",
        "parameterTypes": [
          "org.springframework.web.server.ResponseStatusException",
          "org.springframework.web.context.request.NativeWebRequest"
        ]
      }
    ]
  },
  {
    "name": "org.zalando.problem.spring.web.advice.general.ThrowableAdviceTrait",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "handleThrowable",
        "parameterTypes": [
          "java.lang.Throwable",
          "org.springframework.web.context.request.NativeWebRequest"
        ]
      }
    ]
  },
  {
    "name": "org.zalando.problem.spring.web.advice.general.UnsupportedOperationAdviceTrait",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "handleUnsupportedOperation",
        "parameterTypes": [
          "java.lang.UnsupportedOperationException",
          "org.springframework.web.context.request.NativeWebRequest"
        ]
      }
    ]
  },
  {
    "name": "org.zalando.problem.spring.web.advice.http.HttpAdviceTrait",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.zalando.problem.spring.web.advice.http.MethodNotAllowedAdviceTrait",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "handleRequestMethodNotSupportedException",
        "parameterTypes": [
          "org.springframework.web.HttpRequestMethodNotSupportedException",
          "org.springframework.web.context.request.NativeWebRequest"
        ]
      }
    ]
  },
  {
    "name": "org.zalando.problem.spring.web.advice.http.NotAcceptableAdviceTrait",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "handleMediaTypeNotAcceptable",
        "parameterTypes": [
          "org.springframework.web.HttpMediaTypeNotAcceptableException",
          "org.springframework.web.context.request.NativeWebRequest"
        ]
      }
    ]
  },
  {
    "name": "org.zalando.problem.spring.web.advice.http.UnsupportedMediaTypeAdviceTrait",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "handleMediaTypeNotSupportedException",
        "parameterTypes": [
          "org.springframework.web.HttpMediaTypeNotSupportedException",
          "org.springframework.web.context.request.NativeWebRequest"
        ]
      }
    ]
  },
  {
    "name": "org.zalando.problem.spring.web.advice.io.IOAdviceTrait",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.zalando.problem.spring.web.advice.io.MessageNotReadableAdviceTrait",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "handleMessageNotReadableException",
        "parameterTypes": [
          "org.springframework.http.converter.HttpMessageNotReadableException",
          "org.springframework.web.context.request.NativeWebRequest"
        ]
      }
    ]
  },
  {
    "name": "org.zalando.problem.spring.web.advice.io.MultipartAdviceTrait",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "handleMultipart",
        "parameterTypes": [
          "org.springframework.web.multipart.MultipartException",
          "org.springframework.web.context.request.NativeWebRequest"
        ]
      }
    ]
  },
  {
    "name": "org.zalando.problem.spring.web.advice.io.TypeMismatchAdviceTrait",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "handleTypeMismatch",
        "parameterTypes": [
          "org.springframework.beans.TypeMismatchException",
          "org.springframework.web.context.request.NativeWebRequest"
        ]
      }
    ]
  },
  {
    "name": "org.zalando.problem.spring.web.advice.network.NetworkAdviceTrait",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.zalando.problem.spring.web.advice.network.SocketTimeoutAdviceTrait",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "handleSocketTimeout",
        "parameterTypes": [
          "java.net.SocketTimeoutException",
          "org.springframework.web.context.request.NativeWebRequest"
        ]
      }
    ]
  },
  {
    "name": "org.zalando.problem.spring.web.advice.routing.MissingServletRequestParameterAdviceTrait",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "handleMissingServletRequestParameter",
        "parameterTypes": [
          "org.springframework.web.bind.MissingServletRequestParameterException",
          "org.springframework.web.context.request.NativeWebRequest"
        ]
      }
    ]
  },
  {
    "name": "org.zalando.problem.spring.web.advice.routing.MissingServletRequestPartAdviceTrait",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "handleMissingServletRequestPart",
        "parameterTypes": [
          "org.springframework.web.multipart.support.MissingServletRequestPartException",
          "org.springframework.web.context.request.NativeWebRequest"
        ]
      }
    ]
  },
  {
    "name": "org.zalando.problem.spring.web.advice.routing.NoHandlerFoundAdviceTrait",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "handleNoHandlerFound",
        "parameterTypes": [
          "org.springframework.web.servlet.NoHandlerFoundException",
          "org.springframework.web.context.request.NativeWebRequest"
        ]
      }
    ]
  },
  {
    "name": "org.zalando.problem.spring.web.advice.routing.RoutingAdviceTrait",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.zalando.problem.spring.web.advice.routing.ServletRequestBindingAdviceTrait",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "handleServletRequestBinding",
        "parameterTypes": [
          "org.springframework.web.bind.ServletRequestBindingException",
          "org.springframework.web.context.request.NativeWebRequest"
        ]
      }
    ]
  },
  {
    "name": "org.zalando.problem.spring.web.advice.security.AccessDeniedAdviceTrait",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "handleAccessDenied",
        "parameterTypes": [
          "org.springframework.security.access.AccessDeniedException",
          "org.springframework.web.context.request.NativeWebRequest"
        ]
      }
    ]
  },
  {
    "name": "org.zalando.problem.spring.web.advice.security.AuthenticationAdviceTrait",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "handleAuthentication",
        "parameterTypes": [
          "org.springframework.security.core.AuthenticationException",
          "org.springframework.web.context.request.NativeWebRequest"
        ]
      }
    ]
  },
  {
    "name": "org.zalando.problem.spring.web.advice.security.SecurityAdviceTrait",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.zalando.problem.spring.web.advice.security.SecurityProblemSupport",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "commence",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "org.springframework.security.core.AuthenticationException"
        ]
      },
      {
        "name": "handle",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "org.springframework.security.access.AccessDeniedException"
        ]
      },
      {
        "name": "onAuthenticationFailure",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "name": "org.zalando.problem.spring.web.advice.validation.BaseBindingResultAdviceTrait",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "createViolation",
        "parameterTypes": [
          "org.springframework.validation.FieldError"
        ]
      },
      {
        "name": "createViolation",
        "parameterTypes": [
          "org.springframework.validation.ObjectError"
        ]
      },
      {
        "name": "createViolations",
        "parameterTypes": [
          "org.springframework.validation.BindingResult"
        ]
      }
    ]
  },
  {
    "name": "org.zalando.problem.spring.web.advice.validation.BaseValidationAdviceTrait",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "defaultConstraintViolationStatus",
        "parameterTypes": []
      },
      {
        "name": "defaultConstraintViolationType",
        "parameterTypes": []
      },
      {
        "name": "formatFieldName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "newConstraintViolationProblem",
        "parameterTypes": [
          "java.lang.Throwable",
          "java.util.Collection",
          "org.springframework.web.context.request.NativeWebRequest"
        ]
      }
    ]
  },
  {
    "name": "org.zalando.problem.spring.web.advice.validation.BindAdviceTrait",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "handleBindingResult",
        "parameterTypes": [
          "org.springframework.validation.BindException",
          "org.springframework.web.context.request.NativeWebRequest"
        ]
      }
    ]
  },
  {
    "name": "org.zalando.problem.spring.web.advice.validation.ConstraintViolationAdviceTrait",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "createViolation",
        "parameterTypes": [
          "jakarta.validation.ConstraintViolation"
        ]
      },
      {
        "name": "handleConstraintViolation",
        "parameterTypes": [
          "jakarta.validation.ConstraintViolationException",
          "org.springframework.web.context.request.NativeWebRequest"
        ]
      }
    ]
  },
  {
    "name": "org.zalando.problem.spring.web.advice.validation.MethodArgumentNotValidAdviceTrait",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.zalando.problem.spring.web.advice.validation.ValidationAdviceTrait",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.zalando.problem.violations.ConstraintViolationProblemModule",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getModuleName",
        "parameterTypes": []
      },
      {
        "name": "setupModule",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.Module$SetupContext"
        ]
      },
      {
        "name": "version",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "p.submissions"
  },
  {
    "name": "reactor.core.publisher.Flux"
  },
  {
    "name": "reactor.core.publisher.Mono"
  },
  {
    "name": "reactor.netty.http.client.HttpClient"
  },
  {
    "name": "reactor.netty.tcp.TcpClient"
  },
  {
    "name": "reactor.tools.agent.ReactorDebugAgent"
  },
  {
    "name": "reactor.util.lang.NonNullApi"
  },
  {
    "name": "s.results"
  },
  {
    "name": "scala.Option"
  },
  {
    "name": "submission.versions"
  },
  {
    "name": "sun.management.ClassLoadingImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.CompilationImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.ManagementFactoryHelper$1",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.ManagementFactoryHelper$PlatformLoggingImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.MemoryImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.MemoryManagerImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.MemoryPoolImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.RuntimeImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.misc.Unsafe",
    "fields": [
      {
        "name": "theUnsafe"
      }
    ],
    "methods": [
      {
        "name": "getAndAddLong",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "long"
        ]
      },
      {
        "name": "getAndSetObject",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.net.www.protocol.http.ntlm.NTLMAuthentication",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "boolean",
          "java.lang.String",
          "int",
          "java.net.PasswordAuthentication"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "boolean",
          "java.net.URL",
          "java.net.PasswordAuthentication"
        ]
      },
      {
        "name": "isTrustedSite",
        "parameterTypes": [
          "java.net.URL"
        ]
      },
      {
        "name": "supportsTransparentAuth",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.nio.ch.SelectorImpl",
    "fields": [
      {
        "name": "selectedKeys"
      }
    ]
  },
  {
    "name": "sun.reflect.ReflectionFactory",
    "methods": [
      {
        "name": "getReflectionFactory",
        "parameterTypes": []
      },
      {
        "name": "newConstructorForSerialization",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.reflect.Constructor"
        ]
      }
    ]
  },
  {
    "name": "sun.security.pkcs12.PKCS12KeyStore",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.MD5",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.NativePRNG",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "java.security.SecureRandomParameters"
        ]
      }
    ]
  },
  {
    "name": "sun.security.provider.NativePRNG$NonBlocking",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "java.security.SecureRandomParameters"
        ]
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA2$SHA256",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA5$SHA512",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.X509Factory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.rsa.RSAKeyFactory$Legacy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.ssl.KeyManagerFactoryImpl$SunX509",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.ssl.SSLContextImpl$DefaultSSLContext",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.x509.AuthorityInfoAccessExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.AuthorityKeyIdentifierExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.BasicConstraintsExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.CRLDistributionPointsExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.CertificatePoliciesExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.ExtendedKeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.IssuerAlternativeNameExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.KeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.NetscapeCertTypeExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.PrivateKeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.SubjectAlternativeNameExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.SubjectKeyIdentifierExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "tech.jhipster.async.ExceptionHandlingAsyncTaskExecutor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.Runnable",
          "long"
        ]
      },
      {
        "name": "submit",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "submit",
        "parameterTypes": [
          "java.util.concurrent.Callable"
        ]
      }
    ]
  },
  {
    "name": "tech.jhipster.config.JHipsterConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getAuditEvents",
        "parameterTypes": []
      },
      {
        "name": "getCache",
        "parameterTypes": []
      },
      {
        "name": "getClientApp",
        "parameterTypes": []
      },
      {
        "name": "getHttp",
        "parameterTypes": []
      },
      {
        "name": "getLogging",
        "parameterTypes": []
      },
      {
        "name": "getMail",
        "parameterTypes": []
      },
      {
        "name": "getRegistry",
        "parameterTypes": []
      },
      {
        "name": "getSecurity",
        "parameterTypes": []
      }
    ],
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties$ApiDocs"
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties$Async"
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties$AuditEvents",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setRetentionPeriod",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties$Cache",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getHazelcast",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties$Cache$Hazelcast",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setBackupCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setTimeToLiveSeconds",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties$ClientApp",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties$Database"
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties$Gateway"
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties$Http",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getCache",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties$Http$Cache",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setTimeToLiveInDays",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties$Logging",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getLogstash",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties$Logging$Logstash",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setHost",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setRingBufferSize",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties$Mail",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setBaseUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFrom",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties$Registry",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties$Security",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getAuthentication",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties$Security$Authentication",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getJwt",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties$Security$Authentication$Jwt",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setBase64Secret",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTokenValidityInSeconds",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setTokenValidityInSecondsForRememberMe",
        "parameterTypes": [
          "long"
        ]
      }
    ]
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties$Social"
  },
  {
    "name": "tech.jhipster.config.apidoc.JHipsterOpenApiEndpointConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "tech.jhipster.config.apidoc.JHipsterOpenApiEndpointConfiguration$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "tech.jhipster.config.apidoc.JHipsterOpenApiEndpointConfiguration$$SpringCGLIB$$FastClass$$0",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "tech.jhipster.config.apidoc.JHipsterOpenApiEndpointConfiguration$$SpringCGLIB$$FastClass$$1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "tech.jhipster.config.info.ActiveProfilesInfoContributor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "contribute",
        "parameterTypes": [
          "org.springframework.boot.actuate.info.Info$Builder"
        ]
      }
    ]
  },
  {
    "name": "tech.jhipster.config.info.JHipsterInfoContributorConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "tech.jhipster.config.info.JHipsterInfoContributorConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      },
      {
        "name": "CGLIB$CALLBACK_FILTER"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "tech.jhipster.config.info.JHipsterInfoContributorConfiguration$$SpringCGLIB$$FastClass$$0",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "tech.jhipster.config.info.JHipsterInfoContributorConfiguration$$SpringCGLIB$$FastClass$$1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "tech.jhipster.config.metric.JHipsterMetricsEndpoint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "tech.jhipster.config.metric.JHipsterMetricsEndpointConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "tech.jhipster.config.metric.JHipsterMetricsEndpointConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      },
      {
        "name": "CGLIB$CALLBACK_FILTER"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "tech.jhipster.config.metric.JHipsterMetricsEndpointConfiguration$$SpringCGLIB$$FastClass$$0",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "tech.jhipster.config.metric.JHipsterMetricsEndpointConfiguration$$SpringCGLIB$$FastClass$$1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "weblogic.websocket.tyrus.TyrusServletWriter"
  },
  {
    "name": "Configurable"
  },
  {
    "name": "[Lsun.security.pkcs.SignerInfo;"
  },
  {
    "name": "com.hazelcast.internal.util.executor.CompletableFutureTask",
    "fields": [
      {
        "name": "runner"
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.DHParameters",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.HmacCore$HmacSHA256",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.HmacCore$HmacSHA384",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.TlsMasterSecretGenerator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.org.apache.xerces.internal.impl.dv.xs.ExtendedSchemaDVFactoryImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.org.apache.xerces.internal.impl.dv.xs.SchemaDVFactoryImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.Bonus$HibernateAccessOptimizer$X4F9vIif",
    "fields": [
      {
        "name": "invocationTarget$8s1h4a1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.Bonus$HibernateInstantiator$OTQdQsvf",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.Complaint$HibernateAccessOptimizer$bD3PXC0w",
    "fields": [
      {
        "name": "invocationTarget$gnghuv1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.Complaint$HibernateInstantiator$ZzCnMPNh",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.ComplaintResponse$HibernateAccessOptimizer$3FLmESWm",
    "fields": [
      {
        "name": "invocationTarget$mh8pp10"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.ComplaintResponse$HibernateInstantiator$fFVpNNRV",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.ExampleSubmission$HibernateAccessOptimizer$Jy2gTVCf",
    "fields": [
      {
        "name": "invocationTarget$qqiqdh0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.ExampleSubmission$HibernateInstantiator$I7n5C3gr",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.Feedback$HibernateAccessOptimizer$OLV1KA8i",
    "fields": [
      {
        "name": "invocationTarget$n0ft5p0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.Feedback$HibernateInstantiator$dON2DxFq",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.GradeStep$HibernateAccessOptimizer$gG3CPfPM",
    "fields": [
      {
        "name": "invocationTarget$15lefr1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.GradeStep$HibernateInstantiator$AFTpKaVv",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.GradingCriterion$HibernateAccessOptimizer$HaoYYXGo",
    "fields": [
      {
        "name": "invocationTarget$gk6o251"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.GradingCriterion$HibernateInstantiator$79KZtINU",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.GradingInstruction$HibernateAccessOptimizer$WTbrR5BT",
    "fields": [
      {
        "name": "invocationTarget$e6cepv0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.GradingInstruction$HibernateInstantiator$bOygrx4W",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.GradingScale$HibernateAccessOptimizer$KZv1KpWv",
    "fields": [
      {
        "name": "invocationTarget$1jqjp70"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.GradingScale$HibernateInstantiator$IOZyGJFt",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.LongFeedbackText$HibernateAccessOptimizer$zKMqK5s7",
    "fields": [
      {
        "name": "invocationTarget$tte1pe0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.LongFeedbackText$HibernateInstantiator$dE4pIdJE",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.ParticipantScore$HibernateAccessOptimizer$Uc19FSdp",
    "fields": [
      {
        "name": "invocationTarget$c8k0oo0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.Rating$HibernateAccessOptimizer$vJcI1m1D",
    "fields": [
      {
        "name": "invocationTarget$cbbo8e1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.Rating$HibernateInstantiator$OpHZnTkP",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.Result$HibernateAccessOptimizer$YeMmegPA",
    "fields": [
      {
        "name": "invocationTarget$98nq8g0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.Result$HibernateInstantiator$u2aYBjzz",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.StudentScore$HibernateAccessOptimizer$5A8ByQpm",
    "fields": [
      {
        "name": "invocationTarget$0iveql1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.StudentScore$HibernateInstantiator$C8mSrS06",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.TeamScore$HibernateAccessOptimizer$SFmbdwM5",
    "fields": [
      {
        "name": "invocationTarget$kmb1al0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.TeamScore$HibernateInstantiator$EmMGp6ZF",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.TutorParticipation$HibernateAccessOptimizer$OMS3WpV6",
    "fields": [
      {
        "name": "invocationTarget$tej52t0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.TutorParticipation$HibernateInstantiator$OubhlziY",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.Competency$HibernateAccessOptimizer$C3dtDAWi",
    "fields": [
      {
        "name": "invocationTarget$sj2bmb0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.Competency$HibernateInstantiator$HRCasfa5",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyExerciseLink$HibernateAccessOptimizer$O008m34G",
    "fields": [
      {
        "name": "invocationTarget$b8pk3c0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyExerciseLink$HibernateInstantiator$Zhm6eUiw",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyJol$HibernateAccessOptimizer$zXZ0f2Os",
    "fields": [
      {
        "name": "invocationTarget$qu7ruf0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyJol$HibernateInstantiator$5iV2ZZwd",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyLectureUnitLink$HibernateAccessOptimizer$ASDR9yLE",
    "fields": [
      {
        "name": "invocationTarget$bjfvc61"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyLectureUnitLink$HibernateInstantiator$8spWfL3O",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyProgress$HibernateAccessOptimizer$Mku4oGhN",
    "fields": [
      {
        "name": "invocationTarget$f8bl7j1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyProgress$HibernateInstantiator$zruoLalt",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyRelation$HibernateAccessOptimizer$FkTAa7qo",
    "fields": [
      {
        "name": "invocationTarget$gn7dmu0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyRelation$HibernateInstantiator$kF8U6X55",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CourseCompetency$HibernateAccessOptimizer$SUzZXUBH",
    "fields": [
      {
        "name": "invocationTarget$fu4uhq1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.KnowledgeArea$HibernateAccessOptimizer$dHrrvcFK",
    "fields": [
      {
        "name": "invocationTarget$7j5ic60"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.KnowledgeArea$HibernateInstantiator$XKv0pWpH",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.LearningPath$HibernateAccessOptimizer$TCUklx3H",
    "fields": [
      {
        "name": "invocationTarget$1c7th91"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.LearningPath$HibernateInstantiator$sBUR4E2M",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.Prerequisite$HibernateAccessOptimizer$k2Ea09TL",
    "fields": [
      {
        "name": "invocationTarget$tfsqsv1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.Prerequisite$HibernateInstantiator$W7f3b5n3",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.Source$HibernateAccessOptimizer$gNeCSCmq",
    "fields": [
      {
        "name": "invocationTarget$v7uo3f1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.Source$HibernateInstantiator$llzZRLZs",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.StandardizedCompetency$HibernateAccessOptimizer$lhakQRv2",
    "fields": [
      {
        "name": "invocationTarget$knpihl0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.StandardizedCompetency$HibernateInstantiator$ilSY7WkN",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.profile.CourseLearnerProfile$HibernateAccessOptimizer$tIFApk2x",
    "fields": [
      {
        "name": "invocationTarget$qb8c7q1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.profile.CourseLearnerProfile$HibernateInstantiator$32LYZ7t1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.profile.LearnerProfile$HibernateAccessOptimizer$aVrWmSUw",
    "fields": [
      {
        "name": "invocationTarget$dkm2qr0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.profile.LearnerProfile$HibernateInstantiator$n3xKFORi",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.science.ScienceEvent$HibernateAccessOptimizer$0gL4TfGy",
    "fields": [
      {
        "name": "invocationTarget$s93bm90"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.science.ScienceEvent$HibernateInstantiator$FD3z0Sp6",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.science.ScienceSetting$HibernateAccessOptimizer$puQWsJZI",
    "fields": [
      {
        "name": "invocationTarget$9fs9301"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.science.ScienceSetting$HibernateInstantiator$2tYbtlsH",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.AnswerPost$HibernateAccessOptimizer$q1HCPZmi",
    "fields": [
      {
        "name": "invocationTarget$gk353j1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.AnswerPost$HibernateInstantiator$5AwV2Ot4",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.ConductAgreement$HibernateAccessOptimizer$OItCtikm",
    "fields": [
      {
        "name": "invocationTarget$tunqtb0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.ConductAgreement$HibernateInstantiator$PZzRw0bf",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.ConversationParticipant$HibernateAccessOptimizer$aWl2aBMi",
    "fields": [
      {
        "name": "invocationTarget$3uojcb0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.ConversationParticipant$HibernateInstantiator$sT7ZFZOe",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.CourseNotification$HibernateAccessOptimizer$7pG7ADd3",
    "fields": [
      {
        "name": "invocationTarget$1h38e60"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.CourseNotification$HibernateInstantiator$Zcoccl7u",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.CourseNotificationParameter$HibernateAccessOptimizer$uzMcHGVm",
    "fields": [
      {
        "name": "invocationTarget$q9304m1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.CourseNotificationParameter$HibernateInstantiator$4l4pUIXN",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.Faq$HibernateAccessOptimizer$aA5g6Bic",
    "fields": [
      {
        "name": "invocationTarget$178oa41"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.Faq$HibernateInstantiator$AgeN1xOv",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.ForwardedMessage$HibernateAccessOptimizer$DCehoseM",
    "fields": [
      {
        "name": "invocationTarget$gtvrbs0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.ForwardedMessage$HibernateInstantiator$VOswA8WI",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.GlobalNotificationSetting$HibernateAccessOptimizer$rh1AS9l2",
    "fields": [
      {
        "name": "invocationTarget$ruq9o40"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.GlobalNotificationSetting$HibernateInstantiator$1tCj5o1l",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.Post$HibernateAccessOptimizer$7mznsjTT",
    "fields": [
      {
        "name": "invocationTarget$kfj1gc0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.Post$HibernateInstantiator$hRzwJqVi",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.Reaction$HibernateAccessOptimizer$WeDEOxnf",
    "fields": [
      {
        "name": "invocationTarget$vo6ubl0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.Reaction$HibernateInstantiator$3Qh4OMct",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.SavedPost$HibernateAccessOptimizer$BOR8D3ss",
    "fields": [
      {
        "name": "invocationTarget$kh9esn0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.SavedPost$HibernateInstantiator$aCkLp3od",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.UserCourseNotificationSettingPreset$HibernateAccessOptimizer$DViLS6Un",
    "fields": [
      {
        "name": "invocationTarget$91faun0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.UserCourseNotificationSettingPreset$HibernateInstantiator$CF1PDzEB",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.UserCourseNotificationSettingSpecification$HibernateAccessOptimizer$L7mJ9yam",
    "fields": [
      {
        "name": "invocationTarget$tljv5a0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.UserCourseNotificationSettingSpecification$HibernateInstantiator$lcWvM799",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.UserCourseNotificationStatus$HibernateAccessOptimizer$LJIBqtzL",
    "fields": [
      {
        "name": "invocationTarget$stbvn20"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.UserCourseNotificationStatus$HibernateInstantiator$2SxWYk0J",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.conversation.Channel$HibernateAccessOptimizer$7cXCoeCA",
    "fields": [
      {
        "name": "invocationTarget$721n5j1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.conversation.Channel$HibernateInstantiator$aclRaAMO",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.conversation.Conversation$HibernateAccessOptimizer$DRmvdgMi",
    "fields": [
      {
        "name": "invocationTarget$q2ifte1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.conversation.GroupChat$HibernateAccessOptimizer$b78OAT8d",
    "fields": [
      {
        "name": "invocationTarget$q6bl1j0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.conversation.GroupChat$HibernateInstantiator$eG8fsLoe",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.conversation.OneToOneChat$HibernateAccessOptimizer$ri7YZpsR",
    "fields": [
      {
        "name": "invocationTarget$3h6b5p0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.conversation.OneToOneChat$HibernateInstantiator$SQlDJj7e",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.notification.SystemNotification$HibernateAccessOptimizer$vEJtuTJf",
    "fields": [
      {
        "name": "invocationTarget$am8blt0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.notification.SystemNotification$HibernateInstantiator$MPyCMEcw",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.push_notification.PushNotificationDeviceConfiguration$HibernateAccessOptimizer$nw2jz6nz",
    "fields": [
      {
        "name": "invocationTarget$9lebig1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.push_notification.PushNotificationDeviceConfiguration$HibernateInstantiator$TzUD5QjH",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.LiquibaseConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.env.Environment",
          "org.springframework.boot.info.BuildProperties",
          "java.util.Optional"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "storeCurrentVersionToDatabase",
        "parameterTypes": [
          "org.springframework.boot.context.event.ApplicationReadyEvent"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.LiquibaseConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.LiquibaseConfiguration$$SpringCGLIB$$FastClass$$0",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.config.LiquibaseConfiguration$$SpringCGLIB$$FastClass$$1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.AbstractAuditingEntity$HibernateAccessOptimizer$3FkR2pRb",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.AbstractAuditingEntity$HibernateAccessOptimizer$4VKF7ffK",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.AbstractAuditingEntity$HibernateAccessOptimizer$JIbTVPzl",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.AbstractAuditingEntity$HibernateAccessOptimizer$ThyYz5nP",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.AbstractAuditingEntity$HibernateAccessOptimizer$hNZFxRKr",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.AbstractAuditingEntity$HibernateAccessOptimizer$iDTU4qYi",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.AbstractAuditingEntity$HibernateAccessOptimizer$jzQfeHP9",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.AbstractAuditingEntity$HibernateAccessOptimizer$yMl0BlK3",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.Authority$HibernateAccessOptimizer$hjrYGliA",
    "fields": [
      {
        "name": "invocationTarget$8vs4q70"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.Authority$HibernateInstantiator$P7I40r7O",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.CleanupJobExecution$HibernateAccessOptimizer$i7xkVAUU",
    "fields": [
      {
        "name": "invocationTarget$qr26fg0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.CleanupJobExecution$HibernateInstantiator$O23URbr5",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.Course$HibernateAccessOptimizer$STdh4BYu",
    "fields": [
      {
        "name": "invocationTarget$ibdavp1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.Course$HibernateInstantiator$H8r9vBQK",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.DataExport$HibernateAccessOptimizer$MvwjxT2K",
    "fields": [
      {
        "name": "invocationTarget$4ua7p81"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.DataExport$HibernateInstantiator$GXBIXxeR",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.FileUpload$HibernateAccessOptimizer$2uF5Jnds",
    "fields": [
      {
        "name": "invocationTarget$s13ps20"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.FileUpload$HibernateInstantiator$wTqTeYA1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.LLMTokenUsageRequest$HibernateAccessOptimizer$P8eRYcry",
    "fields": [
      {
        "name": "invocationTarget$15hqnn1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.LLMTokenUsageRequest$HibernateInstantiator$mQ8q9oex",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.LLMTokenUsageTrace$HibernateAccessOptimizer$H0hnRSFF",
    "fields": [
      {
        "name": "invocationTarget$nfvnmp0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.LLMTokenUsageTrace$HibernateInstantiator$WcwakirW",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.MigrationChangelog$HibernateAccessOptimizer$95izFavA",
    "fields": [
      {
        "name": "invocationTarget$on7a3n1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.MigrationChangelog$HibernateInstantiator$0koGjWVT",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.Organization$HibernateAccessOptimizer$UJMqCu55",
    "fields": [
      {
        "name": "invocationTarget$3dqtfu1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.Organization$HibernateInstantiator$gIv9sS48",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.PasskeyCredential$HibernateAccessOptimizer$L42sWcDA",
    "fields": [
      {
        "name": "invocationTarget$qmni551"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.PasskeyCredential$HibernateInstantiator$u5nW9IL5",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.PersistentAuditEvent$HibernateAccessOptimizer$cr1xOteY",
    "fields": [
      {
        "name": "invocationTarget$ods4bs0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.PersistentAuditEvent$HibernateInstantiator$MDr69cev",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.User$HibernateAccessOptimizer$FM4fywIk",
    "fields": [
      {
        "name": "invocationTarget$68d1120"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.User$HibernateInstantiator$XKDWBkgC",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.UserGroup$HibernateAccessOptimizer$z5MxrDOY",
    "fields": [
      {
        "name": "invocationTarget$0li8kv1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.UserGroup$HibernateInstantiator$G71RUfvX",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.User_Accessor_ic311w",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.Exam$HibernateAccessOptimizer$WoyAPE8k",
    "fields": [
      {
        "name": "invocationTarget$3s7t7a1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.Exam$HibernateInstantiator$HsnWmzWR",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.ExamSession$HibernateAccessOptimizer$3GQlWkSq",
    "fields": [
      {
        "name": "invocationTarget$ub0t4g1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.ExamSession$HibernateInstantiator$Cb06oQsL",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.ExamUser$HibernateAccessOptimizer$sVs93EzU",
    "fields": [
      {
        "name": "invocationTarget$1bcqka1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.ExamUser$HibernateInstantiator$prkXui61",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.ExerciseGroup$HibernateAccessOptimizer$GtEOiUnL",
    "fields": [
      {
        "name": "invocationTarget$631uds0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.ExerciseGroup$HibernateInstantiator$g06SSiGW",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.StudentExam$HibernateAccessOptimizer$bHksre8q",
    "fields": [
      {
        "name": "invocationTarget$94s1p01"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.StudentExam$HibernateInstantiator$qT8DXw5M",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.event.ExamAttendanceCheckEvent$HibernateAccessOptimizer$JUM59GPd",
    "fields": [
      {
        "name": "invocationTarget$5il9c10"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.event.ExamAttendanceCheckEvent$HibernateInstantiator$DxrzOLXm",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.event.ExamLiveEvent$HibernateAccessOptimizer$Ne1XXyo9",
    "fields": [
      {
        "name": "invocationTarget$ti6j4j0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.event.ExamWideAnnouncementEvent$HibernateAccessOptimizer$nvJ54K1D",
    "fields": [
      {
        "name": "invocationTarget$vp3sm61"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.event.ExamWideAnnouncementEvent$HibernateInstantiator$kaPyhSx4",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.event.ProblemStatementUpdateEvent$HibernateAccessOptimizer$XVeKLRSv",
    "fields": [
      {
        "name": "invocationTarget$k2v18s1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.event.ProblemStatementUpdateEvent$HibernateInstantiator$mMBilbwp",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.event.WorkingTimeUpdateEvent$HibernateAccessOptimizer$bOarb4H7",
    "fields": [
      {
        "name": "invocationTarget$ceiejr0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.event.WorkingTimeUpdateEvent$HibernateInstantiator$NJJQP4KQ",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.BaseExercise$HibernateAccessOptimizer$C91nyYVT",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.BaseExercise$HibernateAccessOptimizer$NAANT01o",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.BaseExercise$HibernateAccessOptimizer$XfQPGuFz",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.BaseExercise$HibernateAccessOptimizer$oDhnzuZ6",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.BaseExercise$HibernateAccessOptimizer$tCGuVIfm",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Exercise$HibernateAccessOptimizer$BtFTh3dg",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Exercise$HibernateAccessOptimizer$LMDscb2S",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Exercise$HibernateAccessOptimizer$SFokzSgZ",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Exercise$HibernateAccessOptimizer$qZb4icid",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Exercise$HibernateAccessOptimizer$s5jFHDFL",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Exercise$HibernateAccessOptimizer$tvPuraEc",
    "fields": [
      {
        "name": "invocationTarget$hhg8dn1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Submission$HibernateAccessOptimizer$DcYZGW2g",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Submission$HibernateAccessOptimizer$XHAa45aV",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Submission$HibernateAccessOptimizer$Zm6UAqBV",
    "fields": [
      {
        "name": "invocationTarget$veerm61"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Submission$HibernateAccessOptimizer$bqEtrGlr",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Submission$HibernateAccessOptimizer$pQmDeMTl",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Submission$HibernateAccessOptimizer$qP5hoess",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Submission$HibernateAccessOptimizer$rYIcehj5",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.SubmissionVersion$HibernateAccessOptimizer$G276f7CR",
    "fields": [
      {
        "name": "invocationTarget$1oas911"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.SubmissionVersion$HibernateInstantiator$lkxmFcpC",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Team$HibernateAccessOptimizer$bQ58IQKG",
    "fields": [
      {
        "name": "invocationTarget$l8tbag0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Team$HibernateInstantiator$GEJXy1JK",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.TeamAssignmentConfig$HibernateAccessOptimizer$HedsgA2W",
    "fields": [
      {
        "name": "invocationTarget$9t7c581"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.TeamAssignmentConfig$HibernateInstantiator$gyjS7RuX",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.participation.Participation$HibernateAccessOptimizer$3x5yCQoj",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.participation.Participation$HibernateAccessOptimizer$4G94xpd8",
    "fields": [
      {
        "name": "invocationTarget$2eokok0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.participation.Participation$HibernateAccessOptimizer$bjNOd0oa",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.participation.Participation$HibernateAccessOptimizer$sxaHt0v7",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.participation.StudentParticipation$HibernateAccessOptimizer$7Mkvc6nF",
    "fields": [
      {
        "name": "invocationTarget$ksm7si0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.participation.StudentParticipation$HibernateAccessOptimizer$Q8Wzxctc",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.participation.StudentParticipation$HibernateInstantiator$KWXEaYb3",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.fileupload.domain.FileUploadExercise$HibernateAccessOptimizer$LEYEEjTP",
    "fields": [
      {
        "name": "invocationTarget$r33l2b1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.fileupload.domain.FileUploadExercise$HibernateInstantiator$HQdTW42u",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.fileupload.domain.FileUploadSubmission$HibernateAccessOptimizer$vhpKJXuW",
    "fields": [
      {
        "name": "invocationTarget$qpndr11"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.fileupload.domain.FileUploadSubmission$HibernateInstantiator$WtKY7YTr",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.message.IrisJsonMessageContent$HibernateAccessOptimizer$RWoskIFK",
    "fields": [
      {
        "name": "invocationTarget$bnnt4d1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.message.IrisJsonMessageContent$HibernateInstantiator$IcNRxSOu",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.message.IrisMessage$HibernateAccessOptimizer$T4T5k7nU",
    "fields": [
      {
        "name": "invocationTarget$cu5aje0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.message.IrisMessage$HibernateInstantiator$tVOrZi3D",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.message.IrisMessageContent$HibernateAccessOptimizer$LtbBrAkV",
    "fields": [
      {
        "name": "invocationTarget$v05n3f1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.message.IrisTextMessageContent$HibernateAccessOptimizer$UkrOcoiN",
    "fields": [
      {
        "name": "invocationTarget$g1tofa1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.message.IrisTextMessageContent$HibernateInstantiator$jrdTcxtk",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisChatSession$HibernateAccessOptimizer$c9ZoMqx8",
    "fields": [
      {
        "name": "invocationTarget$pa1bq21"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisCourseChatSession$HibernateAccessOptimizer$ygAmsfUf",
    "fields": [
      {
        "name": "invocationTarget$grtuk50"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisCourseChatSession$HibernateInstantiator$rcppjomm",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisLectureChatSession$HibernateAccessOptimizer$5JWygbXQ",
    "fields": [
      {
        "name": "invocationTarget$b303p51"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisLectureChatSession$HibernateInstantiator$JaVIPTtk",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisProgrammingExerciseChatSession$HibernateAccessOptimizer$vQSO4duF",
    "fields": [
      {
        "name": "invocationTarget$o9vnkt0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisProgrammingExerciseChatSession$HibernateInstantiator$2hehlOyC",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisSession$HibernateAccessOptimizer$EyxVCYIK",
    "fields": [
      {
        "name": "invocationTarget$u411410"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisTextExerciseChatSession$HibernateAccessOptimizer$jfrPctA7",
    "fields": [
      {
        "name": "invocationTarget$ntkfaq0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisTextExerciseChatSession$HibernateInstantiator$FfGhzc2x",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisTutorSuggestionSession$HibernateAccessOptimizer$UiVphs33",
    "fields": [
      {
        "name": "invocationTarget$as6db71"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisTutorSuggestionSession$HibernateInstantiator$2IacdXXF",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisCompetencyGenerationSubSettings$HibernateAccessOptimizer$2jVPozPK",
    "fields": [
      {
        "name": "invocationTarget$h8h8cp1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisCompetencyGenerationSubSettings$HibernateInstantiator$jAPk530c",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisCourseChatSubSettings$HibernateAccessOptimizer$prueJuxh",
    "fields": [
      {
        "name": "invocationTarget$f37oce0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisCourseChatSubSettings$HibernateInstantiator$8guQPbkd",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisCourseSettings$HibernateAccessOptimizer$mbqnMScS",
    "fields": [
      {
        "name": "invocationTarget$521fhj0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisCourseSettings$HibernateInstantiator$obOzQbRe",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisExerciseSettings$HibernateAccessOptimizer$xywrBcH4",
    "fields": [
      {
        "name": "invocationTarget$1tc1020"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisExerciseSettings$HibernateInstantiator$hQQ06gIz",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisFaqIngestionSubSettings$HibernateAccessOptimizer$pHSaQRvE",
    "fields": [
      {
        "name": "invocationTarget$j628a20"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisFaqIngestionSubSettings$HibernateInstantiator$uuvYU352",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisGlobalSettings$HibernateAccessOptimizer$HEkEFVZP",
    "fields": [
      {
        "name": "invocationTarget$l8ea5j1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisGlobalSettings$HibernateInstantiator$PM7vUIma",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisLectureChatSubSettings$HibernateAccessOptimizer$esKwP0a2",
    "fields": [
      {
        "name": "invocationTarget$suihmc1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisLectureChatSubSettings$HibernateInstantiator$6DhYrBoB",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisLectureIngestionSubSettings$HibernateAccessOptimizer$rlOMYKwX",
    "fields": [
      {
        "name": "invocationTarget$2lenn41"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisLectureIngestionSubSettings$HibernateInstantiator$XtiOk38f",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisProgrammingExerciseChatSubSettings$HibernateAccessOptimizer$wrWIZaFd",
    "fields": [
      {
        "name": "invocationTarget$281ckp0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisProgrammingExerciseChatSubSettings$HibernateInstantiator$WLZeeHpP",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisSettings$HibernateAccessOptimizer$SACtkEsd",
    "fields": [
      {
        "name": "invocationTarget$2d3sbt1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisSubSettings$HibernateAccessOptimizer$WslSh0UD",
    "fields": [
      {
        "name": "invocationTarget$blaprl1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisTextExerciseChatSubSettings$HibernateAccessOptimizer$eULFOJVp",
    "fields": [
      {
        "name": "invocationTarget$mahb1o0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisTextExerciseChatSubSettings$HibernateInstantiator$a19LGt9L",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisTutorSuggestionSubSettings$HibernateAccessOptimizer$JIkmueRe",
    "fields": [
      {
        "name": "invocationTarget$jktflk0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisTutorSuggestionSubSettings$HibernateInstantiator$zIkYOswx",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.Attachment$HibernateAccessOptimizer$8cac7H5L",
    "fields": [
      {
        "name": "invocationTarget$brko2f0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.Attachment$HibernateInstantiator$wXMqYav3",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.AttachmentVideoUnit$HibernateAccessOptimizer$2mViLlVF",
    "fields": [
      {
        "name": "invocationTarget$g5ldes1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.AttachmentVideoUnit$HibernateInstantiator$v1NO53jm",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.Lecture$HibernateAccessOptimizer$oMU59Z0u",
    "fields": [
      {
        "name": "invocationTarget$7m76d30"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.Lecture$HibernateInstantiator$UgGlwhDa",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.LectureTranscription$HibernateAccessOptimizer$VlL3mq7R",
    "fields": [
      {
        "name": "invocationTarget$sgm4pc0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.LectureTranscription$HibernateInstantiator$LY89DqGZ",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.LectureUnit$HibernateAccessOptimizer$foW0109c",
    "fields": [
      {
        "name": "invocationTarget$q08oid1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.LectureUnitCompletion$HibernateAccessOptimizer$TgYy7J53",
    "fields": [
      {
        "name": "invocationTarget$s4lb4d0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.LectureUnitCompletion$HibernateInstantiator$gXFqwPiw",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.OnlineUnit$HibernateAccessOptimizer$lH6s7dIk",
    "fields": [
      {
        "name": "invocationTarget$qldmfa0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.OnlineUnit$HibernateInstantiator$di94VDXz",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.Slide$HibernateAccessOptimizer$z8TgHlhh",
    "fields": [
      {
        "name": "invocationTarget$vj43i50"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.Slide$HibernateInstantiator$xFY3EdvI",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.TextUnit$HibernateAccessOptimizer$CxT1khw9",
    "fields": [
      {
        "name": "invocationTarget$v94odr1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.TextUnit$HibernateInstantiator$WOzCiElL",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lti.domain.LtiPlatformConfiguration$HibernateAccessOptimizer$WOgu73x7",
    "fields": [
      {
        "name": "invocationTarget$q4ta4o0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lti.domain.LtiPlatformConfiguration$HibernateInstantiator$alGJ1BbT",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lti.domain.LtiResourceLaunch$HibernateAccessOptimizer$qg2kntNp",
    "fields": [
      {
        "name": "invocationTarget$1h214g1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lti.domain.LtiResourceLaunch$HibernateInstantiator$IfATcI8W",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lti.domain.OnlineCourseConfiguration$HibernateAccessOptimizer$koEAoX85",
    "fields": [
      {
        "name": "invocationTarget$sdnr2b0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lti.domain.OnlineCourseConfiguration$HibernateInstantiator$xdJhcrVb",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.modeling.domain.ApollonDiagram$HibernateAccessOptimizer$Zxi9Ackr",
    "fields": [
      {
        "name": "invocationTarget$q5apt80"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.modeling.domain.ApollonDiagram$HibernateInstantiator$EPF79Maz",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.modeling.domain.ModelingExercise$HibernateAccessOptimizer$sFR8Vu8u",
    "fields": [
      {
        "name": "invocationTarget$gu7cfk1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.modeling.domain.ModelingExercise$HibernateInstantiator$kWCiiUvS",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.modeling.domain.ModelingSubmission$HibernateAccessOptimizer$Zu1H44jM",
    "fields": [
      {
        "name": "invocationTarget$9gmck71"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.modeling.domain.ModelingSubmission$HibernateInstantiator$eS0JQHQ3",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismCase$HibernateAccessOptimizer$kopTGv5x",
    "fields": [
      {
        "name": "invocationTarget$jno05p1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismCase$HibernateInstantiator$eO9TFOlu",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismComparison$HibernateAccessOptimizer$LtgKv6DH",
    "fields": [
      {
        "name": "invocationTarget$994e9d0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismComparison$HibernateInstantiator$OCOa0dXj",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismDetectionConfig$HibernateAccessOptimizer$wzW8xHC1",
    "fields": [
      {
        "name": "invocationTarget$86ld4u1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismDetectionConfig$HibernateInstantiator$ChO48m5t",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismResult$HibernateAccessOptimizer$Oet7a9Tx",
    "fields": [
      {
        "name": "invocationTarget$pe2ecr0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismResult$HibernateInstantiator$OnBXpP0x",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismSubmission$HibernateAccessOptimizer$BUUqJH7Y",
    "fields": [
      {
        "name": "invocationTarget$nige3q0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismSubmission$HibernateInstantiator$siy0FAaU",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismSubmissionElement$HibernateAccessOptimizer$yvrXVEju",
    "fields": [
      {
        "name": "invocationTarget$tllccj0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismSubmissionElement$HibernateInstantiator$BJ5aMhqs",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.AuxiliaryRepository$HibernateAccessOptimizer$cuAfqaL0",
    "fields": [
      {
        "name": "invocationTarget$ia41mg1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.AuxiliaryRepository$HibernateInstantiator$jMptmUvz",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ParticipationVCSAccessToken$HibernateAccessOptimizer$5yERE1Jx",
    "fields": [
      {
        "name": "invocationTarget$a6mpl91"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ParticipationVCSAccessToken$HibernateInstantiator$vqQsc2JG",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExercise$HibernateAccessOptimizer$zYTrQrOc",
    "fields": [
      {
        "name": "invocationTarget$i7ul5p1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExercise$HibernateInstantiator$eHS5eqOn",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseBuildConfig$HibernateAccessOptimizer$VDORq24y",
    "fields": [
      {
        "name": "invocationTarget$0a36m11"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseBuildConfig$HibernateInstantiator$PHT8KJm0",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseBuildStatistics$HibernateAccessOptimizer$8TiiG17V",
    "fields": [
      {
        "name": "invocationTarget$dq6k161"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseBuildStatistics$HibernateInstantiator$kCqhmgGV",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseStudentParticipation$HibernateAccessOptimizer$pTWDqRqw",
    "fields": [
      {
        "name": "invocationTarget$p3kgls1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseStudentParticipation$HibernateInstantiator$eXssh0NJ",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseTask$HibernateAccessOptimizer$3jDcIqVL",
    "fields": [
      {
        "name": "invocationTarget$6u0cnm1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseTask$HibernateInstantiator$KKJRukIt",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseTestCase$HibernateAccessOptimizer$zO3jQWhd",
    "fields": [
      {
        "name": "invocationTarget$qvqn500"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseTestCase$HibernateInstantiator$5RjqbxLI",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingSubmission$HibernateAccessOptimizer$UqLvIJu7",
    "fields": [
      {
        "name": "invocationTarget$c64a0q0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingSubmission$HibernateInstantiator$q7Sg6lOz",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.SolutionProgrammingExerciseParticipation$HibernateAccessOptimizer$ZR38XJyV",
    "fields": [
      {
        "name": "invocationTarget$boaf651"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.SolutionProgrammingExerciseParticipation$HibernateInstantiator$HmbjO8Vy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.StaticCodeAnalysisCategory$HibernateAccessOptimizer$v4HrpDTf",
    "fields": [
      {
        "name": "invocationTarget$ebevc61"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.StaticCodeAnalysisCategory$HibernateInstantiator$Ind8twr9",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.TemplateProgrammingExerciseParticipation$HibernateAccessOptimizer$qKteUJGt",
    "fields": [
      {
        "name": "invocationTarget$m4k62j1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.TemplateProgrammingExerciseParticipation$HibernateInstantiator$KKt9uG7N",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.UserSshPublicKey$HibernateAccessOptimizer$5HJot60i",
    "fields": [
      {
        "name": "invocationTarget$11tq171"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.UserSshPublicKey$HibernateInstantiator$NLb1YFeQ",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.VcsAccessLog$HibernateAccessOptimizer$6BoVz1E6",
    "fields": [
      {
        "name": "invocationTarget$8vrp5q1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.VcsAccessLog$HibernateInstantiator$pC6XZ00E",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.build.BuildJob$HibernateAccessOptimizer$8oFDKfBG",
    "fields": [
      {
        "name": "invocationTarget$76q53v0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.build.BuildJob$HibernateInstantiator$SFpXv69S",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.build.BuildLogEntry$HibernateAccessOptimizer$xThbyD0Y",
    "fields": [
      {
        "name": "invocationTarget$bvaqtv1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.build.BuildLogEntry$HibernateInstantiator$xnnw0sQ8",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.build.BuildPlan$HibernateAccessOptimizer$lEz9Ly3Z",
    "fields": [
      {
        "name": "invocationTarget$hpnhur1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.build.BuildPlan$HibernateInstantiator$SINqlAoN",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ide.Ide$HibernateAccessOptimizer$QTIvEOs8",
    "fields": [
      {
        "name": "invocationTarget$h029d70"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ide.Ide$HibernateInstantiator$BsHSh97G",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ide.UserIdeMapping$HibernateAccessOptimizer$ze1fJCBA",
    "fields": [
      {
        "name": "invocationTarget$hnt9os1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ide.UserIdeMapping$HibernateInstantiator$YaWjE9Cd",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.submissionpolicy.LockRepositoryPolicy$HibernateAccessOptimizer$X4YC64pp",
    "fields": [
      {
        "name": "invocationTarget$0n7bhn1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.submissionpolicy.LockRepositoryPolicy$HibernateInstantiator$MAWlATLO",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.submissionpolicy.SubmissionPenaltyPolicy$HibernateAccessOptimizer$ZJsk9Jfi",
    "fields": [
      {
        "name": "invocationTarget$8u327h0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.submissionpolicy.SubmissionPenaltyPolicy$HibernateInstantiator$0CkCALd8",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.submissionpolicy.SubmissionPolicy$HibernateAccessOptimizer$tIm5nuxQ",
    "fields": [
      {
        "name": "invocationTarget$nhtcnr0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.AbstractQuizSubmission$HibernateAccessOptimizer$7oOv65GP",
    "fields": [
      {
        "name": "invocationTarget$en1dr70"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.AnswerCounter$HibernateAccessOptimizer$WAHbszDX",
    "fields": [
      {
        "name": "invocationTarget$d6gd940"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.AnswerCounter$HibernateInstantiator$9q1g50ix",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.AnswerOption$HibernateAccessOptimizer$MYc89kin",
    "fields": [
      {
        "name": "invocationTarget$rkdre20"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.AnswerOption$HibernateInstantiator$JP464web",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DragAndDropMapping$HibernateAccessOptimizer$RD04RfYq",
    "fields": [
      {
        "name": "invocationTarget$mfuatv0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DragAndDropMapping$HibernateInstantiator$xDXMaDka",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DragAndDropQuestion$HibernateAccessOptimizer$XFUhO6UK",
    "fields": [
      {
        "name": "invocationTarget$e732511"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DragAndDropQuestion$HibernateInstantiator$GdiQULOP",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DragAndDropQuestionStatistic$HibernateAccessOptimizer$8zNS5pzk",
    "fields": [
      {
        "name": "invocationTarget$4euj2g0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DragAndDropQuestionStatistic$HibernateInstantiator$lnKtD0tL",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DragAndDropSubmittedAnswer$HibernateAccessOptimizer$LmKPMnQm",
    "fields": [
      {
        "name": "invocationTarget$cqmupq1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DragAndDropSubmittedAnswer$HibernateInstantiator$IKIzesO5",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DragItem$HibernateAccessOptimizer$pVB5FYz1",
    "fields": [
      {
        "name": "invocationTarget$6h2rs11"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DragItem$HibernateInstantiator$3V8BTpdd",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DropLocation$HibernateAccessOptimizer$AlcOJFsN",
    "fields": [
      {
        "name": "invocationTarget$aph9501"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DropLocation$HibernateInstantiator$nHsTIHgM",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DropLocationCounter$HibernateAccessOptimizer$YaZecMXg",
    "fields": [
      {
        "name": "invocationTarget$3cpdjb1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DropLocationCounter$HibernateInstantiator$pObuARZE",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.MultipleChoiceQuestion$HibernateAccessOptimizer$0wUI8UZy",
    "fields": [
      {
        "name": "invocationTarget$o9uqes1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.MultipleChoiceQuestion$HibernateInstantiator$IEXcwN8y",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.MultipleChoiceQuestionStatistic$HibernateAccessOptimizer$9NHVq79A",
    "fields": [
      {
        "name": "invocationTarget$nr83nu1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.MultipleChoiceQuestionStatistic$HibernateInstantiator$rGyNdjfC",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.MultipleChoiceSubmittedAnswer$HibernateAccessOptimizer$zawrXvle",
    "fields": [
      {
        "name": "invocationTarget$hpkric1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.MultipleChoiceSubmittedAnswer$HibernateInstantiator$DoFuTsF3",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.PointCounter$HibernateAccessOptimizer$IaaDAQbz",
    "fields": [
      {
        "name": "invocationTarget$urlvuk1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.PointCounter$HibernateInstantiator$7yXFg6Oq",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizBatch$HibernateAccessOptimizer$lmDOF4sc",
    "fields": [
      {
        "name": "invocationTarget$7uv9vp1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizBatch$HibernateInstantiator$d3bmQgr6",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizExercise$HibernateAccessOptimizer$yocjKi8c",
    "fields": [
      {
        "name": "invocationTarget$ejmgg90"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizExercise$HibernateInstantiator$8wjBQje2",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizPointStatistic$HibernateAccessOptimizer$LyDDmNsj",
    "fields": [
      {
        "name": "invocationTarget$vt5kap0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizPointStatistic$HibernateInstantiator$75lRbOEl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizQuestion$HibernateAccessOptimizer$qUIROd3I",
    "fields": [
      {
        "name": "invocationTarget$ea51uv0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizQuestionProgress$HibernateAccessOptimizer$BQjvDOGa",
    "fields": [
      {
        "name": "invocationTarget$jql5q90"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizQuestionProgress$HibernateInstantiator$n3fggQGA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizQuestionStatistic$HibernateAccessOptimizer$RrrEOmTJ",
    "fields": [
      {
        "name": "invocationTarget$kai8e71"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizStatistic$HibernateAccessOptimizer$Cmq19zvc",
    "fields": [
      {
        "name": "invocationTarget$4m1ojq0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizStatisticCounter$HibernateAccessOptimizer$DvR9Nbil",
    "fields": [
      {
        "name": "invocationTarget$f5uhi50"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizSubmission$HibernateAccessOptimizer$HB9gkYIb",
    "fields": [
      {
        "name": "invocationTarget$5ml44j0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizSubmission$HibernateInstantiator$iWZJpsbf",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerMapping$HibernateAccessOptimizer$vMh9hyo4",
    "fields": [
      {
        "name": "invocationTarget$2aq4i60"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerMapping$HibernateInstantiator$mgm2nZgu",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerQuestion$HibernateAccessOptimizer$03Io3IzW",
    "fields": [
      {
        "name": "invocationTarget$6tcnu61"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerQuestion$HibernateInstantiator$eR1RVPkQ",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerQuestionStatistic$HibernateAccessOptimizer$x7hynB0L",
    "fields": [
      {
        "name": "invocationTarget$392k781"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerQuestionStatistic$HibernateInstantiator$GpiE8GTd",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSolution$HibernateAccessOptimizer$47DOVfiW",
    "fields": [
      {
        "name": "invocationTarget$ocg1e61"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSolution$HibernateInstantiator$b41XqQwq",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSpot$HibernateAccessOptimizer$wGfI3hfq",
    "fields": [
      {
        "name": "invocationTarget$u5a2m90"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSpot$HibernateInstantiator$fa7TWoCj",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSpotCounter$HibernateAccessOptimizer$6hrnTu6x",
    "fields": [
      {
        "name": "invocationTarget$5igsev0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSpotCounter$HibernateInstantiator$RqSojfoH",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSubmittedAnswer$HibernateAccessOptimizer$ILmLQM8s",
    "fields": [
      {
        "name": "invocationTarget$i2i9rp0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSubmittedAnswer$HibernateInstantiator$pOlgnrX9",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSubmittedText$HibernateAccessOptimizer$NCEUEHDT",
    "fields": [
      {
        "name": "invocationTarget$k6fa3q0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSubmittedText$HibernateInstantiator$7hdplcuJ",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.SubmittedAnswer$HibernateAccessOptimizer$q7fTvOLd",
    "fields": [
      {
        "name": "invocationTarget$k8t1m10"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.domain.TextAssessmentEvent$HibernateAccessOptimizer$0c17Qmpv",
    "fields": [
      {
        "name": "invocationTarget$9053gq0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.domain.TextAssessmentEvent$HibernateInstantiator$SkZnzTfZ",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.domain.TextBlock$HibernateAccessOptimizer$UXO7rsm0",
    "fields": [
      {
        "name": "invocationTarget$sh6nne0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.domain.TextBlock$HibernateInstantiator$zJHgk60c",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.domain.TextExercise$HibernateAccessOptimizer$1Tgs5Syo",
    "fields": [
      {
        "name": "invocationTarget$j0kh6c0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.domain.TextExercise$HibernateInstantiator$euJpIVMN",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.domain.TextSubmission$HibernateAccessOptimizer$tfVPyQ0f",
    "fields": [
      {
        "name": "invocationTarget$ncdal80"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.domain.TextSubmission$HibernateInstantiator$Ap9onje6",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroup$HibernateAccessOptimizer$CabV3Vlh",
    "fields": [
      {
        "name": "invocationTarget$3nbdai0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroup$HibernateInstantiator$JxfKm20O",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupFreePeriod$HibernateAccessOptimizer$1qruVoVD",
    "fields": [
      {
        "name": "invocationTarget$nhbuej0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupFreePeriod$HibernateInstantiator$RpAWzFZr",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupRegistration$HibernateAccessOptimizer$8zak4cDl",
    "fields": [
      {
        "name": "invocationTarget$s8qocu1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupRegistration$HibernateInstantiator$MoWZmPjI",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupSchedule$HibernateAccessOptimizer$eFYqsqhi",
    "fields": [
      {
        "name": "invocationTarget$u4rgse0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupSchedule$HibernateInstantiator$TnnLyknR",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupSession$HibernateAccessOptimizer$JHuWr09o",
    "fields": [
      {
        "name": "invocationTarget$htl74v0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupSession$HibernateInstantiator$o4I7VeTH",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupsConfiguration$HibernateAccessOptimizer$vR08UAAI",
    "fields": [
      {
        "name": "invocationTarget$74ipuo1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupsConfiguration$HibernateInstantiator$ibNMxPo6",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.beans.PropertyVetoException"
  },
  {
    "name": "java.lang.Configurable"
  },
  {
    "name": "java.lang.ObjectBeanInfo"
  },
  {
    "name": "java.lang.ObjectCustomizer"
  },
  {
    "name": "java.security.interfaces.RSAPrivateKey"
  },
  {
    "name": "java.security.interfaces.RSAPublicKey"
  },
  {
    "name": "java.util.concurrent.ConcurrentHashMap",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.AbstractExtensibleObject",
    "queryAllPublicMethods": true
  },
  {
    "name": "liquibase.AbstractExtensibleObjectBeanInfo"
  },
  {
    "name": "liquibase.AbstractExtensibleObjectCustomizer"
  },
  {
    "name": "liquibase.ExtensibleObject",
    "queryAllPublicMethods": true
  },
  {
    "name": "liquibase.GlobalConfiguration"
  },
  {
    "name": "liquibase.Liquibase"
  },
  {
    "name": "liquibase.UpdateSummaryEnum"
  },
  {
    "name": "liquibase.UpdateSummaryOutputEnum"
  },
  {
    "name": "liquibase.analytics.AnalyticsFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "liquibase.Scope"
        ]
      }
    ]
  },
  {
    "name": "liquibase.analytics.LiquibaseAnalyticsListener"
  },
  {
    "name": "liquibase.analytics.NoOpAnalyticsListener"
  },
  {
    "name": "liquibase.analytics.configuration.AnalyticsArgs"
  },
  {
    "name": "liquibase.analytics.configuration.AnalyticsConfigurationFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "liquibase.Scope"
        ]
      }
    ]
  },
  {
    "name": "liquibase.analytics.configuration.LiquibaseRemoteAnalyticsConfiguration"
  },
  {
    "name": "liquibase.change.AbstractChange",
    "queryAllPublicMethods": true
  },
  {
    "name": "liquibase.change.AbstractChangeBeanInfo"
  },
  {
    "name": "liquibase.change.AbstractChangeCustomizer"
  },
  {
    "name": "liquibase.change.AbstractSQLChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "isIgnoreOriginalSplitStatements",
        "parameterTypes": []
      },
      {
        "name": "isSplitStatements",
        "parameterTypes": []
      },
      {
        "name": "isStripComments",
        "parameterTypes": []
      },
      {
        "name": "setDbms",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.AbstractSQLChangeBeanInfo"
  },
  {
    "name": "liquibase.change.AbstractSQLChangeCustomizer"
  },
  {
    "name": "liquibase.change.AbstractTableChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "setTableName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.AbstractTableChangeBeanInfo"
  },
  {
    "name": "liquibase.change.AbstractTableChangeCustomizer"
  },
  {
    "name": "liquibase.change.AddColumnConfig",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.change.Change",
    "queryAllPublicMethods": true
  },
  {
    "name": "liquibase.change.ChangeFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "liquibase.Scope"
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.ChangeWithColumns",
    "queryAllPublicMethods": true
  },
  {
    "name": "liquibase.change.ColumnConfig",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.change.ConstraintsConfig",
    "allDeclaredFields": true
  },
  {
    "name": "liquibase.change.DbmsTargetedChange",
    "queryAllPublicMethods": true
  },
  {
    "name": "liquibase.change.ReplaceIfExists",
    "queryAllPublicMethods": true
  },
  {
    "name": "liquibase.change.core.AbstractModifyDataChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getCatalogName",
        "parameterTypes": []
      },
      {
        "name": "getSchemaName",
        "parameterTypes": []
      },
      {
        "name": "getTableName",
        "parameterTypes": []
      },
      {
        "name": "getWhere",
        "parameterTypes": []
      },
      {
        "name": "setCatalogName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSchemaName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTableName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWhere",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.AbstractModifyDataChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.AbstractModifyDataChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.AddAutoIncrementChange",
    "queryAllPublicMethods": true
  },
  {
    "name": "liquibase.change.core.AddAutoIncrementChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.AddAutoIncrementChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.AddColumnChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getCatalogName",
        "parameterTypes": []
      },
      {
        "name": "getColumns",
        "parameterTypes": []
      },
      {
        "name": "getSchemaName",
        "parameterTypes": []
      },
      {
        "name": "getTableName",
        "parameterTypes": []
      },
      {
        "name": "setCatalogName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSchemaName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTableName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.AddColumnChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.AddColumnChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.AddDefaultValueChange",
    "queryAllPublicMethods": true
  },
  {
    "name": "liquibase.change.core.AddDefaultValueChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.AddDefaultValueChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.AddForeignKeyConstraintChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getBaseColumnNames",
        "parameterTypes": []
      },
      {
        "name": "getBaseTableCatalogName",
        "parameterTypes": []
      },
      {
        "name": "getBaseTableName",
        "parameterTypes": []
      },
      {
        "name": "getBaseTableSchemaName",
        "parameterTypes": []
      },
      {
        "name": "getConstraintName",
        "parameterTypes": []
      },
      {
        "name": "getDeferrable",
        "parameterTypes": []
      },
      {
        "name": "getDeleteCascade",
        "parameterTypes": []
      },
      {
        "name": "getInitiallyDeferred",
        "parameterTypes": []
      },
      {
        "name": "getOnDelete",
        "parameterTypes": []
      },
      {
        "name": "getOnUpdate",
        "parameterTypes": []
      },
      {
        "name": "getReferencedColumnNames",
        "parameterTypes": []
      },
      {
        "name": "getReferencedTableCatalogName",
        "parameterTypes": []
      },
      {
        "name": "getReferencedTableName",
        "parameterTypes": []
      },
      {
        "name": "getReferencedTableSchemaName",
        "parameterTypes": []
      },
      {
        "name": "getReferencesUniqueColumn",
        "parameterTypes": []
      },
      {
        "name": "getValidate",
        "parameterTypes": []
      },
      {
        "name": "setBaseColumnNames",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBaseTableCatalogName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBaseTableName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBaseTableSchemaName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConstraintName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeferrable",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDeleteCascade",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setInitiallyDeferred",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setOnDelete",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOnUpdate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReferencedColumnNames",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReferencedTableCatalogName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReferencedTableName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReferencedTableSchemaName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReferencesUniqueColumn",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setValidate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.AddForeignKeyConstraintChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.AddForeignKeyConstraintChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.AddLookupTableChange",
    "queryAllPublicMethods": true
  },
  {
    "name": "liquibase.change.core.AddLookupTableChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.AddLookupTableChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.AddNotNullConstraintChange",
    "queryAllPublicMethods": true
  },
  {
    "name": "liquibase.change.core.AddNotNullConstraintChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.AddNotNullConstraintChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.AddPrimaryKeyChange",
    "queryAllPublicMethods": true
  },
  {
    "name": "liquibase.change.core.AddPrimaryKeyChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.AddPrimaryKeyChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.AddUniqueConstraintChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getCatalogName",
        "parameterTypes": []
      },
      {
        "name": "getClustered",
        "parameterTypes": []
      },
      {
        "name": "getColumnNames",
        "parameterTypes": []
      },
      {
        "name": "getConstraintName",
        "parameterTypes": []
      },
      {
        "name": "getDeferrable",
        "parameterTypes": []
      },
      {
        "name": "getDisabled",
        "parameterTypes": []
      },
      {
        "name": "getForIndexCatalogName",
        "parameterTypes": []
      },
      {
        "name": "getForIndexName",
        "parameterTypes": []
      },
      {
        "name": "getForIndexSchemaName",
        "parameterTypes": []
      },
      {
        "name": "getInitiallyDeferred",
        "parameterTypes": []
      },
      {
        "name": "getSchemaName",
        "parameterTypes": []
      },
      {
        "name": "getTableName",
        "parameterTypes": []
      },
      {
        "name": "getTablespace",
        "parameterTypes": []
      },
      {
        "name": "getValidate",
        "parameterTypes": []
      },
      {
        "name": "setCatalogName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClustered",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setColumnNames",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConstraintName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeferrable",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDisabled",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setForIndexCatalogName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setForIndexName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setForIndexSchemaName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInitiallyDeferred",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSchemaName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTableName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTablespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValidate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.AddUniqueConstraintChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.AddUniqueConstraintChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.AlterSequenceChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "isOrdered",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.change.core.AlterSequenceChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.AlterSequenceChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.CreateIndexChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getAssociatedWith",
        "parameterTypes": []
      },
      {
        "name": "getCatalogName",
        "parameterTypes": []
      },
      {
        "name": "getClustered",
        "parameterTypes": []
      },
      {
        "name": "getColumns",
        "parameterTypes": []
      },
      {
        "name": "getIndexName",
        "parameterTypes": []
      },
      {
        "name": "getSchemaName",
        "parameterTypes": []
      },
      {
        "name": "getTableName",
        "parameterTypes": []
      },
      {
        "name": "getTablespace",
        "parameterTypes": []
      },
      {
        "name": "getUsing",
        "parameterTypes": []
      },
      {
        "name": "isUnique",
        "parameterTypes": []
      },
      {
        "name": "setAssociatedWith",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCatalogName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClustered",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setIndexName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSchemaName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTableName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTablespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUnique",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setUsing",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.CreateIndexChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.CreateIndexChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.CreateProcedureChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "isRelativeToChangelogFile",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.change.core.CreateProcedureChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.CreateProcedureChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.CreateSequenceChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "isOrdered",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.change.core.CreateSequenceChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.CreateSequenceChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.CreateTableChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getCatalogName",
        "parameterTypes": []
      },
      {
        "name": "getColumns",
        "parameterTypes": []
      },
      {
        "name": "getIfNotExists",
        "parameterTypes": []
      },
      {
        "name": "getRemarks",
        "parameterTypes": []
      },
      {
        "name": "getRowDependencies",
        "parameterTypes": []
      },
      {
        "name": "getSchemaName",
        "parameterTypes": []
      },
      {
        "name": "getTableName",
        "parameterTypes": []
      },
      {
        "name": "getTableType",
        "parameterTypes": []
      },
      {
        "name": "getTablespace",
        "parameterTypes": []
      },
      {
        "name": "setCatalogName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIfNotExists",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setRemarks",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRowDependencies",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSchemaName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTableName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTableType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTablespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.CreateTableChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.CreateTableChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.CreateViewChange",
    "queryAllPublicMethods": true
  },
  {
    "name": "liquibase.change.core.CreateViewChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.CreateViewChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.DeleteDataChange",
    "queryAllPublicMethods": true
  },
  {
    "name": "liquibase.change.core.DeleteDataChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.DeleteDataChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.DropAllForeignKeyConstraintsChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getBaseTableCatalogName",
        "parameterTypes": []
      },
      {
        "name": "getBaseTableName",
        "parameterTypes": []
      },
      {
        "name": "getBaseTableSchemaName",
        "parameterTypes": []
      },
      {
        "name": "setBaseTableName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.DropAllForeignKeyConstraintsChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.DropAllForeignKeyConstraintsChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.DropColumnChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getCatalogName",
        "parameterTypes": []
      },
      {
        "name": "getColumnName",
        "parameterTypes": []
      },
      {
        "name": "getColumns",
        "parameterTypes": []
      },
      {
        "name": "getSchemaName",
        "parameterTypes": []
      },
      {
        "name": "getTableName",
        "parameterTypes": []
      },
      {
        "name": "setCatalogName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setColumnName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSchemaName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTableName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.DropColumnChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.DropColumnChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.DropDefaultValueChange",
    "queryAllPublicMethods": true
  },
  {
    "name": "liquibase.change.core.DropDefaultValueChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.DropDefaultValueChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.DropForeignKeyConstraintChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getBaseTableCatalogName",
        "parameterTypes": []
      },
      {
        "name": "getBaseTableName",
        "parameterTypes": []
      },
      {
        "name": "getBaseTableSchemaName",
        "parameterTypes": []
      },
      {
        "name": "getConstraintName",
        "parameterTypes": []
      },
      {
        "name": "setBaseTableCatalogName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBaseTableName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBaseTableSchemaName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConstraintName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.DropForeignKeyConstraintChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.DropForeignKeyConstraintChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.DropIndexChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getCatalogName",
        "parameterTypes": []
      },
      {
        "name": "getIndexName",
        "parameterTypes": []
      },
      {
        "name": "getSchemaName",
        "parameterTypes": []
      },
      {
        "name": "getTableName",
        "parameterTypes": []
      },
      {
        "name": "setCatalogName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIndexName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSchemaName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTableName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.DropIndexChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.DropIndexChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.DropNotNullConstraintChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getCatalogName",
        "parameterTypes": []
      },
      {
        "name": "getColumnDataType",
        "parameterTypes": []
      },
      {
        "name": "getColumnName",
        "parameterTypes": []
      },
      {
        "name": "getConstraintName",
        "parameterTypes": []
      },
      {
        "name": "getSchemaName",
        "parameterTypes": []
      },
      {
        "name": "getTableName",
        "parameterTypes": []
      },
      {
        "name": "setCatalogName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setColumnDataType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setColumnName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConstraintName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSchemaName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTableName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.DropNotNullConstraintChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.DropNotNullConstraintChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.DropPrimaryKeyChange",
    "queryAllPublicMethods": true
  },
  {
    "name": "liquibase.change.core.DropPrimaryKeyChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.DropPrimaryKeyChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.DropProcedureChange",
    "queryAllPublicMethods": true
  },
  {
    "name": "liquibase.change.core.DropProcedureChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.DropProcedureChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.DropSequenceChange",
    "queryAllPublicMethods": true
  },
  {
    "name": "liquibase.change.core.DropSequenceChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.DropSequenceChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.DropTableChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getCatalogName",
        "parameterTypes": []
      },
      {
        "name": "getSchemaName",
        "parameterTypes": []
      },
      {
        "name": "getTableName",
        "parameterTypes": []
      },
      {
        "name": "isCascadeConstraints",
        "parameterTypes": []
      },
      {
        "name": "setCascadeConstraints",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setCatalogName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSchemaName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTableName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.DropTableChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.DropTableChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.DropUniqueConstraintChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setConstraintName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTableName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.DropUniqueConstraintChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.DropUniqueConstraintChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.DropViewChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "isIfExists",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.change.core.DropViewChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.DropViewChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.EmptyChange",
    "queryAllPublicMethods": true
  },
  {
    "name": "liquibase.change.core.EmptyChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.EmptyChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.ExecuteShellCommandChange",
    "queryAllPublicMethods": true
  },
  {
    "name": "liquibase.change.core.ExecuteShellCommandChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.ExecuteShellCommandChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.InsertDataChange",
    "queryAllPublicMethods": true
  },
  {
    "name": "liquibase.change.core.InsertDataChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.InsertDataChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.LoadDataChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getFile",
        "parameterTypes": []
      },
      {
        "name": "getTableName",
        "parameterTypes": []
      },
      {
        "name": "isRelativeToChangelogFile",
        "parameterTypes": []
      },
      {
        "name": "setCommentLineStartsWith",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFile",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQuotchar",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSeparator",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.LoadDataChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.LoadDataChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.LoadUpdateDataChange",
    "queryAllPublicMethods": true
  },
  {
    "name": "liquibase.change.core.LoadUpdateDataChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.LoadUpdateDataChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.MergeColumnChange",
    "queryAllPublicMethods": true
  },
  {
    "name": "liquibase.change.core.MergeColumnChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.MergeColumnChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.ModifyDataTypeChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getCatalogName",
        "parameterTypes": []
      },
      {
        "name": "getColumnName",
        "parameterTypes": []
      },
      {
        "name": "getNewDataType",
        "parameterTypes": []
      },
      {
        "name": "getSchemaName",
        "parameterTypes": []
      },
      {
        "name": "getTableName",
        "parameterTypes": []
      },
      {
        "name": "setCatalogName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setColumnName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNewDataType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSchemaName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTableName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.ModifyDataTypeChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.ModifyDataTypeChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.OutputChange",
    "queryAllPublicMethods": true
  },
  {
    "name": "liquibase.change.core.OutputChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.OutputChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.RawSQLChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "isOriginalSplitStatements",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.change.core.RawSQLChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.RawSQLChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.RenameColumnChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getCatalogName",
        "parameterTypes": []
      },
      {
        "name": "getColumnDataType",
        "parameterTypes": []
      },
      {
        "name": "getNewColumnName",
        "parameterTypes": []
      },
      {
        "name": "getOldColumnName",
        "parameterTypes": []
      },
      {
        "name": "getRemarks",
        "parameterTypes": []
      },
      {
        "name": "getSchemaName",
        "parameterTypes": []
      },
      {
        "name": "getTableName",
        "parameterTypes": []
      },
      {
        "name": "setCatalogName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setColumnDataType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNewColumnName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOldColumnName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemarks",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSchemaName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTableName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.RenameColumnChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.RenameColumnChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.RenameSequenceChange",
    "queryAllPublicMethods": true
  },
  {
    "name": "liquibase.change.core.RenameSequenceChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.RenameSequenceChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.RenameTableChange",
    "queryAllPublicMethods": true
  },
  {
    "name": "liquibase.change.core.RenameTableChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.RenameTableChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.RenameViewChange",
    "queryAllPublicMethods": true
  },
  {
    "name": "liquibase.change.core.RenameViewChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.RenameViewChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.SQLFileChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "isDoExpandExpressionsInGenerateChecksum",
        "parameterTypes": []
      },
      {
        "name": "isOriginalSplitStatements",
        "parameterTypes": []
      },
      {
        "name": "isRelativeToChangelogFile",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.change.core.SQLFileChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.SQLFileChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.SetColumnRemarksChange",
    "queryAllPublicMethods": true
  },
  {
    "name": "liquibase.change.core.SetColumnRemarksChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.SetColumnRemarksChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.SetTableRemarksChange",
    "queryAllPublicMethods": true
  },
  {
    "name": "liquibase.change.core.SetTableRemarksChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.SetTableRemarksChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.StopChange",
    "queryAllPublicMethods": true
  },
  {
    "name": "liquibase.change.core.StopChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.StopChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.TagDatabaseChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "isKeepTagOnRollback",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.change.core.TagDatabaseChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.TagDatabaseChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.UpdateDataChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getColumns",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.change.core.UpdateDataChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.UpdateDataChangeCustomizer"
  },
  {
    "name": "liquibase.change.custom.CustomChangeWrapper",
    "queryAllPublicMethods": true
  },
  {
    "name": "liquibase.change.custom.CustomChangeWrapperBeanInfo"
  },
  {
    "name": "liquibase.change.custom.CustomChangeWrapperCustomizer"
  },
  {
    "name": "liquibase.changelog.ChangeLogHistoryServiceFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "liquibase.Scope"
        ]
      }
    ]
  },
  {
    "name": "liquibase.changelog.FastCheckService",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "liquibase.Scope"
        ]
      }
    ]
  },
  {
    "name": "liquibase.changelog.MockChangeLogHistoryService"
  },
  {
    "name": "liquibase.changelog.StandardChangeLogHistoryService",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.changelog.visitor.StandardValidatingVisitorGenerator"
  },
  {
    "name": "liquibase.changelog.visitor.ValidatingVisitorGeneratorFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "liquibase.Scope"
        ]
      }
    ]
  },
  {
    "name": "liquibase.changeset.StandardChangeSetService"
  },
  {
    "name": "liquibase.command.CommandFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "liquibase.Scope"
        ]
      }
    ]
  },
  {
    "name": "liquibase.command.core.CalculateChecksumCommandStep"
  },
  {
    "name": "liquibase.command.core.ChangelogSyncCommandStep"
  },
  {
    "name": "liquibase.command.core.ChangelogSyncSqlCommandStep"
  },
  {
    "name": "liquibase.command.core.ChangelogSyncToTagCommandStep"
  },
  {
    "name": "liquibase.command.core.ChangelogSyncToTagSqlCommandStep"
  },
  {
    "name": "liquibase.command.core.ClearChecksumsCommandStep"
  },
  {
    "name": "liquibase.command.core.DbDocCommandStep"
  },
  {
    "name": "liquibase.command.core.DiffChangelogCommandStep"
  },
  {
    "name": "liquibase.command.core.DiffCommandStep"
  },
  {
    "name": "liquibase.command.core.DropAllCommandStep"
  },
  {
    "name": "liquibase.command.core.ExecuteSqlCommandStep"
  },
  {
    "name": "liquibase.command.core.FutureRollbackCountSqlCommandStep"
  },
  {
    "name": "liquibase.command.core.FutureRollbackFromTagSqlCommandStep"
  },
  {
    "name": "liquibase.command.core.FutureRollbackSqlCommandStep"
  },
  {
    "name": "liquibase.command.core.GenerateChangelogCommandStep"
  },
  {
    "name": "liquibase.command.core.HistoryCommandStep"
  },
  {
    "name": "liquibase.command.core.InternalSnapshotCommandStep"
  },
  {
    "name": "liquibase.command.core.ListLocksCommandStep"
  },
  {
    "name": "liquibase.command.core.MarkNextChangesetRanCommandStep"
  },
  {
    "name": "liquibase.command.core.MarkNextChangesetRanSqlCommandStep"
  },
  {
    "name": "liquibase.command.core.ReleaseLocksCommandStep"
  },
  {
    "name": "liquibase.command.core.RollbackCommandStep"
  },
  {
    "name": "liquibase.command.core.RollbackCountCommandStep"
  },
  {
    "name": "liquibase.command.core.RollbackCountSqlCommandStep"
  },
  {
    "name": "liquibase.command.core.RollbackSqlCommandStep"
  },
  {
    "name": "liquibase.command.core.RollbackToDateCommandStep"
  },
  {
    "name": "liquibase.command.core.RollbackToDateSqlCommandStep"
  },
  {
    "name": "liquibase.command.core.SnapshotCommandStep"
  },
  {
    "name": "liquibase.command.core.SnapshotReferenceCommandStep"
  },
  {
    "name": "liquibase.command.core.StartH2CommandStep"
  },
  {
    "name": "liquibase.command.core.StatusCommandStep"
  },
  {
    "name": "liquibase.command.core.StopH2CommandStep"
  },
  {
    "name": "liquibase.command.core.TagCommandStep"
  },
  {
    "name": "liquibase.command.core.TagExistsCommandStep"
  },
  {
    "name": "liquibase.command.core.UnexpectedChangesetsCommandStep"
  },
  {
    "name": "liquibase.command.core.UpdateCommandStep",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.command.core.UpdateCountCommandStep"
  },
  {
    "name": "liquibase.command.core.UpdateCountSqlCommandStep"
  },
  {
    "name": "liquibase.command.core.UpdateSqlCommandStep"
  },
  {
    "name": "liquibase.command.core.UpdateTestingRollbackCommandStep"
  },
  {
    "name": "liquibase.command.core.UpdateToTagCommandStep"
  },
  {
    "name": "liquibase.command.core.UpdateToTagSqlCommandStep"
  },
  {
    "name": "liquibase.command.core.ValidateCommandStep"
  },
  {
    "name": "liquibase.command.core.helpers.ChangeExecListenerCommandStep",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.command.core.helpers.DatabaseChangelogCommandStep",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.command.core.helpers.DbUrlConnectionArgumentsCommandStep",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.command.core.helpers.DbUrlConnectionCommandStep",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.command.core.helpers.DiffArgumentsCommandStep"
  },
  {
    "name": "liquibase.command.core.helpers.DiffOutputControlCommandStep"
  },
  {
    "name": "liquibase.command.core.helpers.LockServiceCommandStep"
  },
  {
    "name": "liquibase.command.core.helpers.OutputWriterCommandStep"
  },
  {
    "name": "liquibase.command.core.helpers.PreCompareCommandStep"
  },
  {
    "name": "liquibase.command.core.helpers.ReferenceDatabaseOutputWriterCommandStep"
  },
  {
    "name": "liquibase.command.core.helpers.ReferenceDbUrlConnectionCommandStep"
  },
  {
    "name": "liquibase.command.core.helpers.ShowSummaryArgument",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.command.core.init.InitCopyCommandStep"
  },
  {
    "name": "liquibase.command.core.init.InitProjectCommandStep"
  },
  {
    "name": "liquibase.configuration.ConfiguredValueModifierFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "liquibase.Scope"
        ]
      }
    ]
  },
  {
    "name": "liquibase.configuration.LiquibaseConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "liquibase.Scope"
        ]
      }
    ]
  },
  {
    "name": "liquibase.configuration.core.DeprecatedConfigurationValueProvider"
  },
  {
    "name": "liquibase.configuration.core.EnvironmentValueProvider"
  },
  {
    "name": "liquibase.configuration.core.ScopeValueProvider"
  },
  {
    "name": "liquibase.configuration.core.SystemPropertyValueProvider"
  },
  {
    "name": "liquibase.database.Database"
  },
  {
    "name": "liquibase.database.LiquibaseTableNamesFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "liquibase.Scope"
        ]
      }
    ]
  },
  {
    "name": "liquibase.database.StandardLiquibaseTableNames"
  },
  {
    "name": "liquibase.database.core.CockroachDatabase"
  },
  {
    "name": "liquibase.database.core.DB2Database"
  },
  {
    "name": "liquibase.database.core.Db2zDatabase"
  },
  {
    "name": "liquibase.database.core.DerbyDatabase"
  },
  {
    "name": "liquibase.database.core.EnterpriseDBDatabase"
  },
  {
    "name": "liquibase.database.core.FirebirdDatabase"
  },
  {
    "name": "liquibase.database.core.H2Database"
  },
  {
    "name": "liquibase.database.core.HsqlDatabase"
  },
  {
    "name": "liquibase.database.core.InformixDatabase"
  },
  {
    "name": "liquibase.database.core.Ingres9Database"
  },
  {
    "name": "liquibase.database.core.MSSQLDatabase"
  },
  {
    "name": "liquibase.database.core.MariaDBDatabase"
  },
  {
    "name": "liquibase.database.core.MockDatabase"
  },
  {
    "name": "liquibase.database.core.MySQLDatabase"
  },
  {
    "name": "liquibase.database.core.OracleDatabase"
  },
  {
    "name": "liquibase.database.core.PostgresDatabase",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.database.core.SQLiteDatabase"
  },
  {
    "name": "liquibase.database.core.SnowflakeDatabase"
  },
  {
    "name": "liquibase.database.core.SybaseASADatabase"
  },
  {
    "name": "liquibase.database.core.SybaseDatabase"
  },
  {
    "name": "liquibase.database.core.UnsupportedDatabase"
  },
  {
    "name": "liquibase.database.jvm.JdbcConnectionPatterns"
  },
  {
    "name": "liquibase.datatype.core.BigIntType",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setAutoIncrement",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.BinaryTypeSnowflake",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.BlobType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.BooleanType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.CharType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.ClobType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.ClobTypeSnowflake",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.CurrencyType"
  },
  {
    "name": "liquibase.datatype.core.DatabaseFunctionType"
  },
  {
    "name": "liquibase.datatype.core.DateTimeType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.DateType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.DateTypeSnowflake",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.DecimalType"
  },
  {
    "name": "liquibase.datatype.core.DoubleDataTypeSnowflake",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.DoubleType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.FloatType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.IntType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.MediumIntType"
  },
  {
    "name": "liquibase.datatype.core.NCharType"
  },
  {
    "name": "liquibase.datatype.core.NVarcharType"
  },
  {
    "name": "liquibase.datatype.core.NumberType"
  },
  {
    "name": "liquibase.datatype.core.SmallIntType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.TextDataTypeSnowflake",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.TimeType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.TimeTypeSnowflake",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.TimestampNTZTypeSnowflake",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.TimestampType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.TimestampTypeSnowflake",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.TinyIntType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.UUIDType"
  },
  {
    "name": "liquibase.datatype.core.UnknownType"
  },
  {
    "name": "liquibase.datatype.core.VarcharType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.XMLType"
  },
  {
    "name": "liquibase.diff.compare.core.CatalogComparator"
  },
  {
    "name": "liquibase.diff.compare.core.ColumnComparator"
  },
  {
    "name": "liquibase.diff.compare.core.DefaultDatabaseObjectComparator"
  },
  {
    "name": "liquibase.diff.compare.core.ForeignKeyComparator"
  },
  {
    "name": "liquibase.diff.compare.core.IndexComparator"
  },
  {
    "name": "liquibase.diff.compare.core.PrimaryKeyComparator"
  },
  {
    "name": "liquibase.diff.compare.core.SchemaComparator"
  },
  {
    "name": "liquibase.diff.compare.core.TableComparator"
  },
  {
    "name": "liquibase.diff.compare.core.UniqueConstraintComparator"
  },
  {
    "name": "liquibase.exception.DatabaseException"
  },
  {
    "name": "liquibase.exception.LiquibaseException"
  },
  {
    "name": "liquibase.executor.ExecutorService",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "liquibase.Scope"
        ]
      }
    ]
  },
  {
    "name": "liquibase.executor.jvm.JdbcExecutor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.executor.jvm.SnowflakeJdbcExecutor"
  },
  {
    "name": "liquibase.integration.commandline.LiquibaseCommandLineConfiguration"
  },
  {
    "name": "liquibase.integration.spring.Customizer"
  },
  {
    "name": "liquibase.integration.spring.SpringLiquibase",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResourceLoader",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.integration.spring.SpringResourceAccessor"
  },
  {
    "name": "liquibase.license.LicenseServiceFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "liquibase.Scope"
        ]
      }
    ]
  },
  {
    "name": "liquibase.license.LicenseTrackingArgs"
  },
  {
    "name": "liquibase.lockservice.LockServiceImpl"
  },
  {
    "name": "liquibase.lockservice.MockLockService"
  },
  {
    "name": "liquibase.lockservice.OfflineLockService"
  },
  {
    "name": "liquibase.lockservice.StandardLockService",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.logging.core.BufferedLogService"
  },
  {
    "name": "liquibase.logging.core.CompositeLogService"
  },
  {
    "name": "liquibase.logging.core.DefaultLoggerConfiguration"
  },
  {
    "name": "liquibase.logging.core.JavaLogService"
  },
  {
    "name": "liquibase.logging.core.LogServiceFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "liquibase.Scope"
        ]
      }
    ]
  },
  {
    "name": "liquibase.logging.mdc.MdcManagerFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "liquibase.Scope"
        ]
      }
    ]
  },
  {
    "name": "liquibase.logging.mdc.NoOpMdcManager"
  },
  {
    "name": "liquibase.parser.ChangeLogParserConfiguration"
  },
  {
    "name": "liquibase.parser.SqlParserFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "liquibase.Scope"
        ]
      }
    ]
  },
  {
    "name": "liquibase.parser.core.formattedsql.FormattedSqlChangeLogParser"
  },
  {
    "name": "liquibase.parser.core.json.JsonChangeLogParser"
  },
  {
    "name": "liquibase.parser.core.sql.SqlChangeLogParser"
  },
  {
    "name": "liquibase.parser.core.xml.XMLChangeLogSAXParser"
  },
  {
    "name": "liquibase.parser.core.yaml.YamlChangeLogParser"
  },
  {
    "name": "liquibase.plugin.AbstractPlugin",
    "queryAllPublicMethods": true
  },
  {
    "name": "liquibase.plugin.AbstractPluginBeanInfo"
  },
  {
    "name": "liquibase.plugin.AbstractPluginCustomizer"
  },
  {
    "name": "liquibase.plugin.Plugin",
    "queryAllPublicMethods": true
  },
  {
    "name": "liquibase.precondition.AbstractPrecondition",
    "allDeclaredFields": true
  },
  {
    "name": "liquibase.precondition.CustomPreconditionWrapper"
  },
  {
    "name": "liquibase.precondition.PreconditionLogic",
    "allDeclaredFields": true
  },
  {
    "name": "liquibase.precondition.core.AndPrecondition",
    "fields": [
      {
        "name": "nestedPreconditions"
      }
    ]
  },
  {
    "name": "liquibase.precondition.core.ChangeLogPropertyDefinedPrecondition"
  },
  {
    "name": "liquibase.precondition.core.ChangeSetExecutedPrecondition"
  },
  {
    "name": "liquibase.precondition.core.ColumnExistsPrecondition",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setColumnName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTableName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "liquibase.precondition.core.DBMSPrecondition",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "liquibase.precondition.core.ForeignKeyExistsPrecondition"
  },
  {
    "name": "liquibase.precondition.core.IndexExistsPrecondition"
  },
  {
    "name": "liquibase.precondition.core.NotPrecondition"
  },
  {
    "name": "liquibase.precondition.core.ObjectQuotingStrategyPrecondition"
  },
  {
    "name": "liquibase.precondition.core.OrPrecondition",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.precondition.core.PreconditionContainer",
    "queryAllPublicMethods": true,
    "fields": [
      {
        "name": "nestedPreconditions"
      },
      {
        "name": "onError"
      },
      {
        "name": "onErrorMessage"
      },
      {
        "name": "onFail"
      },
      {
        "name": "onFailMessage"
      },
      {
        "name": "onSqlOutput"
      }
    ],
    "methods": [
      {
        "name": "setOnFail",
        "parameterTypes": [
          "liquibase.precondition.core.PreconditionContainer$FailOption"
        ]
      }
    ]
  },
  {
    "name": "liquibase.precondition.core.PrimaryKeyExistsPrecondition"
  },
  {
    "name": "liquibase.precondition.core.RowCountPrecondition"
  },
  {
    "name": "liquibase.precondition.core.RunningAsPrecondition"
  },
  {
    "name": "liquibase.precondition.core.SequenceExistsPrecondition"
  },
  {
    "name": "liquibase.precondition.core.SqlPrecondition",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setExpectedResult",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "liquibase.precondition.core.TableExistsPrecondition"
  },
  {
    "name": "liquibase.precondition.core.TableIsEmptyPrecondition"
  },
  {
    "name": "liquibase.precondition.core.UniqueConstraintExistsPrecondition"
  },
  {
    "name": "liquibase.precondition.core.ViewExistsPrecondition"
  },
  {
    "name": "liquibase.report.ShowSummaryGeneratorFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "liquibase.Scope"
        ]
      }
    ]
  },
  {
    "name": "liquibase.report.StandardShowSummaryGenerator"
  },
  {
    "name": "liquibase.resource.ResourceAccessor"
  },
  {
    "name": "liquibase.serializer.AbstractLiquibaseSerializable",
    "allDeclaredFields": true
  },
  {
    "name": "liquibase.servicelocator.StandardServiceLocator"
  },
  {
    "name": "liquibase.snapshot.jvm.CatalogSnapshotGenerator"
  },
  {
    "name": "liquibase.snapshot.jvm.ColumnSnapshotGenerator"
  },
  {
    "name": "liquibase.snapshot.jvm.ColumnSnapshotGeneratorH2"
  },
  {
    "name": "liquibase.snapshot.jvm.ColumnSnapshotGeneratorInformix"
  },
  {
    "name": "liquibase.snapshot.jvm.ColumnSnapshotGeneratorOracle"
  },
  {
    "name": "liquibase.snapshot.jvm.DataSnapshotGenerator"
  },
  {
    "name": "liquibase.snapshot.jvm.ForeignKeySnapshotGenerator"
  },
  {
    "name": "liquibase.snapshot.jvm.IndexSnapshotGenerator"
  },
  {
    "name": "liquibase.snapshot.jvm.PrimaryKeySnapshotGenerator"
  },
  {
    "name": "liquibase.snapshot.jvm.SchemaSnapshotGenerator"
  },
  {
    "name": "liquibase.snapshot.jvm.SchemaSnapshotGeneratorSnowflake"
  },
  {
    "name": "liquibase.snapshot.jvm.SequenceSnapshotGenerator"
  },
  {
    "name": "liquibase.snapshot.jvm.SequenceSnapshotGeneratorSnowflake"
  },
  {
    "name": "liquibase.snapshot.jvm.TableSnapshotGenerator"
  },
  {
    "name": "liquibase.snapshot.jvm.UniqueConstraintSnapshotGenerator"
  },
  {
    "name": "liquibase.snapshot.jvm.UniqueConstraintSnapshotGeneratorSnowflake"
  },
  {
    "name": "liquibase.snapshot.jvm.ViewSnapshotGenerator"
  },
  {
    "name": "liquibase.sql.SqlConfiguration"
  },
  {
    "name": "liquibase.sql.visitor.AppendSqlVisitor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.sql.visitor.PrependSqlVisitor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.sql.visitor.RegExpReplaceSqlVisitor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.sql.visitor.ReplaceSqlVisitor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.sqlgenerator.core.AddAutoIncrementGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.AddAutoIncrementGeneratorDB2"
  },
  {
    "name": "liquibase.sqlgenerator.core.AddAutoIncrementGeneratorHsqlH2"
  },
  {
    "name": "liquibase.sqlgenerator.core.AddAutoIncrementGeneratorInformix"
  },
  {
    "name": "liquibase.sqlgenerator.core.AddAutoIncrementGeneratorMySQL"
  },
  {
    "name": "liquibase.sqlgenerator.core.AddAutoIncrementGeneratorSQLite"
  },
  {
    "name": "liquibase.sqlgenerator.core.AddColumnGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.AddColumnGeneratorDefaultClauseBeforeNotNull"
  },
  {
    "name": "liquibase.sqlgenerator.core.AddColumnGeneratorSQLite"
  },
  {
    "name": "liquibase.sqlgenerator.core.AddDefaultValueGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.AddDefaultValueGeneratorDerby"
  },
  {
    "name": "liquibase.sqlgenerator.core.AddDefaultValueGeneratorHsqldb"
  },
  {
    "name": "liquibase.sqlgenerator.core.AddDefaultValueGeneratorInformix"
  },
  {
    "name": "liquibase.sqlgenerator.core.AddDefaultValueGeneratorMSSQL"
  },
  {
    "name": "liquibase.sqlgenerator.core.AddDefaultValueGeneratorMySQL"
  },
  {
    "name": "liquibase.sqlgenerator.core.AddDefaultValueGeneratorOracle"
  },
  {
    "name": "liquibase.sqlgenerator.core.AddDefaultValueGeneratorPostgres"
  },
  {
    "name": "liquibase.sqlgenerator.core.AddDefaultValueGeneratorSQLite"
  },
  {
    "name": "liquibase.sqlgenerator.core.AddDefaultValueGeneratorSybase"
  },
  {
    "name": "liquibase.sqlgenerator.core.AddDefaultValueGeneratorSybaseASA"
  },
  {
    "name": "liquibase.sqlgenerator.core.AddForeignKeyConstraintGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.AddPrimaryKeyGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.AddPrimaryKeyGeneratorInformix"
  },
  {
    "name": "liquibase.sqlgenerator.core.AddUniqueConstraintGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.AddUniqueConstraintGeneratorInformix"
  },
  {
    "name": "liquibase.sqlgenerator.core.AddUniqueConstraintGeneratorTDS"
  },
  {
    "name": "liquibase.sqlgenerator.core.AlterSequenceGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.BatchDmlExecutablePreparedStatementGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.ClearDatabaseChangeLogTableGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.CommentGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.CopyRowsGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.CreateDatabaseChangeLogLockTableGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.CreateDatabaseChangeLogTableGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.CreateDatabaseChangeLogTableGeneratorSybase"
  },
  {
    "name": "liquibase.sqlgenerator.core.CreateIndexGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.CreateIndexGeneratorFirebird"
  },
  {
    "name": "liquibase.sqlgenerator.core.CreateIndexGeneratorPostgres"
  },
  {
    "name": "liquibase.sqlgenerator.core.CreateProcedureGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.CreateSequenceGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.CreateSequenceGeneratorSnowflake"
  },
  {
    "name": "liquibase.sqlgenerator.core.CreateTableGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.CreateTableGeneratorInformix"
  },
  {
    "name": "liquibase.sqlgenerator.core.CreateViewGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.CreateViewGeneratorInformix"
  },
  {
    "name": "liquibase.sqlgenerator.core.DeleteGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.DropColumnGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.DropDefaultValueGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.DropDefaultValueGeneratorSnowflake"
  },
  {
    "name": "liquibase.sqlgenerator.core.DropForeignKeyConstraintGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.DropIndexGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.DropPrimaryKeyGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.DropProcedureGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.DropProcedureGeneratorSnowflake"
  },
  {
    "name": "liquibase.sqlgenerator.core.DropSequenceGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.DropTableGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.DropUniqueConstraintGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.DropViewGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.GetNextChangeSetSequenceValueGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.GetViewDefinitionGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.GetViewDefinitionGeneratorDB2"
  },
  {
    "name": "liquibase.sqlgenerator.core.GetViewDefinitionGeneratorDerby"
  },
  {
    "name": "liquibase.sqlgenerator.core.GetViewDefinitionGeneratorFirebird"
  },
  {
    "name": "liquibase.sqlgenerator.core.GetViewDefinitionGeneratorHsql"
  },
  {
    "name": "liquibase.sqlgenerator.core.GetViewDefinitionGeneratorInformix"
  },
  {
    "name": "liquibase.sqlgenerator.core.GetViewDefinitionGeneratorMSSQL"
  },
  {
    "name": "liquibase.sqlgenerator.core.GetViewDefinitionGeneratorOracle"
  },
  {
    "name": "liquibase.sqlgenerator.core.GetViewDefinitionGeneratorPostgres"
  },
  {
    "name": "liquibase.sqlgenerator.core.GetViewDefinitionGeneratorSnowflake"
  },
  {
    "name": "liquibase.sqlgenerator.core.GetViewDefinitionGeneratorSybase"
  },
  {
    "name": "liquibase.sqlgenerator.core.GetViewDefinitionGeneratorSybaseASA"
  },
  {
    "name": "liquibase.sqlgenerator.core.InitializeDatabaseChangeLogLockTableGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.InsertDataChangeGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.InsertGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.InsertOrUpdateGeneratorDB2"
  },
  {
    "name": "liquibase.sqlgenerator.core.InsertOrUpdateGeneratorH2"
  },
  {
    "name": "liquibase.sqlgenerator.core.InsertOrUpdateGeneratorHsql"
  },
  {
    "name": "liquibase.sqlgenerator.core.InsertOrUpdateGeneratorInformix"
  },
  {
    "name": "liquibase.sqlgenerator.core.InsertOrUpdateGeneratorMSSQL"
  },
  {
    "name": "liquibase.sqlgenerator.core.InsertOrUpdateGeneratorMySQL"
  },
  {
    "name": "liquibase.sqlgenerator.core.InsertOrUpdateGeneratorOracle"
  },
  {
    "name": "liquibase.sqlgenerator.core.InsertOrUpdateGeneratorPostgres"
  },
  {
    "name": "liquibase.sqlgenerator.core.InsertOrUpdateGeneratorSQLite"
  },
  {
    "name": "liquibase.sqlgenerator.core.InsertOrUpdateGeneratorSnowflake"
  },
  {
    "name": "liquibase.sqlgenerator.core.InsertOrUpdateGeneratorSybaseASA"
  },
  {
    "name": "liquibase.sqlgenerator.core.InsertSetGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.LockDatabaseChangeLogGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.MarkChangeSetRanGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.ModifyDataTypeGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.RawParameterizedSqlGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.RawSqlGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.ReindexGeneratorSQLite"
  },
  {
    "name": "liquibase.sqlgenerator.core.RemoveChangeSetRanStatusGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.RenameColumnGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.RenameSequenceGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.RenameTableGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.RenameTableGeneratorSnowflake"
  },
  {
    "name": "liquibase.sqlgenerator.core.RenameViewGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.RenameViewGeneratorSnowflake"
  },
  {
    "name": "liquibase.sqlgenerator.core.ReorganizeTableGeneratorDB2"
  },
  {
    "name": "liquibase.sqlgenerator.core.RuntimeGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.SelectFromDatabaseChangeLogGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.SelectFromDatabaseChangeLogLockGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.SetColumnRemarksGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.SetColumnRemarksGeneratorSnowflake"
  },
  {
    "name": "liquibase.sqlgenerator.core.SetNullableGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.SetTableRemarksGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.SetTableRemarksGeneratorSnowflake"
  },
  {
    "name": "liquibase.sqlgenerator.core.SetViewRemarksGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.StoredProcedureGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.TableIsEmptyGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.TableRowCountGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.TagDatabaseGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.UnlockDatabaseChangeLogGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.UpdateChangeSetChecksumGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.UpdateChangeSetFilenameGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.UpdateDataChangeGenerator"
  },
  {
    "name": "liquibase.sqlgenerator.core.UpdateGenerator"
  },
  {
    "name": "liquibase.ui.LoggerUIService",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "liquibase.ui.UIServiceEnum"
  },
  {
    "name": "liquibase.util.StandardSqlParser"
  },
  {
    "name": "lombok.Generated"
  },
  {
    "name": "org.apache.el.ExpressionFactoryImpl"
  },
  {
    "name": "org.hibernate.validator.HibernateValidator"
  },
  {
    "name": "org.springframework.beans.factory.aspectj.Configurable"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.NoSuchHealthContributorFailureAnalyzer",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.ValidationFailureAnalyzer",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisUrlSyntaxFailureAnalyzer",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceBeanCreationFailureAnalyzer",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.HikariDriverConfigurationFailureAnalyzer",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jooq.JaxbNotAvailableExceptionFailureAnalyzer",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jooq.NoDslContextBeanFailureAnalyzer",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration$CustomizerConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.liquibase.LiquibaseDataSource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getContexts",
        "parameterTypes": []
      },
      {
        "name": "setContexts",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties$ShowSummary"
  },
  {
    "name": "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties$ShowSummaryOutput"
  },
  {
    "name": "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties$UiService"
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryBeanCreationFailureAnalyzer",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.MissingR2dbcPoolDependencyFailureAnalyzer",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.MultipleConnectionPoolConfigurationsFailureAnalyzer",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.NoConnectionFactoryBeanFailureAnalyzer",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.BundleContentNotWatchableFailureAnalyzer",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataNotFoundFailureAnalyzer",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.IncompatibleConfigurationFailureAnalyzer",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.NotConstructorBoundInjectionFailureAnalyzer",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.FailureAnalyzers",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ConfigurableApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.AotInitializerNotFoundFailureAnalyzer",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BeanCurrentlyInCreationFailureAnalyzer",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BeanDefinitionOverrideFailureAnalyzer",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BeanNotOfRequiredTypeFailureAnalyzer",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BindFailureAnalyzer",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BindValidationFailureAnalyzer",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyNameFailureAnalyzer",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyValueFailureAnalyzer",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.MissingParameterNamesFailureAnalyzer",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.MutuallyExclusiveConfigurationPropertiesFailureAnalyzer",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.NoSuchMethodFailureAnalyzer",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.NoUniqueBeanDefinitionFailureAnalyzer",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.PatternParseFailureAnalyzer",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.PortInUseFailureAnalyzer",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.UnboundConfigurationPropertyFailureAnalyzer",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.ValidationExceptionFailureAnalyzer",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.liquibase.LiquibaseChangelogMissingFailureAnalyzer",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.context.MissingWebServerFactoryBeanFailureAnalyzer",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.ConnectorStartFailureAnalyzer",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.config.client.ConfigServerConfigDataMissingEnvironmentPostProcessor$ImportExceptionFailureAnalyzer",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.config.client.ConfigServerConfigDataMissingEnvironmentPostProcessor.ImportExceptionFailureAnalyzer"
  },
  {
    "name": "org.springframework.cloud.config.client.diagnostics.analyzer.InvalidApplicationNameExceptionFailureAnalyzer",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.configuration.CompatibilityNotMetFailureAnalyzer",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.DSA$SHA224withDSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.DSA$SHA256withDSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.JavaKeyStore$DualFormatJKS",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.JavaKeyStore$JKS",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA2$SHA224",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA5$SHA384",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.certpath.PKIXCertPathValidator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.rsa.PSSParameters",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.rsa.RSAPSSSignature",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.rsa.RSASignature$SHA224withRSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.rsa.RSASignature$SHA256withRSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.util.ObjectIdentifier"
  },
  {
    "name": "sun.security.x509.CertificateExtensions"
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.Bonus$HibernateAccessOptimizer$AwlzSNgh",
    "fields": [
      {
        "name": "invocationTarget$fa7s4h1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.Bonus$HibernateInstantiator$bGLLneAs",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.Complaint$HibernateAccessOptimizer$28Giz7dp",
    "fields": [
      {
        "name": "invocationTarget$b8k31o0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.Complaint$HibernateInstantiator$Avvpzb69",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.ComplaintResponse$HibernateAccessOptimizer$Jz6vnkal",
    "fields": [
      {
        "name": "invocationTarget$nr7cpe0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.ComplaintResponse$HibernateInstantiator$9oPWwyME",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.ExampleSubmission$HibernateAccessOptimizer$BA5HfrDf",
    "fields": [
      {
        "name": "invocationTarget$q02lkc1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.ExampleSubmission$HibernateInstantiator$2gk3O5xK",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.Feedback$HibernateAccessOptimizer$AyHKvigd",
    "fields": [
      {
        "name": "invocationTarget$i3pjvc1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.Feedback$HibernateInstantiator$RJh1xPsW",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.GradeStep$HibernateAccessOptimizer$QOdJ7Hef",
    "fields": [
      {
        "name": "invocationTarget$m8f2dl0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.GradeStep$HibernateInstantiator$areWc3iq",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.GradingCriterion$HibernateAccessOptimizer$QO50aAU0",
    "fields": [
      {
        "name": "invocationTarget$qv39k71"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.GradingCriterion$HibernateInstantiator$aeRV3141",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.GradingInstruction$HibernateAccessOptimizer$jKN4ecSN",
    "fields": [
      {
        "name": "invocationTarget$731foc0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.GradingInstruction$HibernateInstantiator$H7Wt693p",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.GradingScale$HibernateAccessOptimizer$MgBLIxob",
    "fields": [
      {
        "name": "invocationTarget$hff6dq0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.GradingScale$HibernateInstantiator$hIH35087",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.LongFeedbackText$HibernateAccessOptimizer$aClfa3MY",
    "fields": [
      {
        "name": "invocationTarget$b9p86e0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.LongFeedbackText$HibernateInstantiator$DcXRdkoy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.ParticipantScore$HibernateAccessOptimizer$NuVE3olH",
    "fields": [
      {
        "name": "invocationTarget$dcn2ol0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.Rating$HibernateAccessOptimizer$5kAPKNfu",
    "fields": [
      {
        "name": "invocationTarget$5oarhv1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.Rating$HibernateInstantiator$SJoEf09m",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.Result$HibernateAccessOptimizer$HowHJGLy",
    "fields": [
      {
        "name": "invocationTarget$m2f8u50"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.Result$HibernateInstantiator$F6mLZ7MZ",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.StudentScore$HibernateAccessOptimizer$8l2q3F3i",
    "fields": [
      {
        "name": "invocationTarget$59u4hm1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.StudentScore$HibernateInstantiator$qkN3rBhs",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.TeamScore$HibernateAccessOptimizer$IrK1yu9i",
    "fields": [
      {
        "name": "invocationTarget$ptfon10"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.TeamScore$HibernateInstantiator$TNy7bLoo",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.TutorParticipation$HibernateAccessOptimizer$aVivaQgZ",
    "fields": [
      {
        "name": "invocationTarget$hkq1nc0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.TutorParticipation$HibernateInstantiator$rMTdrGvm",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.Competency$HibernateAccessOptimizer$Ty1xHRN5",
    "fields": [
      {
        "name": "invocationTarget$vaetue1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.Competency$HibernateInstantiator$WFvlrQ6P",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyExerciseLink$HibernateAccessOptimizer$VUtNCFos",
    "fields": [
      {
        "name": "invocationTarget$a14fki1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyExerciseLink$HibernateInstantiator$kqGgapfd",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyJol$HibernateAccessOptimizer$f180X3yo",
    "fields": [
      {
        "name": "invocationTarget$jfoith1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyJol$HibernateInstantiator$n7nPwHUe",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyLectureUnitLink$HibernateAccessOptimizer$jCuj93Ur",
    "fields": [
      {
        "name": "invocationTarget$36troo0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyLectureUnitLink$HibernateInstantiator$bsSvAUJj",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyProgress$HibernateAccessOptimizer$e0q9NDHp",
    "fields": [
      {
        "name": "invocationTarget$eth7b10"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyProgress$HibernateInstantiator$BidOcsPV",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyRelation$HibernateAccessOptimizer$Rk3wnQvQ",
    "fields": [
      {
        "name": "invocationTarget$qik2g41"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CompetencyRelation$HibernateInstantiator$06ERdufE",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.CourseCompetency$HibernateAccessOptimizer$94hQU7kl",
    "fields": [
      {
        "name": "invocationTarget$lt2j3f0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.KnowledgeArea$HibernateAccessOptimizer$0O3NZyJN",
    "fields": [
      {
        "name": "invocationTarget$8cgc6q0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.KnowledgeArea$HibernateInstantiator$e88VgkSX",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.LearningPath$HibernateAccessOptimizer$jmFH7hzL",
    "fields": [
      {
        "name": "invocationTarget$vikjgu1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.LearningPath$HibernateInstantiator$FiVBgUWx",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.Prerequisite$HibernateAccessOptimizer$5aIDnJUh",
    "fields": [
      {
        "name": "invocationTarget$a7au070"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.Prerequisite$HibernateInstantiator$XYBDe8XM",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.Source$HibernateAccessOptimizer$Lo0kdYIE",
    "fields": [
      {
        "name": "invocationTarget$oclon71"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.Source$HibernateInstantiator$NIRtGmk6",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.StandardizedCompetency$HibernateAccessOptimizer$8ZaJC5wo",
    "fields": [
      {
        "name": "invocationTarget$5jbckv0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.competency.StandardizedCompetency$HibernateInstantiator$0MqFpQAz",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.profile.CourseLearnerProfile$HibernateAccessOptimizer$7FHfYXED",
    "fields": [
      {
        "name": "invocationTarget$jo1n641"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.profile.CourseLearnerProfile$HibernateInstantiator$OTPxRzeU",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.profile.LearnerProfile$HibernateAccessOptimizer$p83DLYUV",
    "fields": [
      {
        "name": "invocationTarget$p8j9cf1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.profile.LearnerProfile$HibernateInstantiator$qxb9fxgU",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.science.ScienceEvent$HibernateAccessOptimizer$uysDSKHn",
    "fields": [
      {
        "name": "invocationTarget$33jvjf1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.science.ScienceEvent$HibernateInstantiator$LRRHbFxI",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.science.ScienceSetting$HibernateAccessOptimizer$O3kPD8gl",
    "fields": [
      {
        "name": "invocationTarget$ldqem11"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.science.ScienceSetting$HibernateInstantiator$7OfP1BE7",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.AnswerPost$HibernateAccessOptimizer$pa4FBCmj",
    "fields": [
      {
        "name": "invocationTarget$m7c03p1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.AnswerPost$HibernateInstantiator$pw0raZu6",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.ConductAgreement$HibernateAccessOptimizer$eUiyLkmb",
    "fields": [
      {
        "name": "invocationTarget$qq58kq0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.ConductAgreement$HibernateInstantiator$wcMBtbrM",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.ConversationParticipant$HibernateAccessOptimizer$DNMDoDpY",
    "fields": [
      {
        "name": "invocationTarget$criubv0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.ConversationParticipant$HibernateInstantiator$cWXmlRmA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.CourseNotification$HibernateAccessOptimizer$15WS88Ad",
    "fields": [
      {
        "name": "invocationTarget$1gb3u60"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.CourseNotification$HibernateInstantiator$DfJGGaNU",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.CourseNotificationParameter$HibernateAccessOptimizer$fXzCLkf8",
    "fields": [
      {
        "name": "invocationTarget$0hl1lb0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.CourseNotificationParameter$HibernateInstantiator$ichm5pvm",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.Faq$HibernateAccessOptimizer$91ZmqYTG",
    "fields": [
      {
        "name": "invocationTarget$4jk5mk1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.Faq$HibernateInstantiator$VU4Fntc9",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.ForwardedMessage$HibernateAccessOptimizer$q36faN0V",
    "fields": [
      {
        "name": "invocationTarget$1mgevp0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.ForwardedMessage$HibernateInstantiator$JowaXr6w",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.GlobalNotificationSetting$HibernateAccessOptimizer$UVER32Pq",
    "fields": [
      {
        "name": "invocationTarget$o20v8i0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.GlobalNotificationSetting$HibernateInstantiator$bbnWi2em",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.Post$HibernateAccessOptimizer$AvRnHmKV",
    "fields": [
      {
        "name": "invocationTarget$bk287r0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.Post$HibernateInstantiator$Xk4HeimB",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.Reaction$HibernateAccessOptimizer$p6NBp7tE",
    "fields": [
      {
        "name": "invocationTarget$aj7d821"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.Reaction$HibernateInstantiator$4MAI0SxR",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.SavedPost$HibernateAccessOptimizer$DIU9vinQ",
    "fields": [
      {
        "name": "invocationTarget$odhuq51"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.SavedPost$HibernateInstantiator$hAtYCcgE",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.UserCourseNotificationSettingPreset$HibernateAccessOptimizer$GeB1rbsl",
    "fields": [
      {
        "name": "invocationTarget$f97aea0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.UserCourseNotificationSettingPreset$HibernateInstantiator$nRdlK7NM",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.UserCourseNotificationSettingSpecification$HibernateAccessOptimizer$oyou9H6k",
    "fields": [
      {
        "name": "invocationTarget$vgt1gu0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.UserCourseNotificationSettingSpecification$HibernateInstantiator$rfFTV2vH",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.UserCourseNotificationStatus$HibernateAccessOptimizer$7o84IXh2",
    "fields": [
      {
        "name": "invocationTarget$4juujm0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.UserCourseNotificationStatus$HibernateInstantiator$OA157zVx",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.conversation.Channel$HibernateAccessOptimizer$d768LD0L",
    "fields": [
      {
        "name": "invocationTarget$fsrs6o1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.conversation.Channel$HibernateInstantiator$7br7Kpkn",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.conversation.Conversation$HibernateAccessOptimizer$D0Bbbr2b",
    "fields": [
      {
        "name": "invocationTarget$k2ougc0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.conversation.GroupChat$HibernateAccessOptimizer$JAJa6ovR",
    "fields": [
      {
        "name": "invocationTarget$ormqpj0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.conversation.GroupChat$HibernateInstantiator$d8zCrKAV",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.conversation.OneToOneChat$HibernateAccessOptimizer$ny6MeFYc",
    "fields": [
      {
        "name": "invocationTarget$puogek1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.conversation.OneToOneChat$HibernateInstantiator$VrWpvLcA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.notification.SystemNotification$HibernateAccessOptimizer$10Oly0cE",
    "fields": [
      {
        "name": "invocationTarget$027mcg1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.notification.SystemNotification$HibernateInstantiator$nej5kSES",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.push_notification.PushNotificationDeviceConfiguration$HibernateAccessOptimizer$r7MGZr0E",
    "fields": [
      {
        "name": "invocationTarget$7ocic50"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.push_notification.PushNotificationDeviceConfiguration$HibernateInstantiator$m5djwnqN",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.AbstractAuditingEntity$HibernateAccessOptimizer$3zGebVUZ",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.AbstractAuditingEntity$HibernateAccessOptimizer$8ajY5yuG",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.AbstractAuditingEntity$HibernateAccessOptimizer$JmhvhrTK",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.AbstractAuditingEntity$HibernateAccessOptimizer$KkdUMF7i",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.AbstractAuditingEntity$HibernateAccessOptimizer$VDXYJpz9",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.AbstractAuditingEntity$HibernateAccessOptimizer$Z7G1jG3S",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.AbstractAuditingEntity$HibernateAccessOptimizer$pyeh524G",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.AbstractAuditingEntity$HibernateAccessOptimizer$vzBY7Gtd",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.Authority$HibernateAccessOptimizer$Cm74TpKF",
    "fields": [
      {
        "name": "invocationTarget$nicqtc0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.Authority$HibernateInstantiator$Zf6M9SrU",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.CleanupJobExecution$HibernateAccessOptimizer$TLi1WnFj",
    "fields": [
      {
        "name": "invocationTarget$25bdb10"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.CleanupJobExecution$HibernateInstantiator$MqdtH81Q",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.Course$HibernateAccessOptimizer$Hy1CfvWV",
    "fields": [
      {
        "name": "invocationTarget$b5c3kl1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.Course$HibernateInstantiator$tWBhehWm",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.DataExport$HibernateAccessOptimizer$DYoKi5k6",
    "fields": [
      {
        "name": "invocationTarget$eqklhv0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.DataExport$HibernateInstantiator$lxSA8lQM",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.FileUpload$HibernateAccessOptimizer$tI4JTfcB",
    "fields": [
      {
        "name": "invocationTarget$tr9p500"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.FileUpload$HibernateInstantiator$bqEVLqfg",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.LLMTokenUsageRequest$HibernateAccessOptimizer$bXSM9kXo",
    "fields": [
      {
        "name": "invocationTarget$mos4lr1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.LLMTokenUsageRequest$HibernateInstantiator$M7qdHyft",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.LLMTokenUsageTrace$HibernateAccessOptimizer$JwVLGQjC",
    "fields": [
      {
        "name": "invocationTarget$lv018g0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.LLMTokenUsageTrace$HibernateInstantiator$iXiPHMWt",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.MigrationChangelog$HibernateAccessOptimizer$8v18XI1t",
    "fields": [
      {
        "name": "invocationTarget$3fa1q81"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.MigrationChangelog$HibernateInstantiator$Dk8i3SgC",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.Organization$HibernateAccessOptimizer$tTHmChRX",
    "fields": [
      {
        "name": "invocationTarget$9nme590"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.Organization$HibernateInstantiator$L8STzaR0",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.PasskeyCredential$HibernateAccessOptimizer$Bu5cLTDJ",
    "fields": [
      {
        "name": "invocationTarget$aj31l50"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.PasskeyCredential$HibernateInstantiator$LrQ9wmW7",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.PersistentAuditEvent$HibernateAccessOptimizer$I1BGyEaq",
    "fields": [
      {
        "name": "invocationTarget$ocg7ek1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.PersistentAuditEvent$HibernateInstantiator$DGJv38E7",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.User$HibernateAccessOptimizer$BIztjiWw",
    "fields": [
      {
        "name": "invocationTarget$lh0l8b1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.User$HibernateInstantiator$BIU0vZsb",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.UserGroup$HibernateAccessOptimizer$MJiIUUPb",
    "fields": [
      {
        "name": "invocationTarget$hbhq3b1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.UserGroup$HibernateInstantiator$VtdKiunF",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.User_Accessor_ht4qcq",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.Exam$HibernateAccessOptimizer$2Eneq1S8",
    "fields": [
      {
        "name": "invocationTarget$jlhn6i1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.Exam$HibernateInstantiator$aA2dZpHh",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.ExamSession$HibernateAccessOptimizer$TqWKZcFx",
    "fields": [
      {
        "name": "invocationTarget$5pmhsu1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.ExamSession$HibernateInstantiator$oXieVANI",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.ExamUser$HibernateAccessOptimizer$Sj9C1q1o",
    "fields": [
      {
        "name": "invocationTarget$blp33e0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.ExamUser$HibernateInstantiator$4gd73POi",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.ExerciseGroup$HibernateAccessOptimizer$vdfZUXma",
    "fields": [
      {
        "name": "invocationTarget$sl619u0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.ExerciseGroup$HibernateInstantiator$5H6WZtXv",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.StudentExam$HibernateAccessOptimizer$YhJDbQni",
    "fields": [
      {
        "name": "invocationTarget$ccqbtr0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.StudentExam$HibernateInstantiator$JkQlPdX1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.event.ExamAttendanceCheckEvent$HibernateAccessOptimizer$czsYvOmL",
    "fields": [
      {
        "name": "invocationTarget$sqbre80"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.event.ExamAttendanceCheckEvent$HibernateInstantiator$FNqLSrYv",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.event.ExamLiveEvent$HibernateAccessOptimizer$EBujulxi",
    "fields": [
      {
        "name": "invocationTarget$3un0c70"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.event.ExamWideAnnouncementEvent$HibernateAccessOptimizer$91EeVzHd",
    "fields": [
      {
        "name": "invocationTarget$2j80sg0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.event.ExamWideAnnouncementEvent$HibernateInstantiator$buJdyCEI",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.event.ProblemStatementUpdateEvent$HibernateAccessOptimizer$W6lCH4iw",
    "fields": [
      {
        "name": "invocationTarget$8sc3fp1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.event.ProblemStatementUpdateEvent$HibernateInstantiator$LmpkddjN",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.event.WorkingTimeUpdateEvent$HibernateAccessOptimizer$cmDcb3Bt",
    "fields": [
      {
        "name": "invocationTarget$6l8u0l1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.event.WorkingTimeUpdateEvent$HibernateInstantiator$sjy5QFpc",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.BaseExercise$HibernateAccessOptimizer$2OepJVZ3",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.BaseExercise$HibernateAccessOptimizer$2oLJSn4f",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.BaseExercise$HibernateAccessOptimizer$9VnqK092",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.BaseExercise$HibernateAccessOptimizer$Bjy40Msm",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.BaseExercise$HibernateAccessOptimizer$s8bPigay",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Exercise$HibernateAccessOptimizer$66QeXdJp",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Exercise$HibernateAccessOptimizer$Lj1JIbpR",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Exercise$HibernateAccessOptimizer$MpIVUfsX",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Exercise$HibernateAccessOptimizer$ZUAPY6qk",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Exercise$HibernateAccessOptimizer$dBbx47Vg",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Exercise$HibernateAccessOptimizer$iae3xee4",
    "fields": [
      {
        "name": "invocationTarget$j5femk1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Submission$HibernateAccessOptimizer$IK1yxclw",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Submission$HibernateAccessOptimizer$LKURYHmc",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Submission$HibernateAccessOptimizer$LYzLz2GI",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Submission$HibernateAccessOptimizer$Nnvqlm6t",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Submission$HibernateAccessOptimizer$Ns4DCuFn",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Submission$HibernateAccessOptimizer$RgcM9yLR",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Submission$HibernateAccessOptimizer$rUT2djTR",
    "fields": [
      {
        "name": "invocationTarget$7ij8io1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.SubmissionVersion$HibernateAccessOptimizer$NUoedB4y",
    "fields": [
      {
        "name": "invocationTarget$tna5240"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.SubmissionVersion$HibernateInstantiator$L4bjdg2h",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Team$HibernateAccessOptimizer$9bGO9PKG",
    "fields": [
      {
        "name": "invocationTarget$d6hmgb0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.Team$HibernateInstantiator$TWL52QyU",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.TeamAssignmentConfig$HibernateAccessOptimizer$Sh1DogXn",
    "fields": [
      {
        "name": "invocationTarget$fu9j3m1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.TeamAssignmentConfig$HibernateInstantiator$euf6vC0E",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.participation.Participation$HibernateAccessOptimizer$850NFmNu",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.participation.Participation$HibernateAccessOptimizer$m11RlvD7",
    "fields": [
      {
        "name": "invocationTarget$2q57km0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.participation.Participation$HibernateAccessOptimizer$mtR06plY",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.participation.Participation$HibernateAccessOptimizer$zq5lRNLZ",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.participation.StudentParticipation$HibernateAccessOptimizer$05PTTf10",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.participation.StudentParticipation$HibernateAccessOptimizer$Ex8ABJ4F",
    "fields": [
      {
        "name": "invocationTarget$aphul61"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.participation.StudentParticipation$HibernateInstantiator$myK8qFSP",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.fileupload.domain.FileUploadExercise$HibernateAccessOptimizer$QhrgZ3EV",
    "fields": [
      {
        "name": "invocationTarget$jg76fp1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.fileupload.domain.FileUploadExercise$HibernateInstantiator$kxk0CG43",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.fileupload.domain.FileUploadSubmission$HibernateAccessOptimizer$lTrB43mc",
    "fields": [
      {
        "name": "invocationTarget$307gvs0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.fileupload.domain.FileUploadSubmission$HibernateInstantiator$5xcG8hpS",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.message.IrisJsonMessageContent$HibernateAccessOptimizer$4ZYR6Rep",
    "fields": [
      {
        "name": "invocationTarget$u6qutm1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.message.IrisJsonMessageContent$HibernateInstantiator$1cHu0Ewx",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.message.IrisMessage$HibernateAccessOptimizer$WbiN0FU6",
    "fields": [
      {
        "name": "invocationTarget$p94ep30"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.message.IrisMessage$HibernateInstantiator$wyONLIZZ",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.message.IrisMessageContent$HibernateAccessOptimizer$ixXYAnSn",
    "fields": [
      {
        "name": "invocationTarget$h6m3l11"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.message.IrisTextMessageContent$HibernateAccessOptimizer$zK7BRhq0",
    "fields": [
      {
        "name": "invocationTarget$06tk5r1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.message.IrisTextMessageContent$HibernateInstantiator$SQxtxb0o",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisChatSession$HibernateAccessOptimizer$mkmmTYM6",
    "fields": [
      {
        "name": "invocationTarget$idiceh0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisCourseChatSession$HibernateAccessOptimizer$AynvqfJH",
    "fields": [
      {
        "name": "invocationTarget$od6ks41"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisCourseChatSession$HibernateInstantiator$qpQNL0gu",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisLectureChatSession$HibernateAccessOptimizer$wxQQyrcc",
    "fields": [
      {
        "name": "invocationTarget$hopkmd0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisLectureChatSession$HibernateInstantiator$gHR8GsZG",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisProgrammingExerciseChatSession$HibernateAccessOptimizer$WdQGYoda",
    "fields": [
      {
        "name": "invocationTarget$q0m0nv0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisProgrammingExerciseChatSession$HibernateInstantiator$kaQLFViQ",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisSession$HibernateAccessOptimizer$Sm5QNnMl",
    "fields": [
      {
        "name": "invocationTarget$ug4jlt1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisTextExerciseChatSession$HibernateAccessOptimizer$dSd5UkfS",
    "fields": [
      {
        "name": "invocationTarget$oajf360"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisTextExerciseChatSession$HibernateInstantiator$NuKQJkMq",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisTutorSuggestionSession$HibernateAccessOptimizer$JBy2wBc0",
    "fields": [
      {
        "name": "invocationTarget$sspo8l0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.session.IrisTutorSuggestionSession$HibernateInstantiator$FXEHY2qN",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisCompetencyGenerationSubSettings$HibernateAccessOptimizer$uP9EH4g5",
    "fields": [
      {
        "name": "invocationTarget$h0h9rf0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisCompetencyGenerationSubSettings$HibernateInstantiator$qPtCqp63",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisCourseChatSubSettings$HibernateAccessOptimizer$4wKFaAvs",
    "fields": [
      {
        "name": "invocationTarget$miuflq1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisCourseChatSubSettings$HibernateInstantiator$S2WmUPDQ",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisCourseSettings$HibernateAccessOptimizer$GFnT0U6l",
    "fields": [
      {
        "name": "invocationTarget$qa852g0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisCourseSettings$HibernateInstantiator$UQ1AgG6Q",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisExerciseSettings$HibernateAccessOptimizer$aTkhGTqP",
    "fields": [
      {
        "name": "invocationTarget$5d6t1i1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisExerciseSettings$HibernateInstantiator$J8TozYj2",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisFaqIngestionSubSettings$HibernateAccessOptimizer$mc0nfKlM",
    "fields": [
      {
        "name": "invocationTarget$63qpb01"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisFaqIngestionSubSettings$HibernateInstantiator$dSlFEwCj",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisGlobalSettings$HibernateAccessOptimizer$bKdA1uiK",
    "fields": [
      {
        "name": "invocationTarget$33qeqq1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisGlobalSettings$HibernateInstantiator$XHppXj5S",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisLectureChatSubSettings$HibernateAccessOptimizer$SJdJfp1e",
    "fields": [
      {
        "name": "invocationTarget$8qeiod0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisLectureChatSubSettings$HibernateInstantiator$yI4LMiIy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisLectureIngestionSubSettings$HibernateAccessOptimizer$tEAlSw83",
    "fields": [
      {
        "name": "invocationTarget$5bsj8a0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisLectureIngestionSubSettings$HibernateInstantiator$lFuh1QLd",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisProgrammingExerciseChatSubSettings$HibernateAccessOptimizer$1ICgYUgX",
    "fields": [
      {
        "name": "invocationTarget$pbcrkd0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisProgrammingExerciseChatSubSettings$HibernateInstantiator$jaZno3gL",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisSettings$HibernateAccessOptimizer$HYq8UATr",
    "fields": [
      {
        "name": "invocationTarget$3gm5mi1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisSubSettings$HibernateAccessOptimizer$haZmmTrM",
    "fields": [
      {
        "name": "invocationTarget$aa3lcs0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisTextExerciseChatSubSettings$HibernateAccessOptimizer$OqqTPCjy",
    "fields": [
      {
        "name": "invocationTarget$e0c5qn0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisTextExerciseChatSubSettings$HibernateInstantiator$ltNw18fA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisTutorSuggestionSubSettings$HibernateAccessOptimizer$m1t9bsrr",
    "fields": [
      {
        "name": "invocationTarget$m9lpsn1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisTutorSuggestionSubSettings$HibernateInstantiator$TObtAzkj",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.Attachment$HibernateAccessOptimizer$z9mGudvu",
    "fields": [
      {
        "name": "invocationTarget$8hh1sv1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.Attachment$HibernateInstantiator$ltGKyKnW",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.AttachmentVideoUnit$HibernateAccessOptimizer$qjuW3un3",
    "fields": [
      {
        "name": "invocationTarget$k012cj1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.AttachmentVideoUnit$HibernateInstantiator$mX2ygNxI",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.Lecture$HibernateAccessOptimizer$uDn2aQsL",
    "fields": [
      {
        "name": "invocationTarget$485kn50"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.Lecture$HibernateInstantiator$UNjQruHi",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.LectureTranscription$HibernateAccessOptimizer$UpztyHNa",
    "fields": [
      {
        "name": "invocationTarget$j3lkts0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.LectureTranscription$HibernateInstantiator$BDopSUOi",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.LectureUnit$HibernateAccessOptimizer$H9UipcwZ",
    "fields": [
      {
        "name": "invocationTarget$q9d53b0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.LectureUnitCompletion$HibernateAccessOptimizer$gbrd6nTL",
    "fields": [
      {
        "name": "invocationTarget$j2bmtt1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.LectureUnitCompletion$HibernateInstantiator$QTf7VvHv",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.OnlineUnit$HibernateAccessOptimizer$iZhJ8q4F",
    "fields": [
      {
        "name": "invocationTarget$bb93n61"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.OnlineUnit$HibernateInstantiator$EAYQehF0",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.Slide$HibernateAccessOptimizer$Uc4rcoDT",
    "fields": [
      {
        "name": "invocationTarget$fiqevr0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.Slide$HibernateInstantiator$SLs3ddft",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.TextUnit$HibernateAccessOptimizer$DHH20HSH",
    "fields": [
      {
        "name": "invocationTarget$i90a6u1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.domain.TextUnit$HibernateInstantiator$OnyZxfAM",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lti.domain.LtiPlatformConfiguration$HibernateAccessOptimizer$nREBFNzt",
    "fields": [
      {
        "name": "invocationTarget$kib0d00"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lti.domain.LtiPlatformConfiguration$HibernateInstantiator$OSiAcK2K",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lti.domain.LtiResourceLaunch$HibernateAccessOptimizer$m8oVtTmI",
    "fields": [
      {
        "name": "invocationTarget$1desqa0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lti.domain.LtiResourceLaunch$HibernateInstantiator$ebfEML2a",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lti.domain.OnlineCourseConfiguration$HibernateAccessOptimizer$97HcwrHO",
    "fields": [
      {
        "name": "invocationTarget$tksfl11"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lti.domain.OnlineCourseConfiguration$HibernateInstantiator$3fgm3Iqb",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.modeling.domain.ApollonDiagram$HibernateAccessOptimizer$HbA2QI0y",
    "fields": [
      {
        "name": "invocationTarget$nqk93v1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.modeling.domain.ApollonDiagram$HibernateInstantiator$SopPvb7M",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.modeling.domain.ModelingExercise$HibernateAccessOptimizer$UrxM1Fev",
    "fields": [
      {
        "name": "invocationTarget$9sb9p90"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.modeling.domain.ModelingExercise$HibernateInstantiator$jYQZgQiQ",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.modeling.domain.ModelingSubmission$HibernateAccessOptimizer$Tb4MmDTP",
    "fields": [
      {
        "name": "invocationTarget$dogckh0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.modeling.domain.ModelingSubmission$HibernateInstantiator$LJ3qhcId",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismCase$HibernateAccessOptimizer$bEZin62q",
    "fields": [
      {
        "name": "invocationTarget$1d4b221"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismCase$HibernateInstantiator$3cwbfnld",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismComparison$HibernateAccessOptimizer$dYSpTyXi",
    "fields": [
      {
        "name": "invocationTarget$v15k9s1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismComparison$HibernateInstantiator$xI2ifB9e",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismDetectionConfig$HibernateAccessOptimizer$pemdMX1I",
    "fields": [
      {
        "name": "invocationTarget$bbql6s1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismDetectionConfig$HibernateInstantiator$B1smsm85",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismResult$HibernateAccessOptimizer$5mNyNvAD",
    "fields": [
      {
        "name": "invocationTarget$o3kclq0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismResult$HibernateInstantiator$VHSdNNhj",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismSubmission$HibernateAccessOptimizer$kuBq6bXn",
    "fields": [
      {
        "name": "invocationTarget$rsar421"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismSubmission$HibernateInstantiator$uULzn5KR",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismSubmissionElement$HibernateAccessOptimizer$cUKdmxiy",
    "fields": [
      {
        "name": "invocationTarget$toohcp0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismSubmissionElement$HibernateInstantiator$D6yES9yC",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.AuxiliaryRepository$HibernateAccessOptimizer$ki4ct90K",
    "fields": [
      {
        "name": "invocationTarget$8eooj40"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.AuxiliaryRepository$HibernateInstantiator$iucQB8s5",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ParticipationVCSAccessToken$HibernateAccessOptimizer$wuFAhek6",
    "fields": [
      {
        "name": "invocationTarget$ousjjt0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ParticipationVCSAccessToken$HibernateInstantiator$MKmeKyv2",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExercise$HibernateAccessOptimizer$Br0iEEaD",
    "fields": [
      {
        "name": "invocationTarget$77kdgp0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExercise$HibernateInstantiator$iMz7kT97",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseBuildConfig$HibernateAccessOptimizer$xyqzHA7f",
    "fields": [
      {
        "name": "invocationTarget$fgcn4l0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseBuildConfig$HibernateInstantiator$uWMVbqVx",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseBuildStatistics$HibernateAccessOptimizer$7uO7satP",
    "fields": [
      {
        "name": "invocationTarget$b65r9l1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseBuildStatistics$HibernateInstantiator$vRxU5cDf",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseStudentParticipation$HibernateAccessOptimizer$0SbYA2xz",
    "fields": [
      {
        "name": "invocationTarget$o4o0qc0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseStudentParticipation$HibernateInstantiator$e2GqdIHy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseTask$HibernateAccessOptimizer$GkmAHZkO",
    "fields": [
      {
        "name": "invocationTarget$eavb4i1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseTask$HibernateInstantiator$ny1ezXMP",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseTestCase$HibernateAccessOptimizer$18aakd62",
    "fields": [
      {
        "name": "invocationTarget$7d8ffv0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseTestCase$HibernateInstantiator$i84ZDkM9",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingSubmission$HibernateAccessOptimizer$VVkChJ3c",
    "fields": [
      {
        "name": "invocationTarget$0h5mre1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingSubmission$HibernateInstantiator$jmv4CPzR",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.SolutionProgrammingExerciseParticipation$HibernateAccessOptimizer$ggMQR1GX",
    "fields": [
      {
        "name": "invocationTarget$emdq4h0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.SolutionProgrammingExerciseParticipation$HibernateInstantiator$doGpaL0Z",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.StaticCodeAnalysisCategory$HibernateAccessOptimizer$BauF01mD",
    "fields": [
      {
        "name": "invocationTarget$u4btje1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.StaticCodeAnalysisCategory$HibernateInstantiator$pbAwBGCN",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.TemplateProgrammingExerciseParticipation$HibernateAccessOptimizer$H7F684wK",
    "fields": [
      {
        "name": "invocationTarget$eufl0a0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.TemplateProgrammingExerciseParticipation$HibernateInstantiator$9k9JGMuj",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.UserSshPublicKey$HibernateAccessOptimizer$71JHsITt",
    "fields": [
      {
        "name": "invocationTarget$g6h6s70"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.UserSshPublicKey$HibernateInstantiator$hLVrzHK7",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.VcsAccessLog$HibernateAccessOptimizer$7RRexzo7",
    "fields": [
      {
        "name": "invocationTarget$8imd651"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.VcsAccessLog$HibernateInstantiator$xgUjLp57",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.build.BuildJob$HibernateAccessOptimizer$f9HVwT9K",
    "fields": [
      {
        "name": "invocationTarget$nteea21"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.build.BuildJob$HibernateInstantiator$gNTW19lG",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.build.BuildLogEntry$HibernateAccessOptimizer$orpJFqOv",
    "fields": [
      {
        "name": "invocationTarget$86j7ml0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.build.BuildLogEntry$HibernateInstantiator$SL1rcKue",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.build.BuildPlan$HibernateAccessOptimizer$BvLAMKHn",
    "fields": [
      {
        "name": "invocationTarget$bisqid0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.build.BuildPlan$HibernateInstantiator$XxUw0jQI",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ide.Ide$HibernateAccessOptimizer$LeKnYtMa",
    "fields": [
      {
        "name": "invocationTarget$p2f8lt1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ide.Ide$HibernateInstantiator$lQM7URHk",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ide.UserIdeMapping$HibernateAccessOptimizer$eVoAMBlp",
    "fields": [
      {
        "name": "invocationTarget$51ctp60"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ide.UserIdeMapping$HibernateInstantiator$MW6cAXMQ",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.submissionpolicy.LockRepositoryPolicy$HibernateAccessOptimizer$dN2rrt5x",
    "fields": [
      {
        "name": "invocationTarget$qhrg3q0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.submissionpolicy.LockRepositoryPolicy$HibernateInstantiator$7yPI86UE",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.submissionpolicy.SubmissionPenaltyPolicy$HibernateAccessOptimizer$kgrchM5x",
    "fields": [
      {
        "name": "invocationTarget$5460li1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.submissionpolicy.SubmissionPenaltyPolicy$HibernateInstantiator$e5DCp0ld",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.submissionpolicy.SubmissionPolicy$HibernateAccessOptimizer$MzDxbF36",
    "fields": [
      {
        "name": "invocationTarget$abr9ap0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.AbstractQuizSubmission$HibernateAccessOptimizer$TzhQyvga",
    "fields": [
      {
        "name": "invocationTarget$eq70hm1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.AnswerCounter$HibernateAccessOptimizer$shFj38Op",
    "fields": [
      {
        "name": "invocationTarget$31g3mn1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.AnswerCounter$HibernateInstantiator$H51Wp2G7",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.AnswerOption$HibernateAccessOptimizer$EZNRRlvZ",
    "fields": [
      {
        "name": "invocationTarget$fju8du0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.AnswerOption$HibernateInstantiator$uSIfQFiq",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DragAndDropMapping$HibernateAccessOptimizer$rQyJlZgk",
    "fields": [
      {
        "name": "invocationTarget$j5p46k0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DragAndDropMapping$HibernateInstantiator$Y2oQRw9H",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DragAndDropQuestion$HibernateAccessOptimizer$aEiBUQHR",
    "fields": [
      {
        "name": "invocationTarget$pp2h7l0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DragAndDropQuestion$HibernateInstantiator$GjqJcL7X",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DragAndDropQuestionStatistic$HibernateAccessOptimizer$QkQ7CySU",
    "fields": [
      {
        "name": "invocationTarget$edjles0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DragAndDropQuestionStatistic$HibernateInstantiator$XajrHlwz",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DragAndDropSubmittedAnswer$HibernateAccessOptimizer$6yeiYSNB",
    "fields": [
      {
        "name": "invocationTarget$dgvmbb1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DragAndDropSubmittedAnswer$HibernateInstantiator$vHCVEIks",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DragItem$HibernateAccessOptimizer$Qlof3tL7",
    "fields": [
      {
        "name": "invocationTarget$iribq50"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DragItem$HibernateInstantiator$Kq2Pbjrc",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DropLocation$HibernateAccessOptimizer$OjKl1SJR",
    "fields": [
      {
        "name": "invocationTarget$mkek311"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DropLocation$HibernateInstantiator$GfHI3bBD",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DropLocationCounter$HibernateAccessOptimizer$ihkSr4At",
    "fields": [
      {
        "name": "invocationTarget$sojgbk1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DropLocationCounter$HibernateInstantiator$8GhLQJUP",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.MultipleChoiceQuestion$HibernateAccessOptimizer$9JgBm6CT",
    "fields": [
      {
        "name": "invocationTarget$757sh40"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.MultipleChoiceQuestion$HibernateInstantiator$V6occaGt",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.MultipleChoiceQuestionStatistic$HibernateAccessOptimizer$myps6lYp",
    "fields": [
      {
        "name": "invocationTarget$dlc8en0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.MultipleChoiceQuestionStatistic$HibernateInstantiator$ayq9QkgG",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.MultipleChoiceSubmittedAnswer$HibernateAccessOptimizer$RBUmJ2Za",
    "fields": [
      {
        "name": "invocationTarget$svlf9u0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.MultipleChoiceSubmittedAnswer$HibernateInstantiator$JC0A1zZ9",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.PointCounter$HibernateAccessOptimizer$kbvLgLeS",
    "fields": [
      {
        "name": "invocationTarget$1t8u5j1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.PointCounter$HibernateInstantiator$RkZLtUCP",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizBatch$HibernateAccessOptimizer$ooI32Kcv",
    "fields": [
      {
        "name": "invocationTarget$iegt6o1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizBatch$HibernateInstantiator$awvh2ftM",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizExercise$HibernateAccessOptimizer$eRnVhpeg",
    "fields": [
      {
        "name": "invocationTarget$aqal690"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizExercise$HibernateInstantiator$u8Nx7Ccs",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizPointStatistic$HibernateAccessOptimizer$JGE7vQkb",
    "fields": [
      {
        "name": "invocationTarget$5juni21"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizPointStatistic$HibernateInstantiator$lIDSxeOH",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizQuestion$HibernateAccessOptimizer$wM39qW8Y",
    "fields": [
      {
        "name": "invocationTarget$4o4bf21"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizQuestionProgress$HibernateAccessOptimizer$SJyneuYq",
    "fields": [
      {
        "name": "invocationTarget$gbukat1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizQuestionProgress$HibernateInstantiator$4cUJdOqS",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizQuestionStatistic$HibernateAccessOptimizer$vqsS74IV",
    "fields": [
      {
        "name": "invocationTarget$n618sd0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizStatistic$HibernateAccessOptimizer$0oi7N0X9",
    "fields": [
      {
        "name": "invocationTarget$qig9ue0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizStatisticCounter$HibernateAccessOptimizer$EfW8qEeG",
    "fields": [
      {
        "name": "invocationTarget$ba65jf0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizSubmission$HibernateAccessOptimizer$zDsE9N5S",
    "fields": [
      {
        "name": "invocationTarget$3i0vmq1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizSubmission$HibernateInstantiator$XOTWMnMz",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerMapping$HibernateAccessOptimizer$nYJ1XWpZ",
    "fields": [
      {
        "name": "invocationTarget$me3ecp1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerMapping$HibernateInstantiator$Z43N3wWQ",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerQuestion$HibernateAccessOptimizer$jzsBQjrN",
    "fields": [
      {
        "name": "invocationTarget$fbojlm0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerQuestion$HibernateInstantiator$twQWjkVc",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerQuestionStatistic$HibernateAccessOptimizer$Jx1sqsBK",
    "fields": [
      {
        "name": "invocationTarget$gfkm6h1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerQuestionStatistic$HibernateInstantiator$iHdkqPN8",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSolution$HibernateAccessOptimizer$2D0O04PN",
    "fields": [
      {
        "name": "invocationTarget$vrauje0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSolution$HibernateInstantiator$sWoLSSFn",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSpot$HibernateAccessOptimizer$UA9xAMom",
    "fields": [
      {
        "name": "invocationTarget$pi4dtk0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSpot$HibernateInstantiator$nc69VuFw",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSpotCounter$HibernateAccessOptimizer$qCRs3vhp",
    "fields": [
      {
        "name": "invocationTarget$fam1ni0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSpotCounter$HibernateInstantiator$8KgP4pgV",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSubmittedAnswer$HibernateAccessOptimizer$gZLo7SFo",
    "fields": [
      {
        "name": "invocationTarget$l1ojhg1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSubmittedAnswer$HibernateInstantiator$4Px6FtPA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSubmittedText$HibernateAccessOptimizer$GbV0kpVT",
    "fields": [
      {
        "name": "invocationTarget$n35de20"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerSubmittedText$HibernateInstantiator$3VyvNw4R",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.SubmittedAnswer$HibernateAccessOptimizer$DJXCa1NH",
    "fields": [
      {
        "name": "invocationTarget$l5oqq91"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.domain.TextAssessmentEvent$HibernateAccessOptimizer$eCYAxlhf",
    "fields": [
      {
        "name": "invocationTarget$jgjm4i1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.domain.TextAssessmentEvent$HibernateInstantiator$YrkNcZBU",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.domain.TextBlock$HibernateAccessOptimizer$YyJQwRk8",
    "fields": [
      {
        "name": "invocationTarget$dj1rkf1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.domain.TextBlock$HibernateInstantiator$6uduHDjJ",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.domain.TextExercise$HibernateAccessOptimizer$I8awj0UB",
    "fields": [
      {
        "name": "invocationTarget$ddk85p0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.domain.TextExercise$HibernateInstantiator$jsq4keIQ",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.domain.TextSubmission$HibernateAccessOptimizer$L0iYAP79",
    "fields": [
      {
        "name": "invocationTarget$ht9mbt1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.domain.TextSubmission$HibernateInstantiator$AWNA9Mth",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroup$HibernateAccessOptimizer$uGzBaAU3",
    "fields": [
      {
        "name": "invocationTarget$c9qnl70"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroup$HibernateInstantiator$VPHQZbux",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupFreePeriod$HibernateAccessOptimizer$AtI6bXJr",
    "fields": [
      {
        "name": "invocationTarget$493mp21"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupFreePeriod$HibernateInstantiator$fmhxo6Wl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupRegistration$HibernateAccessOptimizer$AMVeDSKU",
    "fields": [
      {
        "name": "invocationTarget$58kmtm0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupRegistration$HibernateInstantiator$qJ48Nkfm",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupSchedule$HibernateAccessOptimizer$gCMSlKqN",
    "fields": [
      {
        "name": "invocationTarget$2kei9p0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupSchedule$HibernateInstantiator$3XPfY6HJ",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupSession$HibernateAccessOptimizer$wpYfQboH",
    "fields": [
      {
        "name": "invocationTarget$1vbscj1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupSession$HibernateInstantiator$hDIyZa0Y",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupsConfiguration$HibernateAccessOptimizer$OSVK9W98",
    "fields": [
      {
        "name": "invocationTarget$e414pq0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.domain.TutorialGroupsConfiguration$HibernateInstantiator$Sfv6lJXf",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "[Lde.tum.cit.aet.artemis.assessment.domain.Result;"
  },
  {
    "name": "[Lde.tum.cit.aet.artemis.lecture.web.LectureResource$AttachmentDTO;"
  },
  {
    "name": "[Lde.tum.cit.aet.artemis.lecture.web.LectureResource$AttachmentVideoUnitDTO;"
  },
  {
    "name": "[Lde.tum.cit.aet.artemis.quiz.domain.QuizBatch;"
  },
  {
    "name": "[Lde.tum.cit.aet.artemis.quiz.dto.AnswerOptionWithSolutionDTO;"
  },
  {
    "name": "[Lde.tum.cit.aet.artemis.quiz.dto.AnswerOptionWithoutSolutionDTO;"
  },
  {
    "name": "[Lde.tum.cit.aet.artemis.quiz.dto.DragItemDTO;"
  },
  {
    "name": "[Lde.tum.cit.aet.artemis.quiz.dto.DropLocationDTO;"
  },
  {
    "name": "[Lde.tum.cit.aet.artemis.quiz.dto.ShortAnswerSolutionDTO;"
  },
  {
    "name": "[Lde.tum.cit.aet.artemis.quiz.dto.ShortAnswerSpotDTO;"
  },
  {
    "name": "[Lde.tum.cit.aet.artemis.quiz.dto.question.QuizQuestionWithSolutionDTO;"
  },
  {
    "name": "[Lde.tum.cit.aet.artemis.quiz.dto.question.QuizQuestionWithoutSolutionDTO;"
  },
  {
    "name": "[Lde.tum.cit.aet.artemis.quiz.dto.result.ResultBeforeEvaluationDTO;"
  },
  {
    "name": "[Linet.ipaddr.ipv6.IPv6Address;"
  },
  {
    "name": "[Ljava.lang.Integer;"
  },
  {
    "name": "[Ljava.lang.StackTraceElement;"
  },
  {
    "name": "com.fasterxml.jackson.databind.util.Converter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "convert",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.DeserializationContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "convert",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.SerializerProvider",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.util.StdConverter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getInputType",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.type.TypeFactory"
        ]
      },
      {
        "name": "getOutputType",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.type.TypeFactory"
        ]
      }
    ]
  },
  {
    "name": "com.hazelcast.spring.cache.HazelcastCache$NullDataSerializable",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.Result_Accessor_973voq",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.Result"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.dto.AssessmentUpdateBaseDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.dto.AssessmentUpdateDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.dto.ComplaintResponseUpdateDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.web.ExampleSubmissionResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.web.GradingScaleResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.web.TutorParticipationResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.annotations.CourseNotificationSettingPreset",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.annotations.CourseNotificationType",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.config.HermesHealthIndicator$HermesHealthReport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "boolean",
          "boolean",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.ConductAgreement$HibernateAccessOptimizer$MgAWFJe7",
    "fields": [
      {
        "name": "invocationTarget$eej55j0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.ConductAgreement$HibernateInstantiator$jpQkPsEz",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.CourseNotification$HibernateProxy$9Hnl8inQ",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.DefaultChannelType"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.course_notifications.AddedToChannelNotification",
    "allDeclaredFields": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.course_notifications.AttachmentChangedNotification"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.course_notifications.ChannelDeletedNotification"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.course_notifications.CourseNotificationCategory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.course_notifications.DeregisteredFromTutorialGroupNotification"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.course_notifications.DuplicateTestCaseNotification"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.course_notifications.ExerciseAssessedNotification"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.course_notifications.ExerciseOpenForPracticeNotification",
    "allDeclaredFields": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.course_notifications.ExerciseUpdatedNotification"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.course_notifications.NewAnnouncementNotification"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.course_notifications.NewAnswerNotification"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.course_notifications.NewCpcPlagiarismCaseNotification"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.course_notifications.NewManualFeedbackRequestNotification"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.course_notifications.NewMentionNotification",
    "allDeclaredFields": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.course_notifications.NewPlagiarismCaseNotification"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.course_notifications.NewPostNotification",
    "allDeclaredFields": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.course_notifications.PlagiarismCaseVerdictNotification"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.course_notifications.ProgrammingBuildRunUpdateNotification"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.course_notifications.ProgrammingTestCasesChangedNotification"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.course_notifications.QuizExerciseStartedNotification",
    "allDeclaredFields": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.course_notifications.RegisteredToTutorialGroupNotification"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.course_notifications.RemovedFromChannelNotification",
    "allDeclaredFields": true
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.course_notifications.TutorialGroupAssignedNotification"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.course_notifications.TutorialGroupDeletedNotification"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.course_notifications.TutorialGroupUnassignedNotification"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.dto.CreatePostConversationDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "long"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.dto.ResponsibleUserDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "email",
        "parameterTypes": []
      },
      {
        "name": "name",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.service.conversation.ConversationService$ConversationMemberSearchFilters"
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.web.conversation.ConversationResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.web.conversation.GroupChatResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.Authority$HibernateAccessOptimizer$sDMN0XAu",
    "fields": [
      {
        "name": "invocationTarget$gntsnk0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.Authority$HibernateInstantiator$TqfNZskO",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.Course$HibernateProxy$fkhXTQh8",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.User$HibernateProxy$XT7zrOqa",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.User_Accessor_tp5snn",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.AcceptExternalLLMUsageDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.CourseDeletionSummaryDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "numberExams",
        "parameterTypes": []
      },
      {
        "name": "numberFileUploadExercises",
        "parameterTypes": []
      },
      {
        "name": "numberLectures",
        "parameterTypes": []
      },
      {
        "name": "numberModelingExercises",
        "parameterTypes": []
      },
      {
        "name": "numberOfAnswerPosts",
        "parameterTypes": []
      },
      {
        "name": "numberOfBuilds",
        "parameterTypes": []
      },
      {
        "name": "numberOfCommunicationPosts",
        "parameterTypes": []
      },
      {
        "name": "numberOfEditors",
        "parameterTypes": []
      },
      {
        "name": "numberOfInstructors",
        "parameterTypes": []
      },
      {
        "name": "numberOfStudents",
        "parameterTypes": []
      },
      {
        "name": "numberOfTutors",
        "parameterTypes": []
      },
      {
        "name": "numberProgrammingExercises",
        "parameterTypes": []
      },
      {
        "name": "numberQuizExercises",
        "parameterTypes": []
      },
      {
        "name": "numberTextExercises",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.CourseForQuizExerciseDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "accuracyOfScores",
        "parameterTypes": []
      },
      {
        "name": "courseInformationSharingConfiguration",
        "parameterTypes": []
      },
      {
        "name": "defaultProgrammingLanguage",
        "parameterTypes": []
      },
      {
        "name": "description",
        "parameterTypes": []
      },
      {
        "name": "editorGroupName",
        "parameterTypes": []
      },
      {
        "name": "endDate",
        "parameterTypes": []
      },
      {
        "name": "enrollmentEndDate",
        "parameterTypes": []
      },
      {
        "name": "enrollmentStartDate",
        "parameterTypes": []
      },
      {
        "name": "id",
        "parameterTypes": []
      },
      {
        "name": "instructorGroupName",
        "parameterTypes": []
      },
      {
        "name": "language",
        "parameterTypes": []
      },
      {
        "name": "maxComplaintResponseTextLimit",
        "parameterTypes": []
      },
      {
        "name": "maxComplaintTextLimit",
        "parameterTypes": []
      },
      {
        "name": "maxComplaintTimeDays",
        "parameterTypes": []
      },
      {
        "name": "maxComplaints",
        "parameterTypes": []
      },
      {
        "name": "maxRequestMoreFeedbackTimeDays",
        "parameterTypes": []
      },
      {
        "name": "maxTeamComplaints",
        "parameterTypes": []
      },
      {
        "name": "onlineCourse",
        "parameterTypes": []
      },
      {
        "name": "semester",
        "parameterTypes": []
      },
      {
        "name": "shortName",
        "parameterTypes": []
      },
      {
        "name": "startDate",
        "parameterTypes": []
      },
      {
        "name": "studentGroupName",
        "parameterTypes": []
      },
      {
        "name": "teachingAssistantGroupName",
        "parameterTypes": []
      },
      {
        "name": "testCourse",
        "parameterTypes": []
      },
      {
        "name": "title",
        "parameterTypes": []
      },
      {
        "name": "unenrollmentEndDate",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.DomainObjectDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "id",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.TutorLeaderboardDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "averageRating",
        "parameterTypes": []
      },
      {
        "name": "averageScore",
        "parameterTypes": []
      },
      {
        "name": "name",
        "parameterTypes": []
      },
      {
        "name": "numberOfAcceptedComplaints",
        "parameterTypes": []
      },
      {
        "name": "numberOfAnsweredMoreFeedbackRequests",
        "parameterTypes": []
      },
      {
        "name": "numberOfAssessments",
        "parameterTypes": []
      },
      {
        "name": "numberOfComplaintResponses",
        "parameterTypes": []
      },
      {
        "name": "numberOfNotAnsweredMoreFeedbackRequests",
        "parameterTypes": []
      },
      {
        "name": "numberOfTutorComplaints",
        "parameterTypes": []
      },
      {
        "name": "numberOfTutorMoreFeedbackRequests",
        "parameterTypes": []
      },
      {
        "name": "numberOfTutorRatings",
        "parameterTypes": []
      },
      {
        "name": "points",
        "parameterTypes": []
      },
      {
        "name": "userId",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.pageablesearch.PageableSearchDTO",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getPage",
        "parameterTypes": []
      },
      {
        "name": "getPageSize",
        "parameterTypes": []
      },
      {
        "name": "getSortedColumn",
        "parameterTypes": []
      },
      {
        "name": "getSortingOrder",
        "parameterTypes": []
      },
      {
        "name": "setPage",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPageSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setSortedColumn",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setSortingOrder",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.dto.SortingOrder"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.vm.LoginVM",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRememberMe",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.exception.ConflictException"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.exception.EmailAlreadyUsedException"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.exception.EmptyFileException"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.exception.FieldErrorVM"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.exception.HttpStatusException",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getEntityName",
        "parameterTypes": []
      },
      {
        "name": "getErrorKey",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.exception.PasswordViolatesRequirementsException"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.exception.UsernameAlreadyUsedException"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.service.ldap.LdapUserService"
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.UserResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.admin.AdminCourseResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.admin.AdminUserResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.course.CourseAccessResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.web.open.PublicUserJwtResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.ExamSession_Accessor_nihxdh",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.domain.ExamSession"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.ExamUser_Accessor_vzqv6a",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.domain.ExamUser"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.StudentExam_Accessor_v8zq3d",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.domain.StudentExam"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.SuspiciousSessionsAnalysisOptions"
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.event.ExamWideAnnouncementEvent_Accessor_vh4yk6",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.domain.event.ExamWideAnnouncementEvent"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.event.ProblemStatementUpdateEvent_Accessor_rovjaf",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.domain.event.ProblemStatementUpdateEvent"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.event.WorkingTimeUpdateEvent_Accessor_u9h9d4",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.domain.event.WorkingTimeUpdateEvent"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.dto.ExamDeletionSummaryDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "numberNotStartedExams",
        "parameterTypes": []
      },
      {
        "name": "numberOfAnswerPosts",
        "parameterTypes": []
      },
      {
        "name": "numberOfBuilds",
        "parameterTypes": []
      },
      {
        "name": "numberOfCommunicationPosts",
        "parameterTypes": []
      },
      {
        "name": "numberRegisteredStudents",
        "parameterTypes": []
      },
      {
        "name": "numberStartedExams",
        "parameterTypes": []
      },
      {
        "name": "numberSubmittedExams",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.dto.ExamInformationDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "latestIndividualEndDate",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.dto.ExamScoresDTO$ExerciseResult",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.dto.StudentExamWithIdAndExamAndUserDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.dto.examevent.ExamLiveEventBaseDTO",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.dto.examevent.ExamWideAnnouncementEventDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "createdDate",
        "parameterTypes": []
      },
      {
        "name": "id",
        "parameterTypes": []
      },
      {
        "name": "text",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.dto.examevent.ProblemStatementUpdateEventDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "createdDate",
        "parameterTypes": []
      },
      {
        "name": "exerciseId",
        "parameterTypes": []
      },
      {
        "name": "exerciseName",
        "parameterTypes": []
      },
      {
        "name": "id",
        "parameterTypes": []
      },
      {
        "name": "problemStatement",
        "parameterTypes": []
      },
      {
        "name": "text",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.dto.examevent.WorkingTimeUpdateEventDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "courseWide",
        "parameterTypes": []
      },
      {
        "name": "createdDate",
        "parameterTypes": []
      },
      {
        "name": "id",
        "parameterTypes": []
      },
      {
        "name": "newWorkingTime",
        "parameterTypes": []
      },
      {
        "name": "oldWorkingTime",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.web.ExamResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.web.ExerciseGroupResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.web.StudentExamResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.IncludedInOverallScore$3",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.SubmissionVersion_Accessor_ahxc65",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.SubmissionVersion"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.dto.ExerciseForPlagiarismCasesOverviewDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.dto.SubmissionWithComplaintDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.web.SubmissionResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.fileupload.web.FileUploadSubmissionResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.message.IrisMessageContent$HibernateAccessOptimizer$0ySeTecE",
    "fields": [
      {
        "name": "invocationTarget$7gqpv00"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisSettings$HibernateAccessOptimizer$RSwItTpk",
    "fields": [
      {
        "name": "invocationTarget$hfka9r0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.web.AttachmentResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.web.ExerciseUnitResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.web.LectureResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.web.LectureResource$AttachmentDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.web.LectureResource$AttachmentVideoUnitDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.web.LectureResource$LectureDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "attachments",
        "parameterTypes": []
      },
      {
        "name": "endDate",
        "parameterTypes": []
      },
      {
        "name": "id",
        "parameterTypes": []
      },
      {
        "name": "lectureUnits",
        "parameterTypes": []
      },
      {
        "name": "startDate",
        "parameterTypes": []
      },
      {
        "name": "title",
        "parameterTypes": []
      },
      {
        "name": "visibleDate",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.web.LectureUnitResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.lecture.web.TextUnitResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.modeling.dto.ModelingAssessmentDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.modeling.web.ApollonDiagramResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.modeling.web.ModelingAssessmentResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.modeling.web.ModelingSubmissionResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.modeling.web.ModelingSubmissionResource$ValidationResult"
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExercise$HibernateProxy$fYfFJTNS",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseTestCase$HibernateProxy$d5qviwjx",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.service.PlantUmlService$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.web.PlantUmlResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.web.localci.BuildJobQueueResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DragAndDropQuestion$HibernateProxy$9MyGogVM",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerQuestion$HibernateProxy$kzw4aaqr",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.dto.AnswerOptionWithSolutionDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "answerOptionWithoutSolutionDTO",
        "parameterTypes": []
      },
      {
        "name": "explanation",
        "parameterTypes": []
      },
      {
        "name": "isCorrect",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.dto.AnswerOptionWithoutSolutionDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "hint",
        "parameterTypes": []
      },
      {
        "name": "id",
        "parameterTypes": []
      },
      {
        "name": "invalid",
        "parameterTypes": []
      },
      {
        "name": "text",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.dto.DragItemDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "id",
        "parameterTypes": []
      },
      {
        "name": "invalid",
        "parameterTypes": []
      },
      {
        "name": "pictureFilePath",
        "parameterTypes": []
      },
      {
        "name": "text",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.dto.DropLocationDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "height",
        "parameterTypes": []
      },
      {
        "name": "id",
        "parameterTypes": []
      },
      {
        "name": "invalid",
        "parameterTypes": []
      },
      {
        "name": "posX",
        "parameterTypes": []
      },
      {
        "name": "posY",
        "parameterTypes": []
      },
      {
        "name": "width",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.dto.QuizBatchDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "ended",
        "parameterTypes": []
      },
      {
        "name": "id",
        "parameterTypes": []
      },
      {
        "name": "startTime",
        "parameterTypes": []
      },
      {
        "name": "started",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.dto.ShortAnswerSolutionDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "id",
        "parameterTypes": []
      },
      {
        "name": "invalid",
        "parameterTypes": []
      },
      {
        "name": "text",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.dto.ShortAnswerSpotDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "id",
        "parameterTypes": []
      },
      {
        "name": "invalid",
        "parameterTypes": []
      },
      {
        "name": "spotNr",
        "parameterTypes": []
      },
      {
        "name": "width",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.dto.exercise.QuizExerciseWithQuestionsDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "quizExerciseWithoutQuestionsDTO",
        "parameterTypes": []
      },
      {
        "name": "quizQuestions",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.dto.exercise.QuizExerciseWithSolutionDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "quizExerciseWithoutQuestionsDTO",
        "parameterTypes": []
      },
      {
        "name": "quizQuestions",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.dto.exercise.QuizExerciseWithoutQuestionsDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "allowedNumberOfAttempts",
        "parameterTypes": []
      },
      {
        "name": "assessmentDueDate",
        "parameterTypes": []
      },
      {
        "name": "course",
        "parameterTypes": []
      },
      {
        "name": "difficulty",
        "parameterTypes": []
      },
      {
        "name": "dueDate",
        "parameterTypes": []
      },
      {
        "name": "duration",
        "parameterTypes": []
      },
      {
        "name": "id",
        "parameterTypes": []
      },
      {
        "name": "isOpenForPractice",
        "parameterTypes": []
      },
      {
        "name": "quizBatches",
        "parameterTypes": []
      },
      {
        "name": "quizEnded",
        "parameterTypes": []
      },
      {
        "name": "quizMode",
        "parameterTypes": []
      },
      {
        "name": "quizStarted",
        "parameterTypes": []
      },
      {
        "name": "randomizeQuestionOrder",
        "parameterTypes": []
      },
      {
        "name": "releaseDate",
        "parameterTypes": []
      },
      {
        "name": "remainingNumberOfAttempts",
        "parameterTypes": []
      },
      {
        "name": "shortName",
        "parameterTypes": []
      },
      {
        "name": "startDate",
        "parameterTypes": []
      },
      {
        "name": "title",
        "parameterTypes": []
      },
      {
        "name": "type",
        "parameterTypes": []
      },
      {
        "name": "visibleToStudents",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.dto.participation.StudentQuizParticipationBaseDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "id",
        "parameterTypes": []
      },
      {
        "name": "initializationDate",
        "parameterTypes": []
      },
      {
        "name": "initializationState",
        "parameterTypes": []
      },
      {
        "name": "student",
        "parameterTypes": []
      },
      {
        "name": "type",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.dto.participation.StudentQuizParticipationDTO",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.dto.participation.StudentQuizParticipationWithQuestionsDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "exercise",
        "parameterTypes": []
      },
      {
        "name": "studentQuizParticipationBaseDTO",
        "parameterTypes": []
      },
      {
        "name": "submissions",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.dto.participation.StudentQuizParticipationWithoutQuestionsDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "exercise",
        "parameterTypes": []
      },
      {
        "name": "studentQuizParticipationBaseDTO",
        "parameterTypes": []
      },
      {
        "name": "submissions",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.dto.question.DragAndDropQuestionWithSolutionDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.dto.question.DragAndDropQuestionWithoutSolutionDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "backgroundFilePath",
        "parameterTypes": []
      },
      {
        "name": "dragItems",
        "parameterTypes": []
      },
      {
        "name": "dropLocations",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.dto.question.MultipleChoiceQuestionWithSolutionDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "answerOptions",
        "parameterTypes": []
      },
      {
        "name": "singleChoice",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.dto.question.MultipleChoiceQuestionWithoutSolutionDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "answerOptions",
        "parameterTypes": []
      },
      {
        "name": "singleChoice",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.dto.question.QuizQuestionBaseDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "hint",
        "parameterTypes": []
      },
      {
        "name": "id",
        "parameterTypes": []
      },
      {
        "name": "invalid",
        "parameterTypes": []
      },
      {
        "name": "points",
        "parameterTypes": []
      },
      {
        "name": "randomizeOrder",
        "parameterTypes": []
      },
      {
        "name": "scoringType",
        "parameterTypes": []
      },
      {
        "name": "text",
        "parameterTypes": []
      },
      {
        "name": "title",
        "parameterTypes": []
      },
      {
        "name": "type",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.dto.question.QuizQuestionWithSolutionDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "dragAndDropQuestionWithSolutionDTO",
        "parameterTypes": []
      },
      {
        "name": "explanation",
        "parameterTypes": []
      },
      {
        "name": "multipleChoiceQuestionWithSolutionDTO",
        "parameterTypes": []
      },
      {
        "name": "quizQuestionBaseDTO",
        "parameterTypes": []
      },
      {
        "name": "shortAnswerQuestionWithMappingDTO",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.dto.question.QuizQuestionWithoutSolutionDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "dragAndDropQuestionWithoutSolutionDTO",
        "parameterTypes": []
      },
      {
        "name": "multipleChoiceQuestionWithoutSolutionDTO",
        "parameterTypes": []
      },
      {
        "name": "quizQuestionBaseDTO",
        "parameterTypes": []
      },
      {
        "name": "shortAnswerQuestionWithoutMappingDTO",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.dto.question.ShortAnswerQuestionWithMappingDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.dto.question.ShortAnswerQuestionWithoutMappingDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "matchLetterCase",
        "parameterTypes": []
      },
      {
        "name": "similarityValue",
        "parameterTypes": []
      },
      {
        "name": "solutions",
        "parameterTypes": []
      },
      {
        "name": "spots",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.dto.result.ResultBeforeEvaluationDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "completionDate",
        "parameterTypes": []
      },
      {
        "name": "id",
        "parameterTypes": []
      },
      {
        "name": "rated",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.dto.submission.QuizSubmissionBeforeEvaluationDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "id",
        "parameterTypes": []
      },
      {
        "name": "results",
        "parameterTypes": []
      },
      {
        "name": "submissionDate",
        "parameterTypes": []
      },
      {
        "name": "submissionExerciseType",
        "parameterTypes": []
      },
      {
        "name": "submitted",
        "parameterTypes": []
      },
      {
        "name": "submittedAnswers",
        "parameterTypes": []
      },
      {
        "name": "type",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.dto.submittedanswer.DragAndDropSubmittedAnswerDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.dto.submittedanswer.MultipleChoiceSubmittedAnswerWithoutSolutionDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.dto.submittedanswer.ShortAnswerSubmittedAnswerDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.dto.submittedanswer.SubmittedAnswerBeforeEvaluationDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.web.QuizParticipationResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.web.QuizSubmissionResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.text.web.TextSubmissionResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.tutorialgroup.config.TutorialGroupApiNotPresentException"
  },
  {
    "name": "inet.ipaddr.IPAddress$IPVersion"
  },
  {
    "name": "io.jsonwebtoken.Header",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.jsonwebtoken.Identifiable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.jsonwebtoken.JwsHeader",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.jsonwebtoken.ProtectedHeader",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.jsonwebtoken.impl.DefaultClaims",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.jsonwebtoken.impl.DefaultHeader",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.jsonwebtoken.impl.DefaultJwsHeader",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.jsonwebtoken.impl.DefaultProtectedHeader",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.jsonwebtoken.impl.ParameterMap",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.jsonwebtoken.impl.lang.Nameable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.jsonwebtoken.impl.lang.ParameterReadable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.jsonwebtoken.jackson.io.JacksonSerializer"
  },
  {
    "name": "io.jsonwebtoken.security.X509Accessor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.validation.ConstraintValidator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "initialize",
        "parameterTypes": [
          "java.lang.annotation.Annotation"
        ]
      }
    ]
  },
  {
    "name": "jakarta.validation.ConstraintValidatorContext"
  },
  {
    "name": "jakarta.validation.ConstraintViolationException"
  },
  {
    "name": "jakarta.ws.rs.BadRequestException"
  },
  {
    "name": "jakarta.ws.rs.NotAllowedException"
  },
  {
    "name": "java.lang.reflect.AnnotatedWildcardType",
    "methods": [
      {
        "name": "getAnnotatedUpperBounds",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.net.SocketTimeoutException"
  },
  {
    "name": "java.nio.file.FileSystemException"
  },
  {
    "name": "java.nio.file.NoSuchFileException"
  },
  {
    "name": "java.security.KeyFactory",
    "methods": [
      {
        "name": "getInstance",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.security.KeyPairGenerator",
    "methods": [
      {
        "name": "getInstance",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.security.MessageDigest",
    "methods": [
      {
        "name": "getInstance",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.security.cert.PKIXRevocationChecker"
  },
  {
    "name": "java.security.interfaces.ECPrivateKey"
  },
  {
    "name": "java.security.interfaces.ECPublicKey"
  },
  {
    "name": "java.util.AbstractSet",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "java.util.Collections$EmptyList",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "java.util.Collections$EmptySet",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "java.util.Collections$SingletonSet",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "java.util.Collections$UnmodifiableMap",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "java.util.ImmutableCollections$Map1",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "java.util.ImmutableCollections$Set12",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.util.concurrent.CompletionException"
  },
  {
    "name": "java.util.concurrent.ExecutionException"
  },
  {
    "name": "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForWildcardUpperBoundType$AnnotatedWildcardType",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.i2p.crypto.eddsa.EdDSAKey"
  },
  {
    "name": "org.apache.sshd.common.util.security.SunJCESecurityProviderRegistrar",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.sshd.common.util.security.bouncycastle.BouncyCastleSecurityProviderRegistrar",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.sshd.common.util.security.eddsa.EdDSASecurityProviderRegistrar",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.interfaces.EdDSAKey"
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.COMPOSITE$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.CONTEXT$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.CompositeSignatures$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.DH$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.DSA$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.DSTU4145$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.Dilithium$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.EC$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.ECGOST$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.EXTERNAL$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.EdEC$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.ElGamal$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.Falcon$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.GM$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.GOST$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.IES$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.LMS$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.MLDSA$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.MLKEM$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.NTRU$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.NoSig$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.RSA$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.SLHDSA$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.SPHINCSPlus$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.X509$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.edec.KeyFactorySpi$Ed25519",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Blake2b$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Blake2s$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Blake3$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.DSTU7564$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.GOST3411$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Haraka$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Keccak$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.MD2$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.MD4$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.MD5$Digest",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.MD5$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.RIPEMD128$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.RIPEMD160$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.RIPEMD256$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.RIPEMD320$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SHA1$Digest",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SHA1$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SHA224$Digest",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SHA224$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SHA256$Digest",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SHA256$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SHA3$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SHA384$Digest",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SHA384$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SHA512$Digest",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SHA512$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SM3$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Skein$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Tiger$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Whirlpool$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.drbg.DRBG$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.keystore.BC$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.keystore.BCFKS$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.keystore.PKCS12$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.AES$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.ARC4$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.ARIA$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Blowfish$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.CAST5$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.CAST6$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Camellia$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.ChaCha$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.DES$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.DESede$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.DSTU7624$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.GOST28147$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.GOST3412_2015$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Grain128$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Grainv1$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.HC128$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.HC256$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.IDEA$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Noekeon$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.OpenSSLPBKDF$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF1$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF2$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.PBEPKCS12$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Poly1305$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.RC2$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.RC5$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.RC6$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Rijndael$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.SCRYPT$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.SEED$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.SM4$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Salsa20$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Serpent$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Shacal2$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.SipHash$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.SipHash128$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Skipjack$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.TEA$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.TLSKDF$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Threefish$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Twofish$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.VMPC$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.VMPCKSA3$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.XSalsa20$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.XTEA$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Zuc$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jce.provider.BouncyCastleProvider",
    "fields": [
      {
        "name": "PROVIDER_NAME"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.eclipse.angus.mail.imap.IMAPProvider"
  },
  {
    "name": "org.eclipse.angus.mail.imap.IMAPSSLProvider"
  },
  {
    "name": "org.eclipse.angus.mail.pop3.POP3Provider"
  },
  {
    "name": "org.eclipse.angus.mail.pop3.POP3SSLProvider"
  },
  {
    "name": "org.eclipse.angus.mail.smtp.SMTPProvider"
  },
  {
    "name": "org.eclipse.angus.mail.smtp.SMTPSSLProvider"
  },
  {
    "name": "org.eclipse.angus.mail.smtp.SMTPTransport",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "jakarta.mail.Session",
          "jakarta.mail.URLName"
        ]
      }
    ]
  },
  {
    "name": "org.eclipse.angus.mail.util.MailStreamProvider"
  },
  {
    "name": "org.eclipse.jgit.api.errors.InvalidRemoteException"
  },
  {
    "name": "org.eclipse.jgit.errors.NoRemoteRepositoryException"
  },
  {
    "name": "org.eclipse.jgit.errors.TransportException"
  },
  {
    "name": "org.eclipse.jgit.http.server.HttpServerText",
    "allPublicFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.bytecode.enhance.spi.interceptor.BytecodeInterceptorLogging_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.bytecode.enhance.spi.interceptor.BytecodeInterceptorLogging_$logger_en"
  },
  {
    "name": "org.hibernate.bytecode.enhance.spi.interceptor.BytecodeInterceptorLogging_$logger_en_US"
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.NotNullValidator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "isValid",
        "parameterTypes": [
          "java.lang.Object",
          "jakarta.validation.ConstraintValidatorContext"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.size.SizeValidatorForCharSequence",
    "queryAllDeclaredMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "initialize",
        "parameterTypes": [
          "java.lang.annotation.Annotation"
        ]
      },
      {
        "name": "isValid",
        "parameterTypes": [
          "java.lang.Object",
          "jakarta.validation.ConstraintValidatorContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.beans.TypeMismatchException"
  },
  {
    "name": "org.springframework.beans.factory.config.Scope",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.ConfigurableBootstrapContext"
  },
  {
    "name": "org.springframework.boot.actuate.audit.listener.AbstractAuditListener",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.boot.actuate.audit.listener.AuditApplicationEvent"
        ]
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.audit.listener.AuditApplicationEvent"
  },
  {
    "name": "org.springframework.boot.actuate.audit.listener.AuditListener",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.SystemHealth",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getGroups",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.security.AbstractAuthenticationAuditListener",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.security.AbstractAuthorizationAuditListener",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.security.AuthenticationAuditListener",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.security.AuthenticationAuditListener$WebAuditListener"
  },
  {
    "name": "org.springframework.boot.actuate.security.AuthorizationAuditListener",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.DeferredLogFactory"
  },
  {
    "name": "org.springframework.boot.util.Instantiator$AvailableParameters"
  },
  {
    "name": "org.springframework.cloud.autoconfigure.RefreshAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshScopeBeanDefinitionEnhancer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "postProcessBeanDefinitionRegistry",
        "parameterTypes": [
          "org.springframework.beans.factory.support.BeanDefinitionRegistry"
        ]
      },
      {
        "name": "postProcessBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
        ]
      },
      {
        "name": "setEnvironment",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.context.config.ContextRefreshedWithApplicationEvent"
  },
  {
    "name": "org.springframework.cloud.context.refresh.ConfigDataContextRefresher",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.context.refresh.ContextRefresher",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "refresh",
        "parameterTypes": []
      },
      {
        "name": "refreshEnvironment",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.context.refresh.LegacyContextRefresher"
  },
  {
    "name": "org.springframework.cloud.context.refresh.RefreshScopeLifecycle"
  },
  {
    "name": "org.springframework.cloud.context.scope.GenericScope",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.beans.factory.ObjectFactory"
        ]
      },
      {
        "name": "getConversationId",
        "parameterTypes": []
      },
      {
        "name": "getErrors",
        "parameterTypes": []
      },
      {
        "name": "postProcessBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
        ]
      },
      {
        "name": "registerDestructionCallback",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Runnable"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "resolveContextualObject",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setScopeCache",
        "parameterTypes": [
          "org.springframework.cloud.context.scope.ScopeCache"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.context.scope.refresh.RefreshScope",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      },
      {
        "name": "postProcessBeanDefinitionRegistry",
        "parameterTypes": [
          "org.springframework.beans.factory.support.BeanDefinitionRegistry"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.endpoint.event.RefreshEvent"
  },
  {
    "name": "org.springframework.cloud.endpoint.event.RefreshEventListener",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      },
      {
        "name": "supportsEventType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.logging.LoggingRebinder"
  },
  {
    "name": "org.springframework.cloud.util.ConditionalOnBootstrapDisabled",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.util.ConditionalOnBootstrapEnabled",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.env.StandardEnvironment"
  },
  {
    "name": "org.springframework.dao.ConcurrencyFailureException"
  },
  {
    "name": "org.springframework.http.HttpStatus"
  },
  {
    "name": "org.springframework.security.authentication.event.AbstractAuthenticationEvent"
  },
  {
    "name": "org.springframework.security.authentication.event.AbstractAuthenticationFailureEvent"
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationSuccessEvent"
  },
  {
    "name": "org.springframework.security.authentication.event.LogoutSuccessEvent"
  },
  {
    "name": "org.springframework.security.authorization.event.AuthorizationDeniedEvent"
  },
  {
    "name": "org.springframework.security.authorization.event.AuthorizationEvent"
  },
  {
    "name": "org.springframework.security.web.authentication.switchuser.AuthenticationSwitchUserEvent"
  },
  {
    "name": "org.springframework.validation.BindException"
  },
  {
    "name": "org.springframework.validation.FieldError"
  },
  {
    "name": "org.springframework.validation.ObjectError"
  },
  {
    "name": "org.springframework.web.HttpMediaTypeNotSupportedException"
  },
  {
    "name": "org.springframework.web.HttpRequestMethodNotSupportedException"
  },
  {
    "name": "org.springframework.web.bind.MethodArgumentNotValidException"
  },
  {
    "name": "org.springframework.web.bind.MissingServletRequestParameterException"
  },
  {
    "name": "org.springframework.web.bind.ServletRequestBindingException"
  },
  {
    "name": "org.springframework.web.multipart.support.MissingServletRequestPartException"
  },
  {
    "name": "org.springframework.web.reactive.result.view.RequestContext"
  },
  {
    "name": "org.springframework.web.server.ResponseStatusException"
  },
  {
    "name": "org.springframework.web.servlet.NoHandlerFoundException"
  },
  {
    "name": "org.springframework.web.servlet.resource.NoResourceFoundException"
  },
  {
    "name": "org.thymeleaf.spring5.context.IThymeleafRequestContext"
  },
  {
    "name": "org.thymeleaf.spring5.expression.IThymeleafEvaluationContext"
  },
  {
    "name": "org.thymeleaf.spring6.context.IThymeleafRequestContext"
  },
  {
    "name": "org.thymeleaf.spring6.expression.IThymeleafEvaluationContext"
  },
  {
    "name": "org.thymeleaf.spring6.expression.Mvc$Spring41MvcUriComponentsBuilderDelegate",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.thymeleaf.standard.expression.AdditionExpression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression",
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      }
    ]
  },
  {
    "name": "org.thymeleaf.standard.expression.AdditionSubtractionExpression",
    "methods": [
      {
        "name": "isLeftAllowed",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      },
      {
        "name": "isRightAllowed",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      }
    ]
  },
  {
    "name": "org.thymeleaf.standard.expression.AndExpression",
    "methods": [
      {
        "name": "isLeftAllowed",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      },
      {
        "name": "isRightAllowed",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      }
    ]
  },
  {
    "name": "org.thymeleaf.standard.expression.EqualsNotEqualsExpression",
    "methods": [
      {
        "name": "isLeftAllowed",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      },
      {
        "name": "isRightAllowed",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      }
    ]
  },
  {
    "name": "org.thymeleaf.standard.expression.GreaterLesserExpression",
    "methods": [
      {
        "name": "isLeftAllowed",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      },
      {
        "name": "isRightAllowed",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      }
    ]
  },
  {
    "name": "org.thymeleaf.standard.expression.IStandardConversionService"
  },
  {
    "name": "org.thymeleaf.standard.expression.IStandardExpressionParser"
  },
  {
    "name": "org.thymeleaf.standard.expression.IStandardVariableExpressionEvaluator"
  },
  {
    "name": "org.thymeleaf.standard.expression.MultiplicationDivisionRemainderExpression",
    "methods": [
      {
        "name": "isLeftAllowed",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      },
      {
        "name": "isRightAllowed",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      }
    ]
  },
  {
    "name": "org.thymeleaf.standard.expression.OrExpression",
    "methods": [
      {
        "name": "isLeftAllowed",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      },
      {
        "name": "isRightAllowed",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      }
    ]
  },
  {
    "name": "org.zalando.problem.AbstractThrowableProblem",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getDetail",
        "parameterTypes": []
      },
      {
        "name": "getInstance",
        "parameterTypes": []
      },
      {
        "name": "getParameters",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.zalando.problem.DefaultProblem",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.zalando.problem.Exceptional",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.zalando.problem.Problem",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.zalando.problem.ProblemBuilder"
  },
  {
    "name": "org.zalando.problem.StatusType"
  },
  {
    "name": "org.zalando.problem.ThrowableProblem",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getCause",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.zalando.problem.jackson.AbstractThrowableProblemMixIn",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.zalando.problem.jackson.ExceptionalMixin",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.zalando.problem.jackson.ExceptionalWithoutStacktraceMixin",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.zalando.problem.jackson.ProblemMixIn",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.zalando.problem.jackson.ProblemTypeConverter",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.zalando.problem.violations.Violation"
  },
  {
    "name": "sun.java2d.marlin.DMarlinRenderingEngine",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.Result$HibernateProxy$dvCasdCj",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.assessment.domain.Result_Accessor_ak1f52",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.assessment.domain.Result"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.atlas.domain.profile.LearnerProfile$HibernateProxy$qOFwS4w0",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.ConductAgreement$HibernateAccessOptimizer$UTqaWHep",
    "fields": [
      {
        "name": "invocationTarget$l7imcr1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.ConductAgreement$HibernateInstantiator$x7JdJMtH",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.communication.domain.CourseNotification$HibernateProxy$jGHEM0aM",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.Authority$HibernateAccessOptimizer$iLs5elUi",
    "fields": [
      {
        "name": "invocationTarget$ebo4ur0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.Authority$HibernateInstantiator$lxT7sDdf",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.Course$HibernateProxy$YhxdyBTJ",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.User$HibernateProxy$WJa77Eyy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.core.domain.User_Accessor_kb7uj6",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.core.domain.User"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.ExamSession_Accessor_o76kkp",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.domain.ExamSession"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.ExamUser_Accessor_4e0idg",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.domain.ExamUser"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.StudentExam_Accessor_kqof4i",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.domain.StudentExam"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.event.ExamWideAnnouncementEvent_Accessor_ezv1fj",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.domain.event.ExamWideAnnouncementEvent"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.event.ProblemStatementUpdateEvent_Accessor_9yne1t",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.domain.event.ProblemStatementUpdateEvent"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exam.domain.event.WorkingTimeUpdateEvent_Accessor_52mkbj",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exam.domain.event.WorkingTimeUpdateEvent"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.SubmissionVersion_Accessor_tbtxpz",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "de.tum.cit.aet.artemis.exercise.domain.SubmissionVersion"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.domain.TeamAssignmentConfig$HibernateProxy$YhTjehYH",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.dto.TeamAssignmentPayload"
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.dto.TeamImportStrategyType"
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.dto.TeamSearchUserDTO"
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.service.team.TeamImportStrategy"
  },
  {
    "name": "de.tum.cit.aet.artemis.exercise.web.TeamResource$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.message.IrisMessageContent$HibernateAccessOptimizer$jlDyBZBn",
    "fields": [
      {
        "name": "invocationTarget$6aln1n1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.iris.domain.settings.IrisSettings$HibernateAccessOptimizer$3IUzrJXU",
    "fields": [
      {
        "name": "invocationTarget$p8ti040"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.plagiarism.domain.PlagiarismDetectionConfig$HibernateProxy$b6oKiZ5k",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExercise$HibernateProxy$OWz9LkYZ",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseBuildConfig$HibernateProxy$ESsY77RW",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.ProgrammingExerciseTestCase$HibernateProxy$wGDsT6Bv",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.SolutionProgrammingExerciseParticipation$HibernateProxy$cMLxF1QO",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.programming.domain.TemplateProgrammingExerciseParticipation$HibernateProxy$m16A5J3h",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.DragAndDropQuestion$HibernateProxy$Zm6DKK2Q",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizPointStatistic$HibernateProxy$nd4u4Cuz",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.QuizQuestionStatistic$HibernateProxy$g4gTKYoj",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "de.tum.cit.aet.artemis.quiz.domain.ShortAnswerQuestion$HibernateProxy$ASGsUkj4",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties.Async",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties.Http",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties.Http.Cache",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties.Database",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties.Database.Couchbase",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties.Cache",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties.Cache.Hazelcast",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties.Cache.Caffeine",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties.Cache.Ehcache",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties.Cache.Infinispan",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties.Cache.Infinispan.Local",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties.Cache.Infinispan.Distributed",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties.Cache.Infinispan.Replicated",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties.Cache.Memcached",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties.Cache.Memcached.Authentication",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties.Cache.Redis",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties.Mail",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties.Security",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties.Security.ClientAuthorization",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties.Security.Authentication",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties.Security.Authentication.Jwt",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties.Security.RememberMe",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties.Security.OAuth2",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties.ApiDocs",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties.ApiDocs.Server",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties.Logging",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties.Logging.Logstash",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties.Social",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties.Gateway",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties.Gateway.RateLimiting",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties.Registry",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties.ClientApp",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "tech.jhipster.config.JHipsterProperties.AuditEvents",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "com.hazelcast.internal.util.BuildInfoProvider",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "com.hazelcast.instance.BuildInfoProvider",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "com.hazelcast.version.Version",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "com.hazelcast.internal.cluster.impl.MemberVersion",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "com.hazelcast.shaded.org.jctools.queues.MpmcArrayQueueProducerLimitField",
    "allDeclaredFields": true,
    "fields": [
      {
        "name": "producerLimit",
        "allowUnsafeAccess": true
      }
    ]
  },
  {
    "name": "com.hazelcast.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.internal.partition.impl.PartitionServiceState",
    "allPublicMethods": true
  },
  {
    "name": "com.hazelcast.internal.memory.impl.*",
    "allPublicMethods": true
  },
  {
    "name": "com.hazelcast.internal.networking.nio.*",
    "allPublicMethods": true
  },
  {
    "name": "com.hazelcast.internal.memory.impl.HeapMemoryManager",
    "allPublicMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.deser.BeanDeserializer",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "com.hazelcast.hibernate.HazelcastCacheRegionFactory",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.hazelcast.hibernate.shaded.caffeine.cache.UnsafeAccess",
    "allDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.hibernate.shaded.caffeine.cache.NodeFactory",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.hibernate.shaded.caffeine.cache.LocalCacheFactory",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.hibernate.shaded.caffeine.cache.Caffeine",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.hazelcast.hibernate.shaded.caffeine.cache.BoundedLocalCache",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.hazelcast.hibernate.shaded.caffeine.cache.BoundedLocalCache$BLCHeader",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "com.hazelcast.hibernate.shaded.caffeine.cache.BoundedLocalCache$BLCHeader$DrainStatusRef",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "com.hazelcast.hibernate.shaded.caffeine.cache.BoundedLocalCache$BoundedLocalManualCache",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "com.hazelcast.hibernate.shaded.caffeine.cache.SS",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "com.hazelcast.hibernate.shaded.caffeine.cache.SSMS",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.persister.entity.UnionSubclassEntityPersister",
    "allDeclaredConstructors": true
  },
  {
    "name": "java.time.LocalDateTime",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "java.util.ImmutableCollections$List12",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "io.jsonwebtoken.Jwts",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "io.jsonwebtoken.Jwts$ENC",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "io.jsonwebtoken.Jwts$SIG",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "io.jsonwebtoken.Jwts$KEY",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "io.jsonwebtoken.Jwts$ZIP",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "io.jsonwebtoken.impl.DefaultJwtBuilder",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "io.jsonwebtoken.impl.DefaultJwtParser",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "io.jsonwebtoken.impl.DefaultJwtParserBuilder",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "io.jsonwebtoken.security.Keys",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "io.jsonwebtoken.impl.security.DefaultKeyPairBuilder",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "io.jsonwebtoken.impl.security.RsaKeyAlgorithm",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "io.jsonwebtoken.impl.security.HmacShaKeyAlgorithm",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "de.tum.cit.aet.artemis.core.dto.CourseContentCountDTO",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "SavedPost",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  }
]