<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>${packageName}</groupId>
    <artifactId>${exerciseNamePomXml}-Tests</artifactId>
    %non-sequential-start%
    <packaging>jar</packaging>
    %non-sequential-stop%
    %sequential-start%
    <packaging>pom</packaging>
    %sequential-stop%
    <version>1.0</version>
    <name>${exerciseName} Tests</name>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <kotlin.version>1.6.10</kotlin.version>
	</properties>
    <dependencies>
        <dependency>
            <!-- Comes with JUnit 5, AssertJ and Hamcrest. JUnit 4 (JUnit 5 Vintage) or jqwik need to be added explicitly -->
            <groupId>de.tum.in.ase</groupId>
            <artifactId>artemis-java-test-sandbox</artifactId>
            <version>1.8.0</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jdk8</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-test</artifactId>
            <version>${kotlin.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <sourceDirectory>${project.basedir}${studentWorkingDirectory}</sourceDirectory>
        %non-sequential-start%
        <testSourceDirectory>${project.basedir}/test</testSourceDirectory>
        <testResources>
            <testResource>
                <directory>${project.basedir}/test</directory>
            </testResource>
        </testResources>
        %non-sequential-stop%
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M5</version>
                <configuration>
                    <argLine>-Dfile.encoding=UTF-8</argLine>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <version>${kotlin.version}</version>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <jvmTarget>1.8</jvmTarget>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.9.0</version>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>testCompile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <source>17</source>
                    <target>17</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>enforce-no-student-code-in-trusted-packages</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <rules>
                        <requireFilesDontExist>
                            <files>
                                <file>${project.build.outputDirectory}/ch/qos/logback/</file>
                                <file>${project.build.outputDirectory}/com/intellij/</file>
                                <file>${project.build.outputDirectory}/com/sun/</file>
                                <file>${project.build.outputDirectory}/de/tum/in/test/api/</file>
                                <file>${project.build.outputDirectory}/java/</file>
                                <file>${project.build.outputDirectory}/javax/</file>
                                <file>${project.build.outputDirectory}/jdk/</file>
                                <file>${project.build.outputDirectory}/kotlin/</file>
                                <file>${project.build.outputDirectory}/net/jqwik/</file>
                                <file>${project.build.outputDirectory}/org/apache/</file>
                                <file>${project.build.outputDirectory}/org/assertj/</file>
                                <file>${project.build.outputDirectory}/org/eclipse/</file>
                                <file>${project.build.outputDirectory}/org/jacoco/</file>
                                <file>${project.build.outputDirectory}/org/json/</file>
                                <file>${project.build.outputDirectory}/org/junit/</file>
                                <file>${project.build.outputDirectory}/org/opentest4j/</file>
                                <file>${project.build.outputDirectory}/sun/</file>
                            </files>
                        </requireFilesDontExist>
                    </rules>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
