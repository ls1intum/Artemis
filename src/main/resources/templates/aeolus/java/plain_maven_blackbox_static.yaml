api: v0.0.1
actions:
  - name: build
    script: mvn -B clean compile
  - name: checkers
    script: |-
      # all java files in the assignment folder should have maximal line length 80
      pipeline-helper line-length -l 80 -s ${studentParentWorkingDirectoryName}/ -e java
      # checks that the file exists and is not empty for non gui programs
      pipeline-helper file-exists ${studentParentWorkingDirectoryName}/Tests.txt

      main_checker_output=$(pipeline-helper main-method -s target/classes)

      IFS=$'\n' read -rd '' -a main_checker_lines <<< "${main_checker_output}"

      if [ ${#main_checker_lines[@]} -eq 2 ]; then
        export MAIN_CLASS=${main_checker_lines[0]}
      else
        exit 1
      fi

      JAVA_FLAGS="-Djdk.console=java.base"

      sed -i "s#JAVA_FLAGS#${JAVA_FLAGS}#;s#CLASSPATH#../target/classes#" testsuite/config/default.exp
      sed -i "s#MAIN_CLASS#${MAIN_CLASS}#" testsuite/config/default.exp
      export testfiles_base_path="./testsuite/testfiles"
      export tool=$(find testsuite -name "*.tests" -type d -printf "%f" | sed 's#.tests$##')
      sed -i "s#TESTFILES_DIRECTORY#../${testfiles_base_path}#" testsuite/${tool}.tests/*.exp
  - name: secret-tests
    script: |-
      export tool=$(find testsuite -name "*.tests" -type d -printf "%f" | sed 's#.tests$##')
      export step="secret"
      cd testsuite || exit
      rm ${tool}.log || true
      timeout 60s runtest --tool ${tool} ${step}.exp || true
      cd ..
      pipeline-helper -o customFeedbacks dejagnu -n "dejagnu[${step}]" -l testsuite/${tool}.log
      export secretExp="testsuite/${tool}.tests/secret.exp"
      if [ -f "${secretExp}" ]; then
        rm "${secretExp}"
      fi

      export testfiles_base_path="./testsuite/testfiles"

      if [ -f "${testfiles_base_path}/secret" ]; then
        rm "${testfiles_base_path}/secret"
      fi
  - name: public-tests
    script: |-
      export tool=$(find testsuite -name "*.tests" -type d -printf "%f" | sed 's#.tests$##')
      sed -i "s#TESTFILES_DIRECTORY#../${testfiles_base_path}#" testsuite/${tool}.tests/*.exp

      export tool=$(find testsuite -name "*.tests" -type d -printf "%f" | sed 's#.tests$##')
      export step="public"
      cd testsuite || exit
      rm ${tool}.log || true
      timeout 60s runtest --tool ${tool} ${step}.exp || true
      cd ..
      pipeline-helper -o customFeedbacks dejagnu -n "dejagnu[${step}]" -l testsuite/${tool}.log
  - name: advanced-tests
    script: |-
      export testfiles_base_path="./testsuite/testfiles"
      export tool=$(find testsuite -name "*.tests" -type d -printf "%f" | sed 's#.tests$##')
      sed -i "s#TESTFILES_DIRECTORY#../${testfiles_base_path}#" testsuite/${tool}.tests/*.exp

      export step="advanced"
      cd testsuite || exit
      rm ${tool}.log || true
      timeout 60s runtest --tool ${tool} ${step}.exp || true
      cd ..
      pipeline-helper -o customFeedbacks dejagnu -n "dejagnu[${step}]" -l testsuite/${tool}.log
    results:
      - name: only-for-sending-back
        path: "does-not-exist.json"
  - name: static-code-analysis
    script: |-
      mvn -B checkstyle:checkstyle
      mkdir -p staticCodeAnalysisReports
      cp target/checkstyle-result.xml staticCodeAnalysisReports
