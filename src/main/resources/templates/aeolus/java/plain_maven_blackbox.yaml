api: v0.0.1
actions:
  - name: build
    script: mvn -B clean compile
  - name: main_method_checker
    script: |-
      main_checker_output=$(pipeline-helper main-method -s target/classes)

      line_count="$(echo "$main_checker_output" | wc -l)"
      main_class="$(echo "$main_checker_output" | head -n1)"

      if [ "${line_count}" -eq 2 ]; then
        echo main method found in file: "${main_class}"
        sed -i "s#MAIN_CLASS#${main_class}#" testsuite/config/default.exp
      else
        echo "no main method found. quitting the test run."
        exit 1
      fi
  - name: custom_checkers
    script: |-
      # all java files in the assignment folder should have maximal line length 80
      pipeline-helper line-length -l 80 -s ${studentParentWorkingDirectoryName}/ -e java
      # checks that the file exists and is not empty for non gui programs
      pipeline-helper file-exists ${studentParentWorkingDirectoryName}/Tests.txt
  - name: replace_script_variables
    script: |-
      local JAVA_FLAGS="-Djdk.console=java.base"
      local testfiles_base_path="./testsuite/testfiles"
      local tool=$(find testsuite -name "*.tests" -type d -printf "%f" | sed 's#.tests$##')

      sed -i "s#JAVA_FLAGS#${JAVA_FLAGS}#;s#CLASSPATH#../target/classes#" testsuite/config/default.exp
      sed -i "s#TESTFILES_DIRECTORY#../${testfiles_base_path}#" testsuite/${tool}.tests/*.exp
  - name: secret_tests
    script: |-
      if [ ! -d ./testsuite ]; then
        echo "skipping secret tests because the testsuite folder does not exist."
      fi
      
      local step="secret"
      local tool=$(find testsuite -name "*.tests" -type d -printf "%f" | sed 's#.tests$##')
      cd testsuite || exit
      rm ${tool}.log || true
      timeout 60s runtest --tool ${tool} ${step}.exp || true
      cd ..
      pipeline-helper -o customFeedbacks dejagnu -n "dejagnu[${step}]" -l testsuite/${tool}.log
      export secretExp="testsuite/${tool}.tests/secret.exp"
      if [ -f "${secretExp}" ]; then
        rm "${secretExp}"
      fi
    
      if [ -d "${testfiles_base_path}/secret" ]; then
        rm -rf "${testfiles_base_path}/secret"
      fi
  - name: public_tests
    script: |-
      if [ ! -d ./testsuite ]; then
        echo "skipping public tests because the testsuite folder does not exist."
      fi
      
      local step="public"
      local tool=$(find testsuite -name "*.tests" -type d -printf "%f" | sed 's#.tests$##')
      cd testsuite || exit
      rm ${tool}.log || true
      timeout 60s runtest --tool ${tool} ${step}.exp || true
      cd ..
      pipeline-helper -o customFeedbacks dejagnu -n "dejagnu[${step}]" -l testsuite/${tool}.log
  - name: advanced_tests
    script: |-
      if [ ! -d ./testsuite ]; then
        echo "skipping advanced tests because the testsuite folder does not exist."
      fi
      
      local step="advanced"
      local tool=$(find testsuite -name "*.tests" -type d -printf "%f" | sed 's#.tests$##')
      cd testsuite || exit
      rm ${tool}.log || true
      timeout 60s runtest --tool ${tool} ${step}.exp || true
      cd ..
      pipeline-helper -o customFeedbacks dejagnu -n "dejagnu[${step}]" -l testsuite/${tool}.log
    results:
      - name: custom-feedbacks
        path: '**/customFeedbacks/TEST-*.json'
        type: custom-feedbacks
