api: v0.0.1
metadata:
    name: c with fact
    id: c-windfile
    description: This is a windfile for c exercises using fact
    author: Andreas Resch
    docker:
        image: ls1tum/artemis-c-docker
        tag: latest
        volumes:
            - ${WORKDIR}:${WORKDIR}
            - ${TMPDIR}:${TMPDIR}
        parameters:
            - --cpus
            - '"2"'
            - --memory
            - '"2g"'
            - --memory-swap
            - '"2g"'
            - --pids-limit
            - '"1000"'
actions:
    - name: setup_the_build_environment
      script: |
        #!/usr/bin/env bash

        # ------------------------------
        # Task Description:
        # Build and run all tests
        # ------------------------------

        # Updating assignment and test-reports ownership...
        sudo chown artemis_user:artemis_user assignment -R
        sudo rm -rf test-reports
        sudo mkdir test-reports
        sudo chown artemis_user:artemis_user test-reports -R
        # assignment
        cd tests
        REQ_FILE=requirements.txt
        if [ -f "$REQ_FILE" ];
        then
          pip3 install --user -r requirements.txt
        else
          echo "$REQ_FILE does not exist"
        fi
        exit 0
      run_always: false
    - name: setup_makefile
      script: |
        #!/usr/bin/env bash

        # ------------------------------
        # Task Description:
        # Setup makefile
        # ------------------------------

        shadowFilePath="../tests/testUtils/c/shadow_exec.c"

        foundIncludeDirs=`grep -m 1 ''INCLUDEDIRS\s*='' assignment/Makefile`

        foundSource=`grep -m 1 ''SOURCE\s*='' assignment/Makefile`
        foundSource="$foundSource $shadowFilePath"

        rm -f assignment/GNUmakefile
        rm -f assignment/makefile

        cp -f tests/Makefile assignment/Makefile || exit 2
        sed -i "s~\bINCLUDEDIRS\s*=.*~${foundIncludeDirs}~; s~\bSOURCE\s*=.*~${foundSource}~" assignment/Makefile'
      run_always: false
    - name: build_and_run_all_tests
      script: |
        #!/usr/bin/env bash

        # ------------------------------
        # Task Description:
        # Build and run all tests if the compilation succeeds
        # ------------------------------

        sudo gcc -c -Wall assignment/*.c || error=true

        if [ ! $error ]
        then
          cd tests || exit 0
          python3 Tests.py
          exit 0
        else
          exit 1
        fi
      run_always: false
    - name: junit
      parameters:
          ignore_time: false
          test_results: test-reports/*results.xml
      platform: bamboo
      kind: junit
      run_always: true
    - name: cleanup
      script: |
        sudo rm -rf tests/
        sudo rm -rf assignment/
        sudo rm -rf test-reports/'
      run_always: true
