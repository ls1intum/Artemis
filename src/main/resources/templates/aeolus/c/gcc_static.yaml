api: v0.0.1
metadata:
    name: SOLUTION
    id: CCOURSEGCC-SOLUTION
    description: SOLUTION Build Plan for Exercise with gcc and static code analysis
actions:
    - name: setup_the_build_environment
      script: |
          #!/usr/bin/env bash

          # ------------------------------
          # Task Description:
          # Build and run all tests
          # ------------------------------

          # Updating assignment and test-reports ownership...
          sudo chown artemis_user:artemis_user assignment/ -R
          sudo rm -rf test-reports
          sudo mkdir test-reports
          sudo chown artemis_user:artemis_user test-reports/ -R

          # assignment
          cd tests
          REQ_FILE=requirements.txt
          if [ -f "$REQ_FILE" ]; then
              pip3 install --user -r requirements.txt
          else
              echo "$REQ_FILE does not exist"
          fi
      runAlways: false
    - name: setup_makefile
      script: |-
          #!/usr/bin/env bash

          # ------------------------------
          # Task Description:
          # Setup makefile
          # ------------------------------

          shadowFilePath="../tests/testUtils/c/shadow_exec.c"

          foundIncludeDirs=`grep -m 1 'INCLUDEDIRS\s*=' assignment/Makefile`

          foundSource=`grep -m 1 'SOURCE\s*=' assignment/Makefile`
          foundSource="$foundSource $shadowFilePath"

          rm -f assignment/GNUmakefile
          rm -f assignment/makefile

          cp -f tests/Makefile assignment/Makefile || exit 2
          sed -i "s~\bINCLUDEDIRS\s*=.*~${foundIncludeDirs}~; s~\bSOURCE\s*=.*~${foundSource}~" assignment/Makefile
      runAlways: false
    - name: build_and_run_all_tests
      script: |
          #!/usr/bin/env bash

          # ------------------------------
          # Task Description:
          # Build and run all tests if the compilation succeeds
          # ------------------------------

          sudo gcc -c -Wall assignment/*.c || error=true
          if [ ! $error ]
          then
              cd tests || exit 0
              python3 Tests.py
          else
              exit 1
          fi
      runAlways: false
    - name: cleanup
      script: |-
          sudo rm -rf tests/
          sudo rm -rf assignment/
          sudo rm -rf test-reports/
      runAlways: true
      results:
          - name: gcc
            path: target/gcc.xml
          - name: junit_test-reports/*results.xml
            path: test-reports/*results.xml
            type: junit
