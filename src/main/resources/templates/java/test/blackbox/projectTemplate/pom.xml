<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>${packageName}</groupId>
    <artifactId>${exerciseNamePomXml}-Tests</artifactId>
    <packaging>${packaging}</packaging>
    <version>1.0</version>
    <name>${exerciseName} Tests</name>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <argLine>-Dfile.encoding=UTF-8</argLine>
        <!--%static-code-analysis-start%-->
        <scaConfigDirectory>${project.basedir}/staticCodeAnalysisConfig</scaConfigDirectory>
        <analyzeTests>false</analyzeTests>
        <!--%static-code-analysis-stop%-->
	</properties>
    <build>
        <sourceDirectory>${project.basedir}${studentWorkingDirectory}</sourceDirectory>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <release>20</release>
                </configuration>
            </plugin>
            <!--%static-code-analysis-start%-->
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>4.7.3.0</version>
                <configuration>
                    <!-- Do not analyze the files in the test directory -->
                    <includeTests>${analyzeTests}</includeTests>
                    <xmlOutput>true</xmlOutput>
                    <!-- Do not report bugs matching the rules defined in this file -->
                    <excludeFilterFile>${scaConfigDirectory}/spotbugs-exclusions.xml</excludeFilterFile>
                    <!-- Only include bugs matching the rules defined in this file -->
                    <includeFilterFile/>
                    <!-- Analysis with high effort are more precise and can potentially find more bugs at the cost of
                    memory consumption and computation time. See https://spotbugs.readthedocs.io/en/stable/effort.html
                    for more information -->
                    <effort>Default</effort>
                    <!-- Minimum bug severity to report. Low reports all bugs -->
                    <threshold>Low</threshold>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>3.2.1</version>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>10.8.0</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <!-- Do not analyze the files in the test directory -->
                    <includeTestSourceDirectory>${analyzeTests}</includeTestSourceDirectory>
                    <!-- Use the Artemis default configuration. Two other predefined rulesets are available:
                     Add sun_checks.xml to check for the official Oracle code conventions or add google_checks.xml to
                     check for the Google's Java Style Guide -->
                    <configLocation>${scaConfigDirectory}/checkstyle-configuration.xml</configLocation>
                    <!-- No documentation and not needed -->
                    <enableRSS>false</enableRSS>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>3.20.0</version>
                <dependencies>
                    <dependency>
                        <groupId>net.sourceforge.pmd</groupId>
                        <artifactId>pmd-core</artifactId>
                        <version>6.55.0</version>
                    </dependency>
                    <dependency>
                        <groupId>net.sourceforge.pmd</groupId>
                        <artifactId>pmd-java</artifactId>
                        <version>6.55.0</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <!-- Do not analyze the files in the test directory -->
                    <includeTests>${analyzeTests}</includeTests>
                    <!-- Bugs reported have at least this priority. 1 is the highest and 5 is the lowest priority -->
                    <minimumPriority>5</minimumPriority>
                    <!-- Add multiple rule sets for fine-grained control of file exclusions per rule -->
                    <rulesets>
                        <ruleset>${scaConfigDirectory}/pmd-configuration.xml</ruleset>
                    </rulesets>
                    <!-- Minimum amount of duplicated tokens triggering the copy-paste detection -->
                    <minimumTokens>60</minimumTokens>
                    <!-- Ignore literal value differences when evaluating a duplicate block.
                    If true, foo=42; and foo=43; will be seen as equivalent -->
                    <ignoreLiterals>true</ignoreLiterals>
                    <!-- Similar to ignoreLiterals but for identifiers, i.e. variable names, methods names.
                    If activated, most tokens will be ignored so minimumTokens must be lowered significantly -->
                    <ignoreIdentifiers>false</ignoreIdentifiers>
                </configuration>
            </plugin>
            <!--%static-code-analysis-stop%-->
        </plugins>
    </build>
</project>
