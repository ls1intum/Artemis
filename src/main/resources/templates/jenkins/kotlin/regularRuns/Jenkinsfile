// ARTEMIS: JenkinsPipeline

pipeline {
        options {
            timeout(time: #jenkinsTimeout, unit: 'MINUTES')
        }
        agent {
            docker {
                image '#dockerImage'
                label 'docker'
                args '#dockerArgs'
            }
        }
        stages {
            stage('Checkout') {
                steps {
                    checkout([$class: 'GitSCM', branches: [[name: '#defaultBranch']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '#gitCredentials', name: 'tests', url: '#testRepository']]])
                    dir('#assignmentCheckoutPath') {
                        checkout([$class: 'GitSCM', branches: [[name: '#defaultBranch']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '#gitCredentials', name: 'assignment', url: '#assignmentRepository']]])
                    }
                }
            }
            stage('Build') {
                steps {
                    timestamps {
                        withMaven {
                            sh 'mvn clean test -B #testwiseCoverageMavenProfile'
                        }
                    }
                }
            }
        }
        post {
            #testwiseCoverageScript
            cleanup {
                sh '''
                rm -rf results
                mkdir results
                cp target/surefire-reports/*.xml $WORKSPACE/results/ || true
                sed -i 's/[^[:print:]\t]/ï¿½/g' $WORKSPACE/results/*.xml || true
                '''
                sendTestResults credentialsId: '#jenkinsNotificationToken', notificationUrl: '#notificationsUrl'
                cleanWs()
            }
        }
}
