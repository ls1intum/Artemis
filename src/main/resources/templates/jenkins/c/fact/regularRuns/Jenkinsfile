// ARTEMIS: JenkinsPipeline

pipeline {
        options {
            timeout(time: #jenkinsTimeout, unit: 'MINUTES')
        }
        agent {
            docker {
                image '#dockerImage'
                label 'docker'
            }
        }
        stages {
            stage('Checkout') {
                steps {
                    dir('#testsCheckoutPath') {
                        checkout([$class: 'GitSCM', branches: [[name: '#defaultBranch']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '#gitCredentials', name: 'tests', url: '#testRepository']]])
                    }
                    dir('#assignmentCheckoutPath') {
                        checkout([$class: 'GitSCM', branches: [[name: '#defaultBranch']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '#gitCredentials', name: 'assignment', url: '#assignmentRepository']]])
                    }
                }
            }
            stage('Build') {
                steps {
                    timestamps {
                     sh '''
                        cd $WORKSPACE
                        echo "--------------------setup-------------------"
                        echo "User:"
                        whoami
                        echo "--------------------setup-------------------"
                        echo "--------------------info--------------------"
                        python3 --version
                        pip3 --version
                        pip3 freeze | grep fact
                        gcc --version
                        echo "--------------------tests-------------------"
                        ls -la tests
                        echo "--------------------tests-------------------"
                        echo "--------------------assignment--------------"
                        ls -la assignment
                        echo "--------------------assignment--------------"

                        exit 0
                       '''
                   sh '''
                       rm -f assignment/GNUmakefile
                       rm -f assignment/Makefile

                       cp -f tests/Makefile assignment/Makefile || exit 2
                       '''
                   sh '''
                       #!/bin/bash

                       cd tests
                       python3 Tests.py
                       rm Tests.py
                       rm -rf ./tests
                       exit 0
                      '''
                    }
                }
            }
        }
        post {
            cleanup {
                sh  '''
                    if [ -e test-reports/tests-results.xml ]
                    then
                        sed -i 's/[^[:print:]]//g' test-reports/tests-results.xml
                        sed -i 's/<skipped/<error/g' test-reports/tests-results.xml
                        sed -i 's/<\/skipped>/<\/error>/g' test-reports/tests-results.xml
                    fi
                    rm -rf results
                    mv test-reports results
                    '''
                sendTestResults credentialsId: '#jenkinsNotificationToken', notificationUrl: '#notificationsUrl'
                cleanWs()
            }
        }
}
