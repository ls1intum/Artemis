// ARTEMIS: JenkinsPipeline

pipeline {
        options {
            timeout(time: #jenkinsTimeout, unit: 'MINUTES')
        }
        agent {
            docker {
                image '#dockerImage'
                label 'docker'
                args '#dockerArgs'
            }
        }
        stages {
            stage('Checkout') {
                steps {
                    checkout([$class: 'GitSCM', branches: [[name: '#defaultBranch']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '#gitCredentials', name: 'tests', url: '#testRepository']]])
                    dir('#assignmentCheckoutPath') {
                        checkout([$class: 'GitSCM', branches: [[name: '#defaultBranch']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '#gitCredentials', name: 'assignment', url: '#assignmentRepository']]])
                    }
                }
            }
            stage('Build') {
                steps {
                    timestamps {
                        sh  '''
                            rm -rf Sources
                            mv assignment/Sources .
                            rm -rf assignment
                            mkdir assignment
                            cp -R Sources assignment
                            cp -R Tests assignment
                            cp Package.swift assignment

                            # swift
                            cd assignment
                            swift build

                            # swift test
                            swift test || true
                            '''
                    }
                }
            }
        }
        post {
            always {
                sh '''
                    #staticCodeAnalysisScript
                    '''
            }
            cleanup {
                sh  '''
                    rm -rf results
                    mkdir results
                    if [ -e assignment/tests.xml ]
                    then
                        sed -i 's/<testsuites>/<testsuite>/g ; s/<\/testsuites>/<\/testsuite>/g' assignment/tests.xml
                        cp assignment/tests.xml $WORKSPACE/results/ || true
                        sed -i 's/[^[:print:]\t]/ï¿½/g' $WORKSPACE/results/*.xml || true
                    fi
                    '''
                sendTestResults credentialsId: '#jenkinsNotificationToken', notificationUrl: '#notificationsUrl'
                cleanWs()
            }
        }
}
