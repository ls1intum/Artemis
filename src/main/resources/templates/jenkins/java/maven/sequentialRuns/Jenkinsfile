// ARTEMIS: JenkinsPipeline

pipeline {
        options {
            timeout(time: #jenkinsTimeout, unit: 'MINUTES')
            timestamps()
        }
        agent {
            docker {
                image '#dockerImage'
                label 'docker'
            }
        }
        stages {
            stage('Checkout') {
                steps {
                    checkout([$class: 'GitSCM', branches: [[name: '#defaultBranch']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '#gitCredentials', name: 'tests', url: '#testRepository']]])
                    dir('#assignmentCheckoutPath') {
                        checkout([$class: 'GitSCM', branches: [[name: '#defaultBranch']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '#gitCredentials', name: 'assignment', url: '#assignmentRepository']]])
                    }
                }
            }
            stage('Build') {
                steps {
                    withMaven {
                        dir("structural") {
                            sh 'mvn clean test -B'
                        }

                        dir("behavior") {
                            sh 'mvn clean test -B'
                        }
                    }
                }
            }
        }
        post {
            cleanup {
                sh 'rm -rf results'
                sh 'mkdir results'
                sh 'cp structural/target/surefire-reports/*.xml $WORKSPACE/results/ || true'
                sh 'cp behavior/target/surefire-reports/*.xml $WORKSPACE/results/ || true'
                sendTestResults credentialsId: '#jenkinsNotificationToken', notificationUrl: '#notificationsUrl'
                cleanWs()
            }
        }
}
