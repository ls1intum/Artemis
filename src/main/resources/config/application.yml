# ===================================================================
# Spring Boot configuration.
#
# This configuration will be overridden by the Spring profile you use,
# for example application-dev.yml if you use the "dev" profile.
#
# More information on profiles: https://www.jhipster.tech/profiles/
# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

logging:
    level:
        ROOT: INFO
        de.tum.cit.aet.artemis: INFO
        tech.jhipster: INFO
        org.springframework.web.socket.config: INFO
        liquibase: INFO
        de.jplag.Submission: ERROR
        org.redisson.connection.DNSMonitor: ERROR
    logback:
        rollingpolicy:
            max-history: 90
            total-size-cap: "10GB"

artemis:
    version: #project.version#
    file-upload-path: uploads
    submission-export-path: exports
    bcrypt-salt-rounds: 11 #default value, see application-artemis.yml for more information how to override and customize this value
    external-system-request:
        batch-size: 50  # wait the time below after 50 requests
        batch-waiting-time: 30000   # in ms = 30s
    iosAppId: "2J3C6P6X3N.de.tum.cit.artemis"
    androidAppPackage: "de.tum.cit.aet.artemis"
    androidSha256CertFingerprints: "D2:E1:A6:6F:8C:00:55:97:9F:30:2F:3D:79:A9:5D:78:85:1F:C5:21:5A:7F:81:B3:BF:60:22:71:EF:6F:60:24"

    # activate the following line if you want to support push notifications for the mobile clients.
    # More information about the TUM hosted hermes service can be found here: https://github.com/ls1intum/Hermes
    # push-notification-relay: https://hermes.artemis.cit.tum.de

    continuous-integration:
        # Defines the used docker images for certain programming languages.
        # For each language at least the `default` image has to be defined.
        # This `default` option will be overridden by more specific project type
        # definitions.
        build:
            default-docker-flags:
                - flag: --cpus
                  value: 2
                # Set `memory-swap` and `memory` to the same value to turn off SWAP.
                # See -> https://docs.docker.com/config/containers/resource_constraints/#--memory-swap-details
                - flag: --memory
                  value: 2g
                - flag: --memory-swap
                  value: 2g
                - flag: --pids-limit
                  value: 1000
            images:
                java:
                    # possible overrides: maven, gradle
                    default: "ls1tum/artemis-maven-template:java17-21"
                    maven_blackbox: "ghcr.io/uni-passau-artemis/artemis-dejagnu:22"
                kotlin:
                    # possible overrides: maven, gradle
                    default: "ls1tum/artemis-maven-template:java17-21"
                empty:
                    default: "ubuntu:24.04"
                python:
                    default: "ls1tum/artemis-python-docker:v1.0.0"
                c:
                    # possible overrides: gcc, fact
                    default: "ls1tum/artemis-c-docker:v1.0.0"
                    fact: "sharingcodeability/fact:v0.0.5"
                haskell:
                    default: "ghcr.io/uni-passau-artemis/artemis-haskell:v22.37.0"
                vhdl:
                    default: "ghcr.io/ls1intum/artemis-vhdl-docker:v1.0.0"
                assembler:
                    default: "ghcr.io/ls1intum/artemis-assembler-docker:v1.0.0"
                swift:
                    # possible overrides: xcode
                    default: "ls1tum/artemis-swift-swiftlint-docker:swift5.9.2"
                ocaml:
                    default: "ls1tum/artemis-ocaml-docker:v1"
                rust:
                    default: "ghcr.io/ls1intum/artemis-rust-docker:v0.9.70"
                javascript:
                    default: "ghcr.io/ls1intum/artemis-javascript-docker:v1.0.0"
                r:
                    default: "ghcr.io/ls1intum/artemis-r-docker:v1.0.0"
                c_plus_plus:
                    default: "ghcr.io/ls1intum/artemis-cpp-docker:v1.0.0"
                c_sharp:
                    default: "ghcr.io/ls1intum/artemis-csharp-docker:v1.0.0"
                typescript:
                    default: "ghcr.io/ls1intum/artemis-javascript-docker:v1.0.0"

        # The following properties are used to configure the Artemis build agent.
        # The build agent is responsible for executing the buildJob to test student submissions.
        build-agent:
            # Name of the build agent. Only lowercase letters, numbers and hyphens are allowed. ([a-z0-9-]+)
            short-name: "artemis-build-agent-1"
            display-name: "Artemis Build Agent 1"



management:
    endpoints:
        web:
            base-path: /management
            exposure:
                include:
                  - configprops
                  - env
                  - health
                  - info
                  - jhimetrics
                  - logfile
                  - loggers
                  - prometheus
                  - threaddump
    info:
        git:
            mode: full
        java:
            enabled: true
        env:
            enabled: true
    health:
        mail:
            enabled: false # When using the MailService, configure an SMTP server and set this to true
        ldap:
            enabled: false # Disabled to prevent periodic health checks that lead to null pointer exceptions if the ldap is not configured or not active
        config:
            enabled: false # Disabled because we do not use a Spring Cloud Config Server
    prometheus:
        # Prometheus is the default metrics server
        metrics:
            export:
                enabled: true
                step: 60
        distribution:
            percentiles-histogram:
                all: true
            percentiles:
                all: 0, 0.5, 0.75, 0.95, 0.99, 1.0
        tags:
            application: ${spring.application.name}
    observations:
        http:
            server:
                requests:
                    name: http.server.requests

spring:
    application:
        name: Artemis
    jmx:
        enabled: false
    cloud:
        config:
            import-check:
                enabled: false
    data:
        jpa:
            repositories:
                bootstrap-mode: deferred
        redis:
            host: fcfe:0:0:0:0:0:b:1
            port: 6379
            # custom attributes for Redisson Hibernate
            server-config: single
            idle-connection-timeout: 10000
            connect-timeout: 10000
            timeout: 3000
            retry-attempts: 3
            retry-interval: 1500
            client-name: artemis-build-agent-1
            subscriptions-per-connection: 5
            subscription-connection-minimum-idle-size: 1
            subscription-connection-pool-size: 50
            connection-minimum-idle-size: 10
            connection-pool-size: 64
            database: 0
            dns-monitoring-interval: 5000
            threads: 16
            netty-threads: 32
            codec: org.redisson.codec.Kryo5Codec
            transport-mode: "NIO"
    jpa:
        open-in-view: false
        show-sql: false
        hibernate:
            ddl-auto: none
            naming:
                physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
                implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
        properties:
            hibernate.id.new_generator_mappings: true
            hibernate.connection.provider_disables_autocommit: true
            hibernate.generate_statistics: false
            hibernate.order_inserts: true
            hibernate.order_updates: true
            hibernate.query.fail_on_pagination_over_collection_fetch: true  # prevents issues, see https://vladmihalcea.com/hibernate-query-fail-on-pagination-over-collection-fetch
            hibernate.query.in_clause_parameter_padding: true
            hibernate.cache.use_second_level_cache: true
            hibernate.cache.use_query_cache: false
            hibernate.cache.region.factory_class: de.tum.cit.aet.artemis.core.config.ArtemisRedissonRegionFactory
            hibernate.cache.use_minimal_puts: true
            # TODO: why do we need those hazelcast values?
#            hibernate.cache.hazelcast.instance_name: Artemis
#            hibernate.cache.hazelcast.use_lite_member: true
            hibernate.cache.redisson:
                # TODO: double check those values and adjust them if necessary, also set values for max_entries
                entity.expiration.time_to_live: 3600
                localcache.expiration.time_to_live: 3600
                collection.expiration.time_to_live: 3600
                naturalid.expiration.time_to_live: 3600
                naturalid.localcache.time_to_live: 3600
                query.expiration.time_to_live: 3600
                query.localcache.time_to_live: 3600
                timestamps.expiration.time_to_live: 3600
                timestamps.localcache.time_to_live: 3600
            # modify batch size as necessary
            hibernate.jdbc.batch_size: 25
            hibernate.jdbc.time_zone: UTC
            hibernate.jdbc.lob.non_contextual_creation: true
            # limit fetch depth to prevent queries from getting too large because of eager fetching
            hibernate.max_fetch_depth: 2
    liquibase:
        contexts: prod
    messages:
        basename: i18n/messages
    main:
        allow-bean-definition-overriding: false
        allow-circular-references: false
        lazy-initialization: false # cannot set this to true (even if we would want, because then LocalCI does not process build results correctly)
    task:
        execution:
            thread-name-prefix: artemis-task-
            pool:
                core-size: 2
                max-size: 50
                queue-capacity: 10000
        scheduling:
            thread-name-prefix: artemis-scheduling-
            pool:
                size: 2
    threads:
        virtual:
            enabled: true
    thymeleaf:
        mode: HTML
    output:
        ansi:
            enabled: always
    servlet:
        multipart:
            max-file-size: 20MB # this should match the value in /webapp/app/shared/constants/input.constants.ts MAX_FILE_SIZE
            max-request-size: 20MB
    lifecycle:
        timeout-per-shutdown-phase: 10
    websocket:
        broker:
            username: guest
            password: guest
            addresses: "" # Comma separated list of hosts and ports of the brokers (e.g. "localhost:61613,localhost:61614")
    hazelcast:
        enabled: false
    beaninfo:
        ignore: true

springdoc:
    api-docs:
        path: /api-docs
    swagger-ui:
        path: /api.html
        operationsSorter: method

server:
    servlet:
        session:
            cookie:
                http-only: true
    shutdown: graceful
    forward-headers-strategy: native

sentry:
    logging:
        enabled: true
        minimum-breadcrumb-level: error
        minimum-event-level: error
    sample-rate: 1
    traces-sample-rate: 0.2

# Properties to be exposed on the /info management endpoint
info:
    # Comma separated list of profiles that will trigger the ribbon to show
    display-ribbon-on-profiles: "dev"
    sentry:
        dsn: https://8c6b41ec2d4245e8bd3ec9541d53f625@sentry.io/1440029 # Leave empty to disable Sentry, must be a valid URI
    # Allowed Orion version range. Should only be changed on major version releases
    allowed-minimum-orion-version: 1.0.0
    # Specifies whether text assessment analytics service (TextAssessmentEventResource) is enabled/disabled
    # default value set to false
    text-assessment-analytics-enabled: false
    student-exam-store-session-data: true

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================

jhipster:
    clientApp:
        name: 'artemisApp'
    # By default CORS is disabled. Uncomment to enable.
    #cors:
        #allowed-origin-patterns: "*"
        #allowed-methods: "*"
        #allowed-headers: "*"
        #exposed-headers: "Authorization,Link,X-Total-Count"
        #allow-credentials: true
        #max-age: 1800
    mail:
        from: artemis@localhost
    registry:
        password: AN-ADMIN-PASSWORD-THAT-MUST-BE-CHANGED (FROM REGISTRY CONFIG)
    http:
        cache: # Used by the CachingHttpHeadersFilter
            timeToLiveInDays: 1461

# Eureka configuration
eureka:
    client:
        enabled: false
        service-url:
            defaultZone: http://admin:${jhipster.registry.password}@localhost:8761/eureka/
        healthcheck:
            enabled: false
        fetch-registry: true
        register-with-eureka: true
        instance-info-replication-interval-seconds: 10
        registry-fetch-interval-seconds: 10
    instance:
        prefer-ip-address: true
        appname: Artemis
        instanceId: Artemis:1
        lease-renewal-interval-in-seconds: 5
        lease-expiration-duration-in-seconds: 10
        status-page-url-path: ${management.endpoints.web.base-path}/info
        health-check-url-path: ${management.endpoints.web.base-path}/health
        metadata-map:
            zone: primary # This is needed for the load balancer
            profile: ${spring.profiles.active}
            version: #project.version#
            git-version: ${git.commit.id.describe:}
            git-commit: ${git.commit.id.abbrev:}
            git-branch: ${git.branch:}
