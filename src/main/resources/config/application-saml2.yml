# ===================================================================
# Spring Boot configuration for the "saml2" profile.
#
# See https://docs.spring.io/spring-security/site/docs/5.2.8.RELEASE/reference/html/saml2.html
# ===================================================================

# The authentication process can be initiated by navigating to {baseUrl}/saml2/authenticate/{registrationId} for a certain IdP
# The Assertion Consumer Service URL (Callback URL, Recipient URL, Destination URL) is {baseUrl}/login/saml2/sso/{registrationId}
# this URL must be registered in the IdP.
# Spring Security automatically generates a simple login page at {baseUrl}/login

# Proxy Environment
# Forward /login and /saml2 to the Artemis Server.

saml2:
    # Define the patterns used when generating users. SAML2 Attributes can be substituted by surrounding them with
    # curly brackets. E.g. username: '{user_attribute}'. Missing attributes get replaced with an empty string.
    # This enables definition of alternative attribute keys when using multiple IdPs. E.g. username: '{uid}{user_id}'.
    # User template pattern:
    username-pattern: '{first_name}_{last_name}'
    first-name-pattern: '{first_name}'
    last-name-pattern: '{last_name}'
    email-pattern: '{email}'
    registration-number-pattern: '{uid}'
    lang-key-pattern: 'en' # can be a pattern or fixed to en/de
    # It is also possible to only extract parts of the attribute values.
    # For each attribute key exactly one regular expression can optionally be defined that is used to extract only parts
    # of the received value. The regular expression must match the whole value. It also has to contain a named capture
    # group with the name 'value' (Syntax: '(?<value>PATTERN_TO_MATCH)').
    # E.g. when receiving 'pre1234post' from the SAML2 service in the 'uid'-example below, only '1234' will be used when
    # replacing '{uid}' in one of the user attributes defined above.
    value-extraction-patterns:
        #- key: 'first_name'
        #  value_pattern: 'somePrefix(?<value>.+)someSuffix'
        #- key: 'uid'
        #  value_pattern: 'pre(?<value>\d+)post'
    # A list of identity provides (IdP). Metadata location can be a local path (or classpath) or url.
    # If your IdP does not publish its metadata you can generate it here: https://www.samltool.com/idp_metadata.php
    identity-providers:
        #- metadata: https://idp_host/.../metadata
        #  registration-id: IdPName
        #  entity-id: artemis
        #  cert-file: # path-to-cert (optional) Set this path to the Certificate for encryption/signing or leave it blank
        #  key-file: # path-to-key (optional) Set this path to the Key for encryption/signing or leave it blank (must be a PKCS#8 file!)
        # Multiple IdPs can be configured
        # - metadata: <URL>
        #   registrationid: <id>
        #   entityid: <id>

info.saml2:
    # The name of the SAML2 identity provider shown on the login page (optional)
    identity-provider-name:
    # The label for the SAML2 login button (e.g., 'Shibboleth Login')
    button-label: 'SAML2 Login'
    # Disables the password-based login user interface, but leaves the API enabled.
    # Use the URL query parameter '?showLoginForm' to display the login form nevertheless.
    password-login-disabled: false
    # Sends an e-mail to the new user with a link to set the Artemis password. This password allows login to Artemis and its
    # services such as GitLab and Jenkins. This allows the users to use password-based Git workflows.
    # Enables the password reset function in Artemis.
    enable-password: true
