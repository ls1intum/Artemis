<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog https://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd">
    <!-- Step 1: PostgreSQL-only enum type creation -->
    <changeSet id="20250330-01-create-enums-postgres" author="krusche">
        <preConditions onFail="MARK_RAN">
            <dbms type="postgresql"/>
        </preConditions>
        <sql>
            CREATE TYPE PostingType AS ENUM ('POST', 'ANSWER');
        </sql>
        <sql>
            CREATE TYPE SavedPostStatus AS ENUM ('IN_PROGRESS', 'COMPLETED', 'ARCHIVED');
        </sql>
    </changeSet>

    <!-- Step 1a: Remove all duplicate occurrences of saved posts. We do this to make the current index unique. This is mysql: -->
    <changeSet id="20250330-01a-remove-duplicate-saved-posts" author="rangger">
        <preConditions onFail="MARK_RAN">
            <dbms type="mysql"/>
        </preConditions>
        <sql>
            DELETE s1 FROM saved_post s1
                JOIN saved_post s2
            WHERE s1.user_id = s2.user_id
                AND s1.post_id = s2.post_id
                AND s1.post_type = s2.post_type
                AND s1.id > s2.id;
        </sql>
    </changeSet>

    <!-- This is postgres and h2: -->
    <changeSet id="20250330-01a-remove-duplicate-saved-posts-postgres" author="rangger">
        <preConditions onFail="MARK_RAN">
            <or>
                <dbms type="postgresql"/>
                <dbms type="h2"/>
            </or>
        </preConditions>
        <sql>
            DELETE FROM saved_post
            WHERE id IN
            (
                SELECT s1.id
                FROM saved_post s1
                    JOIN saved_post s2 ON s1.user_id = s2.user_id
                    AND s1.post_id = s2.post_id
                    AND s1.post_type = s2.post_type
                    AND s1.id > s2.id
            );
        </sql>
    </changeSet>

    <!-- Step 2a: Add enum columns in PostgreSQL using named types -->
    <changeSet id="20250330-02a-add-enum-columns-postgres" author="krusche">
        <preConditions onFail="MARK_RAN">
            <dbms type="postgresql"/>
        </preConditions>
        <addColumn tableName="saved_post">
            <column name="post_type_tmp" type="PostingType"/>
            <column name="status_tmp" type="SavedPostStatus"/>
        </addColumn>
        <addColumn tableName="forwarded_message">
            <column name="source_type_tmp" type="PostingType"/>
        </addColumn>
    </changeSet>

    <!-- Step 2b: Add enum columns in MySQL using inline enum definitions -->
    <changeSet id="20250330-02b-add-enum-columns-mysql" author="krusche">
        <preConditions onFail="MARK_RAN">
            <or>
                <dbms type="mysql"/>
                <dbms type="h2"/>
            </or>
        </preConditions>
        <addColumn tableName="saved_post">
            <column name="post_type_tmp" type="enum('POST','ANSWER')"/>
            <column name="status_tmp" type="enum('IN_PROGRESS','COMPLETED','ARCHIVED')"/>
        </addColumn>
        <addColumn tableName="forwarded_message">
            <column name="source_type_tmp" type="enum('POST','ANSWER')"/>
        </addColumn>
    </changeSet>

    <!-- Step 3: Migrate data from int to enum -->
    <!-- Step 3 mysql -->
    <changeSet id="20250330-03-transform-values-mysql" author="krusche">
        <preConditions onFail="MARK_RAN">
            <or>
                <dbms type="mysql"/>
                <dbms type="h2"/>
            </or>
        </preConditions>
        <update tableName="saved_post">
            <column name="post_type_tmp" valueComputed="
            CASE post_type
                WHEN 0 THEN 'POST'
                WHEN 1 THEN 'ANSWER'
            END"/>
        </update>
        <update tableName="saved_post">
            <column name="status_tmp" valueComputed="
            CASE status
                WHEN 0 THEN 'IN_PROGRESS'
                WHEN 1 THEN 'COMPLETED'
                WHEN 2 THEN 'ARCHIVED'
            END"/>
        </update>
        <update tableName="forwarded_message">
            <column name="source_type_tmp" valueComputed="
            CASE source_type
                WHEN 0 THEN 'POST'
                WHEN 1 THEN 'ANSWER'
            END"/>
        </update>
    </changeSet>
    <!-- Step 3 postgresql -->
    <changeSet id="20250330-03-transform-values-postgresql" author="b-fein">
        <preConditions onFail="MARK_RAN">
            <or>
                <dbms type="postgresql"/>
            </or>
        </preConditions>
        <update tableName="saved_post">
            <column name="post_type_tmp" valueComputed="
            CASE post_type
                WHEN 0 THEN 'POST'::PostingType
                WHEN 1 THEN 'ANSWER'::PostingType
            END"/>
        </update>
        <update tableName="saved_post">
            <column name="status_tmp" valueComputed="
            CASE status
                WHEN 0 THEN 'IN_PROGRESS'::SavedPostStatus
                WHEN 1 THEN 'COMPLETED'::SavedPostStatus
                WHEN 2 THEN 'ARCHIVED'::SavedPostStatus
            END"/>
        </update>
        <update tableName="forwarded_message">
            <column name="source_type_tmp" valueComputed="
            CASE source_type
                WHEN 0 THEN 'POST'::PostingType
                WHEN 1 THEN 'ANSWER'::PostingType
            END"/>
        </update>
    </changeSet>

    <!-- Step 4: Drop old columns and rename new ones (finalize migration) -->
    <changeSet id="20250330-04-finalize-column-replacement" author="krusche">
        <dropForeignKeyConstraint baseTableName="saved_post" constraintName="FK_SAVED_POST_USER"/>
        <dropIndex tableName="saved_post" indexName="IDX_SAVED_POST_USER_ID_POST_ID_POST_TYPE"/>
        <dropColumn tableName="saved_post" columnName="post_type"/>
        <dropColumn tableName="saved_post" columnName="status"/>
        <dropColumn tableName="forwarded_message" columnName="source_type"/>
    </changeSet>

    <!-- Step 5a: PostgreSQL column rename (clean and simple) -->
    <changeSet id="20250330-04a-rename-columns-postgres" author="krusche">
        <preConditions onFail="MARK_RAN">
            <dbms type="postgresql"/>
        </preConditions>
        <renameColumn tableName="saved_post"
                      oldColumnName="post_type_tmp"
                      newColumnName="post_type"
                      columnDataType="PostingType"/>
        <renameColumn tableName="saved_post"
                      oldColumnName="status_tmp"
                      newColumnName="status"
                      columnDataType="SavedPostStatus"/>
        <renameColumn tableName="forwarded_message"
                      oldColumnName="source_type_tmp"
                      newColumnName="source_type"
                      columnDataType="PostingType"/>
        <addForeignKeyConstraint baseTableName="saved_post"
                                 baseColumnNames="user_id"
                                 constraintName="FK_SAVED_POST_USER"
                                 referencedTableName="jhi_user"
                                 referencedColumnNames="id"/>
        <createIndex indexName="IDX_SAVED_POST_USER_ID_POST_ID_POST_TYPE" tableName="saved_post" unique="true">
            <column name="user_id"/>
            <column name="post_id"/>
            <column name="post_type"/>
        </createIndex>
    </changeSet>

    <!-- Step 5b: MySQL column rename (must specify type) -->
    <changeSet id="20250330-04b-rename-columns-mysql" author="krusche">
        <preConditions onFail="MARK_RAN">
            <or>
                <dbms type="mysql"/>
                <dbms type="h2"/>
            </or>
        </preConditions>
        <renameColumn tableName="saved_post"
                      oldColumnName="post_type_tmp"
                      newColumnName="post_type"
                      columnDataType="enum('POST','ANSWER')"/>
        <renameColumn tableName="saved_post"
                      oldColumnName="status_tmp"
                      newColumnName="status"
                      columnDataType="enum('IN_PROGRESS','COMPLETED','ARCHIVED')"/>
        <renameColumn tableName="forwarded_message"
                      oldColumnName="source_type_tmp"
                      newColumnName="source_type"
                      columnDataType="enum('POST','ANSWER')"/>
        <addForeignKeyConstraint baseTableName="saved_post"
                                 baseColumnNames="user_id"
                                 constraintName="FK_SAVED_POST_USER"
                                 referencedTableName="jhi_user"
                                 referencedColumnNames="id"/>
        <createIndex indexName="IDX_SAVED_POST_USER_ID_POST_ID_POST_TYPE" tableName="saved_post" unique="true">
            <column name="user_id"/>
            <column name="post_id"/>
            <column name="post_type"/>
        </createIndex>
    </changeSet>

</databaseChangeLog>
