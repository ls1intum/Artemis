<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.18.xsd">
    <changeSet author="baboci" id="20230601154000" context="prod">
        <comment>Create new channels for existing lecture/exercise and migrate posts of lecture/exercise to respective channel</comment>
        <comment>Step 1: Create channels for lectures that do not have a channel and update post</comment>
        <sql>
            INSERT INTO conversation (id, course_id, lecture_id, name, description,discriminator, is_public, is_announcement, creation_date)
            SELECT null, l.course_id, l.id, CONCAT(LOWER(REPLACE(LEFT(l.title, 20), ' ', '-')), '-', l.id), CONCAT('Description of lecture: ', l.title), 'C', true, false, CURRENT_TIMESTAMP
            FROM lecture l
            LEFT JOIN conversation c ON l.id = c.lecture_id
            WHERE c.lecture_id IS NULL;
        </sql>
        <sql>
            UPDATE post p
            LEFT JOIN lecture l ON p.lecture_id = l.id
            LEFT JOIN conversation c ON l.id = c.lecture_id
            SET p.lecture_id = null, p.conversation_id = c.id
            WHERE p.conversation_id IS NULL;
        </sql>
        <comment>Step 2: Create channels for exercises that do not have a channel</comment>
        <sql>
            INSERT INTO conversation (id, course_id, lecture_id, name, description,discriminator, is_public, is_announcement, creation_date)
            SELECT null, e.course_id, e.id, CONCAT(LOWER(REPLACE(LEFT(e.title, 20), ' ', '-')), '-', e.id), CONCAT('Description of exercise: ', e.title), 'C', true, false, CURRENT_TIMESTAMP
            FROM exercise e
            LEFT JOIN conversation c ON e.id = c.exercise_id
            WHERE c.exercise_id IS NULL;
        </sql>
        <sql>
            UPDATE post p
            LEFT JOIN exercise e ON p.exercise_id = e.id
            LEFT JOIN conversation c ON e.id = c.exercise_id
            SET p.exercise_id = null, p.conversation_id = c.id
            WHERE p.conversation_id IS NULL;
        </sql>
    </changeSet>
</databaseChangeLog>
