<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.9.xsd">
    <changeSet author="anar" id="20221106102640-1">
        <comment>Add new columns to Post table in order to store values needed for avoiding sub-queries while fetching records.</comment>
        <addColumn tableName="post">
            <column name="resolved" type="boolean"/>
            <column name="answer_count" type="integer" />
            <column name="vote_count" type="integer" />
        </addColumn>
    </changeSet>
    <changeSet author="anar" id="20221106102640-2">
        <comment>Populate Post properties needed to avoid sub-queries while fetching records.</comment>
        <sql>
            UPDATE post SET resolved =
                EXISTS (SELECT * FROM (
                            SELECT answer_post.post_id FROM post
                            LEFT OUTER JOIN answer_post ON post.id = answer_post.post_id
                            WHERE answer_post.resolves_post = true
                            GROUP BY answer_post.post_id)
                    AS derived_table WHERE post_id = post.id);
        </sql>
        <sql>
            UPDATE post set answer_count = IFNULL((
                SELECT number_of_answers FROM (
                    SELECT answer_post.post_id, count(answer_post.id) AS number_of_answers FROM post
                    LEFT OUTER JOIN answer_post ON post.id=answer_post.post_id
                    GROUP BY post.id)
                AS derived_table WHERE post_id = post.id), 0);
        </sql>
        <sql>
            UPDATE post set vote_count = IFNULL((
                SELECT number_of_votes FROM (
                    SELECT post_id, count(reaction.id) AS number_of_votes FROM post
                    LEFT OUTER JOIN reaction ON post.id=reaction.post_id
                    WHERE reaction.emoji_id = 'heavy_plus_sign'
                    GROUP BY post.id)
                AS derived_table WHERE post_id = post.id), 0);
        </sql>
    </changeSet>
</databaseChangeLog>
