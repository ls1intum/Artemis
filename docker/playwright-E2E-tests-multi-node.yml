# ----------------------------------------------------------------------------------------------------------------------
# Playwright setup for multi-node
# ----------------------------------------------------------------------------------------------------------------------

services:
  artemis-app-node-1:
    container_name: artemis-app-node-1
    extends:
      file: ./artemis.yml
      service: artemis-app
    image: ghcr.io/ls1intum/artemis:${ARTEMIS_DOCKER_TAG:-latest}
    depends_on:
      mysql:
        condition: service_healthy
      jhipster-registry:
        condition: service_healthy
      activemq-broker:
        condition: service_healthy
    pull_policy: always
    restart: always
    group_add:
      - ${DOCKER_GROUP_ID:-0}
    env_file:
      - ./artemis/config/prod-multinode.env}
      - ./artemis/config/node1.env}
      - ./artemis/config/cypress.env}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  artemis-app-node-2:
    container_name: artemis-app-node-2
    extends:
      file: ./artemis.yml
      service: artemis-app
    image: ghcr.io/ls1intum/artemis:${ARTEMIS_DOCKER_TAG:-latest}
    depends_on:
      mysql:
        condition: service_healthy
      jhipster-registry:
        condition: service_healthy
      activemq-broker:
        condition: service_healthy
      artemis-app-node-1:
        condition: service_healthy
    pull_policy: always
    restart: always
    group_add:
      - ${DOCKER_GROUP_ID:-0}
    env_file:
      - ./artemis/config/prod-multinode.env}
      - ./artemis/config/node2.env}
      - ./artemis/config/cypress.env}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  artemis-app-node-3:
    container_name: artemis-app-node-3
    extends:
      file: ./artemis.yml
      service: artemis-app
    image: ghcr.io/ls1intum/artemis:${ARTEMIS_DOCKER_TAG:-latest}
    depends_on:
      mysql:
        condition: service_healthy
      jhipster-registry:
        condition: service_healthy
      activemq-broker:
        condition: service_healthy
      artemis-app-node-1:
        condition: service_healthy
    pull_policy: always
    restart: always
    group_add:
      - ${DOCKER_GROUP_ID:-0}
    env_file:
      - ./artemis/config/prod-multinode.env}
      - ./artemis/config/node3.env}
      - ./artemis/config/cypress.env}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  jhipster-registry:
    extends:
      file: ./broker-registry.yml
      service: jhipster-registry
    networks:
      - artemis

  activemq-broker:
    extends:
      file: ./broker-registry.yml
      service: activemq-broker
    networks:
      - artemis

  mysql:
    extends:
      file: ./mysql.yml
      service: mysql
    restart: always

  nginx:
    extends:
      file: ./nginx.yml
      service: nginx
    depends_on:
      artemis-app-node-1:
        condition: service_started
      artemis-app-node-2:
        condition: service_started
      artemis-app-node-3:
        condition: service_started
    restart: always
    ports:
      - '80:80'
      - '443:443'
      # see comments in artemis/config/cypress.env why this port is necessary
      - '54321:54321'
    volumes:
      - ./nginx/artemis-upstream-multi-node.conf:/etc/nginx/includes/artemis-upstream.conf:ro
      - ./nginx/artemis-nginx-cypress.conf:/etc/nginx/conf.d/artemis-nginx-cypress.conf:ro
      - type: bind
        source: ${NGINX_PROXY_SSL_CERTIFICATE_PATH:-../src/test/cypress/certs/artemis-nginx+4.pem}
        target: "/certs/fullchain.pem"
      - type: bind
        source: ${NGINX_PROXY_SSL_CERTIFICATE_KEY_PATH:-../src/test/cypress/certs/artemis-nginx+4-key.pem}
        target: "/certs/priv_key.pem"


  artemis-playwright:
    extends:
      file: ./playwright.yml
      service: artemis-playwright
    depends_on:
      nginx:
        condition: service_healthy
    environment:
      PLAYWRIGHT_DB_TYPE: 'MySQL'
    command: >
      sh -c '
      cd /app/artemis/src/test/playwright &&
      chmod 777 /root &&
      npm ci &&
      npm run playwright:setup &&
      npm run playwright:test
      '

networks:
  artemis:
    driver: "bridge"
    name: artemis

volumes:
  artemis-mysql-data:
    name: artemis-mysql-data
  artemis-data:
    name: artemis-data

