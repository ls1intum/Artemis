resolver 127.0.0.11;
resolver_timeout 5s;
client_max_body_size 10m;
client_body_buffer_size 1m;

location / {
    proxy_pass http://artemis;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
#   proxy_set_header Early-Data $ssl_early_data;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_cache_bypass $http_upgrade;
    proxy_send_timeout 900s;
    proxy_read_timeout 900s;
    proxy_max_temp_file_size 0;
    proxy_buffering on;
    proxy_buffer_size 16k;
    proxy_buffers 8 16k;
    proxy_busy_buffers_size 32k;
    fastcgi_send_timeout 900s;
    fastcgi_read_timeout 900s;
    client_max_body_size 128M;
 }

location /api/authenticate {
    proxy_pass http://artemis/api/authenticate;
    # For a given violation of the rate limit defined in the zone
	# * the first 2 (delay) requests will be allowed without delay
	# * the next (burst - delay) request waits until it fits in the rate limit
	# * the rest will be denied
	# If an attacker spams this endpoint, only the first three requests will come through.
	# This only resets if the violation of the rate limit stops.
   limit_req zone=loginlimit burst=3 delay=2;
}

location /favicon.ico {
    return 404;
}

error_page 502 /502.html;
location /502.html {
    root /usr/share/nginx/html;
    internal;
}
