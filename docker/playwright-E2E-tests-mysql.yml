# ----------------------------------------------------------------------------------------------------------------------
# Playwright Setup MySQL
# ----------------------------------------------------------------------------------------------------------------------

services:
    mysql:
        extends:
            file: ./mysql.yml
            service: mysql

    artemis-app:
        extends:
            file: ./artemis.yml
            service: artemis-app
        depends_on:
            mysql:
                condition: service_healthy
        env_file:
            - ./artemis/config/cypress.env
            - ./artemis/config/cypress-mysql.env

    nginx:
        extends:
            file: ./nginx.yml
            service: nginx
        # the artemis-app service needs to be started, otherwise there are problems with name resolution in docker
        depends_on:
            artemis-app:
                condition: service_started
        volumes:
            - ./nginx/artemis-nginx-cypress.conf:/etc/nginx/conf.d/artemis-nginx-cypress.conf:ro
        ports:
            - "80:80"
            - "443:443"
            # see comments in artemis/config/cypress.env why this port is necessary
            - "54321:54321"

    artemis-playwright:
        extends:
            file: ./playwright.yml
            service: artemis-playwright
        depends_on:
            artemis-app:
                condition: service_healthy
#        environment:
#            CYPRESS_DB_TYPE: "MySQL"
#            SORRY_CYPRESS_PROJECT_ID: "artemis-mysql"
#        command: sh -c "cd /app/artemis/src/test/cypress && chmod 777 /root && npm ci && npm run cypress:setup && (npm run cypress:record:mysql & sleep 60 && npm run cypress:record:mysql & wait)"
# Old run method using plain cypress kept here as backup
        command: >
            sh -c '
            chmod 777 /root &&
            apt-get update &&
            apt-get install -y build-essential libnss3-tools &&
            apt-get install -y tree &&
            export HOME=/root &&
            cd /app/artemis/src/test/playwright && ls &&
            cd certs && ls && cd &&
            echo "Listed files in certs folder" &&
            tree /app/artemis/src/test/playwright &&
            export CERTS_DIR=/app/artemis/src/test/playwright/certs &&
            echo $HOME &&
            echo "CERTS_DIR: $CERTS_DIR" &&
            cd $CERTS_DIR && ls && cd &&
            echo "Listed files in certs_dir" &&
            mkdir -p $HOME/.pki/nssdb &&
            certutil -d $HOME/.pki/nssdb -N --empty-password &&
            cp /app/artemis/src/test/playwright/certs/rootCA.pem /usr/local/share/ca-certificates/ &&
            update-ca-certificates --fresh &&
            chmod 644 /app/artemis/src/test/playwright/certs/rootCA.pem &&
            certutil -d sql:$HOME/.pki/nssdb -A -t "C,," -n "rootCA" -i /app/artemis/src/test/playwright/rootCA.pem &&
            openssl pkcs12 -export -in /app/artemis/src/test/playwright/certs/artemis-nginx+4.pem -inkey /app/artemis/src/test/playwright/certs/artemis-nginx+4-key.pem -out /app/artemis/src/test/playwright/certs/client.p12 -name "client-cert" -password pass:artemis_admin &&
            pk12util -d sql:$HOME/.pki/nssdb -i /app/artemis/src/test/playwright/client.p12 -W artemis_admin &&
            cd /app/artemis/src/test/playwright &&
            npm ci &&
            npm run playwright:setup &&
            npm run playwright:test
            '

networks:
    artemis:
        driver: "bridge"
        name: artemis
volumes:
    artemis-mysql-data:
        name: artemis-mysql-data
    artemis-data:
        name: artemis-data
