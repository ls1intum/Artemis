http {
    server {
        listen 80;
        server_name ${NGINX_MAIN_URL};

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name ${NGINX_MAIN_URL};

        ssl_certificate /etc/certificates/fullchain.pem;
        ssl_certificate_key /etc/certificates/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
        ssl_prefer_server_ciphers on;

        location / {
            proxy_pass http://sry-cypress-dashboard:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
            proxy_redirect off;

            auth_basic "Restricted";
            auth_basic_user_file /etc/nginx/.htpasswd;
        }

        location /api {
            proxy_pass http://sry-cypress-api:4000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
            proxy_redirect off;

            auth_basic "Restricted";
            auth_basic_user_file /etc/nginx/.htpasswd;
        }

        location /director {
            rewrite ^/director(/?.*)$ $1 break;
            proxy_pass http://sry-cypress-director:1234;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
            proxy_redirect off;
        }
    }

    server {
        listen 80;
        server_name ${NGINX_STORAGE_URL};

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name ${NGINX_STORAGE_URL};

        ssl_certificate /etc/certificates/fullchain.pem;
        ssl_certificate_key /etc/certificates/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
        ssl_prefer_server_ciphers on;

        # This is needed to allow video file uploads, that are greater than 1MB
        client_max_body_size 100M;

        location / {
            proxy_pass http://sry-cypress-minio:9000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
            proxy_redirect off;
        }
    }

    server {
        listen 80;
        server_name ${NGINX_MINIO_URL};

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name ${NGINX_MINIO_URL};

        ssl_certificate /etc/certificates/fullchain.pem;
        ssl_certificate_key /etc/certificates/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
        ssl_prefer_server_ciphers on;

        # This is needed to allow video file uploads, that are greater than 1MB
        client_max_body_size 100M;

        location / {
            proxy_pass http://sry-cypress-minio:9090;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
            proxy_redirect off;
        }
    }
}

events { }
