# ----------------------------------------------------------------------------------------------------------------------
# Sorry Cypress Setup
# ----------------------------------------------------------------------------------------------------------------------

services:
  mongo:
    image: docker.io/library/mongo:4.4
    container_name: sry-cypress-mongo
    restart: always
    volumes:
      - ${MONGO_VOLUME_MOUNT:-./files/mongo}:/data/db
    env_file:
      - ${SORRY_CYPRESS_ENV_FILE:-./sorry-cypress.env}

  director:
    image: docker.io/agoldis/sorry-cypress-director:${SORRY_CYPRESS_TAG:-latest}
    container_name: sry-cypress-director
    restart: always
    env_file:
      - ${SORRY_CYPRESS_ENV_FILE:-./sorry-cypress.env}
    environment:
      EXECUTION_DRIVER: '../execution/mongo/driver'
      SCREENSHOTS_DRIVER: '../screenshots/minio.driver'
      MINIO_PORT: '443'
      MINIO_USESSL: 'true'
      MINIO_BUCKET: 'sorry-cypress'
      PROBE_LOGGER: 'false'
    depends_on:
      - mongo

  api:
    image: docker.io/agoldis/sorry-cypress-api:${SORRY_CYPRESS_TAG:-latest}
    container_name: sry-cypress-api
    restart: always
    env_file:
      - ${SORRY_CYPRESS_ENV_FILE:-./sorry-cypress.env}
    environment:
      APOLLO_PLAYGROUND: 'false'
    depends_on:
      - mongo

  dashboard:
    image: docker.io/agoldis/sorry-cypress-dashboard:${SORRY_CYPRESS_TAG:-latest}
    container_name: sry-cypress-dashboard
    restart: always
    env_file:
      - ${SORRY_CYPRESS_ENV_FILE:-./sorry-cypress.env}
    environment:
      GRAPHQL_CLIENT_CREDENTIALS: 'include'
      PORT: 8080
      CI_URL: ''
    expose:
      - '8080'
    depends_on:
      - mongo
      - api

  storage:
    image: docker.io/minio/minio
    container_name: sry-cypress-minio
    restart: always
    env_file:
      - ${SORRY_CYPRESS_ENV_FILE:-./sorry-cypress.env}
    volumes:
      - ${MINIO_VOLUME_MOUNT:-./files/minio}:/data
    command: minio server --console-address ":9090" /data

  createbuckets:
    image: docker.io/minio/mc
    container_name: sry-cypress-minio-bucket-creator
    depends_on:
      - storage
    env_file:
      - ${SORRY_CYPRESS_ENV_FILE:-./sorry-cypress.env}
    entrypoint: >
      /bin/sh -c "
      sleep 3;
      /usr/bin/mc config host add myminio http://storage:9000 $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD;
      /usr/bin/mc mb myminio/sorry-cypress;
      /usr/bin/mc anonymous set download myminio/sorry-cypress;
      exit 0;
      "

  nginx:
    image: docker.io/library/nginx
    container_name: sry-cypress-nginx
    restart: always
    ports:
      - 80:80
      - 443:443
    env_file:
      - ${SORRY_CYPRESS_ENV_FILE:-./sorry-cypress.env}
    environment:
      NGINX_ENVSUBST_OUTPUT_DIR: /etc/nginx
    volumes:
      - type: bind
        source: ${NGINX_PROXY_CONFIG_PATH:-./nginx.conf}
        target: '/etc/nginx/templates/nginx.conf.template'
      - type: bind
        source: ${NGINX_PROXY_SSL_CERTIFICATE_PATH:-../../src/test/cypress/certs/artemis-nginx+4.pem}
        target: '/etc/certificates/fullchain.pem'
      - type: bind
        source: ${NGINX_PROXY_SSL_CERTIFICATE_KEY_PATH:-../../src/test/cypress/certs/artemis-nginx+4-key.pem}
        target: '/etc/certificates/privkey.pem'
      - type: bind
        source: ${NGINX_PROXY_HTPASSWD:-./.htpasswd}
        target: '/etc/nginx/.htpasswd'
