# nginx config file for local development
# this shouldn't be used in production

# the events block is required
events{}

http {
    # include the default mime.types to map file extensions to MIME types
    include /etc/nginx/mime.types;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

     upstream websocket {
            server artemis-app:8080;
     }

    server {
        # set the root directory for the server (we need to copy our
        # application files here)
        root /usr/share/nginx/html;

        # listen on port 9000
        listen 9000;

        # set the default index file for the server (Angular generates the
        # index.html file for us and it will be in the above directory)
        index index.html;

        # redirect all request with uri starting with  ""/api", "/services", "/management", "/swagger-resources", "/v3/api-docs", "/h2-console", "/auth", "/health", "/public", "/.well-known" to the backend server: http://artemis:8080
        location ~ ^/(api|services|management|swagger-resources|v3/api-docs|h2-console|auth|health|public|.well-known) {
            proxy_pass http://artemis-app:8080;
        }

        location /websocket {
            proxy_pass http://websocket;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
        }

        # specify the configuration for the '/' location
        location / {
            # try to serve the requested URI. if that fails then try to
            # serve the URI with a trailing slash. if that fails, then
            # serve the index.html file; this is needed in order to serve
            # Angular routes--e.g.,'localhost:8080/customer' will serve
            # the index.html file
            try_files $uri $uri/ /index.html;
        }
    }
}
