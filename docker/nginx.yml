# ----------------------------------------------------------------------------------------------------------------------
# Nginx base service
# ----------------------------------------------------------------------------------------------------------------------

services:
    nginx:
        # nginx setup based on artemis prod ansible repository
        container_name: artemis-nginx
        image: docker.io/library/nginx:1.23
        pull_policy: always
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
            - ./nginx/timeouts.conf:/etc/nginx/conf.d/timeouts.conf:ro
            - ./nginx/artemis-nginx.conf:/etc/nginx/conf.d/artemis-nginx.conf:ro
            - ./nginx/artemis-server.conf:/etc/nginx/includes/artemis-server.conf:ro
            - ./nginx/dhparam.pem:/etc/nginx/dhparam.pem:ro
            - ./nginx/nginx_502.html:/usr/share/nginx/html/502.html:ro
            - ./nginx/70-artemis-setup.sh:/docker-entrypoint.d/70-artemis-setup.sh
            - ../src/test/cypress/certs/artemis-nginx+4.pem:/certs/fullchain.pem:ro
            - ../src/test/cypress/certs/artemis-nginx+4-key.pem:/certs/priv_key.pem:ro
        # ulimits adopted from the nginx_security_limits.conf in the Artemis ansible collection
        ulimits:
            nofile:
                soft: 50000
                hard: 1048576
        ports:
            - "80:80"
            - "443:443"
        # expose the port to make it reachable docker internally even if the external port mapping changes
        expose:
            - "80"
            - "443"
        healthcheck:
            test: service nginx status || exit 1
            start_period: 60s
        networks:
            - artemis

networks:
    artemis:
        driver: "bridge"
        name: artemis
